/*
 * GIS Cloud JavaScript API
 *
 * web: http://www.giscloud.com/
 * dev: http://developers.giscloud.com/
 *
 * copyright GIS Cloud ltd. 2015.
 *
 *
 * Included in this lib are also:
 *     json2 - http://json.org
 *     jQuery - http://jquery.com
 *     jQuery UI - http://jquery.com
 *     jstree - http://jstree.com
 *     easyXDM - http://easyxdm.net
 */

giscloud_config = {
    restHost: function() {
        return "https://api.giscloud.com";
    },
    apiHost: function() {
        if (document.location.protocol === "https:")
            return "https://api.giscloud.com";
        else
            return "http://api.giscloud.com";
    },
    apiHostname: function() {
        return "api.giscloud.com";
    },
    authHost: function() {
        return "https://auth.giscloud.com";
    },
    liveSite: function() {
        return "http://app.giscloud.com/";
    },
    leafletScript: function() {
        return "leaflet.js";
    },
    nch: "a80db7a",
    tileSite: function() {
        var domain = "" || "giscloud.com";
        var subdomain_pattern = new RegExp("\\S+\\." + domain.replace(/\./g, "\\.") + "$","i");
        //        alert(subdomain_pattern + "\n" + document.location.host + " " + (document.location.host.match(subdomain_pattern) ? "matches" : "does NOT match") );
        if (document && document.location && document.location.host && 
        document.location.host !== "dev.giscloud.com" && 
        document.location.host.match(subdomain_pattern)) {
            
            return document.location.protocol + "//" + document.location.host + "/";
        }
        
        return "http://tiles.giscloud.com/";
    },
    https: true
};
if (!this.JSON) {
    this.JSON = {}
}
(function() {
    function f(n) {
        return n < 10 ? "0" + n : n
    }
    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function(key) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null 
        }
        ;
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(key) {
            return this.valueOf()
        }
    }
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
        "\b": "\\b",
        "\t": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    }, rep;
    function quote(string) {
        escapable.lastIndex = 0;
        return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
            var c = meta[a];
            return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + string + '"'
    }
    function str(key, holder) {
        var i, k, v, length, mind = gap, partial, value = holder[key];
        if (value && typeof value === "object" && typeof value.toJSON === "function") {
            value = value.toJSON(key)
        }
        if (typeof rep === "function") {
            value = rep.call(holder, key, value)
        }
        switch (typeof value) {
        case "string":
            return quote(value);
        case "number":
            return isFinite(value) ? String(value) : "null";
        case "boolean":
        case "null":
            return String(value);
        case "object":
            if (!value) {
                return "null"
            }
            gap += indent;
            partial = [];
            if (Object.prototype.toString.apply(value) === "[object Array]") {
                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || "null"
                }
                v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
                gap = mind;
                return v
            }
            if (rep && typeof rep === "object") {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === "string") {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ": " : ":") + v)
                        }
                    }
                }
            } else {
                for (k in value) {
                    if (Object.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ": " : ":") + v)
                        }
                    }
                }
            }
            v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
            gap = mind;
            return v
        }
    }
    if (typeof JSON.stringify !== "function") {
        JSON.stringify = function(value, replacer, space) {
            var i;
            gap = "";
            indent = "";
            if (typeof space === "number") {
                for (i = 0; i < space; i += 1) {
                    indent += " "
                }
            } else {
                if (typeof space === "string") {
                    indent = space
                }
            }
            rep = replacer;
            if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {
                throw new Error("JSON.stringify")
            }
            return str("", {
                "": value
            })
        }
    }
    if (typeof JSON.parse !== "function") {
        JSON.parse = function(text, reviver) {
            var j;
            function walk(holder, key) {
                var k, v, value = holder[key];
                if (value && typeof value === "object") {
                    for (k in value) {
                        if (Object.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v
                            } else {
                                delete value[k]
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value)
            }
            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function(a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                })
            }
            if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                j = eval("(" + text + ")");
                return typeof reviver === "function" ? walk({
                    "": j
                }, "") : j
            }
            throw new SyntaxError("JSON.parse")
        }
    }
}());
/*! jQuery v1.8.3 jquery.com | jquery.org/license */
(function(e, t) {
    function _(e) {
        var t = M[e] = {};
        return v.each(e.split(y), function(e, n) {
            t[n] = !0
        }),
        t
    }
    function H(e, n, r) {
        if (r === t && e.nodeType === 1) {
            var i = "data-" + n.replace(P, "-$1").toLowerCase();
            r = e.getAttribute(i);
            if (typeof r == "string") {
                try {
                    r = r === "true" ? !0 : r === "false" ? !1 : r === "null" ? null  : +r + "" === r ? +r : D.test(r) ? v.parseJSON(r) : r
                } catch (s) {}
                v.data(e, n, r)
            } else {
                r = t
            }
        }
        return r
    }
    function B(e) {
        var t;
        for (t in e) {
            if (t === "data" && v.isEmptyObject(e[t])) {
                continue
            }
            if (t !== "toJSON") {
                return !1
            }
        }
        return !0
    }
    function et() {
        return !1
    }
    function tt() {
        return !0
    }
    function ut(e) {
        return !e || !e.parentNode || e.parentNode.nodeType === 11
    }
    function at(e, t) {
        do {
            e = e[t]
        } while (e && e.nodeType !== 1);return e
    }
    function ft(e, t, n) {
        t = t || 0;
        if (v.isFunction(t)) {
            return v.grep(e, function(e, r) {
                var i = !!t.call(e, r, e);
                return i === n
            })
        }
        if (t.nodeType) {
            return v.grep(e, function(e, r) {
                return e === t === n
            })
        }
        if (typeof t == "string") {
            var r = v.grep(e, function(e) {
                return e.nodeType === 1
            });
            if (it.test(t)) {
                return v.filter(t, r, !n)
            }
            t = v.filter(t, r)
        }
        return v.grep(e, function(e, r) {
            return v.inArray(e, t) >= 0 === n
        })
    }
    function lt(e) {
        var t = ct.split("|")
          , n = e.createDocumentFragment();
        if (n.createElement) {
            while (t.length) {
                n.createElement(t.pop())
            }
        }
        return n
    }
    function Lt(e, t) {
        return e.getElementsByTagName(t)[0] || e.appendChild(e.ownerDocument.createElement(t))
    }
    function At(e, t) {
        if (t.nodeType !== 1 || !v.hasData(e)) {
            return
        }
        var n, r, i, s = v._data(e), o = v._data(t, s), u = s.events;
        if (u) {
            delete o.handle,
            o.events = {};
            for (n in u) {
                for (r = 0,
                i = u[n].length; r < i; r++) {
                    v.event.add(t, n, u[n][r])
                }
            }
        }
        o.data && (o.data = v.extend({}, o.data))
    }
    function Ot(e, t) {
        var n;
        if (t.nodeType !== 1) {
            return
        }
        t.clearAttributes && t.clearAttributes(),
        t.mergeAttributes && t.mergeAttributes(e),
        n = t.nodeName.toLowerCase(),
        n === "object" ? (t.parentNode && (t.outerHTML = e.outerHTML),
        v.support.html5Clone && e.innerHTML && !v.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : n === "input" && Et.test(e.type) ? (t.defaultChecked = t.checked = e.checked,
        t.value !== e.value && (t.value = e.value)) : n === "option" ? t.selected = e.defaultSelected : n === "input" || n === "textarea" ? t.defaultValue = e.defaultValue : n === "script" && t.text !== e.text && (t.text = e.text),
        t.removeAttribute(v.expando)
    }
    function Mt(e) {
        return typeof e.getElementsByTagName != "undefined" ? e.getElementsByTagName("*") : typeof e.querySelectorAll != "undefined" ? e.querySelectorAll("*") : []
    }
    function _t(e) {
        Et.test(e.type) && (e.defaultChecked = e.checked)
    }
    function Qt(e, t) {
        if (t in e) {
            return t
        }
        var n = t.charAt(0).toUpperCase() + t.slice(1)
          , r = t
          , i = Jt.length;
        while (i--) {
            t = Jt[i] + n;
            if (t in e) {
                return t
            }
        }
        return r
    }
    function Gt(e, t) {
        return e = t || e,
        v.css(e, "display") === "none" || !v.contains(e.ownerDocument, e)
    }
    function Yt(e, t) {
        var n, r, i = [], s = 0, o = e.length;
        for (; s < o; s++) {
            n = e[s];
            if (!n.style) {
                continue
            }
            i[s] = v._data(n, "olddisplay"),
            t ? (!i[s] && n.style.display === "none" && (n.style.display = ""),
            n.style.display === "" && Gt(n) && (i[s] = v._data(n, "olddisplay", nn(n.nodeName)))) : (r = Dt(n, "display"),
            !i[s] && r !== "none" && v._data(n, "olddisplay", r))
        }
        for (s = 0; s < o; s++) {
            n = e[s];
            if (!n.style) {
                continue
            }
            if (!t || n.style.display === "none" || n.style.display === "") {
                n.style.display = t ? i[s] || "" : "none"
            }
        }
        return e
    }
    function Zt(e, t, n) {
        var r = Rt.exec(t);
        return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t
    }
    function en(e, t, n, r) {
        var i = n === (r ? "border" : "content") ? 4 : t === "width" ? 1 : 0
          , s = 0;
        for (; i < 4; i += 2) {
            n === "margin" && (s += v.css(e, n + $t[i], !0)),
            r ? (n === "content" && (s -= parseFloat(Dt(e, "padding" + $t[i])) || 0),
            n !== "margin" && (s -= parseFloat(Dt(e, "border" + $t[i] + "Width")) || 0)) : (s += parseFloat(Dt(e, "padding" + $t[i])) || 0,
            n !== "padding" && (s += parseFloat(Dt(e, "border" + $t[i] + "Width")) || 0))
        }
        return s
    }
    function tn(e, t, n) {
        var r = t === "width" ? e.offsetWidth : e.offsetHeight
          , i = !0
          , s = v.support.boxSizing && v.css(e, "boxSizing") === "border-box";
        if (r <= 0 || r == null ) {
            r = Dt(e, t);
            if (r < 0 || r == null ) {
                r = e.style[t]
            }
            if (Ut.test(r)) {
                return r
            }
            i = s && (v.support.boxSizingReliable || r === e.style[t]),
            r = parseFloat(r) || 0
        }
        return r + en(e, t, n || (s ? "border" : "content"), i) + "px"
    }
    function nn(e) {
        if (Wt[e]) {
            return Wt[e]
        }
        var t = v("<" + e + ">").appendTo(i.body)
          , n = t.css("display");
        t.remove();
        if (n === "none" || n === "") {
            Pt = i.body.appendChild(Pt || v.extend(i.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            }));
            if (!Ht || !Pt.createElement) {
                Ht = (Pt.contentWindow || Pt.contentDocument).document,
                Ht.write("<!doctype html><html><body>"),
                Ht.close()
            }
            t = Ht.body.appendChild(Ht.createElement(e)),
            n = Dt(t, "display"),
            i.body.removeChild(Pt)
        }
        return Wt[e] = n,
        n
    }
    function fn(e, t, n, r) {
        var i;
        if (v.isArray(t)) {
            v.each(t, function(t, i) {
                n || sn.test(e) ? r(e, i) : fn(e + "[" + (typeof i == "object" ? t : "") + "]", i, n, r)
            })
        } else {
            if (!n && v.type(t) === "object") {
                for (i in t) {
                    fn(e + "[" + i + "]", t[i], n, r)
                }
            } else {
                r(e, t)
            }
        }
    }
    function Cn(e) {
        return function(t, n) {
            typeof t != "string" && (n = t,
            t = "*");
            var r, i, s, o = t.toLowerCase().split(y), u = 0, a = o.length;
            if (v.isFunction(n)) {
                for (; u < a; u++) {
                    r = o[u],
                    s = /^\+/.test(r),
                    s && (r = r.substr(1) || "*"),
                    i = e[r] = e[r] || [],
                    i[s ? "unshift" : "push"](n)
                }
            }
        }
    }
    function kn(e, n, r, i, s, o) {
        s = s || n.dataTypes[0],
        o = o || {},
        o[s] = !0;
        var u, a = e[s], f = 0, l = a ? a.length : 0, c = e === Sn;
        for (; f < l && (c || !u); f++) {
            u = a[f](n, r, i),
            typeof u == "string" && (!c || o[u] ? u = t : (n.dataTypes.unshift(u),
            u = kn(e, n, r, i, u, o)))
        }
        return (c || !u) && !o["*"] && (u = kn(e, n, r, i, "*", o)),
        u
    }
    function Ln(e, n) {
        var r, i, s = v.ajaxSettings.flatOptions || {};
        for (r in n) {
            n[r] !== t && ((s[r] ? e : i || (i = {}))[r] = n[r])
        }
        i && v.extend(!0, e, i)
    }
    function An(e, n, r) {
        var i, s, o, u, a = e.contents, f = e.dataTypes, l = e.responseFields;
        for (s in l) {
            s in r && (n[l[s]] = r[s])
        }
        while (f[0] === "*") {
            f.shift(),
            i === t && (i = e.mimeType || n.getResponseHeader("content-type"))
        }
        if (i) {
            for (s in a) {
                if (a[s] && a[s].test(i)) {
                    f.unshift(s);
                    break
                }
            }
        }
        if (f[0] in r) {
            o = f[0]
        } else {
            for (s in r) {
                if (!f[0] || e.converters[s + " " + f[0]]) {
                    o = s;
                    break
                }
                u || (u = s)
            }
            o = o || u
        }
        if (o) {
            return o !== f[0] && f.unshift(o),
            r[o]
        }
    }
    function On(e, t) {
        var n, r, i, s, o = e.dataTypes.slice(), u = o[0], a = {}, f = 0;
        e.dataFilter && (t = e.dataFilter(t, e.dataType));
        if (o[1]) {
            for (n in e.converters) {
                a[n.toLowerCase()] = e.converters[n]
            }
        }
        for (; i = o[++f]; ) {
            if (i !== "*") {
                if (u !== "*" && u !== i) {
                    n = a[u + " " + i] || a["* " + i];
                    if (!n) {
                        for (r in a) {
                            s = r.split(" ");
                            if (s[1] === i) {
                                n = a[u + " " + s[0]] || a["* " + s[0]];
                                if (n) {
                                    n === !0 ? n = a[r] : a[r] !== !0 && (i = s[0],
                                    o.splice(f--, 0, i));
                                    break
                                }
                            }
                        }
                    }
                    if (n !== !0) {
                        if (n && e["throws"]) {
                            t = n(t)
                        } else {
                            try {
                                t = n(t)
                            } catch (l) {
                                return {
                                    state: "parsererror",
                                    error: n ? l : "No conversion from " + u + " to " + i
                                }
                            }
                        }
                    }
                }
                u = i
            }
        }
        return {
            state: "success",
            data: t
        }
    }
    function Fn() {
        try {
            return new e.XMLHttpRequest
        } catch (t) {}
    }
    function In() {
        try {
            return new e.ActiveXObject("Microsoft.XMLHTTP")
        } catch (t) {}
    }
    function $n() {
        return setTimeout(function() {
            qn = t
        }, 0),
        qn = v.now()
    }
    function Jn(e, t) {
        v.each(t, function(t, n) {
            var r = (Vn[t] || []).concat(Vn["*"])
              , i = 0
              , s = r.length;
            for (; i < s; i++) {
                if (r[i].call(e, t, n)) {
                    return
                }
            }
        })
    }
    function Kn(e, t, n) {
        var r, i = 0, s = 0, o = Xn.length, u = v.Deferred().always(function() {
            delete a.elem
        }), a = function() {
            var t = qn || $n()
              , n = Math.max(0, f.startTime + f.duration - t)
              , r = n / f.duration || 0
              , i = 1 - r
              , s = 0
              , o = f.tweens.length;
            for (; s < o; s++) {
                f.tweens[s].run(i)
            }
            return u.notifyWith(e, [f, i, n]),
            i < 1 && o ? n : (u.resolveWith(e, [f]),
            !1)
        }
        , f = u.promise({
            elem: e,
            props: v.extend({}, t),
            opts: v.extend(!0, {
                specialEasing: {}
            }, n),
            originalProperties: t,
            originalOptions: n,
            startTime: qn || $n(),
            duration: n.duration,
            tweens: [],
            createTween: function(t, n, r) {
                var i = v.Tween(e, f.opts, t, n, f.opts.specialEasing[t] || f.opts.easing);
                return f.tweens.push(i),
                i
            },
            stop: function(t) {
                var n = 0
                  , r = t ? f.tweens.length : 0;
                for (; n < r; n++) {
                    f.tweens[n].run(1)
                }
                return t ? u.resolveWith(e, [f, t]) : u.rejectWith(e, [f, t]),
                this
            }
        }), l = f.props;
        Qn(l, f.opts.specialEasing);
        for (; i < o; i++) {
            r = Xn[i].call(f, e, l, f.opts);
            if (r) {
                return r
            }
        }
        return Jn(f, l),
        v.isFunction(f.opts.start) && f.opts.start.call(e, f),
        v.fx.timer(v.extend(a, {
            anim: f,
            queue: f.opts.queue,
            elem: e
        })),
        f.progress(f.opts.progress).done(f.opts.done, f.opts.complete).fail(f.opts.fail).always(f.opts.always)
    }
    function Qn(e, t) {
        var n, r, i, s, o;
        for (n in e) {
            r = v.camelCase(n),
            i = t[r],
            s = e[n],
            v.isArray(s) && (i = s[1],
            s = e[n] = s[0]),
            n !== r && (e[r] = s,
            delete e[n]),
            o = v.cssHooks[r];
            if (o && "expand" in o) {
                s = o.expand(s),
                delete e[r];
                for (n in s) {
                    n in e || (e[n] = s[n],
                    t[n] = i)
                }
            } else {
                t[r] = i
            }
        }
    }
    function Gn(e, t, n) {
        var r, i, s, o, u, a, f, l, c, h = this, p = e.style, d = {}, m = [], g = e.nodeType && Gt(e);
        n.queue || (l = v._queueHooks(e, "fx"),
        l.unqueued == null  && (l.unqueued = 0,
        c = l.empty.fire,
        l.empty.fire = function() {
            l.unqueued || c()
        }
        ),
        l.unqueued++,
        h.always(function() {
            h.always(function() {
                l.unqueued--,
                v.queue(e, "fx").length || l.empty.fire()
            })
        })),
        e.nodeType === 1 && ("height" in t || "width" in t) && (n.overflow = [p.overflow, p.overflowX, p.overflowY],
        v.css(e, "display") === "inline" && v.css(e, "float") === "none" && (!v.support.inlineBlockNeedsLayout || nn(e.nodeName) === "inline" ? p.display = "inline-block" : p.zoom = 1)),
        n.overflow && (p.overflow = "hidden",
        v.support.shrinkWrapBlocks || h.done(function() {
            p.overflow = n.overflow[0],
            p.overflowX = n.overflow[1],
            p.overflowY = n.overflow[2]
        }));
        for (r in t) {
            s = t[r];
            if (Un.exec(s)) {
                delete t[r],
                a = a || s === "toggle";
                if (s === (g ? "hide" : "show")) {
                    continue
                }
                m.push(r)
            }
        }
        o = m.length;
        if (o) {
            u = v._data(e, "fxshow") || v._data(e, "fxshow", {}),
            "hidden" in u && (g = u.hidden),
            a && (u.hidden = !g),
            g ? v(e).show() : h.done(function() {
                v(e).hide()
            }),
            h.done(function() {
                var t;
                v.removeData(e, "fxshow", !0);
                for (t in d) {
                    v.style(e, t, d[t])
                }
            });
            for (r = 0; r < o; r++) {
                i = m[r],
                f = h.createTween(i, g ? u[i] : 0),
                d[i] = u[i] || v.style(e, i),
                i in u || (u[i] = f.start,
                g && (f.end = f.start,
                f.start = i === "width" || i === "height" ? 1 : 0))
            }
        }
    }
    function Yn(e, t, n, r, i) {
        return new Yn.prototype.init(e,t,n,r,i)
    }
    function Zn(e, t) {
        var n, r = {
            height: e
        }, i = 0;
        t = t ? 1 : 0;
        for (; i < 4; i += 2 - t) {
            n = $t[i],
            r["margin" + n] = r["padding" + n] = e
        }
        return t && (r.opacity = r.width = e),
        r
    }
    function tr(e) {
        return v.isWindow(e) ? e : e.nodeType === 9 ? e.defaultView || e.parentWindow : !1
    }
    var n, r, i = e.document, s = e.location, o = e.navigator, u = e.jQuery, a = e.$, f = Array.prototype.push, l = Array.prototype.slice, c = Array.prototype.indexOf, h = Object.prototype.toString, p = Object.prototype.hasOwnProperty, d = String.prototype.trim, v = function(e, t) {
        return new v.fn.init(e,t,n)
    }
    , m = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, g = /\S/, y = /\s+/, b = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, w = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, E = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, S = /^[\],:{}\s]*$/, x = /(?:^|:|,)(?:\s*\[)+/g, T = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, N = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, C = /^-ms-/, k = /-([\da-z])/gi, L = function(e, t) {
        return (t + "").toUpperCase()
    }
    , A = function() {
        i.addEventListener ? (i.removeEventListener("DOMContentLoaded", A, !1),
        v.ready()) : i.readyState === "complete" && (i.detachEvent("onreadystatechange", A),
        v.ready())
    }
    , O = {};
    v.fn = v.prototype = {
        constructor: v,
        init: function(e, n, r) {
            var s, o, u, a;
            if (!e) {
                return this
            }
            if (e.nodeType) {
                return this.context = this[0] = e,
                this.length = 1,
                this
            }
            if (typeof e == "string") {
                e.charAt(0) === "<" && e.charAt(e.length - 1) === ">" && e.length >= 3 ? s = [null , e, null ] : s = w.exec(e);
                if (s && (s[1] || !n)) {
                    if (s[1]) {
                        return n = n instanceof v ? n[0] : n,
                        a = n && n.nodeType ? n.ownerDocument || n : i,
                        e = v.parseHTML(s[1], a, !0),
                        E.test(s[1]) && v.isPlainObject(n) && this.attr.call(e, n, !0),
                        v.merge(this, e)
                    }
                    o = i.getElementById(s[2]);
                    if (o && o.parentNode) {
                        if (o.id !== s[2]) {
                            return r.find(e)
                        }
                        this.length = 1,
                        this[0] = o
                    }
                    return this.context = i,
                    this.selector = e,
                    this
                }
                return !n || n.jquery ? (n || r).find(e) : this.constructor(n).find(e)
            }
            return v.isFunction(e) ? r.ready(e) : (e.selector !== t && (this.selector = e.selector,
            this.context = e.context),
            v.makeArray(e, this))
        },
        selector: "",
        jquery: "1.8.3",
        length: 0,
        size: function() {
            return this.length
        },
        toArray: function() {
            return l.call(this)
        },
        get: function(e) {
            return e == null  ? this.toArray() : e < 0 ? this[this.length + e] : this[e]
        },
        pushStack: function(e, t, n) {
            var r = v.merge(this.constructor(), e);
            return r.prevObject = this,
            r.context = this.context,
            t === "find" ? r.selector = this.selector + (this.selector ? " " : "") + n : t && (r.selector = this.selector + "." + t + "(" + n + ")"),
            r
        },
        each: function(e, t) {
            return v.each(this, e, t)
        },
        ready: function(e) {
            return v.ready.promise().done(e),
            this
        },
        eq: function(e) {
            return e = +e,
            e === -1 ? this.slice(e) : this.slice(e, e + 1)
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        slice: function() {
            return this.pushStack(l.apply(this, arguments), "slice", l.call(arguments).join(","))
        },
        map: function(e) {
            return this.pushStack(v.map(this, function(t, n) {
                return e.call(t, n, t)
            }))
        },
        end: function() {
            return this.prevObject || this.constructor(null )
        },
        push: f,
        sort: [].sort,
        splice: [].splice
    },
    v.fn.init.prototype = v.fn,
    v.extend = v.fn.extend = function() {
        var e, n, r, i, s, o, u = arguments[0] || {}, a = 1, f = arguments.length, l = !1;
        typeof u == "boolean" && (l = u,
        u = arguments[1] || {},
        a = 2),
        typeof u != "object" && !v.isFunction(u) && (u = {}),
        f === a && (u = this,
        --a);
        for (; a < f; a++) {
            if ((e = arguments[a]) != null ) {
                for (n in e) {
                    r = u[n],
                    i = e[n];
                    if (u === i) {
                        continue
                    }
                    l && i && (v.isPlainObject(i) || (s = v.isArray(i))) ? (s ? (s = !1,
                    o = r && v.isArray(r) ? r : []) : o = r && v.isPlainObject(r) ? r : {},
                    u[n] = v.extend(l, o, i)) : i !== t && (u[n] = i)
                }
            }
        }
        return u
    }
    ,
    v.extend({
        noConflict: function(t) {
            return e.$ === v && (e.$ = a),
            t && e.jQuery === v && (e.jQuery = u),
            v
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function(e) {
            e ? v.readyWait++ : v.ready(!0)
        },
        ready: function(e) {
            if (e === !0 ? --v.readyWait : v.isReady) {
                return
            }
            if (!i.body) {
                return setTimeout(v.ready, 1)
            }
            v.isReady = !0;
            if (e !== !0 && --v.readyWait > 0) {
                return
            }
            r.resolveWith(i, [v]),
            v.fn.trigger && v(i).trigger("ready").off("ready")
        },
        isFunction: function(e) {
            return v.type(e) === "function"
        },
        isArray: Array.isArray || function(e) {
            return v.type(e) === "array"
        }
        ,
        isWindow: function(e) {
            return e != null  && e == e.window
        },
        isNumeric: function(e) {
            return !isNaN(parseFloat(e)) && isFinite(e)
        },
        type: function(e) {
            return e == null  ? String(e) : O[h.call(e)] || "object"
        },
        isPlainObject: function(e) {
            if (!e || v.type(e) !== "object" || e.nodeType || v.isWindow(e)) {
                return !1
            }
            try {
                if (e.constructor && !p.call(e, "constructor") && !p.call(e.constructor.prototype, "isPrototypeOf")) {
                    return !1
                }
            } catch (n) {
                return !1
            }
            var r;
            for (r in e) {}
            return r === t || p.call(e, r)
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e) {
                return !1
            }
            return !0
        },
        error: function(e) {
            throw new Error(e)
        },
        parseHTML: function(e, t, n) {
            var r;
            return !e || typeof e != "string" ? null  : (typeof t == "boolean" && (n = t,
            t = 0),
            t = t || i,
            (r = E.exec(e)) ? [t.createElement(r[1])] : (r = v.buildFragment([e], t, n ? null  : []),
            v.merge([], (r.cacheable ? v.clone(r.fragment) : r.fragment).childNodes)))
        },
        parseJSON: function(t) {
            if (!t || typeof t != "string") {
                return null 
            }
            t = v.trim(t);
            if (e.JSON && e.JSON.parse) {
                return e.JSON.parse(t)
            }
            if (S.test(t.replace(T, "@").replace(N, "]").replace(x, ""))) {
                return (new Function("return " + t))()
            }
            v.error("Invalid JSON: " + t)
        },
        parseXML: function(n) {
            var r, i;
            if (!n || typeof n != "string") {
                return null 
            }
            try {
                e.DOMParser ? (i = new DOMParser,
                r = i.parseFromString(n, "text/xml")) : (r = new ActiveXObject("Microsoft.XMLDOM"),
                r.async = "false",
                r.loadXML(n))
            } catch (s) {
                r = t
            }
            return (!r || !r.documentElement || r.getElementsByTagName("parsererror").length) && v.error("Invalid XML: " + n),
            r
        },
        noop: function() {},
        globalEval: function(t) {
            t && g.test(t) && (e.execScript || function(t) {
                e.eval.call(e, t)
            }
            )(t)
        },
        camelCase: function(e) {
            return e.replace(C, "ms-").replace(k, L)
        },
        nodeName: function(e, t) {
            return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
        },
        each: function(e, n, r) {
            var i, s = 0, o = e.length, u = o === t || v.isFunction(e);
            if (r) {
                if (u) {
                    for (i in e) {
                        if (n.apply(e[i], r) === !1) {
                            break
                        }
                    }
                } else {
                    for (; s < o; ) {
                        if (n.apply(e[s++], r) === !1) {
                            break
                        }
                    }
                }
            } else {
                if (u) {
                    for (i in e) {
                        if (n.call(e[i], i, e[i]) === !1) {
                            break
                        }
                    }
                } else {
                    for (; s < o; ) {
                        if (n.call(e[s], s, e[s++]) === !1) {
                            break
                        }
                    }
                }
            }
            return e
        },
        trim: d && !d.call("\ufeff\u00a0") ? function(e) {
            return e == null  ? "" : d.call(e)
        }
         : function(e) {
            return e == null  ? "" : (e + "").replace(b, "")
        }
        ,
        makeArray: function(e, t) {
            var n, r = t || [];
            return e != null  && (n = v.type(e),
            e.length == null  || n === "string" || n === "function" || n === "regexp" || v.isWindow(e) ? f.call(r, e) : v.merge(r, e)),
            r
        },
        inArray: function(e, t, n) {
            var r;
            if (t) {
                if (c) {
                    return c.call(t, e, n)
                }
                r = t.length,
                n = n ? n < 0 ? Math.max(0, r + n) : n : 0;
                for (; n < r; n++) {
                    if (n in t && t[n] === e) {
                        return n
                    }
                }
            }
            return -1
        },
        merge: function(e, n) {
            var r = n.length
              , i = e.length
              , s = 0;
            if (typeof r == "number") {
                for (; s < r; s++) {
                    e[i++] = n[s]
                }
            } else {
                while (n[s] !== t) {
                    e[i++] = n[s++]
                }
            }
            return e.length = i,
            e
        },
        grep: function(e, t, n) {
            var r, i = [], s = 0, o = e.length;
            n = !!n;
            for (; s < o; s++) {
                r = !!t(e[s], s),
                n !== r && i.push(e[s])
            }
            return i
        },
        map: function(e, n, r) {
            var i, s, o = [], u = 0, a = e.length, f = e instanceof v || a !== t && typeof a == "number" && (a > 0 && e[0] && e[a - 1] || a === 0 || v.isArray(e));
            if (f) {
                for (; u < a; u++) {
                    i = n(e[u], u, r),
                    i != null  && (o[o.length] = i)
                }
            } else {
                for (s in e) {
                    i = n(e[s], s, r),
                    i != null  && (o[o.length] = i)
                }
            }
            return o.concat.apply([], o)
        },
        guid: 1,
        proxy: function(e, n) {
            var r, i, s;
            return typeof n == "string" && (r = e[n],
            n = e,
            e = r),
            v.isFunction(e) ? (i = l.call(arguments, 2),
            s = function() {
                return e.apply(n, i.concat(l.call(arguments)))
            }
            ,
            s.guid = e.guid = e.guid || v.guid++,
            s) : t
        },
        access: function(e, n, r, i, s, o, u) {
            var a, f = r == null , l = 0, c = e.length;
            if (r && typeof r == "object") {
                for (l in r) {
                    v.access(e, n, l, r[l], 1, o, i)
                }
                s = 1
            } else {
                if (i !== t) {
                    a = u === t && v.isFunction(i),
                    f && (a ? (a = n,
                    n = function(e, t, n) {
                        return a.call(v(e), n)
                    }
                    ) : (n.call(e, i),
                    n = null ));
                    if (n) {
                        for (; l < c; l++) {
                            n(e[l], r, a ? i.call(e[l], l, n(e[l], r)) : i, u)
                        }
                    }
                    s = 1
                }
            }
            return s ? e : f ? n.call(e) : c ? n(e[0], r) : o
        },
        now: function() {
            return (new Date).getTime()
        }
    }),
    v.ready.promise = function(t) {
        if (!r) {
            r = v.Deferred();
            if (i.readyState === "complete") {
                setTimeout(v.ready, 1)
            } else {
                if (i.addEventListener) {
                    i.addEventListener("DOMContentLoaded", A, !1),
                    e.addEventListener("load", v.ready, !1)
                } else {
                    i.attachEvent("onreadystatechange", A),
                    e.attachEvent("onload", v.ready);
                    var n = !1;
                    try {
                        n = e.frameElement == null  && i.documentElement
                    } catch (s) {}
                    n && n.doScroll && function o() {
                        if (!v.isReady) {
                            try {
                                n.doScroll("left")
                            } catch (e) {
                                return setTimeout(o, 50)
                            }
                            v.ready()
                        }
                    }()
                }
            }
        }
        return r.promise(t)
    }
    ,
    v.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(e, t) {
        O["[object " + t + "]"] = t.toLowerCase()
    }),
    n = v(i);
    var M = {};
    v.Callbacks = function(e) {
        e = typeof e == "string" ? M[e] || _(e) : v.extend({}, e);
        var n, r, i, s, o, u, a = [], f = !e.once && [], l = function(t) {
            n = e.memory && t,
            r = !0,
            u = s || 0,
            s = 0,
            o = a.length,
            i = !0;
            for (; a && u < o; u++) {
                if (a[u].apply(t[0], t[1]) === !1 && e.stopOnFalse) {
                    n = !1;
                    break
                }
            }
            i = !1,
            a && (f ? f.length && l(f.shift()) : n ? a = [] : c.disable())
        }
        , c = {
            add: function() {
                if (a) {
                    var t = a.length;
                    (function r(t) {
                        v.each(t, function(t, n) {
                            var i = v.type(n);
                            i === "function" ? (!e.unique || !c.has(n)) && a.push(n) : n && n.length && i !== "string" && r(n)
                        })
                    })(arguments),
                    i ? o = a.length : n && (s = t,
                    l(n))
                }
                return this
            },
            remove: function() {
                return a && v.each(arguments, function(e, t) {
                    var n;
                    while ((n = v.inArray(t, a, n)) > -1) {
                        a.splice(n, 1),
                        i && (n <= o && o--,
                        n <= u && u--)
                    }
                }),
                this
            },
            has: function(e) {
                return v.inArray(e, a) > -1
            },
            empty: function() {
                return a = [],
                this
            },
            disable: function() {
                return a = f = n = t,
                this
            },
            disabled: function() {
                return !a
            },
            lock: function() {
                return f = t,
                n || c.disable(),
                this
            },
            locked: function() {
                return !f
            },
            fireWith: function(e, t) {
                return t = t || [],
                t = [e, t.slice ? t.slice() : t],
                a && (!r || f) && (i ? f.push(t) : l(t)),
                this
            },
            fire: function() {
                return c.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!r
            }
        };
        return c
    }
    ,
    v.extend({
        Deferred: function(e) {
            var t = [["resolve", "done", v.Callbacks("once memory"), "resolved"], ["reject", "fail", v.Callbacks("once memory"), "rejected"], ["notify", "progress", v.Callbacks("memory")]]
              , n = "pending"
              , r = {
                state: function() {
                    return n
                },
                always: function() {
                    return i.done(arguments).fail(arguments),
                    this
                },
                then: function() {
                    var e = arguments;
                    return v.Deferred(function(n) {
                        v.each(t, function(t, r) {
                            var s = r[0]
                              , o = e[t];
                            i[r[1]](v.isFunction(o) ? function() {
                                var e = o.apply(this, arguments);
                                e && v.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[s + "With"](this === i ? n : this, [e])
                            }
                             : n[s])
                        }),
                        e = null 
                    }).promise()
                },
                promise: function(e) {
                    return e != null  ? v.extend(e, r) : r
                }
            }
              , i = {};
            return r.pipe = r.then,
            v.each(t, function(e, s) {
                var o = s[2]
                  , u = s[3];
                r[s[1]] = o.add,
                u && o.add(function() {
                    n = u
                }, t[e ^ 1][2].disable, t[2][2].lock),
                i[s[0]] = o.fire,
                i[s[0] + "With"] = o.fireWith
            }),
            r.promise(i),
            e && e.call(i, i),
            i
        },
        when: function(e) {
            var t = 0, n = l.call(arguments), r = n.length, i = r !== 1 || e && v.isFunction(e.promise) ? r : 0, s = i === 1 ? e : v.Deferred(), o = function(e, t, n) {
                return function(r) {
                    t[e] = this,
                    n[e] = arguments.length > 1 ? l.call(arguments) : r,
                    n === u ? s.notifyWith(t, n) : --i || s.resolveWith(t, n)
                }
            }
            , u, a, f;
            if (r > 1) {
                u = new Array(r),
                a = new Array(r),
                f = new Array(r);
                for (; t < r; t++) {
                    n[t] && v.isFunction(n[t].promise) ? n[t].promise().done(o(t, f, n)).fail(s.reject).progress(o(t, a, u)) : --i
                }
            }
            return i || s.resolveWith(f, n),
            s.promise()
        }
    }),
    v.support = function() {
        var t, n, r, s, o, u, a, f, l, c, h, p = i.createElement("div");
        p.setAttribute("className", "t"),
        p.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
        n = p.getElementsByTagName("*"),
        r = p.getElementsByTagName("a")[0];
        if (!n || !r || !n.length) {
            return {}
        }
        s = i.createElement("select"),
        o = s.appendChild(i.createElement("option")),
        u = p.getElementsByTagName("input")[0],
        r.style.cssText = "top:1px;float:left;opacity:.5",
        t = {
            leadingWhitespace: p.firstChild.nodeType === 3,
            tbody: !p.getElementsByTagName("tbody").length,
            htmlSerialize: !!p.getElementsByTagName("link").length,
            style: /top/.test(r.getAttribute("style")),
            hrefNormalized: r.getAttribute("href") === "/a",
            opacity: /^0.5/.test(r.style.opacity),
            cssFloat: !!r.style.cssFloat,
            checkOn: u.value === "on",
            optSelected: o.selected,
            getSetAttribute: p.className !== "t",
            enctype: !!i.createElement("form").enctype,
            html5Clone: i.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
            boxModel: i.compatMode === "CSS1Compat",
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            boxSizingReliable: !0,
            pixelPosition: !1
        },
        u.checked = !0,
        t.noCloneChecked = u.cloneNode(!0).checked,
        s.disabled = !0,
        t.optDisabled = !o.disabled;
        try {
            delete p.test
        } catch (d) {
            t.deleteExpando = !1
        }
        !p.addEventListener && p.attachEvent && p.fireEvent && (p.attachEvent("onclick", h = function() {
            t.noCloneEvent = !1
        }
        ),
        p.cloneNode(!0).fireEvent("onclick"),
        p.detachEvent("onclick", h)),
        u = i.createElement("input"),
        u.value = "t",
        u.setAttribute("type", "radio"),
        t.radioValue = u.value === "t",
        u.setAttribute("checked", "checked"),
        u.setAttribute("name", "t"),
        p.appendChild(u),
        a = i.createDocumentFragment(),
        a.appendChild(p.lastChild),
        t.checkClone = a.cloneNode(!0).cloneNode(!0).lastChild.checked,
        t.appendChecked = u.checked,
        a.removeChild(u),
        a.appendChild(p);
        if (p.attachEvent) {
            for (l in {
                submit: !0,
                change: !0,
                focusin: !0
            }) {
                f = "on" + l,
                c = f in p,
                c || (p.setAttribute(f, "return;"),
                c = typeof p[f] == "function"),
                t[l + "Bubbles"] = c
            }
        }
        return v(function() {
            var n, r, s, o, u = "padding:0;margin:0;border:0;display:block;overflow:hidden;", a = i.getElementsByTagName("body")[0];
            if (!a) {
                return
            }
            n = i.createElement("div"),
            n.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",
            a.insertBefore(n, a.firstChild),
            r = i.createElement("div"),
            n.appendChild(r),
            r.innerHTML = "<table><tr><td></td><td>t</td></tr></table>",
            s = r.getElementsByTagName("td"),
            s[0].style.cssText = "padding:0;margin:0;border:0;display:none",
            c = s[0].offsetHeight === 0,
            s[0].style.display = "",
            s[1].style.display = "none",
            t.reliableHiddenOffsets = c && s[0].offsetHeight === 0,
            r.innerHTML = "",
            r.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",
            t.boxSizing = r.offsetWidth === 4,
            t.doesNotIncludeMarginInBodyOffset = a.offsetTop !== 1,
            e.getComputedStyle && (t.pixelPosition = (e.getComputedStyle(r, null ) || {}).top !== "1%",
            t.boxSizingReliable = (e.getComputedStyle(r, null ) || {
                width: "4px"
            }).width === "4px",
            o = i.createElement("div"),
            o.style.cssText = r.style.cssText = u,
            o.style.marginRight = o.style.width = "0",
            r.style.width = "1px",
            r.appendChild(o),
            t.reliableMarginRight = !parseFloat((e.getComputedStyle(o, null ) || {}).marginRight)),
            typeof r.style.zoom != "undefined" && (r.innerHTML = "",
            r.style.cssText = u + "width:1px;padding:1px;display:inline;zoom:1",
            t.inlineBlockNeedsLayout = r.offsetWidth === 3,
            r.style.display = "block",
            r.style.overflow = "visible",
            r.innerHTML = "<div></div>",
            r.firstChild.style.width = "5px",
            t.shrinkWrapBlocks = r.offsetWidth !== 3,
            n.style.zoom = 1),
            a.removeChild(n),
            n = r = s = o = null 
        }),
        a.removeChild(p),
        n = r = s = o = u = a = p = null ,
        t
    }();
    var D = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/
      , P = /([A-Z])/g;
    v.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "jQuery" + (v.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(e) {
            return e = e.nodeType ? v.cache[e[v.expando]] : e[v.expando],
            !!e && !B(e)
        },
        data: function(e, n, r, i) {
            if (!v.acceptData(e)) {
                return
            }
            var s, o, u = v.expando, a = typeof n == "string", f = e.nodeType, l = f ? v.cache : e, c = f ? e[u] : e[u] && u;
            if ((!c || !l[c] || !i && !l[c].data) && a && r === t) {
                return
            }
            c || (f ? e[u] = c = v.deletedIds.pop() || v.guid++ : c = u),
            l[c] || (l[c] = {},
            f || (l[c].toJSON = v.noop));
            if (typeof n == "object" || typeof n == "function") {
                i ? l[c] = v.extend(l[c], n) : l[c].data = v.extend(l[c].data, n)
            }
            return s = l[c],
            i || (s.data || (s.data = {}),
            s = s.data),
            r !== t && (s[v.camelCase(n)] = r),
            a ? (o = s[n],
            o == null  && (o = s[v.camelCase(n)])) : o = s,
            o
        },
        removeData: function(e, t, n) {
            if (!v.acceptData(e)) {
                return
            }
            var r, i, s, o = e.nodeType, u = o ? v.cache : e, a = o ? e[v.expando] : v.expando;
            if (!u[a]) {
                return
            }
            if (t) {
                r = n ? u[a] : u[a].data;
                if (r) {
                    v.isArray(t) || (t in r ? t = [t] : (t = v.camelCase(t),
                    t in r ? t = [t] : t = t.split(" ")));
                    for (i = 0,
                    s = t.length; i < s; i++) {
                        delete r[t[i]]
                    }
                    if (!(n ? B : v.isEmptyObject)(r)) {
                        return
                    }
                }
            }
            if (!n) {
                delete u[a].data;
                if (!B(u[a])) {
                    return
                }
            }
            o ? v.cleanData([e], !0) : v.support.deleteExpando || u != u.window ? delete u[a] : u[a] = null 
        },
        _data: function(e, t, n) {
            return v.data(e, t, n, !0)
        },
        acceptData: function(e) {
            var t = e.nodeName && v.noData[e.nodeName.toLowerCase()];
            return !t || t !== !0 && e.getAttribute("classid") === t
        }
    }),
    v.fn.extend({
        data: function(e, n) {
            var r, i, s, o, u, a = this[0], f = 0, l = null ;
            if (e === t) {
                if (this.length) {
                    l = v.data(a);
                    if (a.nodeType === 1 && !v._data(a, "parsedAttrs")) {
                        s = a.attributes;
                        for (u = s.length; f < u; f++) {
                            o = s[f].name,
                            o.indexOf("data-") || (o = v.camelCase(o.substring(5)),
                            H(a, o, l[o]))
                        }
                        v._data(a, "parsedAttrs", !0)
                    }
                }
                return l
            }
            return typeof e == "object" ? this.each(function() {
                v.data(this, e)
            }) : (r = e.split(".", 2),
            r[1] = r[1] ? "." + r[1] : "",
            i = r[1] + "!",
            v.access(this, function(n) {
                if (n === t) {
                    return l = this.triggerHandler("getData" + i, [r[0]]),
                    l === t && a && (l = v.data(a, e),
                    l = H(a, e, l)),
                    l === t && r[1] ? this.data(r[0]) : l
                }
                r[1] = n,
                this.each(function() {
                    var t = v(this);
                    t.triggerHandler("setData" + i, r),
                    v.data(this, e, n),
                    t.triggerHandler("changeData" + i, r)
                })
            }, null , n, arguments.length > 1, null , !1))
        },
        removeData: function(e) {
            return this.each(function() {
                v.removeData(this, e)
            })
        }
    }),
    v.extend({
        queue: function(e, t, n) {
            var r;
            if (e) {
                return t = (t || "fx") + "queue",
                r = v._data(e, t),
                n && (!r || v.isArray(n) ? r = v._data(e, t, v.makeArray(n)) : r.push(n)),
                r || []
            }
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = v.queue(e, t)
              , r = n.length
              , i = n.shift()
              , s = v._queueHooks(e, t)
              , o = function() {
                v.dequeue(e, t)
            }
            ;
            i === "inprogress" && (i = n.shift(),
            r--),
            i && (t === "fx" && n.unshift("inprogress"),
            delete s.stop,
            i.call(e, o, s)),
            !r && s && s.empty.fire()
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return v._data(e, n) || v._data(e, n, {
                empty: v.Callbacks("once memory").add(function() {
                    v.removeData(e, t + "queue", !0),
                    v.removeData(e, n, !0)
                })
            })
        }
    }),
    v.fn.extend({
        queue: function(e, n) {
            var r = 2;
            return typeof e != "string" && (n = e,
            e = "fx",
            r--),
            arguments.length < r ? v.queue(this[0], e) : n === t ? this : this.each(function() {
                var t = v.queue(this, e, n);
                v._queueHooks(this, e),
                e === "fx" && t[0] !== "inprogress" && v.dequeue(this, e)
            })
        },
        dequeue: function(e) {
            return this.each(function() {
                v.dequeue(this, e)
            })
        },
        delay: function(e, t) {
            return e = v.fx ? v.fx.speeds[e] || e : e,
            t = t || "fx",
            this.queue(t, function(t, n) {
                var r = setTimeout(t, e);
                n.stop = function() {
                    clearTimeout(r)
                }
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(e, n) {
            var r, i = 1, s = v.Deferred(), o = this, u = this.length, a = function() {
                --i || s.resolveWith(o, [o])
            }
            ;
            typeof e != "string" && (n = e,
            e = t),
            e = e || "fx";
            while (u--) {
                r = v._data(o[u], e + "queueHooks"),
                r && r.empty && (i++,
                r.empty.add(a))
            }
            return a(),
            s.promise(n)
        }
    });
    var j, F, I, q = /[\t\r\n]/g, R = /\r/g, U = /^(?:button|input)$/i, z = /^(?:button|input|object|select|textarea)$/i, W = /^a(?:rea|)$/i, X = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, V = v.support.getSetAttribute;
    v.fn.extend({
        attr: function(e, t) {
            return v.access(this, v.attr, e, t, arguments.length > 1)
        },
        removeAttr: function(e) {
            return this.each(function() {
                v.removeAttr(this, e)
            })
        },
        prop: function(e, t) {
            return v.access(this, v.prop, e, t, arguments.length > 1)
        },
        removeProp: function(e) {
            return e = v.propFix[e] || e,
            this.each(function() {
                try {
                    this[e] = t,
                    delete this[e]
                } catch (n) {}
            })
        },
        addClass: function(e) {
            var t, n, r, i, s, o, u;
            if (v.isFunction(e)) {
                return this.each(function(t) {
                    v(this).addClass(e.call(this, t, this.className))
                })
            }
            if (e && typeof e == "string") {
                t = e.split(y);
                for (n = 0,
                r = this.length; n < r; n++) {
                    i = this[n];
                    if (i.nodeType === 1) {
                        if (!i.className && t.length === 1) {
                            i.className = e
                        } else {
                            s = " " + i.className + " ";
                            for (o = 0,
                            u = t.length; o < u; o++) {
                                s.indexOf(" " + t[o] + " ") < 0 && (s += t[o] + " ")
                            }
                            i.className = v.trim(s)
                        }
                    }
                }
            }
            return this
        },
        removeClass: function(e) {
            var n, r, i, s, o, u, a;
            if (v.isFunction(e)) {
                return this.each(function(t) {
                    v(this).removeClass(e.call(this, t, this.className))
                })
            }
            if (e && typeof e == "string" || e === t) {
                n = (e || "").split(y);
                for (u = 0,
                a = this.length; u < a; u++) {
                    i = this[u];
                    if (i.nodeType === 1 && i.className) {
                        r = (" " + i.className + " ").replace(q, " ");
                        for (s = 0,
                        o = n.length; s < o; s++) {
                            while (r.indexOf(" " + n[s] + " ") >= 0) {
                                r = r.replace(" " + n[s] + " ", " ")
                            }
                        }
                        i.className = e ? v.trim(r) : ""
                    }
                }
            }
            return this
        },
        toggleClass: function(e, t) {
            var n = typeof e
              , r = typeof t == "boolean";
            return v.isFunction(e) ? this.each(function(n) {
                v(this).toggleClass(e.call(this, n, this.className, t), t)
            }) : this.each(function() {
                if (n === "string") {
                    var i, s = 0, o = v(this), u = t, a = e.split(y);
                    while (i = a[s++]) {
                        u = r ? u : !o.hasClass(i),
                        o[u ? "addClass" : "removeClass"](i)
                    }
                } else {
                    if (n === "undefined" || n === "boolean") {
                        this.className && v._data(this, "__className__", this.className),
                        this.className = this.className || e === !1 ? "" : v._data(this, "__className__") || ""
                    }
                }
            })
        },
        hasClass: function(e) {
            var t = " " + e + " "
              , n = 0
              , r = this.length;
            for (; n < r; n++) {
                if (this[n].nodeType === 1 && (" " + this[n].className + " ").replace(q, " ").indexOf(t) >= 0) {
                    return !0
                }
            }
            return !1
        },
        val: function(e) {
            var n, r, i, s = this[0];
            if (!arguments.length) {
                if (s) {
                    return n = v.valHooks[s.type] || v.valHooks[s.nodeName.toLowerCase()],
                    n && "get" in n && (r = n.get(s, "value")) !== t ? r : (r = s.value,
                    typeof r == "string" ? r.replace(R, "") : r == null  ? "" : r)
                }
                return
            }
            return i = v.isFunction(e),
            this.each(function(r) {
                var s, o = v(this);
                if (this.nodeType !== 1) {
                    return
                }
                i ? s = e.call(this, r, o.val()) : s = e,
                s == null  ? s = "" : typeof s == "number" ? s += "" : v.isArray(s) && (s = v.map(s, function(e) {
                    return e == null  ? "" : e + ""
                })),
                n = v.valHooks[this.type] || v.valHooks[this.nodeName.toLowerCase()];
                if (!n || !("set" in n) || n.set(this, s, "value") === t) {
                    this.value = s
                }
            })
        }
    }),
    v.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = e.attributes.value;
                    return !t || t.specified ? e.value : e.text
                }
            },
            select: {
                get: function(e) {
                    var t, n, r = e.options, i = e.selectedIndex, s = e.type === "select-one" || i < 0, o = s ? null  : [], u = s ? i + 1 : r.length, a = i < 0 ? u : s ? i : 0;
                    for (; a < u; a++) {
                        n = r[a];
                        if ((n.selected || a === i) && (v.support.optDisabled ? !n.disabled : n.getAttribute("disabled") === null ) && (!n.parentNode.disabled || !v.nodeName(n.parentNode, "optgroup"))) {
                            t = v(n).val();
                            if (s) {
                                return t
                            }
                            o.push(t)
                        }
                    }
                    return o
                },
                set: function(e, t) {
                    var n = v.makeArray(t);
                    return v(e).find("option").each(function() {
                        this.selected = v.inArray(v(this).val(), n) >= 0
                    }),
                    n.length || (e.selectedIndex = -1),
                    n
                }
            }
        },
        attrFn: {},
        attr: function(e, n, r, i) {
            var s, o, u, a = e.nodeType;
            if (!e || a === 3 || a === 8 || a === 2) {
                return
            }
            if (i && v.isFunction(v.fn[n])) {
                return v(e)[n](r)
            }
            if (typeof e.getAttribute == "undefined") {
                return v.prop(e, n, r)
            }
            u = a !== 1 || !v.isXMLDoc(e),
            u && (n = n.toLowerCase(),
            o = v.attrHooks[n] || (X.test(n) ? F : j));
            if (r !== t) {
                if (r === null ) {
                    v.removeAttr(e, n);
                    return
                }
                return o && "set" in o && u && (s = o.set(e, r, n)) !== t ? s : (e.setAttribute(n, r + ""),
                r)
            }
            return o && "get" in o && u && (s = o.get(e, n)) !== null  ? s : (s = e.getAttribute(n),
            s === null  ? t : s)
        },
        removeAttr: function(e, t) {
            var n, r, i, s, o = 0;
            if (t && e.nodeType === 1) {
                r = t.split(y);
                for (; o < r.length; o++) {
                    i = r[o],
                    i && (n = v.propFix[i] || i,
                    s = X.test(i),
                    s || v.attr(e, i, ""),
                    e.removeAttribute(V ? i : n),
                    s && n in e && (e[n] = !1))
                }
            }
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (U.test(e.nodeName) && e.parentNode) {
                        v.error("type property can't be changed")
                    } else {
                        if (!v.support.radioValue && t === "radio" && v.nodeName(e, "input")) {
                            var n = e.value;
                            return e.setAttribute("type", t),
                            n && (e.value = n),
                            t
                        }
                    }
                }
            },
            value: {
                get: function(e, t) {
                    return j && v.nodeName(e, "button") ? j.get(e, t) : t in e ? e.value : null 
                },
                set: function(e, t, n) {
                    if (j && v.nodeName(e, "button")) {
                        return j.set(e, t, n)
                    }
                    e.value = t
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(e, n, r) {
            var i, s, o, u = e.nodeType;
            if (!e || u === 3 || u === 8 || u === 2) {
                return
            }
            return o = u !== 1 || !v.isXMLDoc(e),
            o && (n = v.propFix[n] || n,
            s = v.propHooks[n]),
            r !== t ? s && "set" in s && (i = s.set(e, r, n)) !== t ? i : e[n] = r : s && "get" in s && (i = s.get(e, n)) !== null  ? i : e[n]
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var n = e.getAttributeNode("tabindex");
                    return n && n.specified ? parseInt(n.value, 10) : z.test(e.nodeName) || W.test(e.nodeName) && e.href ? 0 : t
                }
            }
        }
    }),
    F = {
        get: function(e, n) {
            var r, i = v.prop(e, n);
            return i === !0 || typeof i != "boolean" && (r = e.getAttributeNode(n)) && r.nodeValue !== !1 ? n.toLowerCase() : t
        },
        set: function(e, t, n) {
            var r;
            return t === !1 ? v.removeAttr(e, n) : (r = v.propFix[n] || n,
            r in e && (e[r] = !0),
            e.setAttribute(n, n.toLowerCase())),
            n
        }
    },
    V || (I = {
        name: !0,
        id: !0,
        coords: !0
    },
    j = v.valHooks.button = {
        get: function(e, n) {
            var r;
            return r = e.getAttributeNode(n),
            r && (I[n] ? r.value !== "" : r.specified) ? r.value : t
        },
        set: function(e, t, n) {
            var r = e.getAttributeNode(n);
            return r || (r = i.createAttribute(n),
            e.setAttributeNode(r)),
            r.value = t + ""
        }
    },
    v.each(["width", "height"], function(e, t) {
        v.attrHooks[t] = v.extend(v.attrHooks[t], {
            set: function(e, n) {
                if (n === "") {
                    return e.setAttribute(t, "auto"),
                    n
                }
            }
        })
    }),
    v.attrHooks.contenteditable = {
        get: j.get,
        set: function(e, t, n) {
            t === "" && (t = "false"),
            j.set(e, t, n)
        }
    }),
    v.support.hrefNormalized || v.each(["href", "src", "width", "height"], function(e, n) {
        v.attrHooks[n] = v.extend(v.attrHooks[n], {
            get: function(e) {
                var r = e.getAttribute(n, 2);
                return r === null  ? t : r
            }
        })
    }),
    v.support.style || (v.attrHooks.style = {
        get: function(e) {
            return e.style.cssText.toLowerCase() || t
        },
        set: function(e, t) {
            return e.style.cssText = t + ""
        }
    }),
    v.support.optSelected || (v.propHooks.selected = v.extend(v.propHooks.selected, {
        get: function(e) {
            var t = e.parentNode;
            return t && (t.selectedIndex,
            t.parentNode && t.parentNode.selectedIndex),
            null 
        }
    })),
    v.support.enctype || (v.propFix.enctype = "encoding"),
    v.support.checkOn || v.each(["radio", "checkbox"], function() {
        v.valHooks[this] = {
            get: function(e) {
                return e.getAttribute("value") === null  ? "on" : e.value
            }
        }
    }),
    v.each(["radio", "checkbox"], function() {
        v.valHooks[this] = v.extend(v.valHooks[this], {
            set: function(e, t) {
                if (v.isArray(t)) {
                    return e.checked = v.inArray(v(e).val(), t) >= 0
                }
            }
        })
    });
    var $ = /^(?:textarea|input|select)$/i
      , J = /^([^\.]*|)(?:\.(.+)|)$/
      , K = /(?:^|\s)hover(\.\S+|)\b/
      , Q = /^key/
      , G = /^(?:mouse|contextmenu)|click/
      , Y = /^(?:focusinfocus|focusoutblur)$/
      , Z = function(e) {
        return v.event.special.hover ? e : e.replace(K, "mouseenter$1 mouseleave$1")
    }
    ;
    v.event = {
        add: function(e, n, r, i, s) {
            var o, u, a, f, l, c, h, p, d, m, g;
            if (e.nodeType === 3 || e.nodeType === 8 || !n || !r || !(o = v._data(e))) {
                return
            }
            r.handler && (d = r,
            r = d.handler,
            s = d.selector),
            r.guid || (r.guid = v.guid++),
            a = o.events,
            a || (o.events = a = {}),
            u = o.handle,
            u || (o.handle = u = function(e) {
                return typeof v == "undefined" || !!e && v.event.triggered === e.type ? t : v.event.dispatch.apply(u.elem, arguments)
            }
            ,
            u.elem = e),
            n = v.trim(Z(n)).split(" ");
            for (f = 0; f < n.length; f++) {
                l = J.exec(n[f]) || [],
                c = l[1],
                h = (l[2] || "").split(".").sort(),
                g = v.event.special[c] || {},
                c = (s ? g.delegateType : g.bindType) || c,
                g = v.event.special[c] || {},
                p = v.extend({
                    type: c,
                    origType: l[1],
                    data: i,
                    handler: r,
                    guid: r.guid,
                    selector: s,
                    needsContext: s && v.expr.match.needsContext.test(s),
                    namespace: h.join(".")
                }, d),
                m = a[c];
                if (!m) {
                    m = a[c] = [],
                    m.delegateCount = 0;
                    if (!g.setup || g.setup.call(e, i, h, u) === !1) {
                        e.addEventListener ? e.addEventListener(c, u, !1) : e.attachEvent && e.attachEvent("on" + c, u)
                    }
                }
                g.add && (g.add.call(e, p),
                p.handler.guid || (p.handler.guid = r.guid)),
                s ? m.splice(m.delegateCount++, 0, p) : m.push(p),
                v.event.global[c] = !0
            }
            e = null 
        },
        global: {},
        remove: function(e, t, n, r, i) {
            var s, o, u, a, f, l, c, h, p, d, m, g = v.hasData(e) && v._data(e);
            if (!g || !(h = g.events)) {
                return
            }
            t = v.trim(Z(t || "")).split(" ");
            for (s = 0; s < t.length; s++) {
                o = J.exec(t[s]) || [],
                u = a = o[1],
                f = o[2];
                if (!u) {
                    for (u in h) {
                        v.event.remove(e, u + t[s], n, r, !0)
                    }
                    continue
                }
                p = v.event.special[u] || {},
                u = (r ? p.delegateType : p.bindType) || u,
                d = h[u] || [],
                l = d.length,
                f = f ? new RegExp("(^|\\.)" + f.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null ;
                for (c = 0; c < d.length; c++) {
                    m = d[c],
                    (i || a === m.origType) && (!n || n.guid === m.guid) && (!f || f.test(m.namespace)) && (!r || r === m.selector || r === "**" && m.selector) && (d.splice(c--, 1),
                    m.selector && d.delegateCount--,
                    p.remove && p.remove.call(e, m))
                }
                d.length === 0 && l !== d.length && ((!p.teardown || p.teardown.call(e, f, g.handle) === !1) && v.removeEvent(e, u, g.handle),
                delete h[u])
            }
            v.isEmptyObject(h) && (delete g.handle,
            v.removeData(e, "events", !0))
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(n, r, s, o) {
            if (!s || s.nodeType !== 3 && s.nodeType !== 8) {
                var u, a, f, l, c, h, p, d, m, g, y = n.type || n, b = [];
                if (Y.test(y + v.event.triggered)) {
                    return
                }
                y.indexOf("!") >= 0 && (y = y.slice(0, -1),
                a = !0),
                y.indexOf(".") >= 0 && (b = y.split("."),
                y = b.shift(),
                b.sort());
                if ((!s || v.event.customEvent[y]) && !v.event.global[y]) {
                    return
                }
                n = typeof n == "object" ? n[v.expando] ? n : new v.Event(y,n) : new v.Event(y),
                n.type = y,
                n.isTrigger = !0,
                n.exclusive = a,
                n.namespace = b.join("."),
                n.namespace_re = n.namespace ? new RegExp("(^|\\.)" + b.join("\\.(?:.*\\.|)") + "(\\.|$)") : null ,
                h = y.indexOf(":") < 0 ? "on" + y : "";
                if (!s) {
                    u = v.cache;
                    for (f in u) {
                        u[f].events && u[f].events[y] && v.event.trigger(n, r, u[f].handle.elem, !0)
                    }
                    return
                }
                n.result = t,
                n.target || (n.target = s),
                r = r != null  ? v.makeArray(r) : [],
                r.unshift(n),
                p = v.event.special[y] || {};
                if (p.trigger && p.trigger.apply(s, r) === !1) {
                    return
                }
                m = [[s, p.bindType || y]];
                if (!o && !p.noBubble && !v.isWindow(s)) {
                    g = p.delegateType || y,
                    l = Y.test(g + y) ? s : s.parentNode;
                    for (c = s; l; l = l.parentNode) {
                        m.push([l, g]),
                        c = l
                    }
                    c === (s.ownerDocument || i) && m.push([c.defaultView || c.parentWindow || e, g])
                }
                for (f = 0; f < m.length && !n.isPropagationStopped(); f++) {
                    l = m[f][0],
                    n.type = m[f][1],
                    d = (v._data(l, "events") || {})[n.type] && v._data(l, "handle"),
                    d && d.apply(l, r),
                    d = h && l[h],
                    d && v.acceptData(l) && d.apply && d.apply(l, r) === !1 && n.preventDefault()
                }
                return n.type = y,
                !o && !n.isDefaultPrevented() && (!p._default || p._default.apply(s.ownerDocument, r) === !1) && (y !== "click" || !v.nodeName(s, "a")) && v.acceptData(s) && h && s[y] && (y !== "focus" && y !== "blur" || n.target.offsetWidth !== 0) && !v.isWindow(s) && (c = s[h],
                c && (s[h] = null ),
                v.event.triggered = y,
                s[y](),
                v.event.triggered = t,
                c && (s[h] = c)),
                n.result
            }
            return
        },
        dispatch: function(n) {
            n = v.event.fix(n || e.event);
            var r, i, s, o, u, a, f, c, h, p, d = (v._data(this, "events") || {})[n.type] || [], m = d.delegateCount, g = l.call(arguments), y = !n.exclusive && !n.namespace, b = v.event.special[n.type] || {}, w = [];
            g[0] = n,
            n.delegateTarget = this;
            if (b.preDispatch && b.preDispatch.call(this, n) === !1) {
                return
            }
            if (m && (!n.button || n.type !== "click")) {
                for (s = n.target; s != this; s = s.parentNode || this) {
                    if (s.disabled !== !0 || n.type !== "click") {
                        u = {},
                        f = [];
                        for (r = 0; r < m; r++) {
                            c = d[r],
                            h = c.selector,
                            u[h] === t && (u[h] = c.needsContext ? v(h, this).index(s) >= 0 : v.find(h, this, null , [s]).length),
                            u[h] && f.push(c)
                        }
                        f.length && w.push({
                            elem: s,
                            matches: f
                        })
                    }
                }
            }
            d.length > m && w.push({
                elem: this,
                matches: d.slice(m)
            });
            for (r = 0; r < w.length && !n.isPropagationStopped(); r++) {
                a = w[r],
                n.currentTarget = a.elem;
                for (i = 0; i < a.matches.length && !n.isImmediatePropagationStopped(); i++) {
                    c = a.matches[i];
                    if (y || !n.namespace && !c.namespace || n.namespace_re && n.namespace_re.test(c.namespace)) {
                        n.data = c.data,
                        n.handleObj = c,
                        o = ((v.event.special[c.origType] || {}).handle || c.handler).apply(a.elem, g),
                        o !== t && (n.result = o,
                        o === !1 && (n.preventDefault(),
                        n.stopPropagation()))
                    }
                }
            }
            return b.postDispatch && b.postDispatch.call(this, n),
            n.result
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(e, t) {
                return e.which == null  && (e.which = t.charCode != null  ? t.charCode : t.keyCode),
                e
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(e, n) {
                var r, s, o, u = n.button, a = n.fromElement;
                return e.pageX == null  && n.clientX != null  && (r = e.target.ownerDocument || i,
                s = r.documentElement,
                o = r.body,
                e.pageX = n.clientX + (s && s.scrollLeft || o && o.scrollLeft || 0) - (s && s.clientLeft || o && o.clientLeft || 0),
                e.pageY = n.clientY + (s && s.scrollTop || o && o.scrollTop || 0) - (s && s.clientTop || o && o.clientTop || 0)),
                !e.relatedTarget && a && (e.relatedTarget = a === e.target ? n.toElement : a),
                !e.which && u !== t && (e.which = u & 1 ? 1 : u & 2 ? 3 : u & 4 ? 2 : 0),
                e
            }
        },
        fix: function(e) {
            if (e[v.expando]) {
                return e
            }
            var t, n, r = e, s = v.event.fixHooks[e.type] || {}, o = s.props ? this.props.concat(s.props) : this.props;
            e = v.Event(r);
            for (t = o.length; t; ) {
                n = o[--t],
                e[n] = r[n]
            }
            return e.target || (e.target = r.srcElement || i),
            e.target.nodeType === 3 && (e.target = e.target.parentNode),
            e.metaKey = !!e.metaKey,
            s.filter ? s.filter(e, r) : e
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(e, t, n) {
                    v.isWindow(this) && (this.onbeforeunload = n)
                },
                teardown: function(e, t) {
                    this.onbeforeunload === t && (this.onbeforeunload = null )
                }
            }
        },
        simulate: function(e, t, n, r) {
            var i = v.extend(new v.Event, n, {
                type: e,
                isSimulated: !0,
                originalEvent: {}
            });
            r ? v.event.trigger(i, null , t) : v.event.dispatch.call(t, i),
            i.isDefaultPrevented() && n.preventDefault()
        }
    },
    v.event.handle = v.event.dispatch,
    v.removeEvent = i.removeEventListener ? function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n, !1)
    }
     : function(e, t, n) {
        var r = "on" + t;
        e.detachEvent && (typeof e[r] == "undefined" && (e[r] = null ),
        e.detachEvent(r, n))
    }
    ,
    v.Event = function(e, t) {
        if (!(this instanceof v.Event)) {
            return new v.Event(e,t)
        }
        e && e.type ? (this.originalEvent = e,
        this.type = e.type,
        this.isDefaultPrevented = e.defaultPrevented || e.returnValue === !1 || e.getPreventDefault && e.getPreventDefault() ? tt : et) : this.type = e,
        t && v.extend(this, t),
        this.timeStamp = e && e.timeStamp || v.now(),
        this[v.expando] = !0
    }
    ,
    v.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = tt;
            var e = this.originalEvent;
            if (!e) {
                return
            }
            e.preventDefault ? e.preventDefault() : e.returnValue = !1
        },
        stopPropagation: function() {
            this.isPropagationStopped = tt;
            var e = this.originalEvent;
            if (!e) {
                return
            }
            e.stopPropagation && e.stopPropagation(),
            e.cancelBubble = !0
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = tt,
            this.stopPropagation()
        },
        isDefaultPrevented: et,
        isPropagationStopped: et,
        isImmediatePropagationStopped: et
    },
    v.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(e, t) {
        v.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function(e) {
                var n, r = this, i = e.relatedTarget, s = e.handleObj, o = s.selector;
                if (!i || i !== r && !v.contains(r, i)) {
                    e.type = s.origType,
                    n = s.handler.apply(this, arguments),
                    e.type = t
                }
                return n
            }
        }
    }),
    v.support.submitBubbles || (v.event.special.submit = {
        setup: function() {
            if (v.nodeName(this, "form")) {
                return !1
            }
            v.event.add(this, "click._submit keypress._submit", function(e) {
                var n = e.target
                  , r = v.nodeName(n, "input") || v.nodeName(n, "button") ? n.form : t;
                r && !v._data(r, "_submit_attached") && (v.event.add(r, "submit._submit", function(e) {
                    e._submit_bubble = !0
                }),
                v._data(r, "_submit_attached", !0))
            })
        },
        postDispatch: function(e) {
            e._submit_bubble && (delete e._submit_bubble,
            this.parentNode && !e.isTrigger && v.event.simulate("submit", this.parentNode, e, !0))
        },
        teardown: function() {
            if (v.nodeName(this, "form")) {
                return !1
            }
            v.event.remove(this, "._submit")
        }
    }),
    v.support.changeBubbles || (v.event.special.change = {
        setup: function() {
            if ($.test(this.nodeName)) {
                if (this.type === "checkbox" || this.type === "radio") {
                    v.event.add(this, "propertychange._change", function(e) {
                        e.originalEvent.propertyName === "checked" && (this._just_changed = !0)
                    }),
                    v.event.add(this, "click._change", function(e) {
                        this._just_changed && !e.isTrigger && (this._just_changed = !1),
                        v.event.simulate("change", this, e, !0)
                    })
                }
                return !1
            }
            v.event.add(this, "beforeactivate._change", function(e) {
                var t = e.target;
                $.test(t.nodeName) && !v._data(t, "_change_attached") && (v.event.add(t, "change._change", function(e) {
                    this.parentNode && !e.isSimulated && !e.isTrigger && v.event.simulate("change", this.parentNode, e, !0)
                }),
                v._data(t, "_change_attached", !0))
            })
        },
        handle: function(e) {
            var t = e.target;
            if (this !== t || e.isSimulated || e.isTrigger || t.type !== "radio" && t.type !== "checkbox") {
                return e.handleObj.handler.apply(this, arguments)
            }
        },
        teardown: function() {
            return v.event.remove(this, "._change"),
            !$.test(this.nodeName)
        }
    }),
    v.support.focusinBubbles || v.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        var n = 0
          , r = function(e) {
            v.event.simulate(t, e.target, v.event.fix(e), !0)
        }
        ;
        v.event.special[t] = {
            setup: function() {
                n++ === 0 && i.addEventListener(e, r, !0)
            },
            teardown: function() {
                --n === 0 && i.removeEventListener(e, r, !0)
            }
        }
    }),
    v.fn.extend({
        on: function(e, n, r, i, s) {
            var o, u;
            if (typeof e == "object") {
                typeof n != "string" && (r = r || n,
                n = t);
                for (u in e) {
                    this.on(u, n, r, e[u], s)
                }
                return this
            }
            r == null  && i == null  ? (i = n,
            r = n = t) : i == null  && (typeof n == "string" ? (i = r,
            r = t) : (i = r,
            r = n,
            n = t));
            if (i === !1) {
                i = et
            } else {
                if (!i) {
                    return this
                }
            }
            return s === 1 && (o = i,
            i = function(e) {
                return v().off(e),
                o.apply(this, arguments)
            }
            ,
            i.guid = o.guid || (o.guid = v.guid++)),
            this.each(function() {
                v.event.add(this, e, i, r, n)
            })
        },
        one: function(e, t, n, r) {
            return this.on(e, t, n, r, 1)
        },
        off: function(e, n, r) {
            var i, s;
            if (e && e.preventDefault && e.handleObj) {
                return i = e.handleObj,
                v(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler),
                this
            }
            if (typeof e == "object") {
                for (s in e) {
                    this.off(s, n, e[s])
                }
                return this
            }
            if (n === !1 || typeof n == "function") {
                r = n,
                n = t
            }
            return r === !1 && (r = et),
            this.each(function() {
                v.event.remove(this, e, r, n)
            })
        },
        bind: function(e, t, n) {
            return this.on(e, null , t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null , t)
        },
        live: function(e, t, n) {
            return v(this.context).on(e, this.selector, t, n),
            this
        },
        die: function(e, t) {
            return v(this.context).off(e, this.selector || "**", t),
            this
        },
        delegate: function(e, t, n, r) {
            return this.on(t, e, n, r)
        },
        undelegate: function(e, t, n) {
            return arguments.length === 1 ? this.off(e, "**") : this.off(t, e || "**", n)
        },
        trigger: function(e, t) {
            return this.each(function() {
                v.event.trigger(e, t, this)
            })
        },
        triggerHandler: function(e, t) {
            if (this[0]) {
                return v.event.trigger(e, t, this[0], !0)
            }
        },
        toggle: function(e) {
            var t = arguments
              , n = e.guid || v.guid++
              , r = 0
              , i = function(n) {
                var i = (v._data(this, "lastToggle" + e.guid) || 0) % r;
                return v._data(this, "lastToggle" + e.guid, i + 1),
                n.preventDefault(),
                t[i].apply(this, arguments) || !1
            }
            ;
            i.guid = n;
            while (r < t.length) {
                t[r++].guid = n
            }
            return this.click(i)
        },
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e)
        }
    }),
    v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(e, t) {
        v.fn[t] = function(e, n) {
            return n == null  && (n = e,
            e = null ),
            arguments.length > 0 ? this.on(t, null , e, n) : this.trigger(t)
        }
        ,
        Q.test(t) && (v.event.fixHooks[t] = v.event.keyHooks),
        G.test(t) && (v.event.fixHooks[t] = v.event.mouseHooks)
    }),
    function(e, t) {
        function nt(e, t, n, r) {
            n = n || [],
            t = t || g;
            var i, s, a, f, l = t.nodeType;
            if (!e || typeof e != "string") {
                return n
            }
            if (l !== 1 && l !== 9) {
                return []
            }
            a = o(t);
            if (!a && !r) {
                if (i = R.exec(e)) {
                    if (f = i[1]) {
                        if (l === 9) {
                            s = t.getElementById(f);
                            if (!s || !s.parentNode) {
                                return n
                            }
                            if (s.id === f) {
                                return n.push(s),
                                n
                            }
                        } else {
                            if (t.ownerDocument && (s = t.ownerDocument.getElementById(f)) && u(t, s) && s.id === f) {
                                return n.push(s),
                                n
                            }
                        }
                    } else {
                        if (i[2]) {
                            return S.apply(n, x.call(t.getElementsByTagName(e), 0)),
                            n
                        }
                        if ((f = i[3]) && Z && t.getElementsByClassName) {
                            return S.apply(n, x.call(t.getElementsByClassName(f), 0)),
                            n
                        }
                    }
                }
            }
            return vt(e.replace(j, "$1"), t, n, r, a)
        }
        function rt(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return n === "input" && t.type === e
            }
        }
        function it(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return (n === "input" || n === "button") && t.type === e
            }
        }
        function st(e) {
            return N(function(t) {
                return t = +t,
                N(function(n, r) {
                    var i, s = e([], n.length, t), o = s.length;
                    while (o--) {
                        n[i = s[o]] && (n[i] = !(r[i] = n[i]))
                    }
                })
            })
        }
        function ot(e, t, n) {
            if (e === t) {
                return n
            }
            var r = e.nextSibling;
            while (r) {
                if (r === t) {
                    return -1
                }
                r = r.nextSibling
            }
            return 1
        }
        function ut(e, t) {
            var n, r, s, o, u, a, f, l = L[d][e + " "];
            if (l) {
                return t ? 0 : l.slice(0)
            }
            u = e,
            a = [],
            f = i.preFilter;
            while (u) {
                if (!n || (r = F.exec(u))) {
                    r && (u = u.slice(r[0].length) || u),
                    a.push(s = [])
                }
                n = !1;
                if (r = I.exec(u)) {
                    s.push(n = new m(r.shift())),
                    u = u.slice(n.length),
                    n.type = r[0].replace(j, " ")
                }
                for (o in i.filter) {
                    (r = J[o].exec(u)) && (!f[o] || (r = f[o](r))) && (s.push(n = new m(r.shift())),
                    u = u.slice(n.length),
                    n.type = o,
                    n.matches = r)
                }
                if (!n) {
                    break
                }
            }
            return t ? u.length : u ? nt.error(e) : L(e, a).slice(0)
        }
        function at(e, t, r) {
            var i = t.dir
              , s = r && t.dir === "parentNode"
              , o = w++;
            return t.first ? function(t, n, r) {
                while (t = t[i]) {
                    if (s || t.nodeType === 1) {
                        return e(t, n, r)
                    }
                }
            }
             : function(t, r, u) {
                if (!u) {
                    var a, f = b + " " + o + " ", l = f + n;
                    while (t = t[i]) {
                        if (s || t.nodeType === 1) {
                            if ((a = t[d]) === l) {
                                return t.sizset
                            }
                            if (typeof a == "string" && a.indexOf(f) === 0) {
                                if (t.sizset) {
                                    return t
                                }
                            } else {
                                t[d] = l;
                                if (e(t, r, u)) {
                                    return t.sizset = !0,
                                    t
                                }
                                t.sizset = !1
                            }
                        }
                    }
                } else {
                    while (t = t[i]) {
                        if (s || t.nodeType === 1) {
                            if (e(t, r, u)) {
                                return t
                            }
                        }
                    }
                }
            }
        }
        function ft(e) {
            return e.length > 1 ? function(t, n, r) {
                var i = e.length;
                while (i--) {
                    if (!e[i](t, n, r)) {
                        return !1
                    }
                }
                return !0
            }
             : e[0]
        }
        function lt(e, t, n, r, i) {
            var s, o = [], u = 0, a = e.length, f = t != null ;
            for (; u < a; u++) {
                if (s = e[u]) {
                    if (!n || n(s, r, i)) {
                        o.push(s),
                        f && t.push(u)
                    }
                }
            }
            return o
        }
        function ct(e, t, n, r, i, s) {
            return r && !r[d] && (r = ct(r)),
            i && !i[d] && (i = ct(i, s)),
            N(function(s, o, u, a) {
                var f, l, c, h = [], p = [], d = o.length, v = s || dt(t || "*", u.nodeType ? [u] : u, []), m = e && (s || !t) ? lt(v, h, e, u, a) : v, g = n ? i || (s ? e : d || r) ? [] : o : m;
                n && n(m, g, u, a);
                if (r) {
                    f = lt(g, p),
                    r(f, [], u, a),
                    l = f.length;
                    while (l--) {
                        if (c = f[l]) {
                            g[p[l]] = !(m[p[l]] = c)
                        }
                    }
                }
                if (s) {
                    if (i || e) {
                        if (i) {
                            f = [],
                            l = g.length;
                            while (l--) {
                                (c = g[l]) && f.push(m[l] = c)
                            }
                            i(null , g = [], f, a)
                        }
                        l = g.length;
                        while (l--) {
                            (c = g[l]) && (f = i ? T.call(s, c) : h[l]) > -1 && (s[f] = !(o[f] = c))
                        }
                    }
                } else {
                    g = lt(g === o ? g.splice(d, g.length) : g),
                    i ? i(null , o, g, a) : S.apply(o, g)
                }
            })
        }
        function ht(e) {
            var t, n, r, s = e.length, o = i.relative[e[0].type], u = o || i.relative[" "], a = o ? 1 : 0, f = at(function(e) {
                return e === t
            }, u, !0), l = at(function(e) {
                return T.call(t, e) > -1
            }, u, !0), h = [function(e, n, r) {
                return !o && (r || n !== c) || ((t = n).nodeType ? f(e, n, r) : l(e, n, r))
            }
            ];
            for (; a < s; a++) {
                if (n = i.relative[e[a].type]) {
                    h = [at(ft(h), n)]
                } else {
                    n = i.filter[e[a].type].apply(null , e[a].matches);
                    if (n[d]) {
                        r = ++a;
                        for (; r < s; r++) {
                            if (i.relative[e[r].type]) {
                                break
                            }
                        }
                        return ct(a > 1 && ft(h), a > 1 && e.slice(0, a - 1).join("").replace(j, "$1"), n, a < r && ht(e.slice(a, r)), r < s && ht(e = e.slice(r)), r < s && e.join(""))
                    }
                    h.push(n)
                }
            }
            return ft(h)
        }
        function pt(e, t) {
            var r = t.length > 0
              , s = e.length > 0
              , o = function(u, a, f, l, h) {
                var p, d, v, m = [], y = 0, w = "0", x = u && [], T = h != null , N = c, C = u || s && i.find.TAG("*", h && a.parentNode || a), k = b += N == null  ? 1 : Math.E;
                T && (c = a !== g && a,
                n = o.el);
                for (; (p = C[w]) != null ; w++) {
                    if (s && p) {
                        for (d = 0; v = e[d]; d++) {
                            if (v(p, a, f)) {
                                l.push(p);
                                break
                            }
                        }
                        T && (b = k,
                        n = ++o.el)
                    }
                    r && ((p = !v && p) && y--,
                    u && x.push(p))
                }
                y += w;
                if (r && w !== y) {
                    for (d = 0; v = t[d]; d++) {
                        v(x, m, a, f)
                    }
                    if (u) {
                        if (y > 0) {
                            while (w--) {
                                !x[w] && !m[w] && (m[w] = E.call(l))
                            }
                        }
                        m = lt(m)
                    }
                    S.apply(l, m),
                    T && !u && m.length > 0 && y + t.length > 1 && nt.uniqueSort(l)
                }
                return T && (b = k,
                c = N),
                x
            }
            ;
            return o.el = 0,
            r ? N(o) : o
        }
        function dt(e, t, n) {
            var r = 0
              , i = t.length;
            for (; r < i; r++) {
                nt(e, t[r], n)
            }
            return n
        }
        function vt(e, t, n, r, s) {
            var o, u, f, l, c, h = ut(e), p = h.length;
            if (!r && h.length === 1) {
                u = h[0] = h[0].slice(0);
                if (u.length > 2 && (f = u[0]).type === "ID" && t.nodeType === 9 && !s && i.relative[u[1].type]) {
                    t = i.find.ID(f.matches[0].replace($, ""), t, s)[0];
                    if (!t) {
                        return n
                    }
                    e = e.slice(u.shift().length)
                }
                for (o = J.POS.test(e) ? -1 : u.length - 1; o >= 0; o--) {
                    f = u[o];
                    if (i.relative[l = f.type]) {
                        break
                    }
                    if (c = i.find[l]) {
                        if (r = c(f.matches[0].replace($, ""), z.test(u[0].type) && t.parentNode || t, s)) {
                            u.splice(o, 1),
                            e = r.length && u.join("");
                            if (!e) {
                                return S.apply(n, x.call(r, 0)),
                                n
                            }
                            break
                        }
                    }
                }
            }
            return a(e, h)(r, t, s, n, z.test(e)),
            n
        }
        function mt() {}
        var n, r, i, s, o, u, a, f, l, c, h = !0, p = "undefined", d = ("sizcache" + Math.random()).replace(".", ""), m = String, g = e.document, y = g.documentElement, b = 0, w = 0, E = [].pop, S = [].push, x = [].slice, T = [].indexOf || function(e) {
            var t = 0
              , n = this.length;
            for (; t < n; t++) {
                if (this[t] === e) {
                    return t
                }
            }
            return -1
        }
        , N = function(e, t) {
            return e[d] = t == null  || t,
            e
        }
        , C = function() {
            var e = {}
              , t = [];
            return N(function(n, r) {
                return t.push(n) > i.cacheLength && delete e[t.shift()],
                e[n + " "] = r
            }, e)
        }
        , k = C(), L = C(), A = C(), O = "[\\x20\\t\\r\\n\\f]", M = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", _ = M.replace("w", "w#"), D = "([*^$|!~]?=)", P = "\\[" + O + "*(" + M + ")" + O + "*(?:" + D + O + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + _ + ")|)|)" + O + "*\\]", H = ":(" + M + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + P + ")|[^:]|\\\\.)*|.*))\\)|)", B = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + O + "*((?:-\\d)?\\d*)" + O + "*\\)|)(?=[^-]|$)", j = new RegExp("^" + O + "+|((?:^|[^\\\\])(?:\\\\.)*)" + O + "+$","g"), F = new RegExp("^" + O + "*," + O + "*"), I = new RegExp("^" + O + "*([\\x20\\t\\r\\n\\f>+~])" + O + "*"), q = new RegExp(H), R = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, U = /^:not/, z = /[\x20\t\r\n\f]*[+~]/, W = /:not\($/, X = /h\d/i, V = /input|select|textarea|button/i, $ = /\\(?!\\)/g, J = {
            ID: new RegExp("^#(" + M + ")"),
            CLASS: new RegExp("^\\.(" + M + ")"),
            NAME: new RegExp("^\\[name=['\"]?(" + M + ")['\"]?\\]"),
            TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + P),
            PSEUDO: new RegExp("^" + H),
            POS: new RegExp(B,"i"),
            CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + O + "*(even|odd|(([+-]|)(\\d*)n|)" + O + "*(?:([+-]|)" + O + "*(\\d+)|))" + O + "*\\)|)","i"),
            needsContext: new RegExp("^" + O + "*[>+~]|" + B,"i")
        }, K = function(e) {
            var t = g.createElement("div");
            try {
                return e(t)
            } catch (n) {
                return !1
            } finally {
                t = null 
            }
        }
        , Q = K(function(e) {
            return e.appendChild(g.createComment("")),
            !e.getElementsByTagName("*").length
        }), G = K(function(e) {
            return e.innerHTML = "<a href='#'></a>",
            e.firstChild && typeof e.firstChild.getAttribute !== p && e.firstChild.getAttribute("href") === "#"
        }), Y = K(function(e) {
            e.innerHTML = "<select></select>";
            var t = typeof e.lastChild.getAttribute("multiple");
            return t !== "boolean" && t !== "string"
        }), Z = K(function(e) {
            return e.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>",
            !e.getElementsByClassName || !e.getElementsByClassName("e").length ? !1 : (e.lastChild.className = "e",
            e.getElementsByClassName("e").length === 2)
        }), et = K(function(e) {
            e.id = d + 0,
            e.innerHTML = "<a name='" + d + "'></a><div name='" + d + "'></div>",
            y.insertBefore(e, y.firstChild);
            var t = g.getElementsByName && g.getElementsByName(d).length === 2 + g.getElementsByName(d + 0).length;
            return r = !g.getElementById(d),
            y.removeChild(e),
            t
        });
        try {
            x.call(y.childNodes, 0)[0].nodeType
        } catch (tt) {
            x = function(e) {
                var t, n = [];
                for (; t = this[e]; e++) {
                    n.push(t)
                }
                return n
            }
        }
        nt.matches = function(e, t) {
            return nt(e, null , null , t)
        }
        ,
        nt.matchesSelector = function(e, t) {
            return nt(t, null , null , [e]).length > 0
        }
        ,
        s = nt.getText = function(e) {
            var t, n = "", r = 0, i = e.nodeType;
            if (i) {
                if (i === 1 || i === 9 || i === 11) {
                    if (typeof e.textContent == "string") {
                        return e.textContent
                    }
                    for (e = e.firstChild; e; e = e.nextSibling) {
                        n += s(e)
                    }
                } else {
                    if (i === 3 || i === 4) {
                        return e.nodeValue
                    }
                }
            } else {
                for (; t = e[r]; r++) {
                    n += s(t)
                }
            }
            return n
        }
        ,
        o = nt.isXML = function(e) {
            var t = e && (e.ownerDocument || e).documentElement;
            return t ? t.nodeName !== "HTML" : !1
        }
        ,
        u = nt.contains = y.contains ? function(e, t) {
            var n = e.nodeType === 9 ? e.documentElement : e
              , r = t && t.parentNode;
            return e === r || !!(r && r.nodeType === 1 && n.contains && n.contains(r))
        }
         : y.compareDocumentPosition ? function(e, t) {
            return t && !!(e.compareDocumentPosition(t) & 16)
        }
         : function(e, t) {
            while (t = t.parentNode) {
                if (t === e) {
                    return !0
                }
            }
            return !1
        }
        ,
        nt.attr = function(e, t) {
            var n, r = o(e);
            return r || (t = t.toLowerCase()),
            (n = i.attrHandle[t]) ? n(e) : r || Y ? e.getAttribute(t) : (n = e.getAttributeNode(t),
            n ? typeof e[t] == "boolean" ? e[t] ? t : null  : n.specified ? n.value : null  : null )
        }
        ,
        i = nt.selectors = {
            cacheLength: 50,
            createPseudo: N,
            match: J,
            attrHandle: G ? {} : {
                href: function(e) {
                    return e.getAttribute("href", 2)
                },
                type: function(e) {
                    return e.getAttribute("type")
                }
            },
            find: {
                ID: r ? function(e, t, n) {
                    if (typeof t.getElementById !== p && !n) {
                        var r = t.getElementById(e);
                        return r && r.parentNode ? [r] : []
                    }
                }
                 : function(e, n, r) {
                    if (typeof n.getElementById !== p && !r) {
                        var i = n.getElementById(e);
                        return i ? i.id === e || typeof i.getAttributeNode !== p && i.getAttributeNode("id").value === e ? [i] : t : []
                    }
                }
                ,
                TAG: Q ? function(e, t) {
                    if (typeof t.getElementsByTagName !== p) {
                        return t.getElementsByTagName(e)
                    }
                }
                 : function(e, t) {
                    var n = t.getElementsByTagName(e);
                    if (e === "*") {
                        var r, i = [], s = 0;
                        for (; r = n[s]; s++) {
                            r.nodeType === 1 && i.push(r)
                        }
                        return i
                    }
                    return n
                }
                ,
                NAME: et && function(e, t) {
                    if (typeof t.getElementsByName !== p) {
                        return t.getElementsByName(name)
                    }
                }
                ,
                CLASS: Z && function(e, t, n) {
                    if (typeof t.getElementsByClassName !== p && !n) {
                        return t.getElementsByClassName(e)
                    }
                }
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace($, ""),
                    e[3] = (e[4] || e[5] || "").replace($, ""),
                    e[2] === "~=" && (e[3] = " " + e[3] + " "),
                    e.slice(0, 4)
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(),
                    e[1] === "nth" ? (e[2] || nt.error(e[0]),
                    e[3] = +(e[3] ? e[4] + (e[5] || 1) : 2 * (e[2] === "even" || e[2] === "odd")),
                    e[4] = +(e[6] + e[7] || e[2] === "odd")) : e[2] && nt.error(e[0]),
                    e
                },
                PSEUDO: function(e) {
                    var t, n;
                    if (J.CHILD.test(e[0])) {
                        return null 
                    }
                    if (e[3]) {
                        e[2] = e[3]
                    } else {
                        if (t = e[4]) {
                            q.test(t) && (n = ut(t, !0)) && (n = t.indexOf(")", t.length - n) - t.length) && (t = t.slice(0, n),
                            e[0] = e[0].slice(0, n)),
                            e[2] = t
                        }
                    }
                    return e.slice(0, 3)
                }
            },
            filter: {
                ID: r ? function(e) {
                    return e = e.replace($, ""),
                    function(t) {
                        return t.getAttribute("id") === e
                    }
                }
                 : function(e) {
                    return e = e.replace($, ""),
                    function(t) {
                        var n = typeof t.getAttributeNode !== p && t.getAttributeNode("id");
                        return n && n.value === e
                    }
                }
                ,
                TAG: function(e) {
                    return e === "*" ? function() {
                        return !0
                    }
                     : (e = e.replace($, "").toLowerCase(),
                    function(t) {
                        return t.nodeName && t.nodeName.toLowerCase() === e
                    }
                    )
                },
                CLASS: function(e) {
                    var t = k[d][e + " "];
                    return t || (t = new RegExp("(^|" + O + ")" + e + "(" + O + "|$)")) && k(e, function(e) {
                        return t.test(e.className || typeof e.getAttribute !== p && e.getAttribute("class") || "")
                    })
                },
                ATTR: function(e, t, n) {
                    return function(r, i) {
                        var s = nt.attr(r, e);
                        return s == null  ? t === "!=" : t ? (s += "",
                        t === "=" ? s === n : t === "!=" ? s !== n : t === "^=" ? n && s.indexOf(n) === 0 : t === "*=" ? n && s.indexOf(n) > -1 : t === "$=" ? n && s.substr(s.length - n.length) === n : t === "~=" ? (" " + s + " ").indexOf(n) > -1 : t === "|=" ? s === n || s.substr(0, n.length + 1) === n + "-" : !1) : !0
                    }
                },
                CHILD: function(e, t, n, r) {
                    return e === "nth" ? function(e) {
                        var t, i, s = e.parentNode;
                        if (n === 1 && r === 0) {
                            return !0
                        }
                        if (s) {
                            i = 0;
                            for (t = s.firstChild; t; t = t.nextSibling) {
                                if (t.nodeType === 1) {
                                    i++;
                                    if (e === t) {
                                        break
                                    }
                                }
                            }
                        }
                        return i -= r,
                        i === n || i % n === 0 && i / n >= 0
                    }
                     : function(t) {
                        var n = t;
                        switch (e) {
                        case "only":
                        case "first":
                            while (n = n.previousSibling) {
                                if (n.nodeType === 1) {
                                    return !1
                                }
                            }
                            if (e === "first") {
                                return !0
                            }
                            n = t;
                        case "last":
                            while (n = n.nextSibling) {
                                if (n.nodeType === 1) {
                                    return !1
                                }
                            }
                            return !0
                        }
                    }
                },
                PSEUDO: function(e, t) {
                    var n, r = i.pseudos[e] || i.setFilters[e.toLowerCase()] || nt.error("unsupported pseudo: " + e);
                    return r[d] ? r(t) : r.length > 1 ? (n = [e, e, "", t],
                    i.setFilters.hasOwnProperty(e.toLowerCase()) ? N(function(e, n) {
                        var i, s = r(e, t), o = s.length;
                        while (o--) {
                            i = T.call(e, s[o]),
                            e[i] = !(n[i] = s[o])
                        }
                    }) : function(e) {
                        return r(e, 0, n)
                    }
                    ) : r
                }
            },
            pseudos: {
                not: N(function(e) {
                    var t = []
                      , n = []
                      , r = a(e.replace(j, "$1"));
                    return r[d] ? N(function(e, t, n, i) {
                        var s, o = r(e, null , i, []), u = e.length;
                        while (u--) {
                            if (s = o[u]) {
                                e[u] = !(t[u] = s)
                            }
                        }
                    }) : function(e, i, s) {
                        return t[0] = e,
                        r(t, null , s, n),
                        !n.pop()
                    }
                }),
                has: N(function(e) {
                    return function(t) {
                        return nt(e, t).length > 0
                    }
                }),
                contains: N(function(e) {
                    return function(t) {
                        return (t.textContent || t.innerText || s(t)).indexOf(e) > -1
                    }
                }),
                enabled: function(e) {
                    return e.disabled === !1
                },
                disabled: function(e) {
                    return e.disabled === !0
                },
                checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return t === "input" && !!e.checked || t === "option" && !!e.selected
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex,
                    e.selected === !0
                },
                parent: function(e) {
                    return !i.pseudos.empty(e)
                },
                empty: function(e) {
                    var t;
                    e = e.firstChild;
                    while (e) {
                        if (e.nodeName > "@" || (t = e.nodeType) === 3 || t === 4) {
                            return !1
                        }
                        e = e.nextSibling
                    }
                    return !0
                },
                header: function(e) {
                    return X.test(e.nodeName)
                },
                text: function(e) {
                    var t, n;
                    return e.nodeName.toLowerCase() === "input" && (t = e.type) === "text" && ((n = e.getAttribute("type")) == null  || n.toLowerCase() === t)
                },
                radio: rt("radio"),
                checkbox: rt("checkbox"),
                file: rt("file"),
                password: rt("password"),
                image: rt("image"),
                submit: it("submit"),
                reset: it("reset"),
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return t === "input" && e.type === "button" || t === "button"
                },
                input: function(e) {
                    return V.test(e.nodeName)
                },
                focus: function(e) {
                    var t = e.ownerDocument;
                    return e === t.activeElement && (!t.hasFocus || t.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                },
                active: function(e) {
                    return e === e.ownerDocument.activeElement
                },
                first: st(function() {
                    return [0]
                }),
                last: st(function(e, t) {
                    return [t - 1]
                }),
                eq: st(function(e, t, n) {
                    return [n < 0 ? n + t : n]
                }),
                even: st(function(e, t) {
                    for (var n = 0; n < t; n += 2) {
                        e.push(n)
                    }
                    return e
                }),
                odd: st(function(e, t) {
                    for (var n = 1; n < t; n += 2) {
                        e.push(n)
                    }
                    return e
                }),
                lt: st(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; --r >= 0; ) {
                        e.push(r)
                    }
                    return e
                }),
                gt: st(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; ++r < t; ) {
                        e.push(r)
                    }
                    return e
                })
            }
        },
        f = y.compareDocumentPosition ? function(e, t) {
            return e === t ? (l = !0,
            0) : (!e.compareDocumentPosition || !t.compareDocumentPosition ? e.compareDocumentPosition : e.compareDocumentPosition(t) & 4) ? -1 : 1
        }
         : function(e, t) {
            if (e === t) {
                return l = !0,
                0
            }
            if (e.sourceIndex && t.sourceIndex) {
                return e.sourceIndex - t.sourceIndex
            }
            var n, r, i = [], s = [], o = e.parentNode, u = t.parentNode, a = o;
            if (o === u) {
                return ot(e, t)
            }
            if (!o) {
                return -1
            }
            if (!u) {
                return 1
            }
            while (a) {
                i.unshift(a),
                a = a.parentNode
            }
            a = u;
            while (a) {
                s.unshift(a),
                a = a.parentNode
            }
            n = i.length,
            r = s.length;
            for (var f = 0; f < n && f < r; f++) {
                if (i[f] !== s[f]) {
                    return ot(i[f], s[f])
                }
            }
            return f === n ? ot(e, s[f], -1) : ot(i[f], t, 1)
        }
        ,
        [0, 0].sort(f),
        h = !l,
        nt.uniqueSort = function(e) {
            var t, n = [], r = 1, i = 0;
            l = h,
            e.sort(f);
            if (l) {
                for (; t = e[r]; r++) {
                    t === e[r - 1] && (i = n.push(r))
                }
                while (i--) {
                    e.splice(n[i], 1)
                }
            }
            return e
        }
        ,
        nt.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        }
        ,
        a = nt.compile = function(e, t) {
            var n, r = [], i = [], s = A[d][e + " "];
            if (!s) {
                t || (t = ut(e)),
                n = t.length;
                while (n--) {
                    s = ht(t[n]),
                    s[d] ? r.push(s) : i.push(s)
                }
                s = A(e, pt(i, r))
            }
            return s
        }
        ,
        g.querySelectorAll && function() {
            var e, t = vt, n = /'|\\/g, r = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, i = [":focus"], s = [":active"], u = y.matchesSelector || y.mozMatchesSelector || y.webkitMatchesSelector || y.oMatchesSelector || y.msMatchesSelector;
            K(function(e) {
                e.innerHTML = "<select><option selected=''></option></select>",
                e.querySelectorAll("[selected]").length || i.push("\\[" + O + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),
                e.querySelectorAll(":checked").length || i.push(":checked")
            }),
            K(function(e) {
                e.innerHTML = "<p test=''></p>",
                e.querySelectorAll("[test^='']").length && i.push("[*^$]=" + O + "*(?:\"\"|'')"),
                e.innerHTML = "<input type='hidden'/>",
                e.querySelectorAll(":enabled").length || i.push(":enabled", ":disabled")
            }),
            i = new RegExp(i.join("|")),
            vt = function(e, r, s, o, u) {
                if (!o && !u && !i.test(e)) {
                    var a, f, l = !0, c = d, h = r, p = r.nodeType === 9 && e;
                    if (r.nodeType === 1 && r.nodeName.toLowerCase() !== "object") {
                        a = ut(e),
                        (l = r.getAttribute("id")) ? c = l.replace(n, "\\$&") : r.setAttribute("id", c),
                        c = "[id='" + c + "'] ",
                        f = a.length;
                        while (f--) {
                            a[f] = c + a[f].join("")
                        }
                        h = z.test(e) && r.parentNode || r,
                        p = a.join(",")
                    }
                    if (p) {
                        try {
                            return S.apply(s, x.call(h.querySelectorAll(p), 0)),
                            s
                        } catch (v) {} finally {
                            l || r.removeAttribute("id")
                        }
                    }
                }
                return t(e, r, s, o, u)
            }
            ,
            u && (K(function(t) {
                e = u.call(t, "div");
                try {
                    u.call(t, "[test!='']:sizzle"),
                    s.push("!=", H)
                } catch (n) {}
            }),
            s = new RegExp(s.join("|")),
            nt.matchesSelector = function(t, n) {
                n = n.replace(r, "='$1']");
                if (!o(t) && !s.test(n) && !i.test(n)) {
                    try {
                        var a = u.call(t, n);
                        if (a || e || t.document && t.document.nodeType !== 11) {
                            return a
                        }
                    } catch (f) {}
                }
                return nt(n, null , null , [t]).length > 0
            }
            )
        }(),
        i.pseudos.nth = i.pseudos.eq,
        i.filters = mt.prototype = i.pseudos,
        i.setFilters = new mt,
        nt.attr = v.attr,
        v.find = nt,
        v.expr = nt.selectors,
        v.expr[":"] = v.expr.pseudos,
        v.unique = nt.uniqueSort,
        v.text = nt.getText,
        v.isXMLDoc = nt.isXML,
        v.contains = nt.contains
    }(e);
    var nt = /Until$/
      , rt = /^(?:parents|prev(?:Until|All))/
      , it = /^.[^:#\[\.,]*$/
      , st = v.expr.match.needsContext
      , ot = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    v.fn.extend({
        find: function(e) {
            var t, n, r, i, s, o, u = this;
            if (typeof e != "string") {
                return v(e).filter(function() {
                    for (t = 0,
                    n = u.length; t < n; t++) {
                        if (v.contains(u[t], this)) {
                            return !0
                        }
                    }
                })
            }
            o = this.pushStack("", "find", e);
            for (t = 0,
            n = this.length; t < n; t++) {
                r = o.length,
                v.find(e, this[t], o);
                if (t > 0) {
                    for (i = r; i < o.length; i++) {
                        for (s = 0; s < r; s++) {
                            if (o[s] === o[i]) {
                                o.splice(i--, 1);
                                break
                            }
                        }
                    }
                }
            }
            return o
        },
        has: function(e) {
            var t, n = v(e, this), r = n.length;
            return this.filter(function() {
                for (t = 0; t < r; t++) {
                    if (v.contains(this, n[t])) {
                        return !0
                    }
                }
            })
        },
        not: function(e) {
            return this.pushStack(ft(this, e, !1), "not", e)
        },
        filter: function(e) {
            return this.pushStack(ft(this, e, !0), "filter", e)
        },
        is: function(e) {
            return !!e && (typeof e == "string" ? st.test(e) ? v(e, this.context).index(this[0]) >= 0 : v.filter(e, this).length > 0 : this.filter(e).length > 0)
        },
        closest: function(e, t) {
            var n, r = 0, i = this.length, s = [], o = st.test(e) || typeof e != "string" ? v(e, t || this.context) : 0;
            for (; r < i; r++) {
                n = this[r];
                while (n && n.ownerDocument && n !== t && n.nodeType !== 11) {
                    if (o ? o.index(n) > -1 : v.find.matchesSelector(n, e)) {
                        s.push(n);
                        break
                    }
                    n = n.parentNode
                }
            }
            return s = s.length > 1 ? v.unique(s) : s,
            this.pushStack(s, "closest", e)
        },
        index: function(e) {
            return e ? typeof e == "string" ? v.inArray(this[0], v(e)) : v.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1
        },
        add: function(e, t) {
            var n = typeof e == "string" ? v(e, t) : v.makeArray(e && e.nodeType ? [e] : e)
              , r = v.merge(this.get(), n);
            return this.pushStack(ut(n[0]) || ut(r[0]) ? r : v.unique(r))
        },
        addBack: function(e) {
            return this.add(e == null  ? this.prevObject : this.prevObject.filter(e))
        }
    }),
    v.fn.andSelf = v.fn.addBack,
    v.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && t.nodeType !== 11 ? t : null 
        },
        parents: function(e) {
            return v.dir(e, "parentNode")
        },
        parentsUntil: function(e, t, n) {
            return v.dir(e, "parentNode", n)
        },
        next: function(e) {
            return at(e, "nextSibling")
        },
        prev: function(e) {
            return at(e, "previousSibling")
        },
        nextAll: function(e) {
            return v.dir(e, "nextSibling")
        },
        prevAll: function(e) {
            return v.dir(e, "previousSibling")
        },
        nextUntil: function(e, t, n) {
            return v.dir(e, "nextSibling", n)
        },
        prevUntil: function(e, t, n) {
            return v.dir(e, "previousSibling", n)
        },
        siblings: function(e) {
            return v.sibling((e.parentNode || {}).firstChild, e)
        },
        children: function(e) {
            return v.sibling(e.firstChild)
        },
        contents: function(e) {
            return v.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : v.merge([], e.childNodes)
        }
    }, function(e, t) {
        v.fn[e] = function(n, r) {
            var i = v.map(this, t, n);
            return nt.test(e) || (r = n),
            r && typeof r == "string" && (i = v.filter(r, i)),
            i = this.length > 1 && !ot[e] ? v.unique(i) : i,
            this.length > 1 && rt.test(e) && (i = i.reverse()),
            this.pushStack(i, e, l.call(arguments).join(","))
        }
    }),
    v.extend({
        filter: function(e, t, n) {
            return n && (e = ":not(" + e + ")"),
            t.length === 1 ? v.find.matchesSelector(t[0], e) ? [t[0]] : [] : v.find.matches(e, t)
        },
        dir: function(e, n, r) {
            var i = []
              , s = e[n];
            while (s && s.nodeType !== 9 && (r === t || s.nodeType !== 1 || !v(s).is(r))) {
                s.nodeType === 1 && i.push(s),
                s = s[n]
            }
            return i
        },
        sibling: function(e, t) {
            var n = [];
            for (; e; e = e.nextSibling) {
                e.nodeType === 1 && e !== t && n.push(e)
            }
            return n
        }
    });
    var ct = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video"
      , ht = / jQuery\d+="(?:null|\d+)"/g
      , pt = /^\s+/
      , dt = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , vt = /<([\w:]+)/
      , mt = /<tbody/i
      , gt = /<|&#?\w+;/
      , yt = /<(?:script|style|link)/i
      , bt = /<(?:script|object|embed|option|style)/i
      , wt = new RegExp("<(?:" + ct + ")[\\s/>]","i")
      , Et = /^(?:checkbox|radio)$/
      , St = /checked\s*(?:[^=]|=\s*.checked.)/i
      , xt = /\/(java|ecma)script/i
      , Tt = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g
      , Nt = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
    }
      , Ct = lt(i)
      , kt = Ct.appendChild(i.createElement("div"));
    Nt.optgroup = Nt.option,
    Nt.tbody = Nt.tfoot = Nt.colgroup = Nt.caption = Nt.thead,
    Nt.th = Nt.td,
    v.support.htmlSerialize || (Nt._default = [1, "X<div>", "</div>"]),
    v.fn.extend({
        text: function(e) {
            return v.access(this, function(e) {
                return e === t ? v.text(this) : this.empty().append((this[0] && this[0].ownerDocument || i).createTextNode(e))
            }, null , e, arguments.length)
        },
        wrapAll: function(e) {
            if (v.isFunction(e)) {
                return this.each(function(t) {
                    v(this).wrapAll(e.call(this, t))
                })
            }
            if (this[0]) {
                var t = v(e, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && t.insertBefore(this[0]),
                t.map(function() {
                    var e = this;
                    while (e.firstChild && e.firstChild.nodeType === 1) {
                        e = e.firstChild
                    }
                    return e
                }).append(this)
            }
            return this
        },
        wrapInner: function(e) {
            return v.isFunction(e) ? this.each(function(t) {
                v(this).wrapInner(e.call(this, t))
            }) : this.each(function() {
                var t = v(this)
                  , n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e)
            })
        },
        wrap: function(e) {
            var t = v.isFunction(e);
            return this.each(function(n) {
                v(this).wrapAll(t ? e.call(this, n) : e)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                v.nodeName(this, "body") || v(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(e) {
                (this.nodeType === 1 || this.nodeType === 11) && this.appendChild(e)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(e) {
                (this.nodeType === 1 || this.nodeType === 11) && this.insertBefore(e, this.firstChild)
            })
        },
        before: function() {
            if (!ut(this[0])) {
                return this.domManip(arguments, !1, function(e) {
                    this.parentNode.insertBefore(e, this)
                })
            }
            if (arguments.length) {
                var e = v.clean(arguments);
                return this.pushStack(v.merge(e, this), "before", this.selector)
            }
        },
        after: function() {
            if (!ut(this[0])) {
                return this.domManip(arguments, !1, function(e) {
                    this.parentNode.insertBefore(e, this.nextSibling)
                })
            }
            if (arguments.length) {
                var e = v.clean(arguments);
                return this.pushStack(v.merge(this, e), "after", this.selector)
            }
        },
        remove: function(e, t) {
            var n, r = 0;
            for (; (n = this[r]) != null ; r++) {
                if (!e || v.filter(e, [n]).length) {
                    !t && n.nodeType === 1 && (v.cleanData(n.getElementsByTagName("*")),
                    v.cleanData([n])),
                    n.parentNode && n.parentNode.removeChild(n)
                }
            }
            return this
        },
        empty: function() {
            var e, t = 0;
            for (; (e = this[t]) != null ; t++) {
                e.nodeType === 1 && v.cleanData(e.getElementsByTagName("*"));
                while (e.firstChild) {
                    e.removeChild(e.firstChild)
                }
            }
            return this
        },
        clone: function(e, t) {
            return e = e == null  ? !1 : e,
            t = t == null  ? e : t,
            this.map(function() {
                return v.clone(this, e, t)
            })
        },
        html: function(e) {
            return v.access(this, function(e) {
                var n = this[0] || {}
                  , r = 0
                  , i = this.length;
                if (e === t) {
                    return n.nodeType === 1 ? n.innerHTML.replace(ht, "") : t
                }
                if (typeof e == "string" && !yt.test(e) && (v.support.htmlSerialize || !wt.test(e)) && (v.support.leadingWhitespace || !pt.test(e)) && !Nt[(vt.exec(e) || ["", ""])[1].toLowerCase()]) {
                    e = e.replace(dt, "<$1></$2>");
                    try {
                        for (; r < i; r++) {
                            n = this[r] || {},
                            n.nodeType === 1 && (v.cleanData(n.getElementsByTagName("*")),
                            n.innerHTML = e)
                        }
                        n = 0
                    } catch (s) {}
                }
                n && this.empty().append(e)
            }, null , e, arguments.length)
        },
        replaceWith: function(e) {
            return ut(this[0]) ? this.length ? this.pushStack(v(v.isFunction(e) ? e() : e), "replaceWith", e) : this : v.isFunction(e) ? this.each(function(t) {
                var n = v(this)
                  , r = n.html();
                n.replaceWith(e.call(this, t, r))
            }) : (typeof e != "string" && (e = v(e).detach()),
            this.each(function() {
                var t = this.nextSibling
                  , n = this.parentNode;
                v(this).remove(),
                t ? v(t).before(e) : v(n).append(e)
            }))
        },
        detach: function(e) {
            return this.remove(e, !0)
        },
        domManip: function(e, n, r) {
            e = [].concat.apply([], e);
            var i, s, o, u, a = 0, f = e[0], l = [], c = this.length;
            if (!v.support.checkClone && c > 1 && typeof f == "string" && St.test(f)) {
                return this.each(function() {
                    v(this).domManip(e, n, r)
                })
            }
            if (v.isFunction(f)) {
                return this.each(function(i) {
                    var s = v(this);
                    e[0] = f.call(this, i, n ? s.html() : t),
                    s.domManip(e, n, r)
                })
            }
            if (this[0]) {
                i = v.buildFragment(e, this, l),
                o = i.fragment,
                s = o.firstChild,
                o.childNodes.length === 1 && (o = s);
                if (s) {
                    n = n && v.nodeName(s, "tr");
                    for (u = i.cacheable || c - 1; a < c; a++) {
                        r.call(n && v.nodeName(this[a], "table") ? Lt(this[a], "tbody") : this[a], a === u ? o : v.clone(o, !0, !0))
                    }
                }
                o = s = null ,
                l.length && v.each(l, function(e, t) {
                    t.src ? v.ajax ? v.ajax({
                        url: t.src,
                        type: "GET",
                        dataType: "script",
                        async: !1,
                        global: !1,
                        "throws": !0
                    }) : v.error("no ajax") : v.globalEval((t.text || t.textContent || t.innerHTML || "").replace(Tt, "")),
                    t.parentNode && t.parentNode.removeChild(t)
                })
            }
            return this
        }
    }),
    v.buildFragment = function(e, n, r) {
        var s, o, u, a = e[0];
        return n = n || i,
        n = !n.nodeType && n[0] || n,
        n = n.ownerDocument || n,
        e.length === 1 && typeof a == "string" && a.length < 512 && n === i && a.charAt(0) === "<" && !bt.test(a) && (v.support.checkClone || !St.test(a)) && (v.support.html5Clone || !wt.test(a)) && (o = !0,
        s = v.fragments[a],
        u = s !== t),
        s || (s = n.createDocumentFragment(),
        v.clean(e, n, s, r),
        o && (v.fragments[a] = u && s)),
        {
            fragment: s,
            cacheable: o
        }
    }
    ,
    v.fragments = {},
    v.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, t) {
        v.fn[e] = function(n) {
            var r, i = 0, s = [], o = v(n), u = o.length, a = this.length === 1 && this[0].parentNode;
            if ((a == null  || a && a.nodeType === 11 && a.childNodes.length === 1) && u === 1) {
                return o[t](this[0]),
                this
            }
            for (; i < u; i++) {
                r = (i > 0 ? this.clone(!0) : this).get(),
                v(o[i])[t](r),
                s = s.concat(r)
            }
            return this.pushStack(s, e, o.selector)
        }
    }),
    v.extend({
        clone: function(e, t, n) {
            var r, i, s, o;
            v.support.html5Clone || v.isXMLDoc(e) || !wt.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (kt.innerHTML = e.outerHTML,
            kt.removeChild(o = kt.firstChild));
            if ((!v.support.noCloneEvent || !v.support.noCloneChecked) && (e.nodeType === 1 || e.nodeType === 11) && !v.isXMLDoc(e)) {
                Ot(e, o),
                r = Mt(e),
                i = Mt(o);
                for (s = 0; r[s]; ++s) {
                    i[s] && Ot(r[s], i[s])
                }
            }
            if (t) {
                At(e, o);
                if (n) {
                    r = Mt(e),
                    i = Mt(o);
                    for (s = 0; r[s]; ++s) {
                        At(r[s], i[s])
                    }
                }
            }
            return r = i = null ,
            o
        },
        clean: function(e, t, n, r) {
            var s, o, u, a, f, l, c, h, p, d, m, g, y = t === i && Ct, b = [];
            if (!t || typeof t.createDocumentFragment == "undefined") {
                t = i
            }
            for (s = 0; (u = e[s]) != null ; s++) {
                typeof u == "number" && (u += "");
                if (!u) {
                    continue
                }
                if (typeof u == "string") {
                    if (!gt.test(u)) {
                        u = t.createTextNode(u)
                    } else {
                        y = y || lt(t),
                        c = t.createElement("div"),
                        y.appendChild(c),
                        u = u.replace(dt, "<$1></$2>"),
                        a = (vt.exec(u) || ["", ""])[1].toLowerCase(),
                        f = Nt[a] || Nt._default,
                        l = f[0],
                        c.innerHTML = f[1] + u + f[2];
                        while (l--) {
                            c = c.lastChild
                        }
                        if (!v.support.tbody) {
                            h = mt.test(u),
                            p = a === "table" && !h ? c.firstChild && c.firstChild.childNodes : f[1] === "<table>" && !h ? c.childNodes : [];
                            for (o = p.length - 1; o >= 0; --o) {
                                v.nodeName(p[o], "tbody") && !p[o].childNodes.length && p[o].parentNode.removeChild(p[o])
                            }
                        }
                        !v.support.leadingWhitespace && pt.test(u) && c.insertBefore(t.createTextNode(pt.exec(u)[0]), c.firstChild),
                        u = c.childNodes,
                        c.parentNode.removeChild(c)
                    }
                }
                u.nodeType ? b.push(u) : v.merge(b, u)
            }
            c && (u = c = y = null );
            if (!v.support.appendChecked) {
                for (s = 0; (u = b[s]) != null ; s++) {
                    v.nodeName(u, "input") ? _t(u) : typeof u.getElementsByTagName != "undefined" && v.grep(u.getElementsByTagName("input"), _t)
                }
            }
            if (n) {
                m = function(e) {
                    if (!e.type || xt.test(e.type)) {
                        return r ? r.push(e.parentNode ? e.parentNode.removeChild(e) : e) : n.appendChild(e)
                    }
                }
                ;
                for (s = 0; (u = b[s]) != null ; s++) {
                    if (!v.nodeName(u, "script") || !m(u)) {
                        n.appendChild(u),
                        typeof u.getElementsByTagName != "undefined" && (g = v.grep(v.merge([], u.getElementsByTagName("script")), m),
                        b.splice.apply(b, [s + 1, 0].concat(g)),
                        s += g.length)
                    }
                }
            }
            return b
        },
        cleanData: function(e, t) {
            var n, r, i, s, o = 0, u = v.expando, a = v.cache, f = v.support.deleteExpando, l = v.event.special;
            for (; (i = e[o]) != null ; o++) {
                if (t || v.acceptData(i)) {
                    r = i[u],
                    n = r && a[r];
                    if (n) {
                        if (n.events) {
                            for (s in n.events) {
                                l[s] ? v.event.remove(i, s) : v.removeEvent(i, s, n.handle)
                            }
                        }
                        a[r] && (delete a[r],
                        f ? delete i[u] : i.removeAttribute ? i.removeAttribute(u) : i[u] = null ,
                        v.deletedIds.push(r))
                    }
                }
            }
        }
    }),
    function() {
        var e, t;
        v.uaMatch = function(e) {
            e = e.toLowerCase();
            var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
            return {
                browser: t[1] || "",
                version: t[2] || "0"
            }
        }
        ,
        e = v.uaMatch(o.userAgent),
        t = {},
        e.browser && (t[e.browser] = !0,
        t.version = e.version),
        t.chrome ? t.webkit = !0 : t.webkit && (t.safari = !0),
        v.browser = t,
        v.sub = function() {
            function e(t, n) {
                return new e.fn.init(t,n)
            }
            v.extend(!0, e, this),
            e.superclass = this,
            e.fn = e.prototype = this(),
            e.fn.constructor = e,
            e.sub = this.sub,
            e.fn.init = function(r, i) {
                return i && i instanceof v && !(i instanceof e) && (i = e(i)),
                v.fn.init.call(this, r, i, t)
            }
            ,
            e.fn.init.prototype = e.fn;
            var t = e(i);
            return e
        }
    }();
    var Dt, Pt, Ht, Bt = /alpha\([^)]*\)/i, jt = /opacity=([^)]*)/, Ft = /^(top|right|bottom|left)$/, It = /^(none|table(?!-c[ea]).+)/, qt = /^margin/, Rt = new RegExp("^(" + m + ")(.*)$","i"), Ut = new RegExp("^(" + m + ")(?!px)[a-z%]+$","i"), zt = new RegExp("^([-+])=(" + m + ")","i"), Wt = {
        BODY: "block"
    }, Xt = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, Vt = {
        letterSpacing: 0,
        fontWeight: 400
    }, $t = ["Top", "Right", "Bottom", "Left"], Jt = ["Webkit", "O", "Moz", "ms"], Kt = v.fn.toggle;
    v.fn.extend({
        css: function(e, n) {
            return v.access(this, function(e, n, r) {
                return r !== t ? v.style(e, n, r) : v.css(e, n)
            }, e, n, arguments.length > 1)
        },
        show: function() {
            return Yt(this, !0)
        },
        hide: function() {
            return Yt(this)
        },
        toggle: function(e, t) {
            var n = typeof e == "boolean";
            return v.isFunction(e) && v.isFunction(t) ? Kt.apply(this, arguments) : this.each(function() {
                (n ? e : Gt(this)) ? v(this).show() : v(this).hide()
            })
        }
    }),
    v.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = Dt(e, "opacity");
                        return n === "" ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": v.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(e, n, r, i) {
            if (!e || e.nodeType === 3 || e.nodeType === 8 || !e.style) {
                return
            }
            var s, o, u, a = v.camelCase(n), f = e.style;
            n = v.cssProps[a] || (v.cssProps[a] = Qt(f, a)),
            u = v.cssHooks[n] || v.cssHooks[a];
            if (r === t) {
                return u && "get" in u && (s = u.get(e, !1, i)) !== t ? s : f[n]
            }
            o = typeof r,
            o === "string" && (s = zt.exec(r)) && (r = (s[1] + 1) * s[2] + parseFloat(v.css(e, n)),
            o = "number");
            if (r == null  || o === "number" && isNaN(r)) {
                return
            }
            o === "number" && !v.cssNumber[a] && (r += "px");
            if (!u || !("set" in u) || (r = u.set(e, r, i)) !== t) {
                try {
                    f[n] = r
                } catch (l) {}
            }
        },
        css: function(e, n, r, i) {
            var s, o, u, a = v.camelCase(n);
            return n = v.cssProps[a] || (v.cssProps[a] = Qt(e.style, a)),
            u = v.cssHooks[n] || v.cssHooks[a],
            u && "get" in u && (s = u.get(e, !0, i)),
            s === t && (s = Dt(e, n)),
            s === "normal" && n in Vt && (s = Vt[n]),
            r || i !== t ? (o = parseFloat(s),
            r || v.isNumeric(o) ? o || 0 : s) : s
        },
        swap: function(e, t, n) {
            var r, i, s = {};
            for (i in t) {
                s[i] = e.style[i],
                e.style[i] = t[i]
            }
            r = n.call(e);
            for (i in t) {
                e.style[i] = s[i]
            }
            return r
        }
    }),
    e.getComputedStyle ? Dt = function(t, n) {
        var r, i, s, o, u = e.getComputedStyle(t, null ), a = t.style;
        return u && (r = u.getPropertyValue(n) || u[n],
        r === "" && !v.contains(t.ownerDocument, t) && (r = v.style(t, n)),
        Ut.test(r) && qt.test(n) && (i = a.width,
        s = a.minWidth,
        o = a.maxWidth,
        a.minWidth = a.maxWidth = a.width = r,
        r = u.width,
        a.width = i,
        a.minWidth = s,
        a.maxWidth = o)),
        r
    }
     : i.documentElement.currentStyle && (Dt = function(e, t) {
        var n, r, i = e.currentStyle && e.currentStyle[t], s = e.style;
        return i == null  && s && s[t] && (i = s[t]),
        Ut.test(i) && !Ft.test(t) && (n = s.left,
        r = e.runtimeStyle && e.runtimeStyle.left,
        r && (e.runtimeStyle.left = e.currentStyle.left),
        s.left = t === "fontSize" ? "1em" : i,
        i = s.pixelLeft + "px",
        s.left = n,
        r && (e.runtimeStyle.left = r)),
        i === "" ? "auto" : i
    }
    ),
    v.each(["height", "width"], function(e, t) {
        v.cssHooks[t] = {
            get: function(e, n, r) {
                if (n) {
                    return e.offsetWidth === 0 && It.test(Dt(e, "display")) ? v.swap(e, Xt, function() {
                        return tn(e, t, r)
                    }) : tn(e, t, r)
                }
            },
            set: function(e, n, r) {
                return Zt(e, n, r ? en(e, t, r, v.support.boxSizing && v.css(e, "boxSizing") === "border-box") : 0)
            }
        }
    }),
    v.support.opacity || (v.cssHooks.opacity = {
        get: function(e, t) {
            return jt.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? 0.01 * parseFloat(RegExp.$1) + "" : t ? "1" : ""
        },
        set: function(e, t) {
            var n = e.style
              , r = e.currentStyle
              , i = v.isNumeric(t) ? "alpha(opacity=" + t * 100 + ")" : ""
              , s = r && r.filter || n.filter || "";
            n.zoom = 1;
            if (t >= 1 && v.trim(s.replace(Bt, "")) === "" && n.removeAttribute) {
                n.removeAttribute("filter");
                if (r && !r.filter) {
                    return
                }
            }
            n.filter = Bt.test(s) ? s.replace(Bt, i) : s + " " + i
        }
    }),
    v(function() {
        v.support.reliableMarginRight || (v.cssHooks.marginRight = {
            get: function(e, t) {
                return v.swap(e, {
                    display: "inline-block"
                }, function() {
                    if (t) {
                        return Dt(e, "marginRight")
                    }
                })
            }
        }),
        !v.support.pixelPosition && v.fn.position && v.each(["top", "left"], function(e, t) {
            v.cssHooks[t] = {
                get: function(e, n) {
                    if (n) {
                        var r = Dt(e, t);
                        return Ut.test(r) ? v(e).position()[t] + "px" : r
                    }
                }
            }
        })
    }),
    v.expr && v.expr.filters && (v.expr.filters.hidden = function(e) {
        return e.offsetWidth === 0 && e.offsetHeight === 0 || !v.support.reliableHiddenOffsets && (e.style && e.style.display || Dt(e, "display")) === "none"
    }
    ,
    v.expr.filters.visible = function(e) {
        return !v.expr.filters.hidden(e)
    }
    ),
    v.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(e, t) {
        v.cssHooks[e + t] = {
            expand: function(n) {
                var r, i = typeof n == "string" ? n.split(" ") : [n], s = {};
                for (r = 0; r < 4; r++) {
                    s[e + $t[r] + t] = i[r] || i[r - 2] || i[0]
                }
                return s
            }
        },
        qt.test(e) || (v.cssHooks[e + t].set = Zt)
    });
    var rn = /%20/g
      , sn = /\[\]$/
      , on = /\r?\n/g
      , un = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i
      , an = /^(?:select|textarea)/i;
    v.fn.extend({
        serialize: function() {
            return v.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? v.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || an.test(this.nodeName) || un.test(this.type))
            }).map(function(e, t) {
                var n = v(this).val();
                return n == null  ? null  : v.isArray(n) ? v.map(n, function(e, n) {
                    return {
                        name: t.name,
                        value: e.replace(on, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace(on, "\r\n")
                }
            }).get()
        }
    }),
    v.param = function(e, n) {
        var r, i = [], s = function(e, t) {
            t = v.isFunction(t) ? t() : t == null  ? "" : t,
            i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t)
        }
        ;
        n === t && (n = v.ajaxSettings && v.ajaxSettings.traditional);
        if (v.isArray(e) || e.jquery && !v.isPlainObject(e)) {
            v.each(e, function() {
                s(this.name, this.value)
            })
        } else {
            for (r in e) {
                fn(r, e[r], n, s)
            }
        }
        return i.join("&").replace(rn, "+")
    }
    ;
    var ln, cn, hn = /#.*$/, pn = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, dn = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/, vn = /^(?:GET|HEAD)$/, mn = /^\/\//, gn = /\?/, yn = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, bn = /([?&])_=[^&]*/, wn = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, En = v.fn.load, Sn = {}, xn = {}, Tn = ["*/"] + ["*"];
    try {
        cn = s.href
    } catch (Nn) {
        cn = i.createElement("a"),
        cn.href = "",
        cn = cn.href
    }
    ln = wn.exec(cn.toLowerCase()) || [],
    v.fn.load = function(e, n, r) {
        if (typeof e != "string" && En) {
            return En.apply(this, arguments)
        }
        if (!this.length) {
            return this
        }
        var i, s, o, u = this, a = e.indexOf(" ");
        return a >= 0 && (i = e.slice(a, e.length),
        e = e.slice(0, a)),
        v.isFunction(n) ? (r = n,
        n = t) : n && typeof n == "object" && (s = "POST"),
        v.ajax({
            url: e,
            type: s,
            dataType: "html",
            data: n,
            complete: function(e, t) {
                r && u.each(r, o || [e.responseText, t, e])
            }
        }).done(function(e) {
            o = arguments,
            u.html(i ? v("<div>").append(e.replace(yn, "")).find(i) : e)
        }),
        this
    }
    ,
    v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(e, t) {
        v.fn[t] = function(e) {
            return this.on(t, e)
        }
    }),
    v.each(["get", "post"], function(e, n) {
        v[n] = function(e, r, i, s) {
            return v.isFunction(r) && (s = s || i,
            i = r,
            r = t),
            v.ajax({
                type: n,
                url: e,
                data: r,
                success: i,
                dataType: s
            })
        }
    }),
    v.extend({
        getScript: function(e, n) {
            return v.get(e, t, n, "script")
        },
        getJSON: function(e, t, n) {
            return v.get(e, t, n, "json")
        },
        ajaxSetup: function(e, t) {
            return t ? Ln(e, v.ajaxSettings) : (t = e,
            e = v.ajaxSettings),
            Ln(e, t),
            e
        },
        ajaxSettings: {
            url: cn,
            isLocal: dn.test(ln[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": Tn
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": e.String,
                "text html": !0,
                "text json": v.parseJSON,
                "text xml": v.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: Cn(Sn),
        ajaxTransport: Cn(xn),
        ajax: function(e, n) {
            function T(e, n, s, a) {
                var l, y, b, w, S, T = n;
                if (E === 2) {
                    return
                }
                E = 2,
                u && clearTimeout(u),
                o = t,
                i = a || "",
                x.readyState = e > 0 ? 4 : 0,
                s && (w = An(c, x, s));
                if (e >= 200 && e < 300 || e === 304) {
                    c.ifModified && (S = x.getResponseHeader("Last-Modified"),
                    S && (v.lastModified[r] = S),
                    S = x.getResponseHeader("Etag"),
                    S && (v.etag[r] = S)),
                    e === 304 ? (T = "notmodified",
                    l = !0) : (l = On(c, w),
                    T = l.state,
                    y = l.data,
                    b = l.error,
                    l = !b)
                } else {
                    b = T;
                    if (!T || e) {
                        T = "error",
                        e < 0 && (e = 0)
                    }
                }
                x.status = e,
                x.statusText = (n || T) + "",
                l ? d.resolveWith(h, [y, T, x]) : d.rejectWith(h, [x, T, b]),
                x.statusCode(g),
                g = t,
                f && p.trigger("ajax" + (l ? "Success" : "Error"), [x, c, l ? y : b]),
                m.fireWith(h, [x, T]),
                f && (p.trigger("ajaxComplete", [x, c]),
                --v.active || v.event.trigger("ajaxStop"))
            }
            typeof e == "object" && (n = e,
            e = t),
            n = n || {};
            var r, i, s, o, u, a, f, l, c = v.ajaxSetup({}, n), h = c.context || c, p = h !== c && (h.nodeType || h instanceof v) ? v(h) : v.event, d = v.Deferred(), m = v.Callbacks("once memory"), g = c.statusCode || {}, b = {}, w = {}, E = 0, S = "canceled", x = {
                readyState: 0,
                setRequestHeader: function(e, t) {
                    if (!E) {
                        var n = e.toLowerCase();
                        e = w[n] = w[n] || e,
                        b[e] = t
                    }
                    return this
                },
                getAllResponseHeaders: function() {
                    return E === 2 ? i : null 
                },
                getResponseHeader: function(e) {
                    var n;
                    if (E === 2) {
                        if (!s) {
                            s = {};
                            while (n = pn.exec(i)) {
                                s[n[1].toLowerCase()] = n[2]
                            }
                        }
                        n = s[e.toLowerCase()]
                    }
                    return n === t ? null  : n
                },
                overrideMimeType: function(e) {
                    return E || (c.mimeType = e),
                    this
                },
                abort: function(e) {
                    return e = e || S,
                    o && o.abort(e),
                    T(0, e),
                    this
                }
            };
            d.promise(x),
            x.success = x.done,
            x.error = x.fail,
            x.complete = m.add,
            x.statusCode = function(e) {
                if (e) {
                    var t;
                    if (E < 2) {
                        for (t in e) {
                            g[t] = [g[t], e[t]]
                        }
                    } else {
                        t = e[x.status],
                        x.always(t)
                    }
                }
                return this
            }
            ,
            c.url = ((e || c.url) + "").replace(hn, "").replace(mn, ln[1] + "//"),
            c.dataTypes = v.trim(c.dataType || "*").toLowerCase().split(y),
            c.crossDomain == null  && (a = wn.exec(c.url.toLowerCase()),
            c.crossDomain = !(!a || a[1] === ln[1] && a[2] === ln[2] && (a[3] || (a[1] === "http:" ? 80 : 443)) == (ln[3] || (ln[1] === "http:" ? 80 : 443)))),
            c.data && c.processData && typeof c.data != "string" && (c.data = v.param(c.data, c.traditional)),
            kn(Sn, c, n, x);
            if (E === 2) {
                return x
            }
            f = c.global,
            c.type = c.type.toUpperCase(),
            c.hasContent = !vn.test(c.type),
            f && v.active++ === 0 && v.event.trigger("ajaxStart");
            if (!c.hasContent) {
                c.data && (c.url += (gn.test(c.url) ? "&" : "?") + c.data,
                delete c.data),
                r = c.url;
                if (c.cache === !1) {
                    var N = v.now()
                      , C = c.url.replace(bn, "$1_=" + N);
                    c.url = C + (C === c.url ? (gn.test(c.url) ? "&" : "?") + "_=" + N : "")
                }
            }
            (c.data && c.hasContent && c.contentType !== !1 || n.contentType) && x.setRequestHeader("Content-Type", c.contentType),
            c.ifModified && (r = r || c.url,
            v.lastModified[r] && x.setRequestHeader("If-Modified-Since", v.lastModified[r]),
            v.etag[r] && x.setRequestHeader("If-None-Match", v.etag[r])),
            x.setRequestHeader("Accept", c.dataTypes[0] && c.accepts[c.dataTypes[0]] ? c.accepts[c.dataTypes[0]] + (c.dataTypes[0] !== "*" ? ", " + Tn + "; q=0.01" : "") : c.accepts["*"]);
            for (l in c.headers) {
                x.setRequestHeader(l, c.headers[l])
            }
            if (!c.beforeSend || c.beforeSend.call(h, x, c) !== !1 && E !== 2) {
                S = "abort";
                for (l in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) {
                    x[l](c[l])
                }
                o = kn(xn, c, n, x);
                if (!o) {
                    T(-1, "No Transport")
                } else {
                    x.readyState = 1,
                    f && p.trigger("ajaxSend", [x, c]),
                    c.async && c.timeout > 0 && (u = setTimeout(function() {
                        x.abort("timeout")
                    }, c.timeout));
                    try {
                        E = 1,
                        o.send(b, T)
                    } catch (k) {
                        if (!(E < 2)) {
                            throw k
                        }
                        T(-1, k)
                    }
                }
                return x
            }
            return x.abort()
        },
        active: 0,
        lastModified: {},
        etag: {}
    });
    var Mn = []
      , _n = /\?/
      , Dn = /(=)\?(?=&|$)|\?\?/
      , Pn = v.now();
    v.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Mn.pop() || v.expando + "_" + Pn++;
            return this[e] = !0,
            e
        }
    }),
    v.ajaxPrefilter("json jsonp", function(n, r, i) {
        var s, o, u, a = n.data, f = n.url, l = n.jsonp !== !1, c = l && Dn.test(f), h = l && !c && typeof a == "string" && !(n.contentType || "").indexOf("application/x-www-form-urlencoded") && Dn.test(a);
        if (n.dataTypes[0] === "jsonp" || c || h) {
            return s = n.jsonpCallback = v.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback,
            o = e[s],
            c ? n.url = f.replace(Dn, "$1" + s) : h ? n.data = a.replace(Dn, "$1" + s) : l && (n.url += (_n.test(f) ? "&" : "?") + n.jsonp + "=" + s),
            n.converters["script json"] = function() {
                return u || v.error(s + " was not called"),
                u[0]
            }
            ,
            n.dataTypes[0] = "json",
            e[s] = function() {
                u = arguments
            }
            ,
            i.always(function() {
                e[s] = o,
                n[s] && (n.jsonpCallback = r.jsonpCallback,
                Mn.push(s)),
                u && v.isFunction(o) && o(u[0]),
                u = o = t
            }),
            "script"
        }
    }),
    v.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(e) {
                return v.globalEval(e),
                e
            }
        }
    }),
    v.ajaxPrefilter("script", function(e) {
        e.cache === t && (e.cache = !1),
        e.crossDomain && (e.type = "GET",
        e.global = !1)
    }),
    v.ajaxTransport("script", function(e) {
        if (e.crossDomain) {
            var n, r = i.head || i.getElementsByTagName("head")[0] || i.documentElement;
            return {
                send: function(s, o) {
                    n = i.createElement("script"),
                    n.async = "async",
                    e.scriptCharset && (n.charset = e.scriptCharset),
                    n.src = e.url,
                    n.onload = n.onreadystatechange = function(e, i) {
                        if (i || !n.readyState || /loaded|complete/.test(n.readyState)) {
                            n.onload = n.onreadystatechange = null ,
                            r && n.parentNode && r.removeChild(n),
                            n = t,
                            i || o(200, "success")
                        }
                    }
                    ,
                    r.insertBefore(n, r.firstChild)
                },
                abort: function() {
                    n && n.onload(0, 1)
                }
            }
        }
    });
    var Hn, Bn = e.ActiveXObject ? function() {
        for (var e in Hn) {
            Hn[e](0, 1)
        }
    }
     : !1, jn = 0;
    v.ajaxSettings.xhr = e.ActiveXObject ? function() {
        return !this.isLocal && Fn() || In()
    }
     : Fn,
    function(e) {
        v.extend(v.support, {
            ajax: !!e,
            cors: !!e && "withCredentials" in e
        })
    }(v.ajaxSettings.xhr()),
    v.support.ajax && v.ajaxTransport(function(n) {
        if (!n.crossDomain || v.support.cors) {
            var r;
            return {
                send: function(i, s) {
                    var o, u, a = n.xhr();
                    n.username ? a.open(n.type, n.url, n.async, n.username, n.password) : a.open(n.type, n.url, n.async);
                    if (n.xhrFields) {
                        for (u in n.xhrFields) {
                            a[u] = n.xhrFields[u]
                        }
                    }
                    n.mimeType && a.overrideMimeType && a.overrideMimeType(n.mimeType),
                    !n.crossDomain && !i["X-Requested-With"] && (i["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (u in i) {
                            a.setRequestHeader(u, i[u])
                        }
                    } catch (f) {}
                    a.send(n.hasContent && n.data || null ),
                    r = function(e, i) {
                        var u, f, l, c, h;
                        try {
                            if (r && (i || a.readyState === 4)) {
                                r = t,
                                o && (a.onreadystatechange = v.noop,
                                Bn && delete Hn[o]);
                                if (i) {
                                    a.readyState !== 4 && a.abort()
                                } else {
                                    u = a.status,
                                    l = a.getAllResponseHeaders(),
                                    c = {},
                                    h = a.responseXML,
                                    h && h.documentElement && (c.xml = h);
                                    try {
                                        c.text = a.responseText
                                    } catch (p) {}
                                    try {
                                        f = a.statusText
                                    } catch (p) {
                                        f = ""
                                    }
                                    !u && n.isLocal && !n.crossDomain ? u = c.text ? 200 : 404 : u === 1223 && (u = 204)
                                }
                            }
                        } catch (d) {
                            i || s(-1, d)
                        }
                        c && s(u, f, c, l)
                    }
                    ,
                    n.async ? a.readyState === 4 ? setTimeout(r, 0) : (o = ++jn,
                    Bn && (Hn || (Hn = {},
                    v(e).unload(Bn)),
                    Hn[o] = r),
                    a.onreadystatechange = r) : r()
                },
                abort: function() {
                    r && r(0, 1)
                }
            }
        }
    });
    var qn, Rn, Un = /^(?:toggle|show|hide)$/, zn = new RegExp("^(?:([-+])=|)(" + m + ")([a-z%]*)$","i"), Wn = /queueHooks$/, Xn = [Gn], Vn = {
        "*": [function(e, t) {
            var n, r, i = this.createTween(e, t), s = zn.exec(t), o = i.cur(), u = +o || 0, a = 1, f = 20;
            if (s) {
                n = +s[2],
                r = s[3] || (v.cssNumber[e] ? "" : "px");
                if (r !== "px" && u) {
                    u = v.css(i.elem, e, !0) || n || 1;
                    do {
                        a = a || ".5",
                        u /= a,
                        v.style(i.elem, e, u + r)
                    } while (a !== (a = i.cur() / o) && a !== 1 && --f)
                }
                i.unit = r,
                i.start = u,
                i.end = s[1] ? u + (s[1] + 1) * n : n
            }
            return i
        }
        ]
    };
    v.Animation = v.extend(Kn, {
        tweener: function(e, t) {
            v.isFunction(e) ? (t = e,
            e = ["*"]) : e = e.split(" ");
            var n, r = 0, i = e.length;
            for (; r < i; r++) {
                n = e[r],
                Vn[n] = Vn[n] || [],
                Vn[n].unshift(t)
            }
        },
        prefilter: function(e, t) {
            t ? Xn.unshift(e) : Xn.push(e)
        }
    }),
    v.Tween = Yn,
    Yn.prototype = {
        constructor: Yn,
        init: function(e, t, n, r, i, s) {
            this.elem = e,
            this.prop = n,
            this.easing = i || "swing",
            this.options = t,
            this.start = this.now = this.cur(),
            this.end = r,
            this.unit = s || (v.cssNumber[n] ? "" : "px")
        },
        cur: function() {
            var e = Yn.propHooks[this.prop];
            return e && e.get ? e.get(this) : Yn.propHooks._default.get(this)
        },
        run: function(e) {
            var t, n = Yn.propHooks[this.prop];
            return this.options.duration ? this.pos = t = v.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
            this.now = (this.end - this.start) * t + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            n && n.set ? n.set(this) : Yn.propHooks._default.set(this),
            this
        }
    },
    Yn.prototype.init.prototype = Yn.prototype,
    Yn.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return e.elem[e.prop] == null  || !!e.elem.style && e.elem.style[e.prop] != null  ? (t = v.css(e.elem, e.prop, !1, ""),
                !t || t === "auto" ? 0 : t) : e.elem[e.prop]
            },
            set: function(e) {
                v.fx.step[e.prop] ? v.fx.step[e.prop](e) : e.elem.style && (e.elem.style[v.cssProps[e.prop]] != null  || v.cssHooks[e.prop]) ? v.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
            }
        }
    },
    Yn.propHooks.scrollTop = Yn.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
        }
    },
    v.each(["toggle", "show", "hide"], function(e, t) {
        var n = v.fn[t];
        v.fn[t] = function(r, i, s) {
            return r == null  || typeof r == "boolean" || !e && v.isFunction(r) && v.isFunction(i) ? n.apply(this, arguments) : this.animate(Zn(t, !0), r, i, s)
        }
    }),
    v.fn.extend({
        fadeTo: function(e, t, n, r) {
            return this.filter(Gt).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, r)
        },
        animate: function(e, t, n, r) {
            var i = v.isEmptyObject(e)
              , s = v.speed(t, n, r)
              , o = function() {
                var t = Kn(this, v.extend({}, e), s);
                i && t.stop(!0)
            }
            ;
            return i || s.queue === !1 ? this.each(o) : this.queue(s.queue, o)
        },
        stop: function(e, n, r) {
            var i = function(e) {
                var t = e.stop;
                delete e.stop,
                t(r)
            }
            ;
            return typeof e != "string" && (r = n,
            n = e,
            e = t),
            n && e !== !1 && this.queue(e || "fx", []),
            this.each(function() {
                var t = !0
                  , n = e != null  && e + "queueHooks"
                  , s = v.timers
                  , o = v._data(this);
                if (n) {
                    o[n] && o[n].stop && i(o[n])
                } else {
                    for (n in o) {
                        o[n] && o[n].stop && Wn.test(n) && i(o[n])
                    }
                }
                for (n = s.length; n--; ) {
                    s[n].elem === this && (e == null  || s[n].queue === e) && (s[n].anim.stop(r),
                    t = !1,
                    s.splice(n, 1))
                }
                (t || !r) && v.dequeue(this, e)
            })
        }
    }),
    v.each({
        slideDown: Zn("show"),
        slideUp: Zn("hide"),
        slideToggle: Zn("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, t) {
        v.fn[e] = function(e, n, r) {
            return this.animate(t, e, n, r)
        }
    }),
    v.speed = function(e, t, n) {
        var r = e && typeof e == "object" ? v.extend({}, e) : {
            complete: n || !n && t || v.isFunction(e) && e,
            duration: e,
            easing: n && t || t && !v.isFunction(t) && t
        };
        r.duration = v.fx.off ? 0 : typeof r.duration == "number" ? r.duration : r.duration in v.fx.speeds ? v.fx.speeds[r.duration] : v.fx.speeds._default;
        if (r.queue == null  || r.queue === !0) {
            r.queue = "fx"
        }
        return r.old = r.complete,
        r.complete = function() {
            v.isFunction(r.old) && r.old.call(this),
            r.queue && v.dequeue(this, r.queue)
        }
        ,
        r
    }
    ,
    v.easing = {
        linear: function(e) {
            return e
        },
        swing: function(e) {
            return 0.5 - Math.cos(e * Math.PI) / 2
        }
    },
    v.timers = [],
    v.fx = Yn.prototype.init,
    v.fx.tick = function() {
        var e, n = v.timers, r = 0;
        qn = v.now();
        for (; r < n.length; r++) {
            e = n[r],
            !e() && n[r] === e && n.splice(r--, 1)
        }
        n.length || v.fx.stop(),
        qn = t
    }
    ,
    v.fx.timer = function(e) {
        e() && v.timers.push(e) && !Rn && (Rn = setInterval(v.fx.tick, v.fx.interval))
    }
    ,
    v.fx.interval = 13,
    v.fx.stop = function() {
        clearInterval(Rn),
        Rn = null 
    }
    ,
    v.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    v.fx.step = {},
    v.expr && v.expr.filters && (v.expr.filters.animated = function(e) {
        return v.grep(v.timers, function(t) {
            return e === t.elem
        }).length
    }
    );
    var er = /^(?:body|html)$/i;
    v.fn.offset = function(e) {
        if (arguments.length) {
            return e === t ? this : this.each(function(t) {
                v.offset.setOffset(this, e, t)
            })
        }
        var n, r, i, s, o, u, a, f = {
            top: 0,
            left: 0
        }, l = this[0], c = l && l.ownerDocument;
        if (!c) {
            return
        }
        return (r = c.body) === l ? v.offset.bodyOffset(l) : (n = c.documentElement,
        v.contains(n, l) ? (typeof l.getBoundingClientRect != "undefined" && (f = l.getBoundingClientRect()),
        i = tr(c),
        s = n.clientTop || r.clientTop || 0,
        o = n.clientLeft || r.clientLeft || 0,
        u = i.pageYOffset || n.scrollTop,
        a = i.pageXOffset || n.scrollLeft,
        {
            top: f.top + u - s,
            left: f.left + a - o
        }) : f)
    }
    ,
    v.offset = {
        bodyOffset: function(e) {
            var t = e.offsetTop
              , n = e.offsetLeft;
            return v.support.doesNotIncludeMarginInBodyOffset && (t += parseFloat(v.css(e, "marginTop")) || 0,
            n += parseFloat(v.css(e, "marginLeft")) || 0),
            {
                top: t,
                left: n
            }
        },
        setOffset: function(e, t, n) {
            var r = v.css(e, "position");
            r === "static" && (e.style.position = "relative");
            var i = v(e), s = i.offset(), o = v.css(e, "top"), u = v.css(e, "left"), a = (r === "absolute" || r === "fixed") && v.inArray("auto", [o, u]) > -1, f = {}, l = {}, c, h;
            a ? (l = i.position(),
            c = l.top,
            h = l.left) : (c = parseFloat(o) || 0,
            h = parseFloat(u) || 0),
            v.isFunction(t) && (t = t.call(e, n, s)),
            t.top != null  && (f.top = t.top - s.top + c),
            t.left != null  && (f.left = t.left - s.left + h),
            "using" in t ? t.using.call(e, f) : i.css(f)
        }
    },
    v.fn.extend({
        position: function() {
            if (!this[0]) {
                return
            }
            var e = this[0]
              , t = this.offsetParent()
              , n = this.offset()
              , r = er.test(t[0].nodeName) ? {
                top: 0,
                left: 0
            } : t.offset();
            return n.top -= parseFloat(v.css(e, "marginTop")) || 0,
            n.left -= parseFloat(v.css(e, "marginLeft")) || 0,
            r.top += parseFloat(v.css(t[0], "borderTopWidth")) || 0,
            r.left += parseFloat(v.css(t[0], "borderLeftWidth")) || 0,
            {
                top: n.top - r.top,
                left: n.left - r.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var e = this.offsetParent || i.body;
                while (e && !er.test(e.nodeName) && v.css(e, "position") === "static") {
                    e = e.offsetParent
                }
                return e || i.body
            })
        }
    }),
    v.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, n) {
        var r = /Y/.test(n);
        v.fn[e] = function(i) {
            return v.access(this, function(e, i, s) {
                var o = tr(e);
                if (s === t) {
                    return o ? n in o ? o[n] : o.document.documentElement[i] : e[i]
                }
                o ? o.scrollTo(r ? v(o).scrollLeft() : s, r ? s : v(o).scrollTop()) : e[i] = s
            }, e, i, arguments.length, null )
        }
    }),
    v.each({
        Height: "height",
        Width: "width"
    }, function(e, n) {
        v.each({
            padding: "inner" + e,
            content: n,
            "": "outer" + e
        }, function(r, i) {
            v.fn[i] = function(i, s) {
                var o = arguments.length && (r || typeof i != "boolean")
                  , u = r || (i === !0 || s === !0 ? "margin" : "border");
                return v.access(this, function(n, r, i) {
                    var s;
                    return v.isWindow(n) ? n.document.documentElement["client" + e] : n.nodeType === 9 ? (s = n.documentElement,
                    Math.max(n.body["scroll" + e], s["scroll" + e], n.body["offset" + e], s["offset" + e], s["client" + e])) : i === t ? v.css(n, r, i, u) : v.style(n, r, i, u)
                }, n, o ? i : t, o, null )
            }
        })
    }),
    e.jQuery = e.$ = v,
    typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function() {
        return v
    })
})(window);
/*! jQuery UI - v1.9.2 - 2013-06-24
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js
* Copyright 2013 jQuery Foundation and other contributors Licensed MIT */
(function(h, d) {
    function a(q, B) {
        var v, p, z, e = q.nodeName.toLowerCase();
        return "area" === e ? (v = q.parentNode,
        p = v.name,
        !q.href || !p || v.nodeName.toLowerCase() !== "map" ? !1 : (z = h("img[usemap=#" + p + "]")[0],
        !!z && f(z))) : (/input|select|textarea|button|object/.test(e) ? !q.disabled : "a" === e ? q.href || B : B) && f(q)
    }
    function f(e) {
        return h.expr.filters.visible(e) && !h(e).parents().andSelf().filter(function() {
            return h.css(this, "visibility") === "hidden"
        }).length
    }
    var m = 0
      , g = /^ui-id-\d+$/;
    h.ui = h.ui || {};
    if (h.ui.version) {
        return
    }
    h.extend(h.ui, {
        version: "1.9.2",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }),
    h.fn.extend({
        _focus: h.fn.focus,
        focus: function(e, o) {
            return typeof e == "number" ? this.each(function() {
                var p = this;
                setTimeout(function() {
                    h(p).focus(),
                    o && o.call(p)
                }, e)
            }) : this._focus.apply(this, arguments)
        },
        scrollParent: function() {
            var e;
            return h.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? e = this.parents().filter(function() {
                return /(relative|absolute|fixed)/.test(h.css(this, "position")) && /(auto|scroll)/.test(h.css(this, "overflow") + h.css(this, "overflow-y") + h.css(this, "overflow-x"))
            }).eq(0) : e = this.parents().filter(function() {
                return /(auto|scroll)/.test(h.css(this, "overflow") + h.css(this, "overflow-y") + h.css(this, "overflow-x"))
            }).eq(0),
            /fixed/.test(this.css("position")) || !e.length ? h(document) : e
        },
        zIndex: function(q) {
            if (q !== d) {
                return this.css("zIndex", q)
            }
            if (this.length) {
                var p = h(this[0]), e, o;
                while (p.length && p[0] !== document) {
                    e = p.css("position");
                    if (e === "absolute" || e === "relative" || e === "fixed") {
                        o = parseInt(p.css("zIndex"), 10);
                        if (!isNaN(o) && o !== 0) {
                            return o
                        }
                    }
                    p = p.parent()
                }
            }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                this.id || (this.id = "ui-id-" + ++m)
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                g.test(this.id) && h(this).removeAttr("id")
            })
        }
    }),
    h.extend(h.expr[":"], {
        data: h.expr.createPseudo ? h.expr.createPseudo(function(e) {
            return function(o) {
                return !!h.data(o, e)
            }
        }) : function(e, p, o) {
            return !!h.data(e, o[3])
        }
        ,
        focusable: function(e) {
            return a(e, !isNaN(h.attr(e, "tabindex")))
        },
        tabbable: function(e) {
            var p = h.attr(e, "tabindex")
              , o = isNaN(p);
            return (o || p >= 0) && a(e, !o)
        }
    }),
    h(function() {
        var e = document.body
          , o = e.appendChild(o = document.createElement("div"));
        o.offsetHeight,
        h.extend(o.style, {
            minHeight: "100px",
            height: "auto",
            padding: 0,
            borderWidth: 0
        }),
        h.support.minHeight = o.offsetHeight === 100,
        h.support.selectstart = "onselectstart" in o,
        e.removeChild(o).style.display = "none"
    }),
    h("<a>").outerWidth(1).jquery || h.each(["Width", "Height"], function(B, v) {
        function e(o, D, C, u) {
            return h.each(p, function() {
                D -= parseFloat(h.css(o, "padding" + this)) || 0,
                C && (D -= parseFloat(h.css(o, "border" + this + "Width")) || 0),
                u && (D -= parseFloat(h.css(o, "margin" + this)) || 0)
            }),
            D
        }
        var p = v === "Width" ? ["Left", "Right"] : ["Top", "Bottom"]
          , q = v.toLowerCase()
          , z = {
            innerWidth: h.fn.innerWidth,
            innerHeight: h.fn.innerHeight,
            outerWidth: h.fn.outerWidth,
            outerHeight: h.fn.outerHeight
        };
        h.fn["inner" + v] = function(o) {
            return o === d ? z["inner" + v].call(this) : this.each(function() {
                h(this).css(q, e(this, o) + "px")
            })
        }
        ,
        h.fn["outer" + v] = function(o, r) {
            return typeof o != "number" ? z["outer" + v].call(this, o) : this.each(function() {
                h(this).css(q, e(this, o, !0, r) + "px")
            })
        }
    }),
    h("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (h.fn.removeData = function(e) {
        return function(o) {
            return arguments.length ? e.call(this, h.camelCase(o)) : e.call(this)
        }
    }(h.fn.removeData)),
    function() {
        var e = /msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || [];
        h.ui.ie = e.length ? !0 : !1,
        h.ui.ie6 = parseFloat(e[1], 10) === 6
    }(),
    h.fn.extend({
        disableSelection: function() {
            return this.bind((h.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(o) {
                o.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    }),
    h.extend(h.ui, {
        plugin: {
            add: function(o, u, q) {
                var e, p = h.ui[o].prototype;
                for (e in q) {
                    p.plugins[e] = p.plugins[e] || [],
                    p.plugins[e].push([u, q[e]])
                }
            },
            call: function(u, p, v) {
                var q, o = u.plugins[p];
                if (!o || !u.element[0].parentNode || u.element[0].parentNode.nodeType === 11) {
                    return
                }
                for (q = 0; q < o.length; q++) {
                    u.options[o[q][0]] && o[q][1].apply(u.element, v)
                }
            }
        },
        contains: h.contains,
        hasScroll: function(o, q) {
            if (h(o).css("overflow") === "hidden") {
                return !1
            }
            var p = q && q === "left" ? "scrollLeft" : "scrollTop"
              , e = !1;
            return o[p] > 0 ? !0 : (o[p] = 1,
            e = o[p] > 0,
            o[p] = 0,
            e)
        },
        isOverAxis: function(p, o, q) {
            return p > o && p < o + q
        },
        isOver: function(p, z, u, e, q, v) {
            return h.ui.isOverAxis(p, u, q) && h.ui.isOverAxis(z, e, v)
        }
    })
})(jQuery);
(function(g, d) {
    var h = 0
      , f = Array.prototype.slice
      , a = g.cleanData;
    g.cleanData = function(e) {
        for (var p = 0, o; (o = e[p]) != null ; p++) {
            try {
                g(o).triggerHandler("remove")
            } catch (m) {}
        }
        a(e)
    }
    ,
    g.widget = function(q, C, z) {
        var p, v, B, m, e = q.split(".")[0];
        q = q.split(".")[1],
        p = e + "-" + q,
        z || (z = C,
        C = g.Widget),
        g.expr[":"][p.toLowerCase()] = function(o) {
            return !!g.data(o, p)
        }
        ,
        g[e] = g[e] || {},
        v = g[e][q],
        B = g[e][q] = function(r, o) {
            if (!this._createWidget) {
                return new B(r,o)
            }
            arguments.length && this._createWidget(r, o)
        }
        ,
        g.extend(B, v, {
            version: z.version,
            _proto: g.extend({}, z),
            _childConstructors: []
        }),
        m = new C,
        m.options = g.widget.extend({}, m.options),
        g.each(z, function(r, o) {
            g.isFunction(o) && (z[r] = function() {
                var D = function() {
                    return C.prototype[r].apply(this, arguments)
                }
                  , u = function(E) {
                    return C.prototype[r].apply(this, E)
                }
                ;
                return function() {
                    var E = this._super, G = this._superApply, F;
                    return this._super = D,
                    this._superApply = u,
                    F = o.apply(this, arguments),
                    this._super = E,
                    this._superApply = G,
                    F
                }
            }())
        }),
        B.prototype = g.widget.extend(m, {
            widgetEventPrefix: v ? m.widgetEventPrefix : q
        }, z, {
            constructor: B,
            namespace: e,
            widgetName: q,
            widgetBaseClass: p,
            widgetFullName: p
        }),
        v ? (g.each(v._childConstructors, function(o, D) {
            var u = D.prototype;
            g.widget(u.namespace + "." + u.widgetName, B, D._proto)
        }),
        delete v._childConstructors) : C._childConstructors.push(B),
        g.widget.bridge(q, B)
    }
    ,
    g.widget.extend = function(v) {
        var p = f.call(arguments, 1), q = 0, r = p.length, m, e;
        for (; q < r; q++) {
            for (m in p[q]) {
                e = p[q][m],
                p[q].hasOwnProperty(m) && e !== d && (g.isPlainObject(e) ? v[m] = g.isPlainObject(v[m]) ? g.widget.extend({}, v[m], e) : g.widget.extend({}, e) : v[m] = e)
            }
        }
        return v
    }
    ,
    g.widget.bridge = function(o, e) {
        var m = e.prototype.widgetFullName || o;
        g.fn[o] = function(v) {
            var q = typeof v == "string"
              , p = f.call(arguments, 1)
              , r = this;
            return v = !q && p.length ? g.widget.extend.apply(null , [v].concat(p)) : v,
            q ? this.each(function() {
                var z, u = g.data(this, m);
                if (!u) {
                    return g.error("cannot call methods on " + o + " prior to initialization; attempted to call method '" + v + "'")
                }
                if (!g.isFunction(u[v]) || v.charAt(0) === "_") {
                    return g.error("no such method '" + v + "' for " + o + " widget instance")
                }
                z = u[v].apply(u, p);
                if (z !== u && z !== d) {
                    return r = z && z.jquery ? r.pushStack(z.get()) : z,
                    !1
                }
            }) : this.each(function() {
                var u = g.data(this, m);
                u ? u.option(v || {})._init() : g.data(this, m, new e(v,this))
            }),
            r
        }
    }
    ,
    g.Widget = function() {}
    ,
    g.Widget._childConstructors = [],
    g.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null 
        },
        _createWidget: function(e, m) {
            m = g(m || this.defaultElement || this)[0],
            this.element = g(m),
            this.uuid = h++,
            this.eventNamespace = "." + this.widgetName + this.uuid,
            this.options = g.widget.extend({}, this.options, this._getCreateOptions(), e),
            this.bindings = g(),
            this.hoverable = g(),
            this.focusable = g(),
            m !== this && (g.data(m, this.widgetName, this),
            g.data(m, this.widgetFullName, this),
            this._on(!0, this.element, {
                remove: function(o) {
                    o.target === m && this.destroy()
                }
            }),
            this.document = g(m.style ? m.ownerDocument : m.document || m),
            this.window = g(this.document[0].defaultView || this.document[0].parentWindow)),
            this._create(),
            this._trigger("create", null , this._getCreateEventData()),
            this._init()
        },
        _getCreateOptions: g.noop,
        _getCreateEventData: g.noop,
        _create: g.noop,
        _init: g.noop,
        destroy: function() {
            this._destroy(),
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(g.camelCase(this.widgetFullName)),
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"),
            this.bindings.unbind(this.eventNamespace),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: g.noop,
        widget: function() {
            return this.element
        },
        option: function(z, q) {
            var m = z, p, v, e;
            if (arguments.length === 0) {
                return g.widget.extend({}, this.options)
            }
            if (typeof z == "string") {
                m = {},
                p = z.split("."),
                z = p.shift();
                if (p.length) {
                    v = m[z] = g.widget.extend({}, this.options[z]);
                    for (e = 0; e < p.length - 1; e++) {
                        v[p[e]] = v[p[e]] || {},
                        v = v[p[e]]
                    }
                    z = p.pop();
                    if (q === d) {
                        return v[z] === d ? null  : v[z]
                    }
                    v[z] = q
                } else {
                    if (q === d) {
                        return this.options[z] === d ? null  : this.options[z]
                    }
                    m[z] = q
                }
            }
            return this._setOptions(m),
            this
        },
        _setOptions: function(o) {
            var m;
            for (m in o) {
                this._setOption(m, o[m])
            }
            return this
        },
        _setOption: function(o, m) {
            return this.options[o] = m,
            o === "disabled" && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!m).attr("aria-disabled", m),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")),
            this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(m, q, p) {
            var e, o = this;
            typeof m != "boolean" && (p = q,
            q = m,
            m = !1),
            p ? (q = e = g(q),
            this.bindings = this.bindings.add(q)) : (p = q,
            q = this.element,
            e = this.widget()),
            g.each(p, function(C, E) {
                function B() {
                    if (!m && (o.options.disabled === !0 || g(this).hasClass("ui-state-disabled"))) {
                        return
                    }
                    return (typeof E == "string" ? o[E] : E).apply(o, arguments)
                }
                typeof E != "string" && (B.guid = E.guid = E.guid || B.guid || g.guid++);
                var z = C.match(/^(\w+)\s*(.*)$/)
                  , D = z[1] + o.eventNamespace
                  , v = z[2];
                v ? e.delegate(v, D, B) : q.bind(D, B)
            })
        },
        _off: function(o, m) {
            m = (m || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
            o.unbind(m).undelegate(m)
        },
        _delay: function(p, m) {
            function q() {
                return (typeof p == "string" ? o[p] : p).apply(o, arguments)
            }
            var o = this;
            return setTimeout(q, m || 0)
        },
        _hoverable: function(e) {
            this.hoverable = this.hoverable.add(e),
            this._on(e, {
                mouseenter: function(m) {
                    g(m.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(m) {
                    g(m.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(e) {
            this.focusable = this.focusable.add(e),
            this._on(e, {
                focusin: function(m) {
                    g(m.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(m) {
                    g(m.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(m, v, q) {
            var e, p, u = this.options[m];
            q = q || {},
            v = g.Event(v),
            v.type = (m === this.widgetEventPrefix ? m : this.widgetEventPrefix + m).toLowerCase(),
            v.target = this.element[0],
            p = v.originalEvent;
            if (p) {
                for (e in p) {
                    e in v || (v[e] = p[e])
                }
            }
            return this.element.trigger(v, q),
            !(g.isFunction(u) && u.apply(this.element[0], [v].concat(q)) === !1 || v.isDefaultPrevented())
        }
    },
    g.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(e, m) {
        g.Widget.prototype["_" + e] = function(z, q, v) {
            typeof q == "string" && (q = {
                effect: q
            });
            var B, p = q ? q === !0 || typeof q == "number" ? m : q.effect || m : e;
            q = q || {},
            typeof q == "number" && (q = {
                duration: q
            }),
            B = !g.isEmptyObject(q),
            q.complete = v,
            q.delay && z.delay(q.delay),
            B && g.effects && (g.effects.effect[p] || g.uiBackCompat !== !1 && g.effects[p]) ? z[e](q) : p !== e && z[p] ? z[p](q.duration, q.easing, v) : z.queue(function(o) {
                g(this)[e](),
                v && v.call(z[0]),
                o()
            })
        }
    }),
    g.uiBackCompat !== !1 && (g.Widget.prototype._getCreateOptions = function() {
        return g.metadata && g.metadata.get(this.element[0])[this.widgetName]
    }
    )
})(jQuery);
(function(d, a) {
    var f = !1;
    d(document).mouseup(function(g) {
        f = !1
    }),
    d.widget("ui.mouse", {
        version: "1.9.2",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var e = this;
            this.element.bind("mousedown." + this.widgetName, function(g) {
                return e._mouseDown(g)
            }).bind("click." + this.widgetName, function(g) {
                if (!0 === d.data(g.target, e.widgetName + ".preventClickEvent")) {
                    return d.removeData(g.target, e.widgetName + ".preventClickEvent"),
                    g.stopImmediatePropagation(),
                    !1
                }
            }),
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName),
            this._mouseMoveDelegate && d(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function(g) {
            if (f) {
                return
            }
            this._mouseStarted && this._mouseUp(g),
            this._mouseDownEvent = g;
            var m = this
              , e = g.which === 1
              , h = typeof this.options.cancel == "string" && g.target.nodeName ? d(g.target).closest(this.options.cancel).length : !1;
            if (!e || h || !this._mouseCapture(g)) {
                return !0
            }
            this.mouseDelayMet = !this.options.delay,
            this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                m.mouseDelayMet = !0
            }, this.options.delay));
            if (this._mouseDistanceMet(g) && this._mouseDelayMet(g)) {
                this._mouseStarted = this._mouseStart(g) !== !1;
                if (!this._mouseStarted) {
                    return g.preventDefault(),
                    !0
                }
            }
            return !0 === d.data(g.target, this.widgetName + ".preventClickEvent") && d.removeData(g.target, this.widgetName + ".preventClickEvent"),
            this._mouseMoveDelegate = function(o) {
                return m._mouseMove(o)
            }
            ,
            this._mouseUpDelegate = function(o) {
                return m._mouseUp(o)
            }
            ,
            d(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate),
            g.preventDefault(),
            f = !0,
            !0
        },
        _mouseMove: function(e) {
            return !d.ui.ie || document.documentMode >= 9 || !!e.button ? this._mouseStarted ? (this._mouseDrag(e),
            e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1,
            this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)),
            !this._mouseStarted) : this._mouseUp(e)
        },
        _mouseUp: function(e) {
            return d(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
            this._mouseStarted && (this._mouseStarted = !1,
            e.target === this._mouseDownEvent.target && d.data(e.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(e)),
            !1
        },
        _mouseDistanceMet: function(g) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - g.pageX), Math.abs(this._mouseDownEvent.pageY - g.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function(g) {
            return this.mouseDelayMet
        },
        _mouseStart: function(g) {},
        _mouseDrag: function(g) {},
        _mouseStop: function(g) {},
        _mouseCapture: function(g) {
            return !0
        }
    })
})(jQuery);
(function(D, H) {
    function B(f, a, h) {
        return [parseInt(f[0], 10) * (v.test(f[0]) ? a / 100 : 1), parseInt(f[1], 10) * (v.test(f[1]) ? h / 100 : 1)]
    }
    function g(a, e) {
        return parseInt(D.css(a, e), 10) || 0
    }
    D.ui = D.ui || {};
    var q, d = Math.max, z = Math.abs, I = Math.round, m = /left|center|right/, G = /top|center|bottom/, F = /[\+\-]\d+%?/, C = /^\w+/, v = /%$/, E = D.fn.position;
    D.position = {
        scrollbarWidth: function() {
            if (q !== H) {
                return q
            }
            var f, a, e = D("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), h = e.children()[0];
            return D("body").append(e),
            f = h.offsetWidth,
            e.css("overflow", "scroll"),
            a = h.offsetWidth,
            f === a && (a = e[0].clientWidth),
            e.remove(),
            q = f - a
        },
        getScrollInfo: function(e) {
            var o = e.isWindow ? "" : e.element.css("overflow-x")
              , h = e.isWindow ? "" : e.element.css("overflow-y")
              , a = o === "scroll" || o === "auto" && e.width < e.element[0].scrollWidth
              , f = h === "scroll" || h === "auto" && e.height < e.element[0].scrollHeight;
            return {
                width: a ? D.position.scrollbarWidth() : 0,
                height: f ? D.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(a) {
            var f = D(a || window)
              , e = D.isWindow(f[0]);
            return {
                element: f,
                isWindow: e,
                offset: f.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: f.scrollLeft(),
                scrollTop: f.scrollTop(),
                width: e ? f.width() : f.outerWidth(),
                height: e ? f.height() : f.outerHeight()
            }
        }
    },
    D.fn.position = function(M) {
        if (!M || !M.of) {
            return E.apply(this, arguments)
        }
        M = D.extend({}, M);
        var a, f, p, K, e, o = D(M.of), u = D.position.getWithinInfo(M.within), r = D.position.getScrollInfo(u), J = o[0], N = (M.collision || "flip").split(" "), h = {};
        return J.nodeType === 9 ? (f = o.width(),
        p = o.height(),
        K = {
            top: 0,
            left: 0
        }) : D.isWindow(J) ? (f = o.width(),
        p = o.height(),
        K = {
            top: o.scrollTop(),
            left: o.scrollLeft()
        }) : J.preventDefault ? (M.at = "left top",
        f = p = 0,
        K = {
            top: J.pageY,
            left: J.pageX
        }) : (f = o.outerWidth(),
        p = o.outerHeight(),
        K = o.offset()),
        e = D.extend({}, K),
        D.each(["my", "at"], function() {
            var P = (M[this] || "").split(" "), Q, O;
            P.length === 1 && (P = m.test(P[0]) ? P.concat(["center"]) : G.test(P[0]) ? ["center"].concat(P) : ["center", "center"]),
            P[0] = m.test(P[0]) ? P[0] : "center",
            P[1] = G.test(P[1]) ? P[1] : "center",
            Q = F.exec(P[0]),
            O = F.exec(P[1]),
            h[this] = [Q ? Q[0] : 0, O ? O[0] : 0],
            M[this] = [C.exec(P[0])[0], C.exec(P[1])[0]]
        }),
        N.length === 1 && (N[1] = N[0]),
        M.at[0] === "right" ? e.left += f : M.at[0] === "center" && (e.left += f / 2),
        M.at[1] === "bottom" ? e.top += p : M.at[1] === "center" && (e.top += p / 2),
        a = B(h.at, f, p),
        e.left += a[0],
        e.top += a[1],
        this.each(function() {
            var P, aa, W = D(this), S = W.outerWidth(), V = W.outerHeight(), Z = g(this, "marginLeft"), Y = g(this, "marginTop"), R = S + Z + g(this, "marginRight") + r.width, U = V + Y + g(this, "marginBottom") + r.height, O = D.extend({}, e), Q = B(h.my, W.outerWidth(), W.outerHeight());
            M.my[0] === "right" ? O.left -= S : M.my[0] === "center" && (O.left -= S / 2),
            M.my[1] === "bottom" ? O.top -= V : M.my[1] === "center" && (O.top -= V / 2),
            O.left += Q[0],
            O.top += Q[1],
            D.support.offsetFractions || (O.left = I(O.left),
            O.top = I(O.top)),
            P = {
                marginLeft: Z,
                marginTop: Y
            },
            D.each(["left", "top"], function(ab, T) {
                D.ui.position[N[ab]] && D.ui.position[N[ab]][T](O, {
                    targetWidth: f,
                    targetHeight: p,
                    elemWidth: S,
                    elemHeight: V,
                    collisionPosition: P,
                    collisionWidth: R,
                    collisionHeight: U,
                    offset: [a[0] + Q[0], a[1] + Q[1]],
                    my: M.my,
                    at: M.at,
                    within: u,
                    elem: W
                })
            }),
            D.fn.bgiframe && W.bgiframe(),
            M.using && (aa = function(ad) {
                var af = K.left - O.left
                  , ac = af + f - S
                  , ae = K.top - O.top
                  , T = ae + p - V
                  , ab = {
                    target: {
                        element: o,
                        left: K.left,
                        top: K.top,
                        width: f,
                        height: p
                    },
                    element: {
                        element: W,
                        left: O.left,
                        top: O.top,
                        width: S,
                        height: V
                    },
                    horizontal: ac < 0 ? "left" : af > 0 ? "right" : "center",
                    vertical: T < 0 ? "top" : ae > 0 ? "bottom" : "middle"
                };
                f < S && z(af + ac) < f && (ab.horizontal = "center"),
                p < V && z(ae + T) < p && (ab.vertical = "middle"),
                d(z(af), z(ac)) > d(z(ae), z(T)) ? ab.important = "horizontal" : ab.important = "vertical",
                M.using.call(this, ad, ab)
            }
            ),
            W.offset(D.extend(O, {
                using: aa
            }))
        })
    }
    ,
    D.ui.position = {
        fit: {
            left: function(K, O) {
                var p = O.within, r = p.isWindow ? p.scrollLeft : p.offset.left, P = p.width, h = K.left - O.collisionPosition.marginLeft, N = r - h, M = h + O.collisionWidth - P - r, J;
                O.collisionWidth > P ? N > 0 && M <= 0 ? (J = K.left + N + O.collisionWidth - P - r,
                K.left += N - J) : M > 0 && N <= 0 ? K.left = r : N > M ? K.left = r + P - O.collisionWidth : K.left = r : N > 0 ? K.left += N : M > 0 ? K.left -= M : K.left = d(K.left - h, K.left)
            },
            top: function(K, O) {
                var p = O.within, r = p.isWindow ? p.scrollTop : p.offset.top, P = O.within.height, h = K.top - O.collisionPosition.marginTop, N = r - h, M = h + O.collisionHeight - P - r, J;
                O.collisionHeight > P ? N > 0 && M <= 0 ? (J = K.top + N + O.collisionHeight - P - r,
                K.top += N - J) : M > 0 && N <= 0 ? K.top = r : N > M ? K.top = r + P - O.collisionHeight : K.top = r : N > 0 ? K.top += N : M > 0 ? K.top -= M : K.top = d(K.top - h, K.top)
            }
        },
        flip: {
            left: function(R, W) {
                var N = W.within, J = N.offset.left + N.scrollLeft, Y = N.width, M = N.isWindow ? N.scrollLeft : N.offset.left, V = R.left - W.collisionPosition.marginLeft, U = V - M, Q = V + W.collisionWidth - Y - M, O = W.my[0] === "left" ? -W.elemWidth : W.my[0] === "right" ? W.elemWidth : 0, T = W.at[0] === "left" ? W.targetWidth : W.at[0] === "right" ? -W.targetWidth : 0, P = -2 * W.offset[0], K, S;
                if (U < 0) {
                    K = R.left + O + T + P + W.collisionWidth - Y - J;
                    if (K < 0 || K < z(U)) {
                        R.left += O + T + P
                    }
                } else {
                    if (Q > 0) {
                        S = R.left - W.collisionPosition.marginLeft + O + T + P - M;
                        if (S > 0 || z(S) < Q) {
                            R.left += O + T + P
                        }
                    }
                }
            },
            top: function(R, Y) {
                var N = Y.within, J = N.offset.top + N.scrollTop, Z = N.height, M = N.isWindow ? N.scrollTop : N.offset.top, W = R.top - Y.collisionPosition.marginTop, U = W - M, Q = W + Y.collisionHeight - Z - M, O = Y.my[1] === "top", T = O ? -Y.elemHeight : Y.my[1] === "bottom" ? Y.elemHeight : 0, P = Y.at[1] === "top" ? Y.targetHeight : Y.at[1] === "bottom" ? -Y.targetHeight : 0, K = -2 * Y.offset[1], S, V;
                U < 0 ? (V = R.top + T + P + K + Y.collisionHeight - Z - J,
                R.top + T + P + K > U && (V < 0 || V < z(U)) && (R.top += T + P + K)) : Q > 0 && (S = R.top - Y.collisionPosition.marginTop + T + P + K - M,
                R.top + T + P + K > Q && (S > 0 || z(S) < Q) && (R.top += T + P + K))
            }
        },
        flipfit: {
            left: function() {
                D.ui.position.flip.left.apply(this, arguments),
                D.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                D.ui.position.flip.top.apply(this, arguments),
                D.ui.position.fit.top.apply(this, arguments)
            }
        }
    },
    function() {
        var f, K, p, e, h, J = document.getElementsByTagName("body")[0], a = document.createElement("div");
        f = document.createElement(J ? "div" : "body"),
        p = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        },
        J && D.extend(p, {
            position: "absolute",
            left: "-1000px",
            top: "-1000px"
        });
        for (h in p) {
            f.style[h] = p[h]
        }
        f.appendChild(a),
        K = J || document.documentElement,
        K.insertBefore(f, K.firstChild),
        a.style.cssText = "position: absolute; left: 10.7432222px;",
        e = D(a).offset().left,
        D.support.offsetFractions = e > 10 && e < 11,
        f.innerHTML = "",
        K.removeChild(f)
    }(),
    D.uiBackCompat !== !1 && function(a) {
        var f = a.fn.position;
        a.fn.position = function(o) {
            if (!o || !o.offset) {
                return f.call(this, o)
            }
            var e = o.offset.split(" ")
              , h = o.at.split(" ");
            return e.length === 1 && (e[1] = e[0]),
            /^\d/.test(e[0]) && (e[0] = "+" + e[0]),
            /^\d/.test(e[1]) && (e[1] = "+" + e[1]),
            h.length === 1 && (/left|center|right/.test(h[0]) ? h[1] = "center" : (h[1] = h[0],
            h[0] = "center")),
            f.call(this, a.extend(o, {
                at: h[0] + e[0] + " " + h[1] + e[1],
                offset: H
            }))
        }
    }(jQuery)
})(jQuery);
(function(d, a) {
    d.widget("ui.draggable", d.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1
        },
        _create: function() {
            this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position")) && (this.element[0].style.position = "relative"),
            this.options.addClasses && this.element.addClass("ui-draggable"),
            this.options.disabled && this.element.addClass("ui-draggable-disabled"),
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),
            this._mouseDestroy()
        },
        _mouseCapture: function(e) {
            var f = this.options;
            return this.helper || f.disabled || d(e.target).is(".ui-resizable-handle") ? !1 : (this.handle = this._getHandle(e),
            this.handle ? (d(f.iframeFix === !0 ? "iframe" : f.iframeFix).each(function() {
                d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(d(this).offset()).appendTo("body")
            }),
            !0) : !1)
        },
        _mouseStart: function(e) {
            var f = this.options;
            return this.helper = this._createHelper(e),
            this.helper.addClass("ui-draggable-dragging"),
            this._cacheHelperProportions(),
            d.ui.ddmanager && (d.ui.ddmanager.current = this),
            this._cacheMargins(),
            this.cssPosition = this.helper.css("position"),
            this.scrollParent = this.helper.scrollParent(),
            this.offset = this.positionAbs = this.element.offset(),
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            },
            d.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }),
            this.originalPosition = this.position = this._generatePosition(e),
            this.originalPageX = e.pageX,
            this.originalPageY = e.pageY,
            f.cursorAt && this._adjustOffsetFromHelper(f.cursorAt),
            f.containment && this._setContainment(),
            this._trigger("start", e) === !1 ? (this._clear(),
            !1) : (this._cacheHelperProportions(),
            d.ui.ddmanager && !f.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, e),
            this._mouseDrag(e, !0),
            d.ui.ddmanager && d.ui.ddmanager.dragStart(this, e),
            !0)
        },
        _mouseDrag: function(e, g) {
            this.position = this._generatePosition(e),
            this.positionAbs = this._convertPositionTo("absolute");
            if (!g) {
                var f = this._uiHash();
                if (this._trigger("drag", e, f) === !1) {
                    return this._mouseUp({}),
                    !1
                }
                this.position = f.position
            }
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            return d.ui.ddmanager && d.ui.ddmanager.drag(this, e),
            !1
        },
        _mouseStop: function(f) {
            var m = !1;
            d.ui.ddmanager && !this.options.dropBehaviour && (m = d.ui.ddmanager.drop(this, f)),
            this.dropped && (m = this.dropped,
            this.dropped = !1);
            var h = this.element[0]
              , e = !1;
            while (h && (h = h.parentNode)) {
                h == document && (e = !0)
            }
            if (!e && this.options.helper === "original") {
                return !1
            }
            if (this.options.revert == "invalid" && !m || this.options.revert == "valid" && m || this.options.revert === !0 || d.isFunction(this.options.revert) && this.options.revert.call(this.element, m)) {
                var g = this;
                d(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    g._trigger("stop", f) !== !1 && g._clear()
                })
            } else {
                this._trigger("stop", f) !== !1 && this._clear()
            }
            return !1
        },
        _mouseUp: function(e) {
            return d("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            }),
            d.ui.ddmanager && d.ui.ddmanager.dragStop(this, e),
            d.ui.mouse.prototype._mouseUp.call(this, e)
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(),
            this
        },
        _getHandle: function(e) {
            var f = !this.options.handle || !d(this.options.handle, this.element).length ? !0 : !1;
            return d(this.options.handle, this.element).find("*").andSelf().each(function() {
                this == e.target && (f = !0)
            }),
            f
        },
        _createHelper: function(e) {
            var g = this.options
              , f = d.isFunction(g.helper) ? d(g.helper.apply(this.element[0], [e])) : g.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;
            return f.parents("body").length || f.appendTo(g.appendTo == "parent" ? this.element[0].parentNode : g.appendTo),
            f[0] != this.element[0] && !/(fixed|absolute)/.test(f.css("position")) && f.css("position", "absolute"),
            f
        },
        _adjustOffsetFromHelper: function(e) {
            typeof e == "string" && (e = e.split(" ")),
            d.isArray(e) && (e = {
                left: +e[0],
                top: +e[1] || 0
            }),
            "left" in e && (this.offset.click.left = e.left + this.margins.left),
            "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left),
            "top" in e && (this.offset.click.top = e.top + this.margins.top),
            "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var e = this.offsetParent.offset();
            this.cssPosition == "absolute" && this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(),
            e.top += this.scrollParent.scrollTop());
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.ui.ie) {
                e = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var f = this.element.position();
                return {
                    top: f.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: f.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var f = this.options;
            f.containment == "parent" && (f.containment = this.helper[0].parentNode);
            if (f.containment == "document" || f.containment == "window") {
                this.containment = [f.containment == "document" ? 0 : d(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, f.containment == "document" ? 0 : d(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (f.containment == "document" ? 0 : d(window).scrollLeft()) + d(f.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (f.containment == "document" ? 0 : d(window).scrollTop()) + (d(f.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!/^(document|window|parent)$/.test(f.containment) && f.containment.constructor != Array) {
                var m = d(f.containment)
                  , h = m[0];
                if (!h) {
                    return
                }
                var e = m.offset()
                  , g = d(h).css("overflow") != "hidden";
                this.containment = [(parseInt(d(h).css("borderLeftWidth"), 10) || 0) + (parseInt(d(h).css("paddingLeft"), 10) || 0), (parseInt(d(h).css("borderTopWidth"), 10) || 0) + (parseInt(d(h).css("paddingTop"), 10) || 0), (g ? Math.max(h.scrollWidth, h.offsetWidth) : h.offsetWidth) - (parseInt(d(h).css("borderLeftWidth"), 10) || 0) - (parseInt(d(h).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (g ? Math.max(h.scrollHeight, h.offsetHeight) : h.offsetHeight) - (parseInt(d(h).css("borderTopWidth"), 10) || 0) - (parseInt(d(h).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom],
                this.relative_container = m
            } else {
                f.containment.constructor == Array && (this.containment = f.containment)
            }
        },
        _convertPositionTo: function(f, p) {
            p || (p = this.position);
            var h = f == "absolute" ? 1 : -1
              , e = this.options
              , g = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!d.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , m = /(html|body)/i.test(g[0].tagName);
            return {
                top: p.top + this.offset.relative.top * h + this.offset.parent.top * h - (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : m ? 0 : g.scrollTop()) * h,
                left: p.left + this.offset.relative.left * h + this.offset.parent.left * h - (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : m ? 0 : g.scrollLeft()) * h
            }
        },
        _generatePosition: function(B) {
            var h = this.options
              , e = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!d.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , p = /(html|body)/i.test(e[0].tagName)
              , C = B.pageX
              , g = B.pageY;
            if (this.originalPosition) {
                var z;
                if (this.containment) {
                    if (this.relative_container) {
                        var v = this.relative_container.offset();
                        z = [this.containment[0] + v.left, this.containment[1] + v.top, this.containment[2] + v.left, this.containment[3] + v.top]
                    } else {
                        z = this.containment
                    }
                    B.pageX - this.offset.click.left < z[0] && (C = z[0] + this.offset.click.left),
                    B.pageY - this.offset.click.top < z[1] && (g = z[1] + this.offset.click.top),
                    B.pageX - this.offset.click.left > z[2] && (C = z[2] + this.offset.click.left),
                    B.pageY - this.offset.click.top > z[3] && (g = z[3] + this.offset.click.top)
                }
                if (h.grid) {
                    var q = h.grid[1] ? this.originalPageY + Math.round((g - this.originalPageY) / h.grid[1]) * h.grid[1] : this.originalPageY;
                    g = z ? q - this.offset.click.top < z[1] || q - this.offset.click.top > z[3] ? q - this.offset.click.top < z[1] ? q + h.grid[1] : q - h.grid[1] : q : q;
                    var m = h.grid[0] ? this.originalPageX + Math.round((C - this.originalPageX) / h.grid[0]) * h.grid[0] : this.originalPageX;
                    C = z ? m - this.offset.click.left < z[0] || m - this.offset.click.left > z[2] ? m - this.offset.click.left < z[0] ? m + h.grid[0] : m - h.grid[0] : m : m
                }
            }
            return {
                top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : p ? 0 : e.scrollTop()),
                left: C - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : p ? 0 : e.scrollLeft())
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging"),
            this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove(),
            this.helper = null ,
            this.cancelHelperRemoval = !1
        },
        _trigger: function(e, g, f) {
            return f = f || this._uiHash(),
            d.ui.plugin.call(this, e, [g, f]),
            e == "drag" && (this.positionAbs = this._convertPositionTo("absolute")),
            d.Widget.prototype._trigger.call(this, e, g, f)
        },
        plugins: {},
        _uiHash: function(f) {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }),
    d.ui.plugin.add("draggable", "connectToSortable", {
        start: function(f, m) {
            var h = d(this).data("draggable")
              , e = h.options
              , g = d.extend({}, m, {
                item: h.element
            });
            h.sortables = [],
            d(e.connectToSortable).each(function() {
                var o = d.data(this, "sortable");
                o && !o.options.disabled && (h.sortables.push({
                    instance: o,
                    shouldRevert: o.options.revert
                }),
                o.refreshPositions(),
                o._trigger("activate", f, g))
            })
        },
        stop: function(f, h) {
            var g = d(this).data("draggable")
              , e = d.extend({}, h, {
                item: g.element
            });
            d.each(g.sortables, function() {
                this.instance.isOver ? (this.instance.isOver = 0,
                g.cancelHelperRemoval = !0,
                this.instance.cancelHelperRemoval = !1,
                this.shouldRevert && (this.instance.options.revert = !0),
                this.instance._mouseStop(f),
                this.instance.options.helper = this.instance.options._helper,
                g.options.helper == "original" && this.instance.currentItem.css({
                    top: "auto",
                    left: "auto"
                })) : (this.instance.cancelHelperRemoval = !1,
                this.instance._trigger("deactivate", f, e))
            })
        },
        drag: function(f, m) {
            var h = d(this).data("draggable")
              , e = this
              , g = function(E) {
                var v = this.offset.click.top
                  , p = this.offset.click.left
                  , z = this.positionAbs.top
                  , F = this.positionAbs.left
                  , q = E.height
                  , D = E.width
                  , C = E.top
                  , B = E.left;
                return d.ui.isOver(z + v, F + p, C, B, q, D)
            }
            ;
            d.each(h.sortables, function(q) {
                var r = !1
                  , p = this;
                this.instance.positionAbs = h.positionAbs,
                this.instance.helperProportions = h.helperProportions,
                this.instance.offset.click = h.offset.click,
                this.instance._intersectsWith(this.instance.containerCache) && (r = !0,
                d.each(h.sortables, function() {
                    return this.instance.positionAbs = h.positionAbs,
                    this.instance.helperProportions = h.helperProportions,
                    this.instance.offset.click = h.offset.click,
                    this != p && this.instance._intersectsWith(this.instance.containerCache) && d.ui.contains(p.instance.element[0], this.instance.element[0]) && (r = !1),
                    r
                })),
                r ? (this.instance.isOver || (this.instance.isOver = 1,
                this.instance.currentItem = d(e).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0),
                this.instance.options._helper = this.instance.options.helper,
                this.instance.options.helper = function() {
                    return m.helper[0]
                }
                ,
                f.target = this.instance.currentItem[0],
                this.instance._mouseCapture(f, !0),
                this.instance._mouseStart(f, !0, !0),
                this.instance.offset.click.top = h.offset.click.top,
                this.instance.offset.click.left = h.offset.click.left,
                this.instance.offset.parent.left -= h.offset.parent.left - this.instance.offset.parent.left,
                this.instance.offset.parent.top -= h.offset.parent.top - this.instance.offset.parent.top,
                h._trigger("toSortable", f),
                h.dropped = this.instance.element,
                h.currentItem = h.element,
                this.instance.fromOutside = h),
                this.instance.currentItem && this.instance._mouseDrag(f)) : this.instance.isOver && (this.instance.isOver = 0,
                this.instance.cancelHelperRemoval = !0,
                this.instance.options.revert = !1,
                this.instance._trigger("out", f, this.instance._uiHash(this.instance)),
                this.instance._mouseStop(f, !0),
                this.instance.options.helper = this.instance.options._helper,
                this.instance.currentItem.remove(),
                this.instance.placeholder && this.instance.placeholder.remove(),
                h._trigger("fromSortable", f),
                h.dropped = !1)
            })
        }
    }),
    d.ui.plugin.add("draggable", "cursor", {
        start: function(f, h) {
            var g = d("body")
              , e = d(this).data("draggable").options;
            g.css("cursor") && (e._cursor = g.css("cursor")),
            g.css("cursor", e.cursor)
        },
        stop: function(e, g) {
            var f = d(this).data("draggable").options;
            f._cursor && d("body").css("cursor", f._cursor)
        }
    }),
    d.ui.plugin.add("draggable", "opacity", {
        start: function(f, h) {
            var g = d(h.helper)
              , e = d(this).data("draggable").options;
            g.css("opacity") && (e._opacity = g.css("opacity")),
            g.css("opacity", e.opacity)
        },
        stop: function(e, g) {
            var f = d(this).data("draggable").options;
            f._opacity && d(g.helper).css("opacity", f._opacity)
        }
    }),
    d.ui.plugin.add("draggable", "scroll", {
        start: function(e, g) {
            var f = d(this).data("draggable");
            f.scrollParent[0] != document && f.scrollParent[0].tagName != "HTML" && (f.overflowOffset = f.scrollParent.offset())
        },
        drag: function(f, m) {
            var h = d(this).data("draggable")
              , e = h.options
              , g = !1;
            if (h.scrollParent[0] != document && h.scrollParent[0].tagName != "HTML") {
                if (!e.axis || e.axis != "x") {
                    h.overflowOffset.top + h.scrollParent[0].offsetHeight - f.pageY < e.scrollSensitivity ? h.scrollParent[0].scrollTop = g = h.scrollParent[0].scrollTop + e.scrollSpeed : f.pageY - h.overflowOffset.top < e.scrollSensitivity && (h.scrollParent[0].scrollTop = g = h.scrollParent[0].scrollTop - e.scrollSpeed)
                }
                if (!e.axis || e.axis != "y") {
                    h.overflowOffset.left + h.scrollParent[0].offsetWidth - f.pageX < e.scrollSensitivity ? h.scrollParent[0].scrollLeft = g = h.scrollParent[0].scrollLeft + e.scrollSpeed : f.pageX - h.overflowOffset.left < e.scrollSensitivity && (h.scrollParent[0].scrollLeft = g = h.scrollParent[0].scrollLeft - e.scrollSpeed)
                }
            } else {
                if (!e.axis || e.axis != "x") {
                    f.pageY - d(document).scrollTop() < e.scrollSensitivity ? g = d(document).scrollTop(d(document).scrollTop() - e.scrollSpeed) : d(window).height() - (f.pageY - d(document).scrollTop()) < e.scrollSensitivity && (g = d(document).scrollTop(d(document).scrollTop() + e.scrollSpeed))
                }
                if (!e.axis || e.axis != "y") {
                    f.pageX - d(document).scrollLeft() < e.scrollSensitivity ? g = d(document).scrollLeft(d(document).scrollLeft() - e.scrollSpeed) : d(window).width() - (f.pageX - d(document).scrollLeft()) < e.scrollSensitivity && (g = d(document).scrollLeft(d(document).scrollLeft() + e.scrollSpeed))
                }
            }
            g !== !1 && d.ui.ddmanager && !e.dropBehaviour && d.ui.ddmanager.prepareOffsets(h, f)
        }
    }),
    d.ui.plugin.add("draggable", "snap", {
        start: function(f, h) {
            var g = d(this).data("draggable")
              , e = g.options;
            g.snapElements = [],
            d(e.snap.constructor != String ? e.snap.items || ":data(draggable)" : e.snap).each(function() {
                var m = d(this)
                  , o = m.offset();
                this != g.element[0] && g.snapElements.push({
                    item: this,
                    width: m.outerWidth(),
                    height: m.outerHeight(),
                    top: o.top,
                    left: o.left
                })
            })
        },
        drag: function(B, G) {
            var D = d(this).data("draggable")
              , J = D.options
              , C = J.snapTolerance
              , F = G.offset.left
              , z = F + D.helperProportions.width
              , R = G.offset.top
              , N = R + D.helperProportions.height;
            for (var I = D.snapElements.length - 1; I >= 0; I--) {
                var P = D.snapElements[I].left
                  , K = P + D.snapElements[I].width
                  , E = D.snapElements[I].top
                  , O = E + D.snapElements[I].height;
                if (!(P - C < F && F < K + C && E - C < R && R < O + C || P - C < F && F < K + C && E - C < N && N < O + C || P - C < z && z < K + C && E - C < R && R < O + C || P - C < z && z < K + C && E - C < N && N < O + C)) {
                    D.snapElements[I].snapping && D.options.snap.release && D.options.snap.release.call(D.element, B, d.extend(D._uiHash(), {
                        snapItem: D.snapElements[I].item
                    })),
                    D.snapElements[I].snapping = !1;
                    continue
                }
                if (J.snapMode != "inner") {
                    var q = Math.abs(E - N) <= C
                      , H = Math.abs(O - R) <= C
                      , M = Math.abs(P - z) <= C
                      , e = Math.abs(K - F) <= C;
                    q && (G.position.top = D._convertPositionTo("relative", {
                        top: E - D.helperProportions.height,
                        left: 0
                    }).top - D.margins.top),
                    H && (G.position.top = D._convertPositionTo("relative", {
                        top: O,
                        left: 0
                    }).top - D.margins.top),
                    M && (G.position.left = D._convertPositionTo("relative", {
                        top: 0,
                        left: P - D.helperProportions.width
                    }).left - D.margins.left),
                    e && (G.position.left = D._convertPositionTo("relative", {
                        top: 0,
                        left: K
                    }).left - D.margins.left)
                }
                var Q = q || H || M || e;
                if (J.snapMode != "outer") {
                    var q = Math.abs(E - R) <= C
                      , H = Math.abs(O - N) <= C
                      , M = Math.abs(P - F) <= C
                      , e = Math.abs(K - z) <= C;
                    q && (G.position.top = D._convertPositionTo("relative", {
                        top: E,
                        left: 0
                    }).top - D.margins.top),
                    H && (G.position.top = D._convertPositionTo("relative", {
                        top: O - D.helperProportions.height,
                        left: 0
                    }).top - D.margins.top),
                    M && (G.position.left = D._convertPositionTo("relative", {
                        top: 0,
                        left: P
                    }).left - D.margins.left),
                    e && (G.position.left = D._convertPositionTo("relative", {
                        top: 0,
                        left: K - D.helperProportions.width
                    }).left - D.margins.left)
                }
                !D.snapElements[I].snapping && (q || H || M || e || Q) && D.options.snap.snap && D.options.snap.snap.call(D.element, B, d.extend(D._uiHash(), {
                    snapItem: D.snapElements[I].item
                })),
                D.snapElements[I].snapping = q || H || M || e || Q
            }
        }
    }),
    d.ui.plugin.add("draggable", "stack", {
        start: function(f, m) {
            var h = d(this).data("draggable").options
              , e = d.makeArray(d(h.stack)).sort(function(o, p) {
                return (parseInt(d(o).css("zIndex"), 10) || 0) - (parseInt(d(p).css("zIndex"), 10) || 0)
            });
            if (!e.length) {
                return
            }
            var g = parseInt(e[0].style.zIndex) || 0;
            d(e).each(function(o) {
                this.style.zIndex = g + o
            }),
            this[0].style.zIndex = g + e.length
        }
    }),
    d.ui.plugin.add("draggable", "zIndex", {
        start: function(f, h) {
            var g = d(h.helper)
              , e = d(this).data("draggable").options;
            g.css("zIndex") && (e._zIndex = g.css("zIndex")),
            g.css("zIndex", e.zIndex)
        },
        stop: function(e, g) {
            var f = d(this).data("draggable").options;
            f._zIndex && d(g.helper).css("zIndex", f._zIndex)
        }
    })
})(jQuery);
(function(d, a) {
    d.widget("ui.droppable", {
        version: "1.9.2",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function() {
            var e = this.options
              , f = e.accept;
            this.isover = 0,
            this.isout = 1,
            this.accept = d.isFunction(f) ? f : function(g) {
                return g.is(f)
            }
            ,
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            },
            d.ui.ddmanager.droppables[e.scope] = d.ui.ddmanager.droppables[e.scope] || [],
            d.ui.ddmanager.droppables[e.scope].push(this),
            e.addClasses && this.element.addClass("ui-droppable")
        },
        _destroy: function() {
            var e = d.ui.ddmanager.droppables[this.options.scope];
            for (var f = 0; f < e.length; f++) {
                e[f] == this && e.splice(f, 1)
            }
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(e, f) {
            e == "accept" && (this.accept = d.isFunction(f) ? f : function(g) {
                return g.is(f)
            }
            ),
            d.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(e) {
            var f = d.ui.ddmanager.current;
            this.options.activeClass && this.element.addClass(this.options.activeClass),
            f && this._trigger("activate", e, this.ui(f))
        },
        _deactivate: function(e) {
            var f = d.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass),
            f && this._trigger("deactivate", e, this.ui(f))
        },
        _over: function(e) {
            var f = d.ui.ddmanager.current;
            if (!f || (f.currentItem || f.element)[0] == this.element[0]) {
                return
            }
            this.accept.call(this.element[0], f.currentItem || f.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass),
            this._trigger("over", e, this.ui(f)))
        },
        _out: function(e) {
            var f = d.ui.ddmanager.current;
            if (!f || (f.currentItem || f.element)[0] == this.element[0]) {
                return
            }
            this.accept.call(this.element[0], f.currentItem || f.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass),
            this._trigger("out", e, this.ui(f)))
        },
        _drop: function(f, h) {
            var g = h || d.ui.ddmanager.current;
            if (!g || (g.currentItem || g.element)[0] == this.element[0]) {
                return !1
            }
            var e = !1;
            return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                var m = d.data(this, "droppable");
                if (m.options.greedy && !m.options.disabled && m.options.scope == g.options.scope && m.accept.call(m.element[0], g.currentItem || g.element) && d.ui.intersect(g, d.extend(m, {
                    offset: m.element.offset()
                }), m.options.tolerance)) {
                    return e = !0,
                    !1
                }
            }),
            e ? !1 : this.accept.call(this.element[0], g.currentItem || g.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass),
            this.options.hoverClass && this.element.removeClass(this.options.hoverClass),
            this._trigger("drop", f, this.ui(g)),
            this.element) : !1
        },
        ui: function(f) {
            return {
                draggable: f.currentItem || f.element,
                helper: f.helper,
                position: f.position,
                offset: f.positionAbs
            }
        }
    }),
    d.ui.intersect = function(H, q, e) {
        if (!q.offset) {
            return !1
        }
        var z = (H.positionAbs || H.position.absolute).left
          , I = z + H.helperProportions.width
          , m = (H.positionAbs || H.position.absolute).top
          , G = m + H.helperProportions.height
          , F = q.offset.left
          , C = F + q.proportions.width
          , v = q.offset.top
          , E = v + q.proportions.height;
        switch (e) {
        case "fit":
            return F <= z && I <= C && v <= m && G <= E;
        case "intersect":
            return F < z + H.helperProportions.width / 2 && I - H.helperProportions.width / 2 < C && v < m + H.helperProportions.height / 2 && G - H.helperProportions.height / 2 < E;
        case "pointer":
            var B = (H.positionAbs || H.position.absolute).left + (H.clickOffset || H.offset.click).left
              , g = (H.positionAbs || H.position.absolute).top + (H.clickOffset || H.offset.click).top
              , D = d.ui.isOver(g, B, v, F, q.proportions.height, q.proportions.width);
            return D;
        case "touch":
            return (m >= v && m <= E || G >= v && G <= E || m < v && G > E) && (z >= F && z <= C || I >= F && I <= C || z < F && I > C);
        default:
            return !1
        }
    }
    ,
    d.ui.ddmanager = {
        current: null ,
        droppables: {
            "default": []
        },
        prepareOffsets: function(g, q) {
            var m = d.ui.ddmanager.droppables[g.options.scope] || []
              , f = q ? q.type : null 
              , h = (g.currentItem || g.element).find(":data(droppable)").andSelf();
            d: for (var p = 0; p < m.length; p++) {
                if (m[p].options.disabled || g && !m[p].accept.call(m[p].element[0], g.currentItem || g.element)) {
                    continue
                }
                for (var e = 0; e < h.length; e++) {
                    if (h[e] == m[p].element[0]) {
                        m[p].proportions.height = 0;
                        continue d
                    }
                }
                m[p].visible = m[p].element.css("display") != "none";
                if (!m[p].visible) {
                    continue
                }
                f == "mousedown" && m[p]._activate.call(m[p], q),
                m[p].offset = m[p].element.offset(),
                m[p].proportions = {
                    width: m[p].element[0].offsetWidth,
                    height: m[p].element[0].offsetHeight
                }
            }
        },
        drop: function(e, g) {
            var f = !1;
            return d.each(d.ui.ddmanager.droppables[e.options.scope] || [], function() {
                if (!this.options) {
                    return
                }
                !this.options.disabled && this.visible && d.ui.intersect(e, this, this.options.tolerance) && (f = this._drop.call(this, g) || f),
                !this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element) && (this.isout = 1,
                this.isover = 0,
                this._deactivate.call(this, g))
            }),
            f
        },
        dragStart: function(e, f) {
            e.element.parentsUntil("body").bind("scroll.droppable", function() {
                e.options.refreshPositions || d.ui.ddmanager.prepareOffsets(e, f)
            })
        },
        drag: function(e, f) {
            e.options.refreshPositions && d.ui.ddmanager.prepareOffsets(e, f),
            d.each(d.ui.ddmanager.droppables[e.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                }
                var p = d.ui.intersect(e, this, this.options.tolerance)
                  , h = !p && this.isover == 1 ? "isout" : p && this.isover == 0 ? "isover" : null ;
                if (!h) {
                    return
                }
                var m;
                if (this.options.greedy) {
                    var q = this.options.scope
                      , g = this.element.parents(":data(droppable)").filter(function() {
                        return d.data(this, "droppable").options.scope === q
                    });
                    g.length && (m = d.data(g[0], "droppable"),
                    m.greedyChild = h == "isover" ? 1 : 0)
                }
                m && h == "isover" && (m.isover = 0,
                m.isout = 1,
                m._out.call(m, f)),
                this[h] = 1,
                this[h == "isout" ? "isover" : "isout"] = 0,
                this[h == "isover" ? "_over" : "_out"].call(this, f),
                m && h == "isout" && (m.isout = 0,
                m.isover = 1,
                m._over.call(m, f))
            })
        },
        dragStop: function(e, f) {
            e.element.parentsUntil("body").unbind("scroll.droppable"),
            e.options.refreshPositions || d.ui.ddmanager.prepareOffsets(e, f)
        }
    }
})(jQuery);
(function(f, a) {
    f.widget("ui.resizable", f.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null ,
            maxWidth: null ,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1000
        },
        _create: function() {
            var m = this
              , z = this.options;
            this.element.addClass("ui-resizable"),
            f.extend(this, {
                _aspectRatio: !!z.aspectRatio,
                aspectRatio: z.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: z.helper || z.ghost || z.animate ? z.helper || "ui-resizable-helper" : null 
            }),
            this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(f('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })),
            this.element = this.element.parent().data("resizable", this.element.data("resizable")),
            this.elementIsWrapper = !0,
            this.element.css({
                marginLeft: this.originalElement.css("marginLeft"),
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom")
            }),
            this.originalElement.css({
                marginLeft: 0,
                marginTop: 0,
                marginRight: 0,
                marginBottom: 0
            }),
            this.originalResizeStyle = this.originalElement.css("resize"),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })),
            this.originalElement.css({
                margin: this.originalElement.css("margin")
            }),
            this._proportionallyResize()),
            this.handles = z.handles || (f(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se");
            if (this.handles.constructor == String) {
                this.handles == "all" && (this.handles = "n,e,s,w,se,sw,ne,nw");
                var q = this.handles.split(",");
                this.handles = {};
                for (var h = 0; h < q.length; h++) {
                    var p = f.trim(q[h])
                      , v = "ui-resizable-" + p
                      , e = f('<div class="ui-resizable-handle ' + v + '"></div>');
                    e.css({
                        zIndex: z.zIndex
                    }),
                    "se" == p && e.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),
                    this.handles[p] = ".ui-resizable-" + p,
                    this.element.append(e)
                }
            }
            this._renderAxis = function(u) {
                u = u || this.element;
                for (var D in this.handles) {
                    this.handles[D].constructor == String && (this.handles[D] = f(this.handles[D], this.element).show());
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var C = f(this.handles[D], this.element)
                          , o = 0;
                        o = /sw|ne|nw|se|n|s/.test(D) ? C.outerHeight() : C.outerWidth();
                        var B = ["padding", /ne|nw|n/.test(D) ? "Top" : /se|sw|s/.test(D) ? "Bottom" : /^e$/.test(D) ? "Right" : "Left"].join("");
                        u.css(B, o),
                        this._proportionallyResize()
                    }
                    if (!f(this.handles[D]).length) {
                        continue
                    }
                }
            }
            ,
            this._renderAxis(this.element),
            this._handles = f(".ui-resizable-handle", this.element).disableSelection(),
            this._handles.mouseover(function() {
                if (!m.resizing) {
                    if (this.className) {
                        var o = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    }
                    m.axis = o && o[1] ? o[1] : "se"
                }
            }),
            z.autoHide && (this._handles.hide(),
            f(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                if (z.disabled) {
                    return
                }
                f(this).removeClass("ui-resizable-autohide"),
                m._handles.show()
            }).mouseleave(function() {
                if (z.disabled) {
                    return
                }
                m.resizing || (f(this).addClass("ui-resizable-autohide"),
                m._handles.hide())
            })),
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var e = function(m) {
                f(m).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            }
            ;
            if (this.elementIsWrapper) {
                e(this.element);
                var h = this.element;
                this.originalElement.css({
                    position: h.css("position"),
                    width: h.outerWidth(),
                    height: h.outerHeight(),
                    top: h.css("top"),
                    left: h.css("left")
                }).insertAfter(h),
                h.remove()
            }
            return this.originalElement.css("resize", this.originalResizeStyle),
            e(this.originalElement),
            this
        },
        _mouseCapture: function(e) {
            var m = !1;
            for (var h in this.handles) {
                f(this.handles[h])[0] == e.target && (m = !0)
            }
            return !this.options.disabled && m
        },
        _mouseStart: function(p) {
            var v = this.options
              , m = this.element.position()
              , q = this.element;
            this.resizing = !0,
            this.documentScroll = {
                top: f(document).scrollTop(),
                left: f(document).scrollLeft()
            },
            (q.is(".ui-draggable") || /absolute/.test(q.css("position"))) && q.css({
                position: "absolute",
                top: m.top,
                left: m.left
            }),
            this._renderProxy();
            var z = g(this.helper.css("left"))
              , h = g(this.helper.css("top"));
            v.containment && (z += f(v.containment).scrollLeft() || 0,
            h += f(v.containment).scrollTop() || 0),
            this.offset = this.helper.offset(),
            this.position = {
                left: z,
                top: h
            },
            this.size = this._helper ? {
                width: q.outerWidth(),
                height: q.outerHeight()
            } : {
                width: q.width(),
                height: q.height()
            },
            this.originalSize = this._helper ? {
                width: q.outerWidth(),
                height: q.outerHeight()
            } : {
                width: q.width(),
                height: q.height()
            },
            this.originalPosition = {
                left: z,
                top: h
            },
            this.sizeDiff = {
                width: q.outerWidth() - q.width(),
                height: q.outerHeight() - q.height()
            },
            this.originalMousePosition = {
                left: p.pageX,
                top: p.pageY
            },
            this.aspectRatio = typeof v.aspectRatio == "number" ? v.aspectRatio : this.originalSize.width / this.originalSize.height || 1;
            var e = f(".ui-resizable-" + this.axis).css("cursor");
            return f("body").css("cursor", e == "auto" ? this.axis + "-resize" : e),
            q.addClass("ui-resizable-resizing"),
            this._propagate("start", p),
            !0
        },
        _mouseDrag: function(B) {
            var E = this.helper
              , p = this.options
              , h = {}
              , v = this
              , F = this.originalMousePosition
              , m = this.axis
              , D = B.pageX - F.left || 0
              , C = B.pageY - F.top || 0
              , z = this._change[m];
            if (!z) {
                return !1
            }
            var q = z.apply(this, [B, D, C]);
            this._updateVirtualBoundaries(B.shiftKey);
            if (this._aspectRatio || B.shiftKey) {
                q = this._updateRatio(q, B)
            }
            return q = this._respectSize(q, B),
            this._propagate("resize", B),
            E.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            }),
            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(),
            this._updateCache(q),
            this._trigger("resize", B, this.ui()),
            !1
        },
        _mouseStop: function(C) {
            this.resizing = !1;
            var m = this.options
              , e = this;
            if (this._helper) {
                var q = this._proportionallyResizeElements
                  , D = q.length && /textarea/i.test(q[0].nodeName)
                  , h = D && f.ui.hasScroll(q[0], "left") ? 0 : e.sizeDiff.height
                  , B = D ? 0 : e.sizeDiff.width
                  , z = {
                    width: e.helper.width() - B,
                    height: e.helper.height() - h
                }
                  , v = parseInt(e.element.css("left"), 10) + (e.position.left - e.originalPosition.left) || null 
                  , p = parseInt(e.element.css("top"), 10) + (e.position.top - e.originalPosition.top) || null ;
                m.animate || this.element.css(f.extend(z, {
                    top: p,
                    left: v
                })),
                e.helper.height(e.size.height),
                e.helper.width(e.size.width),
                this._helper && !m.animate && this._proportionallyResize()
            }
            return f("body").css("cursor", "auto"),
            this.element.removeClass("ui-resizable-resizing"),
            this._propagate("stop", C),
            this._helper && this.helper.remove(),
            !1
        },
        _updateVirtualBoundaries: function(r) {
            var p = this.options, z, m, q, v, h;
            h = {
                minWidth: d(p.minWidth) ? p.minWidth : 0,
                maxWidth: d(p.maxWidth) ? p.maxWidth : Infinity,
                minHeight: d(p.minHeight) ? p.minHeight : 0,
                maxHeight: d(p.maxHeight) ? p.maxHeight : Infinity
            };
            if (this._aspectRatio || r) {
                z = h.minHeight * this.aspectRatio,
                q = h.minWidth / this.aspectRatio,
                m = h.maxHeight * this.aspectRatio,
                v = h.maxWidth / this.aspectRatio,
                z > h.minWidth && (h.minWidth = z),
                q > h.minHeight && (h.minHeight = q),
                m < h.maxWidth && (h.maxWidth = m),
                v < h.maxHeight && (h.maxHeight = v)
            }
            this._vBoundaries = h
        },
        _updateCache: function(m) {
            var h = this.options;
            this.offset = this.helper.offset(),
            d(m.left) && (this.position.left = m.left),
            d(m.top) && (this.position.top = m.top),
            d(m.height) && (this.size.height = m.height),
            d(m.width) && (this.size.width = m.width)
        },
        _updateRatio: function(q, m) {
            var u = this.options
              , h = this.position
              , p = this.size
              , r = this.axis;
            return d(q.height) ? q.width = q.height * this.aspectRatio : d(q.width) && (q.height = q.width / this.aspectRatio),
            r == "sw" && (q.left = h.left + (p.width - q.width),
            q.top = null ),
            r == "nw" && (q.top = h.top + (p.height - q.height),
            q.left = h.left + (p.width - q.width)),
            q
        },
        _respectSize: function(E, K) {
            var r = this.helper
              , B = this._vBoundaries
              , M = this._aspectRatio || K.shiftKey
              , q = this.axis
              , J = d(E.width) && B.maxWidth && B.maxWidth < E.width
              , H = d(E.height) && B.maxHeight && B.maxHeight < E.height
              , D = d(E.width) && B.minWidth && B.minWidth > E.width
              , z = d(E.height) && B.minHeight && B.minHeight > E.height;
            D && (E.width = B.minWidth),
            z && (E.height = B.minHeight),
            J && (E.width = B.maxWidth),
            H && (E.height = B.maxHeight);
            var G = this.originalPosition.left + this.originalSize.width
              , C = this.position.top + this.size.height
              , m = /sw|nw|w/.test(q)
              , F = /nw|ne|n/.test(q);
            D && m && (E.left = G - B.minWidth),
            J && m && (E.left = G - B.maxWidth),
            z && F && (E.top = C - B.minHeight),
            H && F && (E.top = C - B.maxHeight);
            var I = !E.width && !E.height;
            return I && !E.left && E.top ? E.top = null  : I && !E.top && E.left && (E.left = null ),
            E
        },
        _proportionallyResize: function() {
            var h = this.options;
            if (!this._proportionallyResizeElements.length) {
                return
            }
            var u = this.helper || this.element;
            for (var p = 0; p < this._proportionallyResizeElements.length; p++) {
                var e = this._proportionallyResizeElements[p];
                if (!this.borderDif) {
                    var m = [e.css("borderTopWidth"), e.css("borderRightWidth"), e.css("borderBottomWidth"), e.css("borderLeftWidth")]
                      , q = [e.css("paddingTop"), e.css("paddingRight"), e.css("paddingBottom"), e.css("paddingLeft")];
                    this.borderDif = f.map(m, function(z, o) {
                        var B = parseInt(z, 10) || 0
                          , v = parseInt(q[o], 10) || 0;
                        return B + v
                    })
                }
                e.css({
                    height: u.height() - this.borderDif[0] - this.borderDif[2] || 0,
                    width: u.width() - this.borderDif[1] - this.borderDif[3] || 0
                })
            }
        },
        _renderProxy: function() {
            var h = this.element
              , o = this.options;
            this.elementOffset = h.offset();
            if (this._helper) {
                this.helper = this.helper || f('<div style="overflow:hidden;"></div>');
                var m = f.ui.ie6 ? 1 : 0
                  , e = f.ui.ie6 ? 2 : -1;
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + e,
                    height: this.element.outerHeight() + e,
                    position: "absolute",
                    left: this.elementOffset.left - m + "px",
                    top: this.elementOffset.top - m + "px",
                    zIndex: ++o.zIndex
                }),
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        },
        _change: {
            e: function(m, h, o) {
                return {
                    width: this.originalSize.width + h
                }
            },
            w: function(q, m, u) {
                var p = this.options
                  , h = this.originalSize
                  , o = this.originalPosition;
                return {
                    left: o.left + m,
                    width: h.width - m
                }
            },
            n: function(q, m, u) {
                var p = this.options
                  , h = this.originalSize
                  , o = this.originalPosition;
                return {
                    top: o.top + u,
                    height: h.height - u
                }
            },
            s: function(m, h, o) {
                return {
                    height: this.originalSize.height + o
                }
            },
            se: function(e, m, h) {
                return f.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, m, h]))
            },
            sw: function(e, m, h) {
                return f.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, m, h]))
            },
            ne: function(e, m, h) {
                return f.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, m, h]))
            },
            nw: function(e, m, h) {
                return f.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, m, h]))
            }
        },
        _propagate: function(e, h) {
            f.ui.plugin.call(this, e, [h, this.ui()]),
            e != "resize" && this._trigger(e, h, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }),
    f.ui.plugin.add("resizable", "alsoResize", {
        start: function(h, p) {
            var o = f(this).data("resizable")
              , e = o.options
              , m = function(q) {
                f(q).each(function() {
                    var r = f(this);
                    r.data("resizable-alsoresize", {
                        width: parseInt(r.width(), 10),
                        height: parseInt(r.height(), 10),
                        left: parseInt(r.css("left"), 10),
                        top: parseInt(r.css("top"), 10)
                    })
                })
            }
            ;
            typeof e.alsoResize == "object" && !e.alsoResize.parentNode ? e.alsoResize.length ? (e.alsoResize = e.alsoResize[0],
            m(e.alsoResize)) : f.each(e.alsoResize, function(q) {
                m(q)
            }) : m(e.alsoResize)
        },
        resize: function(p, B) {
            var v = f(this).data("resizable")
              , m = v.options
              , q = v.originalSize
              , z = v.originalPosition
              , h = {
                height: v.size.height - q.height || 0,
                width: v.size.width - q.width || 0,
                top: v.position.top - z.top || 0,
                left: v.position.left - z.left || 0
            }
              , e = function(o, u) {
                f(o).each(function() {
                    var C = f(this)
                      , r = f(this).data("resizable-alsoresize")
                      , D = {}
                      , E = u && u.length ? u : C.parents(B.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                    f.each(E, function(G, F) {
                        var H = (r[F] || 0) + (h[F] || 0);
                        H && H >= 0 && (D[F] = H || null )
                    }),
                    C.css(D)
                })
            }
            ;
            typeof m.alsoResize == "object" && !m.alsoResize.nodeType ? f.each(m.alsoResize, function(r, o) {
                e(r, o)
            }) : e(m.alsoResize)
        },
        stop: function(e, h) {
            f(this).removeData("resizable-alsoresize")
        }
    }),
    f.ui.plugin.add("resizable", "animate", {
        stop: function(D, m) {
            var e = f(this).data("resizable")
              , q = e.options
              , E = e._proportionallyResizeElements
              , h = E.length && /textarea/i.test(E[0].nodeName)
              , C = h && f.ui.hasScroll(E[0], "left") ? 0 : e.sizeDiff.height
              , B = h ? 0 : e.sizeDiff.width
              , v = {
                width: e.size.width - B,
                height: e.size.height - C
            }
              , p = parseInt(e.element.css("left"), 10) + (e.position.left - e.originalPosition.left) || null 
              , z = parseInt(e.element.css("top"), 10) + (e.position.top - e.originalPosition.top) || null ;
            e.element.animate(f.extend(v, z && p ? {
                top: z,
                left: p
            } : {}), {
                duration: q.animateDuration,
                easing: q.animateEasing,
                step: function() {
                    var o = {
                        width: parseInt(e.element.css("width"), 10),
                        height: parseInt(e.element.css("height"), 10),
                        top: parseInt(e.element.css("top"), 10),
                        left: parseInt(e.element.css("left"), 10)
                    };
                    E && E.length && f(E[0]).css({
                        width: o.width,
                        height: o.height
                    }),
                    e._updateCache(o),
                    e._propagate("resize", D)
                }
            })
        }
    }),
    f.ui.plugin.add("resizable", "containment", {
        start: function(J, e) {
            var B = f(this).data("resizable")
              , K = B.options
              , q = B.element
              , I = K.containment
              , G = I instanceof f ? I.get(0) : /parent/.test(I) ? q.parent().get(0) : I;
            if (!G) {
                return
            }
            B.containerElement = f(G);
            if (/document/.test(I) || I == document) {
                B.containerOffset = {
                    left: 0,
                    top: 0
                },
                B.containerPosition = {
                    left: 0,
                    top: 0
                },
                B.parentData = {
                    element: f(document),
                    left: 0,
                    top: 0,
                    width: f(document).width(),
                    height: f(document).height() || document.body.parentNode.scrollHeight
                }
            } else {
                var D = f(G)
                  , z = [];
                f(["Top", "Right", "Left", "Bottom"]).each(function(o, h) {
                    z[o] = g(D.css("padding" + h))
                }),
                B.containerOffset = D.offset(),
                B.containerPosition = D.position(),
                B.containerSize = {
                    height: D.innerHeight() - z[3],
                    width: D.innerWidth() - z[1]
                };
                var F = B.containerOffset
                  , C = B.containerSize.height
                  , m = B.containerSize.width
                  , E = f.ui.hasScroll(G, "left") ? G.scrollWidth : m
                  , H = f.ui.hasScroll(G) ? G.scrollHeight : C;
                B.parentData = {
                    element: G,
                    left: F.left,
                    top: F.top,
                    width: E,
                    height: H
                }
            }
        },
        resize: function(K, z) {
            var e = f(this).data("resizable")
              , C = e.options
              , M = e.containerSize
              , q = e.containerOffset
              , J = e.size
              , H = e.position
              , E = e._aspectRatio || K.shiftKey
              , B = {
                top: 0,
                left: 0
            }
              , G = e.containerElement;
            G[0] != document && /static/.test(G.css("position")) && (B = q),
            H.left < (e._helper ? q.left : 0) && (e.size.width = e.size.width + (e._helper ? e.position.left - q.left : e.position.left - B.left),
            E && (e.size.height = e.size.width / e.aspectRatio),
            e.position.left = C.helper ? q.left : 0),
            H.top < (e._helper ? q.top : 0) && (e.size.height = e.size.height + (e._helper ? e.position.top - q.top : e.position.top),
            E && (e.size.width = e.size.height * e.aspectRatio),
            e.position.top = e._helper ? q.top : 0),
            e.offset.left = e.parentData.left + e.position.left,
            e.offset.top = e.parentData.top + e.position.top;
            var D = Math.abs((e._helper ? e.offset.left - B.left : e.offset.left - B.left) + e.sizeDiff.width)
              , m = Math.abs((e._helper ? e.offset.top - B.top : e.offset.top - q.top) + e.sizeDiff.height)
              , F = e.containerElement.get(0) == e.element.parent().get(0)
              , I = /relative|absolute/.test(e.containerElement.css("position"));
            F && I && (D -= e.parentData.left),
            D + e.size.width >= e.parentData.width && (e.size.width = e.parentData.width - D,
            E && (e.size.height = e.size.width / e.aspectRatio)),
            m + e.size.height >= e.parentData.height && (e.size.height = e.parentData.height - m,
            E && (e.size.width = e.size.height * e.aspectRatio))
        },
        stop: function(F, p) {
            var e = f(this).data("resizable")
              , v = e.options
              , G = e.position
              , m = e.containerOffset
              , E = e.containerPosition
              , D = e.containerElement
              , B = f(e.helper)
              , q = B.offset()
              , C = B.outerWidth() - e.sizeDiff.width
              , z = B.outerHeight() - e.sizeDiff.height;
            e._helper && !v.animate && /relative/.test(D.css("position")) && f(this).css({
                left: q.left - E.left - m.left,
                width: C,
                height: z
            }),
            e._helper && !v.animate && /static/.test(D.css("position")) && f(this).css({
                left: q.left - E.left - m.left,
                width: C,
                height: z
            })
        }
    }),
    f.ui.plugin.add("resizable", "ghost", {
        start: function(h, p) {
            var o = f(this).data("resizable")
              , e = o.options
              , m = o.size;
            o.ghost = o.originalElement.clone(),
            o.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: m.height,
                width: m.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof e.ghost == "string" ? e.ghost : ""),
            o.ghost.appendTo(o.helper)
        },
        resize: function(h, o) {
            var m = f(this).data("resizable")
              , e = m.options;
            m.ghost && m.ghost.css({
                position: "relative",
                height: m.size.height,
                width: m.size.width
            })
        },
        stop: function(h, o) {
            var m = f(this).data("resizable")
              , e = m.options;
            m.ghost && m.helper && m.helper.get(0).removeChild(m.ghost.get(0))
        }
    }),
    f.ui.plugin.add("resizable", "grid", {
        resize: function(D, m) {
            var e = f(this).data("resizable")
              , q = e.options
              , E = e.size
              , h = e.originalSize
              , C = e.originalPosition
              , B = e.axis
              , v = q._aspectRatio || D.shiftKey;
            q.grid = typeof q.grid == "number" ? [q.grid, q.grid] : q.grid;
            var p = Math.round((E.width - h.width) / (q.grid[0] || 1)) * (q.grid[0] || 1)
              , z = Math.round((E.height - h.height) / (q.grid[1] || 1)) * (q.grid[1] || 1);
            /^(se|s|e)$/.test(B) ? (e.size.width = h.width + p,
            e.size.height = h.height + z) : /^(ne)$/.test(B) ? (e.size.width = h.width + p,
            e.size.height = h.height + z,
            e.position.top = C.top - z) : /^(sw)$/.test(B) ? (e.size.width = h.width + p,
            e.size.height = h.height + z,
            e.position.left = C.left - p) : (e.size.width = h.width + p,
            e.size.height = h.height + z,
            e.position.top = C.top - z,
            e.position.left = C.left - p)
        }
    });
    var g = function(h) {
        return parseInt(h, 10) || 0
    }
      , d = function(h) {
        return !isNaN(parseInt(h, 10))
    }
})(jQuery);
(function(d, a) {
    d.widget("ui.selectable", d.ui.mouse, {
        version: "1.9.2",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch"
        },
        _create: function() {
            var e = this;
            this.element.addClass("ui-selectable"),
            this.dragged = !1;
            var f;
            this.refresh = function() {
                f = d(e.options.filter, e.element[0]),
                f.addClass("ui-selectee"),
                f.each(function() {
                    var g = d(this)
                      , h = g.offset();
                    d.data(this, "selectable-item", {
                        element: this,
                        $element: g,
                        left: h.left,
                        top: h.top,
                        right: h.left + g.outerWidth(),
                        bottom: h.top + g.outerHeight(),
                        startselected: !1,
                        selected: g.hasClass("ui-selected"),
                        selecting: g.hasClass("ui-selecting"),
                        unselecting: g.hasClass("ui-unselecting")
                    })
                })
            }
            ,
            this.refresh(),
            this.selectees = f.addClass("ui-selectee"),
            this._mouseInit(),
            this.helper = d("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function() {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item"),
            this.element.removeClass("ui-selectable ui-selectable-disabled"),
            this._mouseDestroy()
        },
        _mouseStart: function(e) {
            var g = this;
            this.opos = [e.pageX, e.pageY];
            if (this.options.disabled) {
                return
            }
            var f = this.options;
            this.selectees = d(f.filter, this.element[0]),
            this._trigger("start", e),
            d(f.appendTo).append(this.helper),
            this.helper.css({
                left: e.clientX,
                top: e.clientY,
                width: 0,
                height: 0
            }),
            f.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function() {
                var h = d.data(this, "selectable-item");
                h.startselected = !0,
                !e.metaKey && !e.ctrlKey && (h.$element.removeClass("ui-selected"),
                h.selected = !1,
                h.$element.addClass("ui-unselecting"),
                h.unselecting = !0,
                g._trigger("unselecting", e, {
                    unselecting: h.element
                }))
            }),
            d(e.target).parents().andSelf().each(function() {
                var m = d.data(this, "selectable-item");
                if (m) {
                    var h = !e.metaKey && !e.ctrlKey || !m.$element.hasClass("ui-selected");
                    return m.$element.removeClass(h ? "ui-unselecting" : "ui-selected").addClass(h ? "ui-selecting" : "ui-unselecting"),
                    m.unselecting = !h,
                    m.selecting = h,
                    m.selected = h,
                    h ? g._trigger("selecting", e, {
                        selecting: m.element
                    }) : g._trigger("unselecting", e, {
                        unselecting: m.element
                    }),
                    !1
                }
            })
        },
        _mouseDrag: function(h) {
            var v = this;
            this.dragged = !0;
            if (this.options.disabled) {
                return
            }
            var p = this.options
              , g = this.opos[0]
              , m = this.opos[1]
              , q = h.pageX
              , f = h.pageY;
            if (g > q) {
                var e = q;
                q = g,
                g = e
            }
            if (m > f) {
                var e = f;
                f = m,
                m = e
            }
            return this.helper.css({
                left: g,
                top: m,
                width: q - g,
                height: f - m
            }),
            this.selectees.each(function() {
                var o = d.data(this, "selectable-item");
                if (!o || o.element == v.element[0]) {
                    return
                }
                var r = !1;
                p.tolerance == "touch" ? r = !(o.left > q || o.right < g || o.top > f || o.bottom < m) : p.tolerance == "fit" && (r = o.left > g && o.right < q && o.top > m && o.bottom < f),
                r ? (o.selected && (o.$element.removeClass("ui-selected"),
                o.selected = !1),
                o.unselecting && (o.$element.removeClass("ui-unselecting"),
                o.unselecting = !1),
                o.selecting || (o.$element.addClass("ui-selecting"),
                o.selecting = !0,
                v._trigger("selecting", h, {
                    selecting: o.element
                }))) : (o.selecting && ((h.metaKey || h.ctrlKey) && o.startselected ? (o.$element.removeClass("ui-selecting"),
                o.selecting = !1,
                o.$element.addClass("ui-selected"),
                o.selected = !0) : (o.$element.removeClass("ui-selecting"),
                o.selecting = !1,
                o.startselected && (o.$element.addClass("ui-unselecting"),
                o.unselecting = !0),
                v._trigger("unselecting", h, {
                    unselecting: o.element
                }))),
                o.selected && !h.metaKey && !h.ctrlKey && !o.startselected && (o.$element.removeClass("ui-selected"),
                o.selected = !1,
                o.$element.addClass("ui-unselecting"),
                o.unselecting = !0,
                v._trigger("unselecting", h, {
                    unselecting: o.element
                })))
            }),
            !1
        },
        _mouseStop: function(e) {
            var g = this;
            this.dragged = !1;
            var f = this.options;
            return d(".ui-unselecting", this.element[0]).each(function() {
                var h = d.data(this, "selectable-item");
                h.$element.removeClass("ui-unselecting"),
                h.unselecting = !1,
                h.startselected = !1,
                g._trigger("unselected", e, {
                    unselected: h.element
                })
            }),
            d(".ui-selecting", this.element[0]).each(function() {
                var h = d.data(this, "selectable-item");
                h.$element.removeClass("ui-selecting").addClass("ui-selected"),
                h.selecting = !1,
                h.selected = !0,
                h.startselected = !0,
                g._trigger("selected", e, {
                    selected: h.element
                })
            }),
            this._trigger("stop", e),
            this.helper.remove(),
            !1
        }
    })
})(jQuery);
(function(d, a) {
    d.widget("ui.sortable", d.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000
        },
        _create: function() {
            var f = this.options;
            this.containerCache = {},
            this.element.addClass("ui-sortable"),
            this.refresh(),
            this.floating = this.items.length ? f.axis === "x" || /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : !1,
            this.offset = this.element.offset(),
            this._mouseInit(),
            this.ready = !0
        },
        _destroy: function() {
            this.element.removeClass("ui-sortable ui-sortable-disabled"),
            this._mouseDestroy();
            for (var f = this.items.length - 1; f >= 0; f--) {
                this.items[f].item.removeData(this.widgetName + "-item")
            }
            return this
        },
        _setOption: function(e, f) {
            e === "disabled" ? (this.options[e] = f,
            this.widget().toggleClass("ui-sortable-disabled", !!f)) : d.Widget.prototype._setOption.apply(this, arguments)
        },
        _mouseCapture: function(f, p) {
            var h = this;
            if (this.reverting) {
                return !1
            }
            if (this.options.disabled || this.options.type == "static") {
                return !1
            }
            this._refreshItems(f);
            var e = null 
              , g = d(f.target).parents().each(function() {
                if (d.data(this, h.widgetName + "-item") == h) {
                    return e = d(this),
                    !1
                }
            });
            d.data(f.target, h.widgetName + "-item") == h && (e = d(f.target));
            if (!e) {
                return !1
            }
            if (this.options.handle && !p) {
                var m = !1;
                d(this.options.handle, e).find("*").andSelf().each(function() {
                    this == f.target && (m = !0)
                });
                if (!m) {
                    return !1
                }
            }
            return this.currentItem = e,
            this._removeCurrentsFromItems(),
            !0
        },
        _mouseStart: function(f, m, h) {
            var e = this.options;
            this.currentContainer = this,
            this.refreshPositions(),
            this.helper = this._createHelper(f),
            this._cacheHelperProportions(),
            this._cacheMargins(),
            this.scrollParent = this.helper.scrollParent(),
            this.offset = this.currentItem.offset(),
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            },
            d.extend(this.offset, {
                click: {
                    left: f.pageX - this.offset.left,
                    top: f.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }),
            this.helper.css("position", "absolute"),
            this.cssPosition = this.helper.css("position"),
            this.originalPosition = this._generatePosition(f),
            this.originalPageX = f.pageX,
            this.originalPageY = f.pageY,
            e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt),
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            },
            this.helper[0] != this.currentItem[0] && this.currentItem.hide(),
            this._createPlaceholder(),
            e.containment && this._setContainment(),
            e.cursor && (d("body").css("cursor") && (this._storedCursor = d("body").css("cursor")),
            d("body").css("cursor", e.cursor)),
            e.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", e.opacity)),
            e.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", e.zIndex)),
            this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" && (this.overflowOffset = this.scrollParent.offset()),
            this._trigger("start", f, this._uiHash()),
            this._preserveHelperProportions || this._cacheHelperProportions();
            if (!h) {
                for (var g = this.containers.length - 1; g >= 0; g--) {
                    this.containers[g]._trigger("activate", f, this._uiHash(this))
                }
            }
            return d.ui.ddmanager && (d.ui.ddmanager.current = this),
            d.ui.ddmanager && !e.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, f),
            this.dragging = !0,
            this.helper.addClass("ui-sortable-helper"),
            this._mouseDrag(f),
            !0
        },
        _mouseDrag: function(g) {
            this.position = this._generatePosition(g),
            this.positionAbs = this._convertPositionTo("absolute"),
            this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs);
            if (this.options.scroll) {
                var q = this.options
                  , m = !1;
                this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - g.pageY < q.scrollSensitivity ? this.scrollParent[0].scrollTop = m = this.scrollParent[0].scrollTop + q.scrollSpeed : g.pageY - this.overflowOffset.top < q.scrollSensitivity && (this.scrollParent[0].scrollTop = m = this.scrollParent[0].scrollTop - q.scrollSpeed),
                this.overflowOffset.left + this.scrollParent[0].offsetWidth - g.pageX < q.scrollSensitivity ? this.scrollParent[0].scrollLeft = m = this.scrollParent[0].scrollLeft + q.scrollSpeed : g.pageX - this.overflowOffset.left < q.scrollSensitivity && (this.scrollParent[0].scrollLeft = m = this.scrollParent[0].scrollLeft - q.scrollSpeed)) : (g.pageY - d(document).scrollTop() < q.scrollSensitivity ? m = d(document).scrollTop(d(document).scrollTop() - q.scrollSpeed) : d(window).height() - (g.pageY - d(document).scrollTop()) < q.scrollSensitivity && (m = d(document).scrollTop(d(document).scrollTop() + q.scrollSpeed)),
                g.pageX - d(document).scrollLeft() < q.scrollSensitivity ? m = d(document).scrollLeft(d(document).scrollLeft() - q.scrollSpeed) : d(window).width() - (g.pageX - d(document).scrollLeft()) < q.scrollSensitivity && (m = d(document).scrollLeft(d(document).scrollLeft() + q.scrollSpeed))),
                m !== !1 && d.ui.ddmanager && !q.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, g)
            }
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            for (var f = this.items.length - 1; f >= 0; f--) {
                var h = this.items[f]
                  , p = h.item[0]
                  , e = this._intersectsWithPointer(h);
                if (!e) {
                    continue
                }
                if (h.instance !== this.currentContainer) {
                    continue
                }
                if (p != this.currentItem[0] && this.placeholder[e == 1 ? "next" : "prev"]()[0] != p && !d.contains(this.placeholder[0], p) && (this.options.type == "semi-dynamic" ? !d.contains(this.element[0], p) : !0)) {
                    this.direction = e == 1 ? "down" : "up";
                    if (this.options.tolerance != "pointer" && !this._intersectsWithSides(h)) {
                        break
                    }
                    this._rearrange(g, h),
                    this._trigger("change", g, this._uiHash());
                    break
                }
            }
            return this._contactContainers(g),
            d.ui.ddmanager && d.ui.ddmanager.drag(this, g),
            this._trigger("sort", g, this._uiHash()),
            this.lastPositionAbs = this.positionAbs,
            !1
        },
        _mouseStop: function(f, h) {
            if (!f) {
                return
            }
            d.ui.ddmanager && !this.options.dropBehaviour && d.ui.ddmanager.drop(this, f);
            if (this.options.revert) {
                var g = this
                  , e = this.placeholder.offset();
                this.reverting = !0,
                d(this.helper).animate({
                    left: e.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
                    top: e.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
                }, parseInt(this.options.revert, 10) || 500, function() {
                    g._clear(f)
                })
            } else {
                this._clear(f, h)
            }
            return !1
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp({
                    target: null 
                }),
                this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
                for (var e = this.containers.length - 1; e >= 0; e--) {
                    this.containers[e]._trigger("deactivate", null , this._uiHash(this)),
                    this.containers[e].containerCache.over && (this.containers[e]._trigger("out", null , this._uiHash(this)),
                    this.containers[e].containerCache.over = 0)
                }
            }
            return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove(),
            d.extend(this, {
                helper: null ,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null 
            }),
            this.domPosition.prev ? d(this.domPosition.prev).after(this.currentItem) : d(this.domPosition.parent).prepend(this.currentItem)),
            this
        },
        serialize: function(e) {
            var g = this._getItemsAsjQuery(e && e.connected)
              , f = [];
            return e = e || {},
            d(g).each(function() {
                var h = (d(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[-=_](.+)/);
                h && f.push((e.key || h[1] + "[]") + "=" + (e.key && e.expression ? h[1] : h[2]))
            }),
            !f.length && e.key && f.push(e.key + "="),
            f.join("&")
        },
        toArray: function(e) {
            var g = this._getItemsAsjQuery(e && e.connected)
              , f = [];
            return e = e || {},
            g.each(function() {
                f.push(d(e.item || this).attr(e.attribute || "id") || "")
            }),
            f
        },
        _intersectsWith: function(z) {
            var E = this.positionAbs.left
              , m = E + this.helperProportions.width
              , g = this.positionAbs.top
              , q = g + this.helperProportions.height
              , F = z.left
              , h = F + z.width
              , D = z.top
              , C = D + z.height
              , v = this.offset.click.top
              , p = this.offset.click.left
              , B = g + v > D && g + v < C && E + p > F && E + p < h;
            return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > z[this.floating ? "width" : "height"] ? B : F < E + this.helperProportions.width / 2 && m - this.helperProportions.width / 2 < h && D < g + this.helperProportions.height / 2 && q - this.helperProportions.height / 2 < C
        },
        _intersectsWithPointer: function(f) {
            var p = this.options.axis === "x" || d.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, f.top, f.height)
              , h = this.options.axis === "y" || d.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, f.left, f.width)
              , e = p && h
              , g = this._getDragVerticalDirection()
              , m = this._getDragHorizontalDirection();
            return e ? this.floating ? m && m == "right" || g == "down" ? 2 : 1 : g && (g == "down" ? 2 : 1) : !1
        },
        _intersectsWithSides: function(f) {
            var m = d.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, f.top + f.height / 2, f.height)
              , h = d.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, f.left + f.width / 2, f.width)
              , e = this._getDragVerticalDirection()
              , g = this._getDragHorizontalDirection();
            return this.floating && g ? g == "right" && h || g == "left" && !h : e && (e == "down" && m || e == "up" && !m)
        },
        _getDragVerticalDirection: function() {
            var f = this.positionAbs.top - this.lastPositionAbs.top;
            return f != 0 && (f > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var f = this.positionAbs.left - this.lastPositionAbs.left;
            return f != 0 && (f > 0 ? "right" : "left")
        },
        refresh: function(f) {
            return this._refreshItems(f),
            this.refreshPositions(),
            this
        },
        _connectWith: function() {
            var f = this.options;
            return f.connectWith.constructor == String ? [f.connectWith] : f.connectWith
        },
        _getItemsAsjQuery: function(h) {
            var v = []
              , p = []
              , g = this._connectWith();
            if (g && h) {
                for (var m = g.length - 1; m >= 0; m--) {
                    var q = d(g[m]);
                    for (var f = q.length - 1; f >= 0; f--) {
                        var e = d.data(q[f], this.widgetName);
                        e && e != this && !e.options.disabled && p.push([d.isFunction(e.options.items) ? e.options.items.call(e.element) : d(e.options.items, e.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), e])
                    }
                }
            }
            p.push([d.isFunction(this.options.items) ? this.options.items.call(this.element, null , {
                options: this.options,
                item: this.currentItem
            }) : d(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            for (var m = p.length - 1; m >= 0; m--) {
                p[m][0].each(function() {
                    v.push(this)
                })
            }
            return d(v)
        },
        _removeCurrentsFromItems: function() {
            var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = d.grep(this.items, function(f) {
                for (var g = 0; g < e.length; g++) {
                    if (e[g] == f.item[0]) {
                        return !1
                    }
                }
                return !0
            })
        },
        _refreshItems: function(E) {
            this.items = [],
            this.containers = [this];
            var m = this.items
              , e = [[d.isFunction(this.options.items) ? this.options.items.call(this.element[0], E, {
                item: this.currentItem
            }) : d(this.options.items, this.element), this]]
              , q = this._connectWith();
            if (q && this.ready) {
                for (var F = q.length - 1; F >= 0; F--) {
                    var g = d(q[F]);
                    for (var D = g.length - 1; D >= 0; D--) {
                        var C = d.data(g[D], this.widgetName);
                        C && C != this && !C.options.disabled && (e.push([d.isFunction(C.options.items) ? C.options.items.call(C.element[0], E, {
                            item: this.currentItem
                        }) : d(C.options.items, C.element), C]),
                        this.containers.push(C))
                    }
                }
            }
            for (var F = e.length - 1; F >= 0; F--) {
                var z = e[F][1]
                  , p = e[F][0];
                for (var D = 0, B = p.length; D < B; D++) {
                    var v = d(p[D]);
                    v.data(this.widgetName + "-item", z),
                    m.push({
                        item: v,
                        instance: z,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function(f) {
            this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
            for (var m = this.items.length - 1; m >= 0; m--) {
                var h = this.items[m];
                if (h.instance != this.currentContainer && this.currentContainer && h.item[0] != this.currentItem[0]) {
                    continue
                }
                var e = this.options.toleranceElement ? d(this.options.toleranceElement, h.item) : h.item;
                f || (h.width = e.outerWidth(),
                h.height = e.outerHeight());
                var g = e.offset();
                h.left = g.left,
                h.top = g.top
            }
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (var m = this.containers.length - 1; m >= 0; m--) {
                    var g = this.containers[m].element.offset();
                    this.containers[m].containerCache.left = g.left,
                    this.containers[m].containerCache.top = g.top,
                    this.containers[m].containerCache.width = this.containers[m].element.outerWidth(),
                    this.containers[m].containerCache.height = this.containers[m].element.outerHeight()
                }
            }
            return this
        },
        _createPlaceholder: function(e) {
            e = e || this;
            var g = e.options;
            if (!g.placeholder || g.placeholder.constructor == String) {
                var f = g.placeholder;
                g.placeholder = {
                    element: function() {
                        var h = d(document.createElement(e.currentItem[0].nodeName)).addClass(f || e.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
                        return f || (h.style.visibility = "hidden"),
                        h
                    },
                    update: function(m, h) {
                        if (f && !g.forcePlaceholderSize) {
                            return
                        }
                        h.height() || h.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10)),
                        h.width() || h.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10))
                    }
                }
            }
            e.placeholder = d(g.placeholder.element.call(e.element, e.currentItem)),
            e.currentItem.after(e.placeholder),
            g.placeholder.update(e, e.placeholder)
        },
        _contactContainers: function(E) {
            var m = null 
              , e = null ;
            for (var q = this.containers.length - 1; q >= 0; q--) {
                if (d.contains(this.currentItem[0], this.containers[q].element[0])) {
                    continue
                }
                if (this._intersectsWith(this.containers[q].containerCache)) {
                    if (m && d.contains(this.containers[q].element[0], m.element[0])) {
                        continue
                    }
                    m = this.containers[q],
                    e = q
                } else {
                    this.containers[q].containerCache.over && (this.containers[q]._trigger("out", E, this._uiHash(this)),
                    this.containers[q].containerCache.over = 0)
                }
            }
            if (!m) {
                return
            }
            if (this.containers.length === 1) {
                this.containers[e]._trigger("over", E, this._uiHash(this)),
                this.containers[e].containerCache.over = 1
            } else {
                var F = 10000
                  , g = null 
                  , D = this.containers[e].floating ? "left" : "top"
                  , C = this.containers[e].floating ? "width" : "height"
                  , z = this.positionAbs[D] + this.offset.click[D];
                for (var p = this.items.length - 1; p >= 0; p--) {
                    if (!d.contains(this.containers[e].element[0], this.items[p].item[0])) {
                        continue
                    }
                    if (this.items[p].item[0] == this.currentItem[0]) {
                        continue
                    }
                    var B = this.items[p].item.offset()[D]
                      , v = !1;
                    Math.abs(B - z) > Math.abs(B + this.items[p][C] - z) && (v = !0,
                    B += this.items[p][C]),
                    Math.abs(B - z) < F && (F = Math.abs(B - z),
                    g = this.items[p],
                    this.direction = v ? "up" : "down")
                }
                if (!g && !this.options.dropOnEmpty) {
                    return
                }
                this.currentContainer = this.containers[e],
                g ? this._rearrange(E, g, null , !0) : this._rearrange(E, null , this.containers[e].element, !0),
                this._trigger("change", E, this._uiHash()),
                this.containers[e]._trigger("change", E, this._uiHash(this)),
                this.options.placeholder.update(this.currentContainer, this.placeholder),
                this.containers[e]._trigger("over", E, this._uiHash(this)),
                this.containers[e].containerCache.over = 1
            }
        },
        _createHelper: function(e) {
            var g = this.options
              , f = d.isFunction(g.helper) ? d(g.helper.apply(this.element[0], [e, this.currentItem])) : g.helper == "clone" ? this.currentItem.clone() : this.currentItem;
            return f.parents("body").length || d(g.appendTo != "parent" ? g.appendTo : this.currentItem[0].parentNode)[0].appendChild(f[0]),
            f[0] == this.currentItem[0] && (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            }),
            (f[0].style.width == "" || g.forceHelperSize) && f.width(this.currentItem.width()),
            (f[0].style.height == "" || g.forceHelperSize) && f.height(this.currentItem.height()),
            f
        },
        _adjustOffsetFromHelper: function(e) {
            typeof e == "string" && (e = e.split(" ")),
            d.isArray(e) && (e = {
                left: +e[0],
                top: +e[1] || 0
            }),
            "left" in e && (this.offset.click.left = e.left + this.margins.left),
            "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left),
            "top" in e && (this.offset.click.top = e.top + this.margins.top),
            "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var e = this.offsetParent.offset();
            this.cssPosition == "absolute" && this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(),
            e.top += this.scrollParent.scrollTop());
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.ui.ie) {
                e = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var f = this.currentItem.position();
                return {
                    top: f.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: f.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var f = this.options;
            f.containment == "parent" && (f.containment = this.helper[0].parentNode);
            if (f.containment == "document" || f.containment == "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, d(f.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (d(f.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!/^(document|window|parent)$/.test(f.containment)) {
                var h = d(f.containment)[0]
                  , g = d(f.containment).offset()
                  , e = d(h).css("overflow") != "hidden";
                this.containment = [g.left + (parseInt(d(h).css("borderLeftWidth"), 10) || 0) + (parseInt(d(h).css("paddingLeft"), 10) || 0) - this.margins.left, g.top + (parseInt(d(h).css("borderTopWidth"), 10) || 0) + (parseInt(d(h).css("paddingTop"), 10) || 0) - this.margins.top, g.left + (e ? Math.max(h.scrollWidth, h.offsetWidth) : h.offsetWidth) - (parseInt(d(h).css("borderLeftWidth"), 10) || 0) - (parseInt(d(h).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, g.top + (e ? Math.max(h.scrollHeight, h.offsetHeight) : h.offsetHeight) - (parseInt(d(h).css("borderTopWidth"), 10) || 0) - (parseInt(d(h).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function(f, p) {
            p || (p = this.position);
            var h = f == "absolute" ? 1 : -1
              , e = this.options
              , g = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!d.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , m = /(html|body)/i.test(g[0].tagName);
            return {
                top: p.top + this.offset.relative.top * h + this.offset.parent.top * h - (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : m ? 0 : g.scrollTop()) * h,
                left: p.left + this.offset.relative.left * h + this.offset.parent.left * h - (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : m ? 0 : g.scrollLeft()) * h
            }
        },
        _generatePosition: function(h) {
            var v = this.options
              , p = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!d.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , g = /(html|body)/i.test(p[0].tagName);
            this.cssPosition == "relative" && (this.scrollParent[0] == document || this.scrollParent[0] == this.offsetParent[0]) && (this.offset.relative = this._getRelativeOffset());
            var m = h.pageX
              , q = h.pageY;
            if (this.originalPosition) {
                this.containment && (h.pageX - this.offset.click.left < this.containment[0] && (m = this.containment[0] + this.offset.click.left),
                h.pageY - this.offset.click.top < this.containment[1] && (q = this.containment[1] + this.offset.click.top),
                h.pageX - this.offset.click.left > this.containment[2] && (m = this.containment[2] + this.offset.click.left),
                h.pageY - this.offset.click.top > this.containment[3] && (q = this.containment[3] + this.offset.click.top));
                if (v.grid) {
                    var f = this.originalPageY + Math.round((q - this.originalPageY) / v.grid[1]) * v.grid[1];
                    q = this.containment ? f - this.offset.click.top < this.containment[1] || f - this.offset.click.top > this.containment[3] ? f - this.offset.click.top < this.containment[1] ? f + v.grid[1] : f - v.grid[1] : f : f;
                    var e = this.originalPageX + Math.round((m - this.originalPageX) / v.grid[0]) * v.grid[0];
                    m = this.containment ? e - this.offset.click.left < this.containment[0] || e - this.offset.click.left > this.containment[2] ? e - this.offset.click.left < this.containment[0] ? e + v.grid[0] : e - v.grid[0] : e : e
                }
            }
            return {
                top: q - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : p.scrollTop()),
                left: m - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : p.scrollLeft())
            }
        },
        _rearrange: function(m, g, o, h) {
            o ? o[0].appendChild(this.placeholder[0]) : g.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? g.item[0] : g.item[0].nextSibling),
            this.counter = this.counter ? ++this.counter : 1;
            var f = this.counter;
            this._delay(function() {
                f == this.counter && this.refreshPositions(!h)
            })
        },
        _clear: function(f, h) {
            this.reverting = !1;
            var g = [];
            !this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem),
            this._noFinalSort = null ;
            if (this.helper[0] == this.currentItem[0]) {
                for (var e in this._storedCSS) {
                    if (this._storedCSS[e] == "auto" || this._storedCSS[e] == "static") {
                        this._storedCSS[e] = ""
                    }
                }
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else {
                this.currentItem.show()
            }
            this.fromOutside && !h && g.push(function(m) {
                this._trigger("receive", m, this._uiHash(this.fromOutside))
            }),
            (this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !h && g.push(function(m) {
                this._trigger("update", m, this._uiHash())
            }),
            this !== this.currentContainer && (h || (g.push(function(m) {
                this._trigger("remove", m, this._uiHash())
            }),
            g.push(function(m) {
                return function(o) {
                    m._trigger("receive", o, this._uiHash(this))
                }
            }
            .call(this, this.currentContainer)),
            g.push(function(m) {
                return function(o) {
                    m._trigger("update", o, this._uiHash(this))
                }
            }
            .call(this, this.currentContainer))));
            for (var e = this.containers.length - 1; e >= 0; e--) {
                h || g.push(function(m) {
                    return function(o) {
                        m._trigger("deactivate", o, this._uiHash(this))
                    }
                }
                .call(this, this.containers[e])),
                this.containers[e].containerCache.over && (g.push(function(m) {
                    return function(o) {
                        m._trigger("out", o, this._uiHash(this))
                    }
                }
                .call(this, this.containers[e])),
                this.containers[e].containerCache.over = 0)
            }
            this._storedCursor && d("body").css("cursor", this._storedCursor),
            this._storedOpacity && this.helper.css("opacity", this._storedOpacity),
            this._storedZIndex && this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex),
            this.dragging = !1;
            if (this.cancelHelperRemoval) {
                if (!h) {
                    this._trigger("beforeStop", f, this._uiHash());
                    for (var e = 0; e < g.length; e++) {
                        g[e].call(this, f)
                    }
                    this._trigger("stop", f, this._uiHash())
                }
                return this.fromOutside = !1,
                !1
            }
            h || this._trigger("beforeStop", f, this._uiHash()),
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            this.helper[0] != this.currentItem[0] && this.helper.remove(),
            this.helper = null ;
            if (!h) {
                for (var e = 0; e < g.length; e++) {
                    g[e].call(this, f)
                }
                this._trigger("stop", f, this._uiHash())
            }
            return this.fromOutside = !1,
            !0
        },
        _trigger: function() {
            d.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
        },
        _uiHash: function(e) {
            var f = e || this;
            return {
                helper: f.helper,
                placeholder: f.placeholder || d([]),
                position: f.position,
                originalPosition: f.originalPosition,
                offset: f.positionAbs,
                item: f.currentItem,
                sender: e ? e.element : null 
            }
        }
    })
})(jQuery);
(function(g, d) {
    var h = 0
      , f = {}
      , a = {};
    f.height = f.paddingTop = f.paddingBottom = f.borderTopWidth = f.borderBottomWidth = "hide",
    a.height = a.paddingTop = a.paddingBottom = a.borderTopWidth = a.borderBottomWidth = "show",
    g.widget("ui.accordion", {
        version: "1.9.2",
        options: {
            active: 0,
            animate: {},
            collapsible: !1,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null ,
            beforeActivate: null 
        },
        _create: function() {
            var e = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++h)
              , m = this.options;
            this.prevShow = this.prevHide = g(),
            this.element.addClass("ui-accordion ui-widget ui-helper-reset"),
            this.headers = this.element.find(m.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),
            this._hoverable(this.headers),
            this._focusable(this.headers),
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),
            !m.collapsible && (m.active === !1 || m.active == null ) && (m.active = 0),
            m.active < 0 && (m.active += this.headers.length),
            this.active = this._findActive(m.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),
            this.active.next().addClass("ui-accordion-content-active").show(),
            this._createIcons(),
            this.refresh(),
            this.element.attr("role", "tablist"),
            this.headers.attr("role", "tab").each(function(z) {
                var u = g(this)
                  , p = u.attr("id")
                  , q = u.next()
                  , v = q.attr("id");
                p || (p = e + "-header-" + z,
                u.attr("id", p)),
                v || (v = e + "-panel-" + z,
                q.attr("id", v)),
                u.attr("aria-controls", v),
                q.attr("aria-labelledby", p)
            }).next().attr("role", "tabpanel"),
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }).next().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }).hide(),
            this.active.length ? this.active.attr({
                "aria-selected": "true",
                tabIndex: 0
            }).next().attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }) : this.headers.eq(0).attr("tabIndex", 0),
            this._on(this.headers, {
                keydown: "_keydown"
            }),
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            }),
            this._setupEvents(m.event)
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                content: this.active.length ? this.active.next() : g()
            }
        },
        _createIcons: function() {
            var e = this.options.icons;
            e && (g("<span>").addClass("ui-accordion-header-icon ui-icon " + e.header).prependTo(this.headers),
            this.active.children(".ui-accordion-header-icon").removeClass(e.header).addClass(e.activeHeader),
            this.headers.addClass("ui-accordion-icons"))
        },
        _destroyIcons: function() {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var m;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),
            this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
                /^ui-accordion/.test(this.id) && this.removeAttribute("id")
            }),
            this._destroyIcons(),
            m = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
                /^ui-accordion/.test(this.id) && this.removeAttribute("id")
            }),
            this.options.heightStyle !== "content" && m.css("height", "")
        },
        _setOption: function(o, m) {
            if (o === "active") {
                this._activate(m);
                return
            }
            o === "event" && (this.options.event && this._off(this.headers, this.options.event),
            this._setupEvents(m)),
            this._super(o, m),
            o === "collapsible" && !m && this.options.active === !1 && this._activate(0),
            o === "icons" && (this._destroyIcons(),
            m && this._createIcons()),
            o === "disabled" && this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!m)
        },
        _keydown: function(m) {
            if (m.altKey || m.ctrlKey) {
                return
            }
            var q = g.ui.keyCode
              , p = this.headers.length
              , e = this.headers.index(m.target)
              , o = !1;
            switch (m.keyCode) {
            case q.RIGHT:
            case q.DOWN:
                o = this.headers[(e + 1) % p];
                break;
            case q.LEFT:
            case q.UP:
                o = this.headers[(e - 1 + p) % p];
                break;
            case q.SPACE:
            case q.ENTER:
                this._eventHandler(m);
                break;
            case q.HOME:
                o = this.headers[0];
                break;
            case q.END:
                o = this.headers[p - 1]
            }
            o && (g(m.target).attr("tabIndex", -1),
            g(o).attr("tabIndex", 0),
            o.focus(),
            m.preventDefault())
        },
        _panelKeyDown: function(e) {
            e.keyCode === g.ui.keyCode.UP && e.ctrlKey && g(e.currentTarget).prev().focus()
        },
        refresh: function() {
            var m, p, o = this.options.heightStyle, e = this.element.parent();
            o === "fill" ? (g.support.minHeight || (p = e.css("overflow"),
            e.css("overflow", "hidden")),
            m = e.height(),
            this.element.siblings(":visible").each(function() {
                var u = g(this)
                  , q = u.css("position");
                if (q === "absolute" || q === "fixed") {
                    return
                }
                m -= u.outerHeight(!0)
            }),
            p && e.css("overflow", p),
            this.headers.each(function() {
                m -= g(this).outerHeight(!0)
            }),
            this.headers.next().each(function() {
                g(this).height(Math.max(0, m - g(this).innerHeight() + g(this).height()))
            }).css("overflow", "auto")) : o === "auto" && (m = 0,
            this.headers.next().each(function() {
                m = Math.max(m, g(this).css("height", "").height())
            }).height(m))
        },
        _activate: function(e) {
            var m = this._findActive(e)[0];
            if (m === this.active[0]) {
                return
            }
            m = m || this.active[0],
            this._eventHandler({
                target: m,
                currentTarget: m,
                preventDefault: g.noop
            })
        },
        _findActive: function(e) {
            return typeof e == "number" ? this.headers.eq(e) : g()
        },
        _setupEvents: function(e) {
            var m = {};
            if (!e) {
                return
            }
            g.each(e.split(" "), function(p, o) {
                m[o] = "_eventHandler"
            }),
            this._on(this.headers, m)
        },
        _eventHandler: function(C) {
            var p = this.options
              , e = this.active
              , q = g(C.currentTarget)
              , D = q[0] === e[0]
              , m = D && p.collapsible
              , B = m ? g() : q.next()
              , z = e.next()
              , v = {
                oldHeader: e,
                oldPanel: z,
                newHeader: m ? g() : q,
                newPanel: B
            };
            C.preventDefault();
            if (D && !p.collapsible || this._trigger("beforeActivate", C, v) === !1) {
                return
            }
            p.active = m ? !1 : this.headers.index(q),
            this.active = D ? g() : q,
            this._toggle(v),
            e.removeClass("ui-accordion-header-active ui-state-active"),
            p.icons && e.children(".ui-accordion-header-icon").removeClass(p.icons.activeHeader).addClass(p.icons.header),
            D || (q.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),
            p.icons && q.children(".ui-accordion-header-icon").removeClass(p.icons.header).addClass(p.icons.activeHeader),
            q.next().addClass("ui-accordion-content-active"))
        },
        _toggle: function(e) {
            var o = e.newPanel
              , m = this.prevShow.length ? this.prevShow : e.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0),
            this.prevShow = o,
            this.prevHide = m,
            this.options.animate ? this._animate(o, m, e) : (m.hide(),
            o.show(),
            this._toggleComplete(e)),
            m.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }),
            m.prev().attr("aria-selected", "false"),
            o.length && m.length ? m.prev().attr("tabIndex", -1) : o.length && this.headers.filter(function() {
                return g(this).attr("tabIndex") === 0
            }).attr("tabIndex", -1),
            o.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }).prev().attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _animate: function(C, G, r) {
            var H, q, F, E = this, B = 0, v = C.length && (!G.length || C.index() < G.index()), D = this.options.animate || {}, z = v && D.down || D, m = function() {
                E._toggleComplete(r)
            }
            ;
            typeof z == "number" && (F = z),
            typeof z == "string" && (q = z),
            q = q || z.easing || D.easing,
            F = F || z.duration || D.duration;
            if (!G.length) {
                return C.animate(a, F, q, m)
            }
            if (!C.length) {
                return G.animate(f, F, q, m)
            }
            H = C.show().outerHeight(),
            G.animate(f, {
                duration: F,
                easing: q,
                step: function(p, o) {
                    o.now = Math.round(p)
                }
            }),
            C.hide().animate(a, {
                duration: F,
                easing: q,
                complete: m,
                step: function(o, p) {
                    p.now = Math.round(o),
                    p.prop !== "height" ? B += p.now : E.options.heightStyle !== "content" && (p.now = Math.round(H - G.outerHeight() - B),
                    B = 0)
                }
            })
        },
        _toggleComplete: function(o) {
            var m = o.oldPanel;
            m.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),
            m.length && (m.parent()[0].className = m.parent()[0].className),
            this._trigger("activate", null , o)
        }
    }),
    g.uiBackCompat !== !1 && (function(o, m) {
        o.extend(m.options, {
            navigation: !1,
            navigationFilter: function() {
                return this.href.toLowerCase() === location.href.toLowerCase()
            }
        });
        var p = m._create;
        m._create = function() {
            if (this.options.navigation) {
                var q = this
                  , v = this.element.find(this.options.header)
                  , e = v.next()
                  , u = v.add(e).find("a").filter(this.options.navigationFilter)[0];
                u && v.add(e).each(function(r) {
                    if (o.contains(this, u)) {
                        return q.options.active = Math.floor(r / 2),
                        !1
                    }
                })
            }
            p.call(this)
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    function(p, m) {
        p.extend(m.options, {
            heightStyle: null ,
            autoHeight: !0,
            clearStyle: !1,
            fillSpace: !1
        });
        var q = m._create
          , o = m._setOption;
        p.extend(m, {
            _create: function() {
                this.options.heightStyle = this.options.heightStyle || this._mergeHeightStyle(),
                q.call(this)
            },
            _setOption: function(r) {
                if (r === "autoHeight" || r === "clearStyle" || r === "fillSpace") {
                    this.options.heightStyle = this._mergeHeightStyle()
                }
                o.apply(this, arguments)
            },
            _mergeHeightStyle: function() {
                var r = this.options;
                if (r.fillSpace) {
                    return "fill"
                }
                if (r.clearStyle) {
                    return "content"
                }
                if (r.autoHeight) {
                    return "auto"
                }
            }
        })
    }(jQuery, jQuery.ui.accordion.prototype),
    function(o, m) {
        o.extend(m.options.icons, {
            activeHeader: null ,
            headerSelected: "ui-icon-triangle-1-s"
        });
        var p = m._createIcons;
        m._createIcons = function() {
            this.options.icons && (this.options.icons.activeHeader = this.options.icons.activeHeader || this.options.icons.headerSelected),
            p.call(this)
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    function(o, m) {
        m.activate = m._activate;
        var p = m._findActive;
        m._findActive = function(q) {
            return q === -1 && (q = !1),
            q && typeof q != "number" && (q = this.headers.index(this.headers.filter(q)),
            q === -1 && (q = !1)),
            p.call(this, q)
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    jQuery.ui.accordion.prototype.resize = jQuery.ui.accordion.prototype.refresh,
    function(o, m) {
        o.extend(m.options, {
            change: null ,
            changestart: null 
        });
        var p = m._trigger;
        m._trigger = function(z, u, v) {
            var q = p.apply(this, arguments);
            return q ? (z === "beforeActivate" ? q = p.call(this, "changestart", u, {
                oldHeader: v.oldHeader,
                oldContent: v.oldPanel,
                newHeader: v.newHeader,
                newContent: v.newPanel
            }) : z === "activate" && (q = p.call(this, "change", u, {
                oldHeader: v.oldHeader,
                oldContent: v.oldPanel,
                newHeader: v.newHeader,
                newContent: v.newPanel
            })),
            q) : !1
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    function(o, m) {
        o.extend(m.options, {
            animate: null ,
            animated: "slide"
        });
        var p = m._create;
        m._create = function() {
            var q = this.options;
            q.animate === null  && (q.animated ? q.animated === "slide" ? q.animate = 300 : q.animated === "bounceslide" ? q.animate = {
                duration: 200,
                down: {
                    easing: "easeOutBounce",
                    duration: 1000
                }
            } : q.animate = q.animated : q.animate = !1),
            p.call(this)
        }
    }(jQuery, jQuery.ui.accordion.prototype))
})(jQuery);
(function(d, a) {
    var f = 0;
    d.widget("ui.autocomplete", {
        version: "1.9.2",
        defaultElement: "<input>",
        options: {
            appendTo: "body",
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null ,
            change: null ,
            close: null ,
            focus: null ,
            open: null ,
            response: null ,
            search: null ,
            select: null 
        },
        pending: 0,
        _create: function() {
            var e, h, g;
            this.isMultiLine = this._isMultiLine(),
            this.valueMethod = this.element[this.element.is("input,textarea") ? "val" : "text"],
            this.isNewMenu = !0,
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"),
            this._on(this.element, {
                keydown: function(m) {
                    if (this.element.prop("readOnly")) {
                        e = !0,
                        g = !0,
                        h = !0;
                        return
                    }
                    e = !1,
                    g = !1,
                    h = !1;
                    var o = d.ui.keyCode;
                    switch (m.keyCode) {
                    case o.PAGE_UP:
                        e = !0,
                        this._move("previousPage", m);
                        break;
                    case o.PAGE_DOWN:
                        e = !0,
                        this._move("nextPage", m);
                        break;
                    case o.UP:
                        e = !0,
                        this._keyEvent("previous", m);
                        break;
                    case o.DOWN:
                        e = !0,
                        this._keyEvent("next", m);
                        break;
                    case o.ENTER:
                    case o.NUMPAD_ENTER:
                        this.menu.active && (e = !0,
                        m.preventDefault(),
                        this.menu.select(m));
                        break;
                    case o.TAB:
                        this.menu.active && this.menu.select(m);
                        break;
                    case o.ESCAPE:
                        this.menu.element.is(":visible") && (this._value(this.term),
                        this.close(m),
                        m.preventDefault());
                        break;
                    default:
                        h = !0,
                        this._searchTimeout(m)
                    }
                },
                keypress: function(o) {
                    if (e) {
                        e = !1,
                        o.preventDefault();
                        return
                    }
                    if (h) {
                        return
                    }
                    var m = d.ui.keyCode;
                    switch (o.keyCode) {
                    case m.PAGE_UP:
                        this._move("previousPage", o);
                        break;
                    case m.PAGE_DOWN:
                        this._move("nextPage", o);
                        break;
                    case m.UP:
                        this._keyEvent("previous", o);
                        break;
                    case m.DOWN:
                        this._keyEvent("next", o)
                    }
                },
                input: function(m) {
                    if (g) {
                        g = !1,
                        m.preventDefault();
                        return
                    }
                    this._searchTimeout(m)
                },
                focus: function() {
                    this.selectedItem = null ,
                    this.previous = this._value()
                },
                blur: function(m) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    }
                    clearTimeout(this.searching),
                    this.close(m),
                    this._change(m)
                }
            }),
            this._initSource(),
            this.menu = d("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo || "body")[0]).menu({
                input: d(),
                role: null 
            }).zIndex(this.element.zIndex() + 1).hide().data("menu"),
            this._on(this.menu.element, {
                mousedown: function(m) {
                    m.preventDefault(),
                    this.cancelBlur = !0,
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var o = this.menu.element[0];
                    d(m.target).closest(".ui-menu-item").length || this._delay(function() {
                        var p = this;
                        this.document.one("mousedown", function(q) {
                            q.target !== p.element[0] && q.target !== o && !d.contains(o, q.target) && p.close()
                        })
                    })
                },
                menufocus: function(m, p) {
                    if (this.isNewMenu) {
                        this.isNewMenu = !1;
                        if (m.originalEvent && /^mouse/.test(m.originalEvent.type)) {
                            this.menu.blur(),
                            this.document.one("mousemove", function() {
                                d(m.target).trigger(m.originalEvent)
                            });
                            return
                        }
                    }
                    var o = p.item.data("ui-autocomplete-item") || p.item.data("item.autocomplete");
                    !1 !== this._trigger("focus", m, {
                        item: o
                    }) ? m.originalEvent && /^key/.test(m.originalEvent.type) && this._value(o.value) : this.liveRegion.text(o.value)
                },
                menuselect: function(p, m) {
                    var q = m.item.data("ui-autocomplete-item") || m.item.data("item.autocomplete")
                      , o = this.previous;
                    this.element[0] !== this.document[0].activeElement && (this.element.focus(),
                    this.previous = o,
                    this._delay(function() {
                        this.previous = o,
                        this.selectedItem = q
                    })),
                    !1 !== this._trigger("select", p, {
                        item: q
                    }) && this._value(q.value),
                    this.term = this._value(),
                    this.close(p),
                    this.selectedItem = q
                }
            }),
            this.liveRegion = d("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertAfter(this.element),
            d.fn.bgiframe && this.menu.element.bgiframe(),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching),
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),
            this.menu.element.remove(),
            this.liveRegion.remove()
        },
        _setOption: function(h, g) {
            this._super(h, g),
            h === "source" && this._initSource(),
            h === "appendTo" && this.menu.element.appendTo(this.document.find(g || "body")[0]),
            h === "disabled" && g && this.xhr && this.xhr.abort()
        },
        _isMultiLine: function() {
            return this.element.is("textarea") ? !0 : this.element.is("input") ? !1 : this.element.prop("isContentEditable")
        },
        _initSource: function() {
            var e, h, g = this;
            d.isArray(this.options.source) ? (e = this.options.source,
            this.source = function(o, m) {
                m(d.ui.autocomplete.filter(e, o.term))
            }
            ) : typeof this.options.source == "string" ? (h = this.options.source,
            this.source = function(o, m) {
                g.xhr && g.xhr.abort(),
                g.xhr = d.ajax({
                    url: h,
                    data: o,
                    dataType: "json",
                    success: function(p) {
                        m(p)
                    },
                    error: function() {
                        m([])
                    }
                })
            }
            ) : this.source = this.options.source
        },
        _searchTimeout: function(g) {
            clearTimeout(this.searching),
            this.searching = this._delay(function() {
                this.term !== this._value() && (this.selectedItem = null ,
                this.search(null , g))
            }, this.options.delay)
        },
        search: function(h, g) {
            h = h != null  ? h : this._value(),
            this.term = this._value();
            if (h.length < this.options.minLength) {
                return this.close(g)
            }
            if (this._trigger("search", g) === !1) {
                return
            }
            return this._search(h)
        },
        _search: function(g) {
            this.pending++,
            this.element.addClass("ui-autocomplete-loading"),
            this.cancelSearch = !1,
            this.source({
                term: g
            }, this._response())
        },
        _response: function() {
            var h = this
              , g = ++f;
            return function(e) {
                g === f && h.__response(e),
                h.pending--,
                h.pending || h.element.removeClass("ui-autocomplete-loading")
            }
        },
        __response: function(g) {
            g && (g = this._normalize(g)),
            this._trigger("response", null , {
                content: g
            }),
            !this.options.disabled && g && g.length && !this.cancelSearch ? (this._suggest(g),
            this._trigger("open")) : this._close()
        },
        close: function(g) {
            this.cancelSearch = !0,
            this._close(g)
        },
        _close: function(g) {
            this.menu.element.is(":visible") && (this.menu.element.hide(),
            this.menu.blur(),
            this.isNewMenu = !0,
            this._trigger("close", g))
        },
        _change: function(g) {
            this.previous !== this._value() && this._trigger("change", g, {
                item: this.selectedItem
            })
        },
        _normalize: function(e) {
            return e.length && e[0].label && e[0].value ? e : d.map(e, function(g) {
                return typeof g == "string" ? {
                    label: g,
                    value: g
                } : d.extend({
                    label: g.label || g.value,
                    value: g.value || g.label
                }, g)
            })
        },
        _suggest: function(e) {
            var g = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
            this._renderMenu(g, e),
            this.menu.refresh(),
            g.show(),
            this._resizeMenu(),
            g.position(d.extend({
                of: this.element
            }, this.options.position)),
            this.options.autoFocus && this.menu.next()
        },
        _resizeMenu: function() {
            var g = this.menu.element;
            g.outerWidth(Math.max(g.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(e, h) {
            var g = this;
            d.each(h, function(m, o) {
                g._renderItemData(e, o)
            })
        },
        _renderItemData: function(h, g) {
            return this._renderItem(h, g).data("ui-autocomplete-item", g)
        },
        _renderItem: function(e, g) {
            return d("<li>").append(d("<a>").text(g.label)).appendTo(e)
        },
        _move: function(h, g) {
            if (!this.menu.element.is(":visible")) {
                this.search(null , g);
                return
            }
            if (this.menu.isFirstItem() && /^previous/.test(h) || this.menu.isLastItem() && /^next/.test(h)) {
                this._value(this.term),
                this.menu.blur();
                return
            }
            this.menu[h](g)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(h, g) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(h, g),
                g.preventDefault()
            }
        }
    }),
    d.extend(d.ui.autocomplete, {
        escapeRegex: function(g) {
            return g.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(e, h) {
            var g = new RegExp(d.ui.autocomplete.escapeRegex(h),"i");
            return d.grep(e, function(m) {
                return g.test(m.label || m.value || m)
            })
        }
    }),
    d.widget("ui.autocomplete", d.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(g) {
                    return g + (g > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(h) {
            var g;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return
            }
            h && h.length ? g = this.options.messages.results(h.length) : g = this.options.messages.noResults,
            this.liveRegion.text(g)
        }
    })
})(jQuery);
(function(v, C) {
    var h, d, p, D, g = "ui-button ui-widget ui-state-default ui-corner-all", B = "ui-state-hover ui-state-active ", z = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only", q = function() {
        var a = v(this).find(":ui-button");
        setTimeout(function() {
            a.button("refresh")
        }, 1)
    }
    , m = function(e) {
        var o = e.name
          , f = e.form
          , a = v([]);
        return o && (f ? a = v(f).find("[name='" + o + "']") : a = v("[name='" + o + "']", e.ownerDocument).filter(function() {
            return !this.form
        })),
        a
    }
    ;
    v.widget("ui.button", {
        version: "1.9.2",
        defaultElement: "<button>",
        options: {
            disabled: null ,
            text: !0,
            label: null ,
            icons: {
                primary: null ,
                secondary: null 
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, q),
            typeof this.options.disabled != "boolean" ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled),
            this._determineButtonType(),
            this.hasTitle = !!this.buttonElement.attr("title");
            var o = this
              , f = this.options
              , e = this.type === "checkbox" || this.type === "radio"
              , E = e ? "" : "ui-state-active"
              , r = "ui-state-focus";
            f.label === null  && (f.label = this.type === "input" ? this.buttonElement.val() : this.buttonElement.html()),
            this._hoverable(this.buttonElement),
            this.buttonElement.addClass(g).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                if (f.disabled) {
                    return
                }
                this === h && v(this).addClass("ui-state-active")
            }).bind("mouseleave" + this.eventNamespace, function() {
                if (f.disabled) {
                    return
                }
                v(this).removeClass(E)
            }).bind("click" + this.eventNamespace, function(a) {
                f.disabled && (a.preventDefault(),
                a.stopImmediatePropagation())
            }),
            this.element.bind("focus" + this.eventNamespace, function() {
                o.buttonElement.addClass(r)
            }).bind("blur" + this.eventNamespace, function() {
                o.buttonElement.removeClass(r)
            }),
            e && (this.element.bind("change" + this.eventNamespace, function() {
                if (D) {
                    return
                }
                o.refresh()
            }),
            this.buttonElement.bind("mousedown" + this.eventNamespace, function(a) {
                if (f.disabled) {
                    return
                }
                D = !1,
                d = a.pageX,
                p = a.pageY
            }).bind("mouseup" + this.eventNamespace, function(a) {
                if (f.disabled) {
                    return
                }
                if (d !== a.pageX || p !== a.pageY) {
                    D = !0
                }
            })),
            this.type === "checkbox" ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                if (f.disabled || D) {
                    return !1
                }
                v(this).toggleClass("ui-state-active"),
                o.buttonElement.attr("aria-pressed", o.element[0].checked)
            }) : this.type === "radio" ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                if (f.disabled || D) {
                    return !1
                }
                v(this).addClass("ui-state-active"),
                o.buttonElement.attr("aria-pressed", "true");
                var a = o.element[0];
                m(a).not(a).map(function() {
                    return v(this).button("widget")[0]
                }).removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                if (f.disabled) {
                    return !1
                }
                v(this).addClass("ui-state-active"),
                h = this,
                o.document.one("mouseup", function() {
                    h = null 
                })
            }).bind("mouseup" + this.eventNamespace, function() {
                if (f.disabled) {
                    return !1
                }
                v(this).removeClass("ui-state-active")
            }).bind("keydown" + this.eventNamespace, function(a) {
                if (f.disabled) {
                    return !1
                }
                (a.keyCode === v.ui.keyCode.SPACE || a.keyCode === v.ui.keyCode.ENTER) && v(this).addClass("ui-state-active")
            }).bind("keyup" + this.eventNamespace, function() {
                v(this).removeClass("ui-state-active")
            }),
            this.buttonElement.is("a") && this.buttonElement.keyup(function(a) {
                a.keyCode === v.ui.keyCode.SPACE && v(this).click()
            })),
            this._setOption("disabled", f.disabled),
            this._resetButton()
        },
        _determineButtonType: function() {
            var f, a, o;
            this.element.is("[type=checkbox]") ? this.type = "checkbox" : this.element.is("[type=radio]") ? this.type = "radio" : this.element.is("input") ? this.type = "input" : this.type = "button",
            this.type === "checkbox" || this.type === "radio" ? (f = this.element.parents().last(),
            a = "label[for='" + this.element.attr("id") + "']",
            this.buttonElement = f.find(a),
            this.buttonElement.length || (f = f.length ? f.siblings() : this.element.siblings(),
            this.buttonElement = f.filter(a),
            this.buttonElement.length || (this.buttonElement = f.find(a))),
            this.element.addClass("ui-helper-hidden-accessible"),
            o = this.element.is(":checked"),
            o && this.buttonElement.addClass("ui-state-active"),
            this.buttonElement.prop("aria-pressed", o)) : this.buttonElement = this.element
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible"),
            this.buttonElement.removeClass(g + " " + B + " " + z).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),
            this.hasTitle || this.buttonElement.removeAttr("title")
        },
        _setOption: function(f, a) {
            this._super(f, a);
            if (f === "disabled") {
                a ? this.element.prop("disabled", !0) : this.element.prop("disabled", !1);
                return
            }
            this._resetButton()
        },
        refresh: function() {
            var a = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            a !== this.options.disabled && this._setOption("disabled", a),
            this.type === "radio" ? m(this.element[0]).each(function() {
                v(this).is(":checked") ? v(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : v(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : this.type === "checkbox" && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
        },
        _resetButton: function() {
            if (this.type === "input") {
                this.options.label && this.element.val(this.options.label);
                return
            }
            var e = this.buttonElement.removeClass(z)
              , u = v("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(e.empty()).text()
              , o = this.options.icons
              , a = o.primary && o.secondary
              , f = [];
            o.primary || o.secondary ? (this.options.text && f.push("ui-button-text-icon" + (a ? "s" : o.primary ? "-primary" : "-secondary")),
            o.primary && e.prepend("<span class='ui-button-icon-primary ui-icon " + o.primary + "'></span>"),
            o.secondary && e.append("<span class='ui-button-icon-secondary ui-icon " + o.secondary + "'></span>"),
            this.options.text || (f.push(a ? "ui-button-icons-only" : "ui-button-icon-only"),
            this.hasTitle || e.attr("title", v.trim(u)))) : f.push("ui-button-text-only"),
            e.addClass(f.join(" "))
        }
    }),
    v.widget("ui.buttonset", {
        version: "1.9.2",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(f, a) {
            f === "disabled" && this.buttons.button("option", f, a),
            this._super(f, a)
        },
        refresh: function() {
            var a = this.element.css("direction") === "rtl";
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return v(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(a ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(a ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset"),
            this.buttons.map(function() {
                return v(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
})(jQuery);
(function($, undefined) {
    function Datepicker() {
        this.debug = !1,
        this._curInst = null ,
        this._keyEvent = !1,
        this._disabledInputs = [],
        this._datepickerShowing = !1,
        this._inDialog = !1,
        this._mainDivId = "ui-datepicker-div",
        this._inlineClass = "ui-datepicker-inline",
        this._appendClass = "ui-datepicker-append",
        this._triggerClass = "ui-datepicker-trigger",
        this._dialogClass = "ui-datepicker-dialog",
        this._disableClass = "ui-datepicker-disabled",
        this._unselectableClass = "ui-datepicker-unselectable",
        this._currentClass = "ui-datepicker-current-day",
        this._dayOverClass = "ui-datepicker-days-cell-over",
        this.regional = [],
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        },
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null ,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null ,
            maxDate: null ,
            duration: "fast",
            beforeShowDay: null ,
            beforeShow: null ,
            onSelect: null ,
            onChangeMonthYear: null ,
            onClose: null ,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        },
        $.extend(this._defaults, this.regional[""]),
        this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
    }
    function bindHover(e) {
        var t = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return e.delegate(t, "mouseout", function() {
            $(this).removeClass("ui-state-hover"),
            this.className.indexOf("ui-datepicker-prev") != -1 && $(this).removeClass("ui-datepicker-prev-hover"),
            this.className.indexOf("ui-datepicker-next") != -1 && $(this).removeClass("ui-datepicker-next-hover")
        }).delegate(t, "mouseover", function() {
            $.datepicker._isDisabledDatepicker(instActive.inline ? e.parent()[0] : instActive.input[0]) || ($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
            $(this).addClass("ui-state-hover"),
            this.className.indexOf("ui-datepicker-prev") != -1 && $(this).addClass("ui-datepicker-prev-hover"),
            this.className.indexOf("ui-datepicker-next") != -1 && $(this).addClass("ui-datepicker-next-hover"))
        })
    }
    function extendRemove(e, t) {
        $.extend(e, t);
        for (var n in t) {
            if (t[n] == null  || t[n] == undefined) {
                e[n] = t[n]
            }
        }
        return e
    }
    $.extend($.ui, {
        datepicker: {
            version: "1.9.2"
        }
    });
    var PROP_NAME = "datepicker", dpuuid = (new Date).getTime(), instActive;
    $.extend(Datepicker.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        log: function() {
            this.debug && console.log.apply("", arguments)
        },
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(e) {
            return extendRemove(this._defaults, e || {}),
            this
        },
        _attachDatepicker: function(target, settings) {
            var inlineSettings = null ;
            for (var attrName in this._defaults) {
                var attrValue = target.getAttribute("date:" + attrName);
                if (attrValue) {
                    inlineSettings = inlineSettings || {};
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            var nodeName = target.nodeName.toLowerCase()
              , inline = nodeName == "div" || nodeName == "span";
            target.id || (this.uuid += 1,
            target.id = "dp" + this.uuid);
            var inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {}, inlineSettings || {}),
            nodeName == "input" ? this._connectDatepicker(target, inst) : inline && this._inlineDatepicker(target, inst)
        },
        _newInst: function(e, t) {
            var n = e[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1");
            return {
                id: n,
                input: e,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: t,
                dpDiv: t ? bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) : this.dpDiv
            }
        },
        _connectDatepicker: function(e, t) {
            var n = $(e);
            t.append = $([]),
            t.trigger = $([]);
            if (n.hasClass(this.markerClassName)) {
                return
            }
            this._attachments(n, t),
            n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function(e, n, r) {
                t.settings[n] = r
            }).bind("getData.datepicker", function(e, n) {
                return this._get(t, n)
            }),
            this._autoSize(t),
            $.data(e, PROP_NAME, t),
            t.settings.disabled && this._disableDatepicker(e)
        },
        _attachments: function(e, t) {
            var n = this._get(t, "appendText")
              , r = this._get(t, "isRTL");
            t.append && t.append.remove(),
            n && (t.append = $('<span class="' + this._appendClass + '">' + n + "</span>"),
            e[r ? "before" : "after"](t.append)),
            e.unbind("focus", this._showDatepicker),
            t.trigger && t.trigger.remove();
            var i = this._get(t, "showOn");
            (i == "focus" || i == "both") && e.focus(this._showDatepicker);
            if (i == "button" || i == "both") {
                var s = this._get(t, "buttonText")
                  , o = this._get(t, "buttonImage");
                t.trigger = $(this._get(t, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: o,
                    alt: s,
                    title: s
                }) : $('<button type="button"></button>').addClass(this._triggerClass).html(o == "" ? s : $("<img/>").attr({
                    src: o,
                    alt: s,
                    title: s
                }))),
                e[r ? "before" : "after"](t.trigger),
                t.trigger.click(function() {
                    return $.datepicker._datepickerShowing && $.datepicker._lastInput == e[0] ? $.datepicker._hideDatepicker() : $.datepicker._datepickerShowing && $.datepicker._lastInput != e[0] ? ($.datepicker._hideDatepicker(),
                    $.datepicker._showDatepicker(e[0])) : $.datepicker._showDatepicker(e[0]),
                    !1
                })
            }
        },
        _autoSize: function(e) {
            if (this._get(e, "autoSize") && !e.inline) {
                var t = new Date(2009,11,20)
                  , n = this._get(e, "dateFormat");
                if (n.match(/[DM]/)) {
                    var r = function(e) {
                        var t = 0
                          , n = 0;
                        for (var r = 0; r < e.length; r++) {
                            e[r].length > t && (t = e[r].length,
                            n = r)
                        }
                        return n
                    }
                    ;
                    t.setMonth(r(this._get(e, n.match(/MM/) ? "monthNames" : "monthNamesShort"))),
                    t.setDate(r(this._get(e, n.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - t.getDay())
                }
                e.input.attr("size", this._formatDate(e, t).length)
            }
        },
        _inlineDatepicker: function(e, t) {
            var n = $(e);
            if (n.hasClass(this.markerClassName)) {
                return
            }
            n.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker", function(e, n, r) {
                t.settings[n] = r
            }).bind("getData.datepicker", function(e, n) {
                return this._get(t, n)
            }),
            $.data(e, PROP_NAME, t),
            this._setDate(t, this._getDefaultDate(t), !0),
            this._updateDatepicker(t),
            this._updateAlternate(t),
            t.settings.disabled && this._disableDatepicker(e),
            t.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(e, t, n, r, i) {
            var s = this._dialogInst;
            if (!s) {
                this.uuid += 1;
                var o = "dp" + this.uuid;
                this._dialogInput = $('<input type="text" id="' + o + '" style="position: absolute; top: -100px; width: 0px;"/>'),
                this._dialogInput.keydown(this._doKeyDown),
                $("body").append(this._dialogInput),
                s = this._dialogInst = this._newInst(this._dialogInput, !1),
                s.settings = {},
                $.data(this._dialogInput[0], PROP_NAME, s)
            }
            extendRemove(s.settings, r || {}),
            t = t && t.constructor == Date ? this._formatDate(s, t) : t,
            this._dialogInput.val(t),
            this._pos = i ? i.length ? i : [i.pageX, i.pageY] : null ;
            if (!this._pos) {
                var u = document.documentElement.clientWidth
                  , a = document.documentElement.clientHeight
                  , f = document.documentElement.scrollLeft || document.body.scrollLeft
                  , l = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [u / 2 - 100 + f, a / 2 - 150 + l]
            }
            return this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"),
            s.settings.onSelect = n,
            this._inDialog = !0,
            this.dpDiv.addClass(this._dialogClass),
            this._showDatepicker(this._dialogInput[0]),
            $.blockUI && $.blockUI(this.dpDiv),
            $.data(this._dialogInput[0], PROP_NAME, s),
            this
        },
        _destroyDatepicker: function(e) {
            var t = $(e)
              , n = $.data(e, PROP_NAME);
            if (!t.hasClass(this.markerClassName)) {
                return
            }
            var r = e.nodeName.toLowerCase();
            $.removeData(e, PROP_NAME),
            r == "input" ? (n.append.remove(),
            n.trigger.remove(),
            t.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : (r == "div" || r == "span") && t.removeClass(this.markerClassName).empty()
        },
        _enableDatepicker: function(e) {
            var t = $(e)
              , n = $.data(e, PROP_NAME);
            if (!t.hasClass(this.markerClassName)) {
                return
            }
            var r = e.nodeName.toLowerCase();
            if (r == "input") {
                e.disabled = !1,
                n.trigger.filter("button").each(function() {
                    this.disabled = !1
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                })
            } else {
                if (r == "div" || r == "span") {
                    var i = t.children("." + this._inlineClass);
                    i.children().removeClass("ui-state-disabled"),
                    i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(t) {
                return t == e ? null  : t
            })
        },
        _disableDatepicker: function(e) {
            var t = $(e)
              , n = $.data(e, PROP_NAME);
            if (!t.hasClass(this.markerClassName)) {
                return
            }
            var r = e.nodeName.toLowerCase();
            if (r == "input") {
                e.disabled = !0,
                n.trigger.filter("button").each(function() {
                    this.disabled = !0
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                })
            } else {
                if (r == "div" || r == "span") {
                    var i = t.children("." + this._inlineClass);
                    i.children().addClass("ui-state-disabled"),
                    i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(t) {
                return t == e ? null  : t
            }),
            this._disabledInputs[this._disabledInputs.length] = e
        },
        _isDisabledDatepicker: function(e) {
            if (!e) {
                return !1
            }
            for (var t = 0; t < this._disabledInputs.length; t++) {
                if (this._disabledInputs[t] == e) {
                    return !0
                }
            }
            return !1
        },
        _getInst: function(e) {
            try {
                return $.data(e, PROP_NAME)
            } catch (t) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(e, t, n) {
            var r = this._getInst(e);
            if (arguments.length == 2 && typeof t == "string") {
                return t == "defaults" ? $.extend({}, $.datepicker._defaults) : r ? t == "all" ? $.extend({}, r.settings) : this._get(r, t) : null 
            }
            var i = t || {};
            typeof t == "string" && (i = {},
            i[t] = n);
            if (r) {
                this._curInst == r && this._hideDatepicker();
                var s = this._getDateDatepicker(e, !0)
                  , o = this._getMinMaxDate(r, "min")
                  , u = this._getMinMaxDate(r, "max");
                extendRemove(r.settings, i),
                o !== null  && i.dateFormat !== undefined && i.minDate === undefined && (r.settings.minDate = this._formatDate(r, o)),
                u !== null  && i.dateFormat !== undefined && i.maxDate === undefined && (r.settings.maxDate = this._formatDate(r, u)),
                this._attachments($(e), r),
                this._autoSize(r),
                this._setDate(r, s),
                this._updateAlternate(r),
                this._updateDatepicker(r)
            }
        },
        _changeDatepicker: function(e, t, n) {
            this._optionDatepicker(e, t, n)
        },
        _refreshDatepicker: function(e) {
            var t = this._getInst(e);
            t && this._updateDatepicker(t)
        },
        _setDateDatepicker: function(e, t) {
            var n = this._getInst(e);
            n && (this._setDate(n, t),
            this._updateDatepicker(n),
            this._updateAlternate(n))
        },
        _getDateDatepicker: function(e, t) {
            var n = this._getInst(e);
            return n && !n.inline && this._setDateFromField(n, t),
            n ? this._getDate(n) : null 
        },
        _doKeyDown: function(e) {
            var t = $.datepicker._getInst(e.target)
              , n = !0
              , r = t.dpDiv.is(".ui-datepicker-rtl");
            t._keyEvent = !0;
            if ($.datepicker._datepickerShowing) {
                switch (e.keyCode) {
                case 9:
                    $.datepicker._hideDatepicker(),
                    n = !1;
                    break;
                case 13:
                    var i = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", t.dpDiv);
                    i[0] && $.datepicker._selectDay(e.target, t.selectedMonth, t.selectedYear, i[0]);
                    var s = $.datepicker._get(t, "onSelect");
                    if (s) {
                        var o = $.datepicker._formatDate(t);
                        s.apply(t.input ? t.input[0] : null , [o, t])
                    } else {
                        $.datepicker._hideDatepicker()
                    }
                    return !1;
                case 27:
                    $.datepicker._hideDatepicker();
                    break;
                case 33:
                    $.datepicker._adjustDate(e.target, e.ctrlKey ? -$.datepicker._get(t, "stepBigMonths") : -$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 34:
                    $.datepicker._adjustDate(e.target, e.ctrlKey ? +$.datepicker._get(t, "stepBigMonths") : +$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 35:
                    (e.ctrlKey || e.metaKey) && $.datepicker._clearDate(e.target),
                    n = e.ctrlKey || e.metaKey;
                    break;
                case 36:
                    (e.ctrlKey || e.metaKey) && $.datepicker._gotoToday(e.target),
                    n = e.ctrlKey || e.metaKey;
                    break;
                case 37:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, r ? 1 : -1, "D"),
                    n = e.ctrlKey || e.metaKey,
                    e.originalEvent.altKey && $.datepicker._adjustDate(e.target, e.ctrlKey ? -$.datepicker._get(t, "stepBigMonths") : -$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 38:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, -7, "D"),
                    n = e.ctrlKey || e.metaKey;
                    break;
                case 39:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, r ? -1 : 1, "D"),
                    n = e.ctrlKey || e.metaKey,
                    e.originalEvent.altKey && $.datepicker._adjustDate(e.target, e.ctrlKey ? +$.datepicker._get(t, "stepBigMonths") : +$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 40:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, 7, "D"),
                    n = e.ctrlKey || e.metaKey;
                    break;
                default:
                    n = !1
                }
            } else {
                e.keyCode == 36 && e.ctrlKey ? $.datepicker._showDatepicker(this) : n = !1
            }
            n && (e.preventDefault(),
            e.stopPropagation())
        },
        _doKeyPress: function(e) {
            var t = $.datepicker._getInst(e.target);
            if ($.datepicker._get(t, "constrainInput")) {
                var n = $.datepicker._possibleChars($.datepicker._get(t, "dateFormat"))
                  , r = String.fromCharCode(e.charCode == undefined ? e.keyCode : e.charCode);
                return e.ctrlKey || e.metaKey || r < " " || !n || n.indexOf(r) > -1
            }
        },
        _doKeyUp: function(e) {
            var t = $.datepicker._getInst(e.target);
            if (t.input.val() != t.lastVal) {
                try {
                    var n = $.datepicker.parseDate($.datepicker._get(t, "dateFormat"), t.input ? t.input.val() : null , $.datepicker._getFormatConfig(t));
                    n && ($.datepicker._setDateFromField(t),
                    $.datepicker._updateAlternate(t),
                    $.datepicker._updateDatepicker(t))
                } catch (r) {
                    $.datepicker.log(r)
                }
            }
            return !0
        },
        _showDatepicker: function(e) {
            e = e.target || e,
            e.nodeName.toLowerCase() != "input" && (e = $("input", e.parentNode)[0]);
            if ($.datepicker._isDisabledDatepicker(e) || $.datepicker._lastInput == e) {
                return
            }
            var t = $.datepicker._getInst(e);
            $.datepicker._curInst && $.datepicker._curInst != t && ($.datepicker._curInst.dpDiv.stop(!0, !0),
            t && $.datepicker._datepickerShowing && $.datepicker._hideDatepicker($.datepicker._curInst.input[0]));
            var n = $.datepicker._get(t, "beforeShow")
              , r = n ? n.apply(e, [e, t]) : {};
            if (r === !1) {
                return
            }
            extendRemove(t.settings, r),
            t.lastVal = null ,
            $.datepicker._lastInput = e,
            $.datepicker._setDateFromField(t),
            $.datepicker._inDialog && (e.value = ""),
            $.datepicker._pos || ($.datepicker._pos = $.datepicker._findPos(e),
            $.datepicker._pos[1] += e.offsetHeight);
            var i = !1;
            $(e).parents().each(function() {
                return i |= $(this).css("position") == "fixed",
                !i
            });
            var s = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null ,
            t.dpDiv.empty(),
            t.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            }),
            $.datepicker._updateDatepicker(t),
            s = $.datepicker._checkOffset(t, s, i),
            t.dpDiv.css({
                position: $.datepicker._inDialog && $.blockUI ? "static" : i ? "fixed" : "absolute",
                display: "none",
                left: s.left + "px",
                top: s.top + "px"
            });
            if (!t.inline) {
                var o = $.datepicker._get(t, "showAnim")
                  , u = $.datepicker._get(t, "duration")
                  , a = function() {
                    var e = t.dpDiv.find("iframe.ui-datepicker-cover");
                    if (!!e.length) {
                        var n = $.datepicker._getBorders(t.dpDiv);
                        e.css({
                            left: -n[0],
                            top: -n[1],
                            width: t.dpDiv.outerWidth(),
                            height: t.dpDiv.outerHeight()
                        })
                    }
                }
                ;
                t.dpDiv.zIndex($(e).zIndex() + 1),
                $.datepicker._datepickerShowing = !0,
                $.effects && ($.effects.effect[o] || $.effects[o]) ? t.dpDiv.show(o, $.datepicker._get(t, "showOptions"), u, a) : t.dpDiv[o || "show"](o ? u : null , a),
                (!o || !u) && a(),
                t.input.is(":visible") && !t.input.is(":disabled") && t.input.focus(),
                $.datepicker._curInst = t
            }
        },
        _updateDatepicker: function(e) {
            this.maxRows = 4;
            var t = $.datepicker._getBorders(e.dpDiv);
            instActive = e,
            e.dpDiv.empty().append(this._generateHTML(e)),
            this._attachHandlers(e);
            var n = e.dpDiv.find("iframe.ui-datepicker-cover");
            !n.length || n.css({
                left: -t[0],
                top: -t[1],
                width: e.dpDiv.outerWidth(),
                height: e.dpDiv.outerHeight()
            }),
            e.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var r = this._getNumberOfMonths(e)
              , i = r[1]
              , s = 17;
            e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),
            i > 1 && e.dpDiv.addClass("ui-datepicker-multi-" + i).css("width", s * i + "em"),
            e.dpDiv[(r[0] != 1 || r[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi"),
            e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"),
            e == $.datepicker._curInst && $.datepicker._datepickerShowing && e.input && e.input.is(":visible") && !e.input.is(":disabled") && e.input[0] != document.activeElement && e.input.focus();
            if (e.yearshtml) {
                var o = e.yearshtml;
                setTimeout(function() {
                    o === e.yearshtml && e.yearshtml && e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),
                    o = e.yearshtml = null 
                }, 0)
            }
        },
        _getBorders: function(e) {
            var t = function(e) {
                return {
                    thin: 1,
                    medium: 2,
                    thick: 3
                }[e] || e
            }
            ;
            return [parseFloat(t(e.css("border-left-width"))), parseFloat(t(e.css("border-top-width")))]
        },
        _checkOffset: function(e, t, n) {
            var r = e.dpDiv.outerWidth()
              , i = e.dpDiv.outerHeight()
              , s = e.input ? e.input.outerWidth() : 0
              , o = e.input ? e.input.outerHeight() : 0
              , u = document.documentElement.clientWidth + (n ? 0 : $(document).scrollLeft())
              , a = document.documentElement.clientHeight + (n ? 0 : $(document).scrollTop());
            return t.left -= this._get(e, "isRTL") ? r - s : 0,
            t.left -= n && t.left == e.input.offset().left ? $(document).scrollLeft() : 0,
            t.top -= n && t.top == e.input.offset().top + o ? $(document).scrollTop() : 0,
            t.left -= Math.min(t.left, t.left + r > u && u > r ? Math.abs(t.left + r - u) : 0),
            t.top -= Math.min(t.top, t.top + i > a && a > i ? Math.abs(i + o) : 0),
            t
        },
        _findPos: function(e) {
            var t = this._getInst(e)
              , n = this._get(t, "isRTL");
            while (e && (e.type == "hidden" || e.nodeType != 1 || $.expr.filters.hidden(e))) {
                e = e[n ? "previousSibling" : "nextSibling"]
            }
            var r = $(e).offset();
            return [r.left, r.top]
        },
        _hideDatepicker: function(e) {
            var t = this._curInst;
            if (!t || e && t != $.data(e, PROP_NAME)) {
                return
            }
            if (this._datepickerShowing) {
                var n = this._get(t, "showAnim")
                  , r = this._get(t, "duration")
                  , i = function() {
                    $.datepicker._tidyDialog(t)
                }
                ;
                $.effects && ($.effects.effect[n] || $.effects[n]) ? t.dpDiv.hide(n, $.datepicker._get(t, "showOptions"), r, i) : t.dpDiv[n == "slideDown" ? "slideUp" : n == "fadeIn" ? "fadeOut" : "hide"](n ? r : null , i),
                n || i(),
                this._datepickerShowing = !1;
                var s = this._get(t, "onClose");
                s && s.apply(t.input ? t.input[0] : null , [t.input ? t.input.val() : "", t]),
                this._lastInput = null ,
                this._inDialog && (this._dialogInput.css({
                    position: "absolute",
                    left: "0",
                    top: "-100px"
                }),
                $.blockUI && ($.unblockUI(),
                $("body").append(this.dpDiv))),
                this._inDialog = !1
            }
        },
        _tidyDialog: function(e) {
            e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(e) {
            if (!$.datepicker._curInst) {
                return
            }
            var t = $(e.target)
              , n = $.datepicker._getInst(t[0]);
            (t[0].id != $.datepicker._mainDivId && t.parents("#" + $.datepicker._mainDivId).length == 0 && !t.hasClass($.datepicker.markerClassName) && !t.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && (!$.datepicker._inDialog || !$.blockUI) || t.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != n) && $.datepicker._hideDatepicker()
        },
        _adjustDate: function(e, t, n) {
            var r = $(e)
              , i = this._getInst(r[0]);
            if (this._isDisabledDatepicker(r[0])) {
                return
            }
            this._adjustInstDate(i, t + (n == "M" ? this._get(i, "showCurrentAtPos") : 0), n),
            this._updateDatepicker(i)
        },
        _gotoToday: function(e) {
            var t = $(e)
              , n = this._getInst(t[0]);
            if (this._get(n, "gotoCurrent") && n.currentDay) {
                n.selectedDay = n.currentDay,
                n.drawMonth = n.selectedMonth = n.currentMonth,
                n.drawYear = n.selectedYear = n.currentYear
            } else {
                var r = new Date;
                n.selectedDay = r.getDate(),
                n.drawMonth = n.selectedMonth = r.getMonth(),
                n.drawYear = n.selectedYear = r.getFullYear()
            }
            this._notifyChange(n),
            this._adjustDate(t)
        },
        _selectMonthYear: function(e, t, n) {
            var r = $(e)
              , i = this._getInst(r[0]);
            i["selected" + (n == "M" ? "Month" : "Year")] = i["draw" + (n == "M" ? "Month" : "Year")] = parseInt(t.options[t.selectedIndex].value, 10),
            this._notifyChange(i),
            this._adjustDate(r)
        },
        _selectDay: function(e, t, n, r) {
            var i = $(e);
            if ($(r).hasClass(this._unselectableClass) || this._isDisabledDatepicker(i[0])) {
                return
            }
            var s = this._getInst(i[0]);
            s.selectedDay = s.currentDay = $("a", r).html(),
            s.selectedMonth = s.currentMonth = t,
            s.selectedYear = s.currentYear = n,
            this._selectDate(e, this._formatDate(s, s.currentDay, s.currentMonth, s.currentYear))
        },
        _clearDate: function(e) {
            var t = $(e)
              , n = this._getInst(t[0]);
            this._selectDate(t, "")
        },
        _selectDate: function(e, t) {
            var n = $(e)
              , r = this._getInst(n[0]);
            t = t != null  ? t : this._formatDate(r),
            r.input && r.input.val(t),
            this._updateAlternate(r);
            var i = this._get(r, "onSelect");
            i ? i.apply(r.input ? r.input[0] : null , [t, r]) : r.input && r.input.trigger("change"),
            r.inline ? this._updateDatepicker(r) : (this._hideDatepicker(),
            this._lastInput = r.input[0],
            typeof r.input[0] != "object" && r.input.focus(),
            this._lastInput = null )
        },
        _updateAlternate: function(e) {
            var t = this._get(e, "altField");
            if (t) {
                var n = this._get(e, "altFormat") || this._get(e, "dateFormat")
                  , r = this._getDate(e)
                  , i = this.formatDate(n, r, this._getFormatConfig(e));
                $(t).each(function() {
                    $(this).val(i)
                })
            }
        },
        noWeekends: function(e) {
            var t = e.getDay();
            return [t > 0 && t < 6, ""]
        },
        iso8601Week: function(e) {
            var t = new Date(e.getTime());
            t.setDate(t.getDate() + 4 - (t.getDay() || 7));
            var n = t.getTime();
            return t.setMonth(0),
            t.setDate(1),
            Math.floor(Math.round((n - t) / 86400000) / 7) + 1
        },
        parseDate: function(e, t, n) {
            if (e == null  || t == null ) {
                throw "Invalid arguments"
            }
            t = typeof t == "object" ? t.toString() : t + "";
            if (t == "") {
                return null 
            }
            var r = (n ? n.shortYearCutoff : null ) || this._defaults.shortYearCutoff;
            r = typeof r != "string" ? r : (new Date).getFullYear() % 100 + parseInt(r, 10);
            var i = (n ? n.dayNamesShort : null ) || this._defaults.dayNamesShort
              , s = (n ? n.dayNames : null ) || this._defaults.dayNames
              , o = (n ? n.monthNamesShort : null ) || this._defaults.monthNamesShort
              , u = (n ? n.monthNames : null ) || this._defaults.monthNames
              , a = -1
              , f = -1
              , l = -1
              , c = -1
              , h = !1
              , p = function(t) {
                var n = y + 1 < e.length && e.charAt(y + 1) == t;
                return n && y++,
                n
            }
              , d = function(e) {
                var n = p(e)
                  , r = e == "@" ? 14 : e == "!" ? 20 : e == "y" && n ? 4 : e == "o" ? 3 : 2
                  , i = new RegExp("^\\d{1," + r + "}")
                  , s = t.substring(g).match(i);
                if (!s) {
                    throw "Missing number at position " + g
                }
                return g += s[0].length,
                parseInt(s[0], 10)
            }
              , v = function(e, n, r) {
                var i = $.map(p(e) ? r : n, function(e, t) {
                    return [[t, e]]
                }).sort(function(e, t) {
                    return -(e[1].length - t[1].length)
                })
                  , s = -1;
                $.each(i, function(e, n) {
                    var r = n[1];
                    if (t.substr(g, r.length).toLowerCase() == r.toLowerCase()) {
                        return s = n[0],
                        g += r.length,
                        !1
                    }
                });
                if (s != -1) {
                    return s + 1
                }
                throw "Unknown name at position " + g
            }
              , m = function() {
                if (t.charAt(g) != e.charAt(y)) {
                    throw "Unexpected literal at position " + g
                }
                g++
            }
              , g = 0;
            for (var y = 0; y < e.length; y++) {
                if (h) {
                    e.charAt(y) == "'" && !p("'") ? h = !1 : m()
                } else {
                    switch (e.charAt(y)) {
                    case "d":
                        l = d("d");
                        break;
                    case "D":
                        v("D", i, s);
                        break;
                    case "o":
                        c = d("o");
                        break;
                    case "m":
                        f = d("m");
                        break;
                    case "M":
                        f = v("M", o, u);
                        break;
                    case "y":
                        a = d("y");
                        break;
                    case "@":
                        var b = new Date(d("@"));
                        a = b.getFullYear(),
                        f = b.getMonth() + 1,
                        l = b.getDate();
                        break;
                    case "!":
                        var b = new Date((d("!") - this._ticksTo1970) / 10000);
                        a = b.getFullYear(),
                        f = b.getMonth() + 1,
                        l = b.getDate();
                        break;
                    case "'":
                        p("'") ? m() : h = !0;
                        break;
                    default:
                        m()
                    }
                }
            }
            if (g < t.length) {
                var w = t.substr(g);
                if (!/^\s+/.test(w)) {
                    throw "Extra/unparsed characters found in date: " + w
                }
            }
            a == -1 ? a = (new Date).getFullYear() : a < 100 && (a += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (a <= r ? 0 : -100));
            if (c > -1) {
                f = 1,
                l = c;
                do {
                    var E = this._getDaysInMonth(a, f - 1);
                    if (l <= E) {
                        break
                    }
                    f++,
                    l -= E
                } while (!0)
            }
            var b = this._daylightSavingAdjust(new Date(a,f - 1,l));
            if (b.getFullYear() != a || b.getMonth() + 1 != f || b.getDate() != l) {
                throw "Invalid date"
            }
            return b
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 10000000,
        formatDate: function(e, t, n) {
            if (!t) {
                return ""
            }
            var r = (n ? n.dayNamesShort : null ) || this._defaults.dayNamesShort
              , i = (n ? n.dayNames : null ) || this._defaults.dayNames
              , s = (n ? n.monthNamesShort : null ) || this._defaults.monthNamesShort
              , o = (n ? n.monthNames : null ) || this._defaults.monthNames
              , u = function(t) {
                var n = h + 1 < e.length && e.charAt(h + 1) == t;
                return n && h++,
                n
            }
              , a = function(e, t, n) {
                var r = "" + t;
                if (u(e)) {
                    while (r.length < n) {
                        r = "0" + r
                    }
                }
                return r
            }
              , f = function(e, t, n, r) {
                return u(e) ? r[t] : n[t]
            }
              , l = ""
              , c = !1;
            if (t) {
                for (var h = 0; h < e.length; h++) {
                    if (c) {
                        e.charAt(h) == "'" && !u("'") ? c = !1 : l += e.charAt(h)
                    } else {
                        switch (e.charAt(h)) {
                        case "d":
                            l += a("d", t.getDate(), 2);
                            break;
                        case "D":
                            l += f("D", t.getDay(), r, i);
                            break;
                        case "o":
                            l += a("o", Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime() - (new Date(t.getFullYear(),0,0)).getTime()) / 86400000), 3);
                            break;
                        case "m":
                            l += a("m", t.getMonth() + 1, 2);
                            break;
                        case "M":
                            l += f("M", t.getMonth(), s, o);
                            break;
                        case "y":
                            l += u("y") ? t.getFullYear() : (t.getYear() % 100 < 10 ? "0" : "") + t.getYear() % 100;
                            break;
                        case "@":
                            l += t.getTime();
                            break;
                        case "!":
                            l += t.getTime() * 10000 + this._ticksTo1970;
                            break;
                        case "'":
                            u("'") ? l += "'" : c = !0;
                            break;
                        default:
                            l += e.charAt(h)
                        }
                    }
                }
            }
            return l
        },
        _possibleChars: function(e) {
            var t = ""
              , n = !1
              , r = function(t) {
                var n = i + 1 < e.length && e.charAt(i + 1) == t;
                return n && i++,
                n
            }
            ;
            for (var i = 0; i < e.length; i++) {
                if (n) {
                    e.charAt(i) == "'" && !r("'") ? n = !1 : t += e.charAt(i)
                } else {
                    switch (e.charAt(i)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        t += "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null ;
                    case "'":
                        r("'") ? t += "'" : n = !0;
                        break;
                    default:
                        t += e.charAt(i)
                    }
                }
            }
            return t
        },
        _get: function(e, t) {
            return e.settings[t] !== undefined ? e.settings[t] : this._defaults[t]
        },
        _setDateFromField: function(e, t) {
            if (e.input.val() == e.lastVal) {
                return
            }
            var n = this._get(e, "dateFormat"), r = e.lastVal = e.input ? e.input.val() : null , i, s;
            i = s = this._getDefaultDate(e);
            var o = this._getFormatConfig(e);
            try {
                i = this.parseDate(n, r, o) || s
            } catch (u) {
                this.log(u),
                r = t ? "" : r
            }
            e.selectedDay = i.getDate(),
            e.drawMonth = e.selectedMonth = i.getMonth(),
            e.drawYear = e.selectedYear = i.getFullYear(),
            e.currentDay = r ? i.getDate() : 0,
            e.currentMonth = r ? i.getMonth() : 0,
            e.currentYear = r ? i.getFullYear() : 0,
            this._adjustInstDate(e)
        },
        _getDefaultDate: function(e) {
            return this._restrictMinMax(e, this._determineDate(e, this._get(e, "defaultDate"), new Date))
        },
        _determineDate: function(e, t, n) {
            var r = function(e) {
                var t = new Date;
                return t.setDate(t.getDate() + e),
                t
            }
              , i = function(t) {
                try {
                    return $.datepicker.parseDate($.datepicker._get(e, "dateFormat"), t, $.datepicker._getFormatConfig(e))
                } catch (n) {}
                var r = (t.toLowerCase().match(/^c/) ? $.datepicker._getDate(e) : null ) || new Date
                  , i = r.getFullYear()
                  , s = r.getMonth()
                  , o = r.getDate()
                  , u = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g
                  , a = u.exec(t);
                while (a) {
                    switch (a[2] || "d") {
                    case "d":
                    case "D":
                        o += parseInt(a[1], 10);
                        break;
                    case "w":
                    case "W":
                        o += parseInt(a[1], 10) * 7;
                        break;
                    case "m":
                    case "M":
                        s += parseInt(a[1], 10),
                        o = Math.min(o, $.datepicker._getDaysInMonth(i, s));
                        break;
                    case "y":
                    case "Y":
                        i += parseInt(a[1], 10),
                        o = Math.min(o, $.datepicker._getDaysInMonth(i, s))
                    }
                    a = u.exec(t)
                }
                return new Date(i,s,o)
            }
              , s = t == null  || t === "" ? n : typeof t == "string" ? i(t) : typeof t == "number" ? isNaN(t) ? n : r(t) : new Date(t.getTime());
            return s = s && s.toString() == "Invalid Date" ? n : s,
            s && (s.setHours(0),
            s.setMinutes(0),
            s.setSeconds(0),
            s.setMilliseconds(0)),
            this._daylightSavingAdjust(s)
        },
        _daylightSavingAdjust: function(e) {
            return e ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0),
            e) : null 
        },
        _setDate: function(e, t, n) {
            var r = !t
              , i = e.selectedMonth
              , s = e.selectedYear
              , o = this._restrictMinMax(e, this._determineDate(e, t, new Date));
            e.selectedDay = e.currentDay = o.getDate(),
            e.drawMonth = e.selectedMonth = e.currentMonth = o.getMonth(),
            e.drawYear = e.selectedYear = e.currentYear = o.getFullYear(),
            (i != e.selectedMonth || s != e.selectedYear) && !n && this._notifyChange(e),
            this._adjustInstDate(e),
            e.input && e.input.val(r ? "" : this._formatDate(e))
        },
        _getDate: function(e) {
            var t = !e.currentYear || e.input && e.input.val() == "" ? null  : this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));
            return t
        },
        _attachHandlers: function(e) {
            var t = this._get(e, "stepMonths")
              , n = "#" + e.id.replace(/\\\\/g, "\\");
            e.dpDiv.find("[data-handler]").map(function() {
                var e = {
                    prev: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(n, -t, "M")
                    },
                    next: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(n, +t, "M")
                    },
                    hide: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._hideDatepicker()
                    },
                    today: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._gotoToday(n)
                    },
                    selectDay: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectDay(n, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this),
                        !1
                    },
                    selectMonth: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(n, this, "M"),
                        !1
                    },
                    selectYear: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(n, this, "Y"),
                        !1
                    }
                };
                $(this).bind(this.getAttribute("data-event"), e[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(e) {
            var t = new Date;
            t = this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));
            var n = this._get(e, "isRTL")
              , r = this._get(e, "showButtonPanel")
              , i = this._get(e, "hideIfNoPrevNext")
              , s = this._get(e, "navigationAsDateFormat")
              , o = this._getNumberOfMonths(e)
              , u = this._get(e, "showCurrentAtPos")
              , a = this._get(e, "stepMonths")
              , f = o[0] != 1 || o[1] != 1
              , l = this._daylightSavingAdjust(e.currentDay ? new Date(e.currentYear,e.currentMonth,e.currentDay) : new Date(9999,9,9))
              , c = this._getMinMaxDate(e, "min")
              , h = this._getMinMaxDate(e, "max")
              , p = e.drawMonth - u
              , d = e.drawYear;
            p < 0 && (p += 12,
            d--);
            if (h) {
                var v = this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth() - o[0] * o[1] + 1,h.getDate()));
                v = c && v < c ? c : v;
                while (this._daylightSavingAdjust(new Date(d,p,1)) > v) {
                    p--,
                    p < 0 && (p = 11,
                    d--)
                }
            }
            e.drawMonth = p,
            e.drawYear = d;
            var m = this._get(e, "prevText");
            m = s ? this.formatDate(m, this._daylightSavingAdjust(new Date(d,p - a,1)), this._getFormatConfig(e)) : m;
            var g = this._canAdjustMonth(e, -1, d, p) ? '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + m + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "e" : "w") + '">' + m + "</span></a>" : i ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + m + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "e" : "w") + '">' + m + "</span></a>"
              , y = this._get(e, "nextText");
            y = s ? this.formatDate(y, this._daylightSavingAdjust(new Date(d,p + a,1)), this._getFormatConfig(e)) : y;
            var b = this._canAdjustMonth(e, 1, d, p) ? '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + y + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "w" : "e") + '">' + y + "</span></a>" : i ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + y + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "w" : "e") + '">' + y + "</span></a>"
              , w = this._get(e, "currentText")
              , E = this._get(e, "gotoCurrent") && e.currentDay ? l : t;
            w = s ? this.formatDate(w, E, this._getFormatConfig(e)) : w;
            var S = e.inline ? "" : '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + this._get(e, "closeText") + "</button>"
              , x = r ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (n ? S : "") + (this._isInRange(e, E) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + w + "</button>" : "") + (n ? "" : S) + "</div>" : ""
              , T = parseInt(this._get(e, "firstDay"), 10);
            T = isNaN(T) ? 0 : T;
            var N = this._get(e, "showWeek")
              , C = this._get(e, "dayNames")
              , k = this._get(e, "dayNamesShort")
              , L = this._get(e, "dayNamesMin")
              , A = this._get(e, "monthNames")
              , O = this._get(e, "monthNamesShort")
              , M = this._get(e, "beforeShowDay")
              , _ = this._get(e, "showOtherMonths")
              , D = this._get(e, "selectOtherMonths")
              , P = this._get(e, "calculateWeek") || this.iso8601Week
              , H = this._getDefaultDate(e)
              , B = "";
            for (var j = 0; j < o[0]; j++) {
                var F = "";
                this.maxRows = 4;
                for (var I = 0; I < o[1]; I++) {
                    var q = this._daylightSavingAdjust(new Date(d,p,e.selectedDay))
                      , R = " ui-corner-all"
                      , U = "";
                    if (f) {
                        U += '<div class="ui-datepicker-group';
                        if (o[1] > 1) {
                            switch (I) {
                            case 0:
                                U += " ui-datepicker-group-first",
                                R = " ui-corner-" + (n ? "right" : "left");
                                break;
                            case o[1] - 1:
                                U += " ui-datepicker-group-last",
                                R = " ui-corner-" + (n ? "left" : "right");
                                break;
                            default:
                                U += " ui-datepicker-group-middle",
                                R = ""
                            }
                        }
                        U += '">'
                    }
                    U += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + R + '">' + (/all|left/.test(R) && j == 0 ? n ? b : g : "") + (/all|right/.test(R) && j == 0 ? n ? g : b : "") + this._generateMonthYearHeader(e, p, d, c, h, j > 0 || I > 0, A, O) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
                    var z = N ? '<th class="ui-datepicker-week-col">' + this._get(e, "weekHeader") + "</th>" : "";
                    for (var W = 0; W < 7; W++) {
                        var X = (W + T) % 7;
                        z += "<th" + ((W + T + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + C[X] + '">' + L[X] + "</span></th>"
                    }
                    U += z + "</tr></thead><tbody>";
                    var V = this._getDaysInMonth(d, p);
                    d == e.selectedYear && p == e.selectedMonth && (e.selectedDay = Math.min(e.selectedDay, V));
                    var J = (this._getFirstDayOfMonth(d, p) - T + 7) % 7
                      , K = Math.ceil((J + V) / 7)
                      , Q = f ? this.maxRows > K ? this.maxRows : K : K;
                    this.maxRows = Q;
                    var G = this._daylightSavingAdjust(new Date(d,p,1 - J));
                    for (var Y = 0; Y < Q; Y++) {
                        U += "<tr>";
                        var Z = N ? '<td class="ui-datepicker-week-col">' + this._get(e, "calculateWeek")(G) + "</td>" : "";
                        for (var W = 0; W < 7; W++) {
                            var et = M ? M.apply(e.input ? e.input[0] : null , [G]) : [!0, ""]
                              , tt = G.getMonth() != p
                              , nt = tt && !D || !et[0] || c && G < c || h && G > h;
                            Z += '<td class="' + ((W + T + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (tt ? " ui-datepicker-other-month" : "") + (G.getTime() == q.getTime() && p == e.selectedMonth && e._keyEvent || H.getTime() == G.getTime() && H.getTime() == q.getTime() ? " " + this._dayOverClass : "") + (nt ? " " + this._unselectableClass + " ui-state-disabled" : "") + (tt && !_ ? "" : " " + et[1] + (G.getTime() == l.getTime() ? " " + this._currentClass : "") + (G.getTime() == t.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!tt || _) && et[2] ? ' title="' + et[2] + '"' : "") + (nt ? "" : ' data-handler="selectDay" data-event="click" data-month="' + G.getMonth() + '" data-year="' + G.getFullYear() + '"') + ">" + (tt && !_ ? "&#xa0;" : nt ? '<span class="ui-state-default">' + G.getDate() + "</span>" : '<a class="ui-state-default' + (G.getTime() == t.getTime() ? " ui-state-highlight" : "") + (G.getTime() == l.getTime() ? " ui-state-active" : "") + (tt ? " ui-priority-secondary" : "") + '" href="#">' + G.getDate() + "</a>") + "</td>",
                            G.setDate(G.getDate() + 1),
                            G = this._daylightSavingAdjust(G)
                        }
                        U += Z + "</tr>"
                    }
                    p++,
                    p > 11 && (p = 0,
                    d++),
                    U += "</tbody></table>" + (f ? "</div>" + (o[0] > 0 && I == o[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : ""),
                    F += U
                }
                B += F
            }
            return B += x + ($.ui.ie6 && !e.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : ""),
            e._keyEvent = !1,
            B
        },
        _generateMonthYearHeader: function(e, t, n, r, i, s, o, u) {
            var a = this._get(e, "changeMonth")
              , f = this._get(e, "changeYear")
              , l = this._get(e, "showMonthAfterYear")
              , c = '<div class="ui-datepicker-title">'
              , h = "";
            if (s || !a) {
                h += '<span class="ui-datepicker-month">' + o[t] + "</span>"
            } else {
                var p = r && r.getFullYear() == n
                  , d = i && i.getFullYear() == n;
                h += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
                for (var v = 0; v < 12; v++) {
                    (!p || v >= r.getMonth()) && (!d || v <= i.getMonth()) && (h += '<option value="' + v + '"' + (v == t ? ' selected="selected"' : "") + ">" + u[v] + "</option>")
                }
                h += "</select>"
            }
            l || (c += h + (s || !a || !f ? "&#xa0;" : ""));
            if (!e.yearshtml) {
                e.yearshtml = "";
                if (s || !f) {
                    c += '<span class="ui-datepicker-year">' + n + "</span>"
                } else {
                    var m = this._get(e, "yearRange").split(":")
                      , g = (new Date).getFullYear()
                      , y = function(e) {
                        var t = e.match(/c[+-].*/) ? n + parseInt(e.substring(1), 10) : e.match(/[+-].*/) ? g + parseInt(e, 10) : parseInt(e, 10);
                        return isNaN(t) ? g : t
                    }
                      , b = y(m[0])
                      , w = Math.max(b, y(m[1] || ""));
                    b = r ? Math.max(b, r.getFullYear()) : b,
                    w = i ? Math.min(w, i.getFullYear()) : w,
                    e.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
                    for (; b <= w; b++) {
                        e.yearshtml += '<option value="' + b + '"' + (b == n ? ' selected="selected"' : "") + ">" + b + "</option>"
                    }
                    e.yearshtml += "</select>",
                    c += e.yearshtml,
                    e.yearshtml = null 
                }
            }
            return c += this._get(e, "yearSuffix"),
            l && (c += (s || !a || !f ? "&#xa0;" : "") + h),
            c += "</div>",
            c
        },
        _adjustInstDate: function(e, t, n) {
            var r = e.drawYear + (n == "Y" ? t : 0)
              , i = e.drawMonth + (n == "M" ? t : 0)
              , s = Math.min(e.selectedDay, this._getDaysInMonth(r, i)) + (n == "D" ? t : 0)
              , o = this._restrictMinMax(e, this._daylightSavingAdjust(new Date(r,i,s)));
            e.selectedDay = o.getDate(),
            e.drawMonth = e.selectedMonth = o.getMonth(),
            e.drawYear = e.selectedYear = o.getFullYear(),
            (n == "M" || n == "Y") && this._notifyChange(e)
        },
        _restrictMinMax: function(e, t) {
            var n = this._getMinMaxDate(e, "min")
              , r = this._getMinMaxDate(e, "max")
              , i = n && t < n ? n : t;
            return i = r && i > r ? r : i,
            i
        },
        _notifyChange: function(e) {
            var t = this._get(e, "onChangeMonthYear");
            t && t.apply(e.input ? e.input[0] : null , [e.selectedYear, e.selectedMonth + 1, e])
        },
        _getNumberOfMonths: function(e) {
            var t = this._get(e, "numberOfMonths");
            return t == null  ? [1, 1] : typeof t == "number" ? [1, t] : t
        },
        _getMinMaxDate: function(e, t) {
            return this._determineDate(e, this._get(e, t + "Date"), null )
        },
        _getDaysInMonth: function(e, t) {
            return 32 - this._daylightSavingAdjust(new Date(e,t,32)).getDate()
        },
        _getFirstDayOfMonth: function(e, t) {
            return (new Date(e,t,1)).getDay()
        },
        _canAdjustMonth: function(e, t, n, r) {
            var i = this._getNumberOfMonths(e)
              , s = this._daylightSavingAdjust(new Date(n,r + (t < 0 ? t : i[0] * i[1]),1));
            return t < 0 && s.setDate(this._getDaysInMonth(s.getFullYear(), s.getMonth())),
            this._isInRange(e, s)
        },
        _isInRange: function(e, t) {
            var n = this._getMinMaxDate(e, "min")
              , r = this._getMinMaxDate(e, "max");
            return (!n || t.getTime() >= n.getTime()) && (!r || t.getTime() <= r.getTime())
        },
        _getFormatConfig: function(e) {
            var t = this._get(e, "shortYearCutoff");
            return t = typeof t != "string" ? t : (new Date).getFullYear() % 100 + parseInt(t, 10),
            {
                shortYearCutoff: t,
                dayNamesShort: this._get(e, "dayNamesShort"),
                dayNames: this._get(e, "dayNames"),
                monthNamesShort: this._get(e, "monthNamesShort"),
                monthNames: this._get(e, "monthNames")
            }
        },
        _formatDate: function(e, t, n, r) {
            t || (e.currentDay = e.selectedDay,
            e.currentMonth = e.selectedMonth,
            e.currentYear = e.selectedYear);
            var i = t ? typeof t == "object" ? t : this._daylightSavingAdjust(new Date(r,n,t)) : this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));
            return this.formatDate(this._get(e, "dateFormat"), i, this._getFormatConfig(e))
        }
    }),
    $.fn.datepicker = function(e) {
        if (!this.length) {
            return this
        }
        $.datepicker.initialized || ($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),
        $.datepicker.initialized = !0);
        var t = Array.prototype.slice.call(arguments, 1);
        return typeof e != "string" || e != "isDisabled" && e != "getDate" && e != "widget" ? e == "option" && arguments.length == 2 && typeof arguments[1] == "string" ? $.datepicker["_" + e + "Datepicker"].apply($.datepicker, [this[0]].concat(t)) : this.each(function() {
            typeof e == "string" ? $.datepicker["_" + e + "Datepicker"].apply($.datepicker, [this].concat(t)) : $.datepicker._attachDatepicker(this, e)
        }) : $.datepicker["_" + e + "Datepicker"].apply($.datepicker, [this[0]].concat(t))
    }
    ,
    $.datepicker = new Datepicker,
    $.datepicker.initialized = !1,
    $.datepicker.uuid = (new Date).getTime(),
    $.datepicker.version = "1.9.2",
    window["DP_jQuery_" + dpuuid] = $
})(jQuery);
(function(g, d) {
    var h = "ui-dialog ui-widget ui-widget-content ui-corner-all "
      , f = {
        buttons: !0,
        height: !0,
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
        width: !0
    }
      , a = {
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0
    };
    g.widget("ui.dialog", {
        version: "1.9.2",
        options: {
            autoOpen: !0,
            buttons: {},
            closeOnEscape: !0,
            closeText: "close",
            dialogClass: "",
            draggable: !0,
            hide: null ,
            height: "auto",
            maxHeight: !1,
            maxWidth: !1,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(e) {
                    var m = g(this).css(e).offset().top;
                    m < 0 && g(this).css("top", e.top - m)
                }
            },
            resizable: !0,
            show: null ,
            stack: !0,
            title: "",
            width: 300,
            zIndex: 1000
        },
        _create: function() {
            this.originalTitle = this.element.attr("title"),
            typeof this.originalTitle != "string" && (this.originalTitle = ""),
            this.oldPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            },
            this.options.title = this.options.title || this.originalTitle;
            var q = this, z = this.options, p = z.title || "&#160;", v, C, m, e, B;
            v = (this.uiDialog = g("<div>")).addClass(h + z.dialogClass).css({
                display: "none",
                outline: 0,
                zIndex: z.zIndex
            }).attr("tabIndex", -1).keydown(function(o) {
                z.closeOnEscape && !o.isDefaultPrevented() && o.keyCode && o.keyCode === g.ui.keyCode.ESCAPE && (q.close(o),
                o.preventDefault())
            }).mousedown(function(o) {
                q.moveToTop(!1, o)
            }).appendTo("body"),
            this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(v),
            C = (this.uiDialogTitlebar = g("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown", function() {
                v.focus()
            }).prependTo(v),
            m = g("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role", "button").click(function(o) {
                o.preventDefault(),
                q.close(o)
            }).appendTo(C),
            (this.uiDialogTitlebarCloseText = g("<span>")).addClass("ui-icon ui-icon-closethick").text(z.closeText).appendTo(m),
            e = g("<span>").uniqueId().addClass("ui-dialog-title").html(p).prependTo(C),
            B = (this.uiDialogButtonPane = g("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),
            (this.uiButtonSet = g("<div>")).addClass("ui-dialog-buttonset").appendTo(B),
            v.attr({
                role: "dialog",
                "aria-labelledby": e.attr("id")
            }),
            C.find("*").add(C).disableSelection(),
            this._hoverable(m),
            this._focusable(m),
            z.draggable && g.fn.draggable && this._makeDraggable(),
            z.resizable && g.fn.resizable && this._makeResizable(),
            this._createButtons(z.buttons),
            this._isOpen = !1,
            g.fn.bgiframe && v.bgiframe(),
            this._on(v, {
                keydown: function(u) {
                    if (!z.modal || u.keyCode !== g.ui.keyCode.TAB) {
                        return
                    }
                    var E = g(":tabbable", v)
                      , r = E.filter(":first")
                      , D = E.filter(":last");
                    if (u.target === D[0] && !u.shiftKey) {
                        return r.focus(1),
                        !1
                    }
                    if (u.target === r[0] && u.shiftKey) {
                        return D.focus(1),
                        !1
                    }
                }
            })
        },
        _init: function() {
            this.options.autoOpen && this.open()
        },
        _destroy: function() {
            var o, m = this.oldPosition;
            this.overlay && this.overlay.destroy(),
            this.uiDialog.hide(),
            this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),
            this.uiDialog.remove(),
            this.originalTitle && this.element.attr("title", this.originalTitle),
            o = m.parent.children().eq(m.index),
            o.length && o[0] !== this.element[0] ? o.before(this.element) : m.parent.append(this.element)
        },
        widget: function() {
            return this.uiDialog
        },
        close: function(m) {
            var p = this, o, e;
            if (!this._isOpen) {
                return
            }
            if (!1 === this._trigger("beforeClose", m)) {
                return
            }
            return this._isOpen = !1,
            this.overlay && this.overlay.destroy(),
            this.options.hide ? this._hide(this.uiDialog, this.options.hide, function() {
                p._trigger("close", m)
            }) : (this.uiDialog.hide(),
            this._trigger("close", m)),
            g.ui.dialog.overlay.resize(),
            this.options.modal && (o = 0,
            g(".ui-dialog").each(function() {
                this !== p.uiDialog[0] && (e = g(this).css("z-index"),
                isNaN(e) || (o = Math.max(o, e)))
            }),
            g.ui.dialog.maxZ = o),
            this
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function(m, p) {
            var o = this.options, e;
            return o.modal && !m || !o.stack && !o.modal ? this._trigger("focus", p) : (o.zIndex > g.ui.dialog.maxZ && (g.ui.dialog.maxZ = o.zIndex),
            this.overlay && (g.ui.dialog.maxZ += 1,
            g.ui.dialog.overlay.maxZ = g.ui.dialog.maxZ,
            this.overlay.$el.css("z-index", g.ui.dialog.overlay.maxZ)),
            e = {
                scrollTop: this.element.scrollTop(),
                scrollLeft: this.element.scrollLeft()
            },
            g.ui.dialog.maxZ += 1,
            this.uiDialog.css("z-index", g.ui.dialog.maxZ),
            this.element.attr(e),
            this._trigger("focus", p),
            this)
        },
        open: function() {
            if (this._isOpen) {
                return
            }
            var e, o = this.options, m = this.uiDialog;
            return this._size(),
            this._position(o.position),
            m.show(o.show),
            this.overlay = o.modal ? new g.ui.dialog.overlay(this) : null ,
            this.moveToTop(!0),
            e = this.element.find(":tabbable"),
            e.length || (e = this.uiDialogButtonPane.find(":tabbable"),
            e.length || (e = m)),
            e.eq(0).focus(),
            this._isOpen = !0,
            this._trigger("open"),
            this
        },
        _createButtons: function(e) {
            var o = this
              , m = !1;
            this.uiDialogButtonPane.remove(),
            this.uiButtonSet.empty(),
            typeof e == "object" && e !== null  && g.each(e, function() {
                return !(m = !0)
            }),
            m ? (g.each(e, function(q, v) {
                var p, u;
                v = g.isFunction(v) ? {
                    click: v,
                    text: q
                } : v,
                v = g.extend({
                    type: "button"
                }, v),
                u = v.click,
                v.click = function() {
                    u.apply(o.element[0], arguments)
                }
                ,
                p = g("<button></button>", v).appendTo(o.uiButtonSet),
                g.fn.button && p.button()
            }),
            this.uiDialog.addClass("ui-dialog-buttons"),
            this.uiDialogButtonPane.appendTo(this.uiDialog)) : this.uiDialog.removeClass("ui-dialog-buttons")
        },
        _makeDraggable: function() {
            function m(p) {
                return {
                    position: p.position,
                    offset: p.offset
                }
            }
            var e = this
              , o = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(q, p) {
                    g(this).addClass("ui-dialog-dragging"),
                    e._trigger("dragStart", q, m(p))
                },
                drag: function(p, q) {
                    e._trigger("drag", p, m(q))
                },
                stop: function(p, q) {
                    o.position = [q.position.left - e.document.scrollLeft(), q.position.top - e.document.scrollTop()],
                    g(this).removeClass("ui-dialog-dragging"),
                    e._trigger("dragStop", p, m(q)),
                    g.ui.dialog.overlay.resize()
                }
            })
        },
        _makeResizable: function(z) {
            function e(o) {
                return {
                    originalPosition: o.originalPosition,
                    originalSize: o.originalSize,
                    position: o.position,
                    size: o.size
                }
            }
            z = z === d ? this.options.resizable : z;
            var q = this
              , m = this.options
              , p = this.uiDialog.css("position")
              , v = typeof z == "string" ? z : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: m.maxWidth,
                maxHeight: m.maxHeight,
                minWidth: m.minWidth,
                minHeight: this._minHeight(),
                handles: v,
                start: function(o, r) {
                    g(this).addClass("ui-dialog-resizing"),
                    q._trigger("resizeStart", o, e(r))
                },
                resize: function(r, o) {
                    q._trigger("resize", r, e(o))
                },
                stop: function(o, r) {
                    g(this).removeClass("ui-dialog-resizing"),
                    m.height = g(this).height(),
                    m.width = g(this).width(),
                    q._trigger("resizeStop", o, e(r)),
                    g.ui.dialog.overlay.resize()
                }
            }).css("position", p).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
        },
        _minHeight: function() {
            var m = this.options;
            return m.height === "auto" ? m.minHeight : Math.min(m.minHeight, m.height)
        },
        _position: function(m) {
            var p = [], o = [0, 0], e;
            if (m) {
                if (typeof m == "string" || typeof m == "object" && "0" in m) {
                    p = m.split ? m.split(" ") : [m[0], m[1]],
                    p.length === 1 && (p[1] = p[0]),
                    g.each(["left", "top"], function(r, q) {
                        +p[r] === p[r] && (o[r] = p[r],
                        p[r] = q)
                    }),
                    m = {
                        my: p[0] + (o[0] < 0 ? o[0] : "+" + o[0]) + " " + p[1] + (o[1] < 0 ? o[1] : "+" + o[1]),
                        at: p.join(" ")
                    }
                }
                m = g.extend({}, g.ui.dialog.prototype.options.position, m)
            } else {
                m = g.ui.dialog.prototype.options.position
            }
            e = this.uiDialog.is(":visible"),
            e || this.uiDialog.show(),
            this.uiDialog.position(m),
            e || this.uiDialog.hide()
        },
        _setOptions: function(e) {
            var q = this
              , m = {}
              , p = !1;
            g.each(e, function(r, o) {
                q._setOption(r, o),
                r in f && (p = !0),
                r in a && (m[r] = o)
            }),
            p && this._size(),
            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", m)
        },
        _setOption: function(m, q) {
            var e, p, u = this.uiDialog;
            switch (m) {
            case "buttons":
                this._createButtons(q);
                break;
            case "closeText":
                this.uiDialogTitlebarCloseText.text("" + q);
                break;
            case "dialogClass":
                u.removeClass(this.options.dialogClass).addClass(h + q);
                break;
            case "disabled":
                q ? u.addClass("ui-dialog-disabled") : u.removeClass("ui-dialog-disabled");
                break;
            case "draggable":
                e = u.is(":data(draggable)"),
                e && !q && u.draggable("destroy"),
                !e && q && this._makeDraggable();
                break;
            case "position":
                this._position(q);
                break;
            case "resizable":
                p = u.is(":data(resizable)"),
                p && !q && u.resizable("destroy"),
                p && typeof q == "string" && u.resizable("option", "handles", q),
                !p && q !== !1 && this._makeResizable(q);
                break;
            case "title":
                g(".ui-dialog-title", this.uiDialogTitlebar).html("" + (q || "&#160;"))
            }
            this._super(m, q)
        },
        _size: function() {
            var m, q, p, e = this.options, o = this.uiDialog.is(":visible");
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                height: 0
            }),
            e.minWidth > e.width && (e.width = e.minWidth),
            m = this.uiDialog.css({
                height: "auto",
                width: e.width
            }).outerHeight(),
            q = Math.max(0, e.minHeight - m),
            e.height === "auto" ? g.support.minHeight ? this.element.css({
                minHeight: q,
                height: "auto"
            }) : (this.uiDialog.show(),
            p = this.element.css("height", "auto").height(),
            o || this.uiDialog.hide(),
            this.element.height(Math.max(p, q))) : this.element.height(Math.max(e.height - m, 0)),
            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        }
    }),
    g.extend(g.ui.dialog, {
        uuid: 0,
        maxZ: 0,
        getTitleId: function(o) {
            var m = o.attr("id");
            return m || (this.uuid += 1,
            m = this.uuid),
            "ui-dialog-title-" + m
        },
        overlay: function(e) {
            this.$el = g.ui.dialog.overlay.create(e)
        }
    }),
    g.extend(g.ui.dialog.overlay, {
        instances: [],
        oldInstances: [],
        maxZ: 0,
        events: g.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function(m) {
            return m + ".dialog-overlay"
        }).join(" "),
        create: function(e) {
            this.instances.length === 0 && (setTimeout(function() {
                g.ui.dialog.overlay.instances.length && g(document).bind(g.ui.dialog.overlay.events, function(o) {
                    if (g(o.target).zIndex() < g.ui.dialog.overlay.maxZ) {
                        return !1
                    }
                })
            }, 1),
            g(window).bind("resize.dialog-overlay", g.ui.dialog.overlay.resize));
            var m = this.oldInstances.pop() || g("<div>").addClass("ui-widget-overlay");
            return g(document).bind("keydown.dialog-overlay", function(p) {
                var o = g.ui.dialog.overlay.instances;
                o.length !== 0 && o[o.length - 1] === m && e.options.closeOnEscape && !p.isDefaultPrevented() && p.keyCode && p.keyCode === g.ui.keyCode.ESCAPE && (e.close(p),
                p.preventDefault())
            }),
            m.appendTo(document.body).css({
                width: this.width(),
                height: this.height()
            }),
            g.fn.bgiframe && m.bgiframe(),
            this.instances.push(m),
            m
        },
        destroy: function(e) {
            var o = g.inArray(e, this.instances)
              , m = 0;
            o !== -1 && this.oldInstances.push(this.instances.splice(o, 1)[0]),
            this.instances.length === 0 && g([document, window]).unbind(".dialog-overlay"),
            e.height(0).width(0).remove(),
            g.each(this.instances, function() {
                m = Math.max(m, this.css("z-index"))
            }),
            this.maxZ = m
        },
        height: function() {
            var e, m;
            return g.ui.ie ? (e = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight),
            m = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight),
            e < m ? g(window).height() + "px" : e + "px") : g(document).height() + "px"
        },
        width: function() {
            var e, m;
            return g.ui.ie ? (e = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth),
            m = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth),
            e < m ? g(window).width() + "px" : e + "px") : g(document).width() + "px"
        },
        resize: function() {
            var e = g([]);
            g.each(g.ui.dialog.overlay.instances, function() {
                e = e.add(this)
            }),
            e.css({
                width: 0,
                height: 0
            }).css({
                width: g.ui.dialog.overlay.width(),
                height: g.ui.dialog.overlay.height()
            })
        }
    }),
    g.extend(g.ui.dialog.overlay.prototype, {
        destroy: function() {
            g.ui.dialog.overlay.destroy(this.$el)
        }
    })
})(jQuery);
(function(d, a) {
    var f = !1;
    d.widget("ui.menu", {
        version: "1.9.2",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null ,
            focus: null ,
            select: null 
        },
        _create: function() {
            this.activeMenu = this.element,
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, d.proxy(function(g) {
                this.options.disabled && g.preventDefault()
            }, this)),
            this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"),
            this._on({
                "mousedown .ui-menu-item > a": function(g) {
                    g.preventDefault()
                },
                "click .ui-state-disabled > a": function(g) {
                    g.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(e) {
                    var g = d(e.target).closest(".ui-menu-item");
                    !f && g.not(".ui-state-disabled").length && (f = !0,
                    this.select(e),
                    g.has(".ui-menu").length ? this.expand(e) : this.element.is(":focus") || (this.element.trigger("focus", [!0]),
                    this.active && this.active.parents(".ui-menu").length === 1 && clearTimeout(this.timer)))
                },
                "mouseenter .ui-menu-item": function(e) {
                    var g = d(e.currentTarget);
                    g.siblings().children(".ui-state-active").removeClass("ui-state-active"),
                    this.focus(e, g)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(h, g) {
                    var m = this.active || this.element.children(".ui-menu-item").eq(0);
                    g || this.focus(h, m)
                },
                blur: function(e) {
                    this._delay(function() {
                        d.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(e)
                    })
                },
                keydown: "_keydown"
            }),
            this.refresh(),
            this._on(this.document, {
                click: function(e) {
                    d(e.target).closest(".ui-menu").length || this.collapseAll(e),
                    f = !1
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var e = d(this);
                e.data("ui-menu-submenu-carat") && e.remove()
            }),
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(m) {
            function e(o) {
                return o.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            }
            var z, q, h, p, v, g = !0;
            switch (m.keyCode) {
            case d.ui.keyCode.PAGE_UP:
                this.previousPage(m);
                break;
            case d.ui.keyCode.PAGE_DOWN:
                this.nextPage(m);
                break;
            case d.ui.keyCode.HOME:
                this._move("first", "first", m);
                break;
            case d.ui.keyCode.END:
                this._move("last", "last", m);
                break;
            case d.ui.keyCode.UP:
                this.previous(m);
                break;
            case d.ui.keyCode.DOWN:
                this.next(m);
                break;
            case d.ui.keyCode.LEFT:
                this.collapse(m);
                break;
            case d.ui.keyCode.RIGHT:
                this.active && !this.active.is(".ui-state-disabled") && this.expand(m);
                break;
            case d.ui.keyCode.ENTER:
            case d.ui.keyCode.SPACE:
                this._activate(m);
                break;
            case d.ui.keyCode.ESCAPE:
                this.collapse(m);
                break;
            default:
                g = !1,
                q = this.previousFilter || "",
                h = String.fromCharCode(m.keyCode),
                p = !1,
                clearTimeout(this.filterTimer),
                h === q ? p = !0 : h = q + h,
                v = new RegExp("^" + e(h),"i"),
                z = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return v.test(d(this).children("a").text())
                }),
                z = p && z.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : z,
                z.length || (h = String.fromCharCode(m.keyCode),
                v = new RegExp("^" + e(h),"i"),
                z = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return v.test(d(this).children("a").text())
                })),
                z.length ? (this.focus(m, z),
                z.length > 1 ? (this.previousFilter = h,
                this.filterTimer = this._delay(function() {
                    delete this.previousFilter
                }, 1000)) : delete this.previousFilter) : delete this.previousFilter
            }
            g && m.preventDefault()
        },
        _activate: function(g) {
            this.active.is(".ui-state-disabled") || (this.active.children("a[aria-haspopup='true']").length ? this.expand(g) : this.select(g))
        },
        refresh: function() {
            var e, h = this.options.icons.submenu, g = this.element.find(this.options.menus);
            g.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var o = d(this)
                  , p = o.prev("a")
                  , m = d("<span>").addClass("ui-menu-icon ui-icon " + h).data("ui-menu-submenu-carat", !0);
                p.attr("aria-haspopup", "true").prepend(m),
                o.attr("aria-labelledby", p.attr("id"))
            }),
            e = g.add(this.element),
            e.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            }),
            e.children(":not(.ui-menu-item)").each(function() {
                var m = d(this);
                /[^\-—–\s]/.test(m.text()) || m.addClass("ui-widget-content ui-menu-divider")
            }),
            e.children(".ui-state-disabled").attr("aria-disabled", "true"),
            this.active && !d.contains(this.element[0], this.active[0]) && this.blur()
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        focus: function(m, g) {
            var o, h;
            this.blur(m, m && m.type === "focus"),
            this._scrollIntoView(g),
            this.active = g.first(),
            h = this.active.children("a").addClass("ui-state-focus"),
            this.options.role && this.element.attr("aria-activedescendant", h.attr("id")),
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),
            m && m.type === "keydown" ? this._close() : this.timer = this._delay(function() {
                this._close()
            }, this.delay),
            o = g.children(".ui-menu"),
            o.length && /^mouse/.test(m.type) && this._startOpening(o),
            this.activeMenu = g.parent(),
            this._trigger("focus", m, {
                item: g
            })
        },
        _scrollIntoView: function(h) {
            var v, p, g, m, q, e;
            this._hasScroll() && (v = parseFloat(d.css(this.activeMenu[0], "borderTopWidth")) || 0,
            p = parseFloat(d.css(this.activeMenu[0], "paddingTop")) || 0,
            g = h.offset().top - this.activeMenu.offset().top - v - p,
            m = this.activeMenu.scrollTop(),
            q = this.activeMenu.height(),
            e = h.height(),
            g < 0 ? this.activeMenu.scrollTop(m + g) : g + e > q && this.activeMenu.scrollTop(m + g - q + e))
        },
        blur: function(h, g) {
            g || clearTimeout(this.timer);
            if (!this.active) {
                return
            }
            this.active.children("a").removeClass("ui-state-focus"),
            this.active = null ,
            this._trigger("blur", h, {
                item: this.active
            })
        },
        _startOpening: function(g) {
            clearTimeout(this.timer);
            if (g.attr("aria-hidden") !== "true") {
                return
            }
            this.timer = this._delay(function() {
                this._close(),
                this._open(g)
            }, this.delay)
        },
        _open: function(e) {
            var g = d.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer),
            this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden", "true"),
            e.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(g)
        },
        collapseAll: function(e, g) {
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                var h = g ? this.element : d(e && e.target).closest(this.element.find(".ui-menu"));
                h.length || (h = this.element),
                this._close(h),
                this.blur(e),
                this.activeMenu = h
            }, this.delay)
        },
        _close: function(g) {
            g || (g = this.active ? this.active.parent() : this.element),
            g.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(h) {
            var g = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            g && g.length && (this._close(),
            this.focus(h, g))
        },
        expand: function(h) {
            var g = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            g && g.length && (this._open(g.parent()),
            this._delay(function() {
                this.focus(h, g)
            }))
        },
        next: function(g) {
            this._move("next", "first", g)
        },
        previous: function(g) {
            this._move("prev", "last", g)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(m, g, o) {
            var h;
            this.active && (m === "first" || m === "last" ? h = this.active[m === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : h = this.active[m + "All"](".ui-menu-item").eq(0));
            if (!h || !h.length || !this.active) {
                h = this.activeMenu.children(".ui-menu-item")[g]()
            }
            this.focus(o, h)
        },
        nextPage: function(g) {
            var m, h, e;
            if (!this.active) {
                this.next(g);
                return
            }
            if (this.isLastItem()) {
                return
            }
            this._hasScroll() ? (h = this.active.offset().top,
            e = this.element.height(),
            this.active.nextAll(".ui-menu-item").each(function() {
                return m = d(this),
                m.offset().top - h - e < 0
            }),
            this.focus(g, m)) : this.focus(g, this.activeMenu.children(".ui-menu-item")[this.active ? "last" : "first"]())
        },
        previousPage: function(g) {
            var m, h, e;
            if (!this.active) {
                this.next(g);
                return
            }
            if (this.isFirstItem()) {
                return
            }
            this._hasScroll() ? (h = this.active.offset().top,
            e = this.element.height(),
            this.active.prevAll(".ui-menu-item").each(function() {
                return m = d(this),
                m.offset().top - h + e > 0
            }),
            this.focus(g, m)) : this.focus(g, this.activeMenu.children(".ui-menu-item").first())
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(e) {
            this.active = this.active || d(e.target).closest(".ui-menu-item");
            var g = {
                item: this.active
            };
            this.active.has(".ui-menu").length || this.collapseAll(e, !0),
            this._trigger("select", e, g)
        }
    })
})(jQuery);
(function(d, a) {
    d.widget("ui.progressbar", {
        version: "1.9.2",
        options: {
            value: 0,
            max: 100
        },
        min: 0,
        _create: function() {
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._value()
            }),
            this.valueDiv = d("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),
            this.oldValue = this._value(),
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),
            this.valueDiv.remove()
        },
        value: function(f) {
            return f === a ? this._value() : (this._setOption("value", f),
            this)
        },
        _setOption: function(g, f) {
            g === "value" && (this.options.value = f,
            this._refreshValue(),
            this._value() === this.options.max && this._trigger("complete")),
            this._super(g, f)
        },
        _value: function() {
            var f = this.options.value;
            return typeof f != "number" && (f = 0),
            Math.min(this.options.max, Math.max(this.min, f))
        },
        _percentage: function() {
            return 100 * this._value() / this.options.max
        },
        _refreshValue: function() {
            var g = this.value()
              , f = this._percentage();
            this.oldValue !== g && (this.oldValue = g,
            this._trigger("change")),
            this.valueDiv.toggle(g > this.min).toggleClass("ui-corner-right", g === this.options.max).width(f.toFixed(0) + "%"),
            this.element.attr("aria-valuenow", g)
        }
    })
})(jQuery);
(function(d, a) {
    var f = 5;
    d.widget("ui.slider", d.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null 
        },
        _create: function() {
            var h, p, g = this.options, m = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), q = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>", e = [];
            this._keySliding = !1,
            this._mouseSliding = !1,
            this._animateOff = !0,
            this._handleIndex = null ,
            this._detectOrientation(),
            this._mouseInit(),
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all" + (g.disabled ? " ui-slider-disabled ui-disabled" : "")),
            this.range = d([]),
            g.range && (g.range === !0 && (g.values || (g.values = [this._valueMin(), this._valueMin()]),
            g.values.length && g.values.length !== 2 && (g.values = [g.values[0], g.values[0]])),
            this.range = d("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (g.range === "min" || g.range === "max" ? " ui-slider-range-" + g.range : ""))),
            p = g.values && g.values.length || 1;
            for (h = m.length; h < p; h++) {
                e.push(q)
            }
            this.handles = m.add(d(e.join("")).appendTo(this.element)),
            this.handle = this.handles.eq(0),
            this.handles.add(this.range).filter("a").click(function(o) {
                o.preventDefault()
            }).mouseenter(function() {
                g.disabled || d(this).addClass("ui-state-hover")
            }).mouseleave(function() {
                d(this).removeClass("ui-state-hover")
            }).focus(function() {
                g.disabled ? d(this).blur() : (d(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),
                d(this).addClass("ui-state-focus"))
            }).blur(function() {
                d(this).removeClass("ui-state-focus")
            }),
            this.handles.each(function(o) {
                d(this).data("ui-slider-handle-index", o)
            }),
            this._on(this.handles, {
                keydown: function(B) {
                    var D, z, C, E, v = d(B.target).data("ui-slider-handle-index");
                    switch (B.keyCode) {
                    case d.ui.keyCode.HOME:
                    case d.ui.keyCode.END:
                    case d.ui.keyCode.PAGE_UP:
                    case d.ui.keyCode.PAGE_DOWN:
                    case d.ui.keyCode.UP:
                    case d.ui.keyCode.RIGHT:
                    case d.ui.keyCode.DOWN:
                    case d.ui.keyCode.LEFT:
                        B.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = !0,
                            d(B.target).addClass("ui-state-active"),
                            D = this._start(B, v);
                            if (D === !1) {
                                return
                            }
                        }
                    }
                    E = this.options.step,
                    this.options.values && this.options.values.length ? z = C = this.values(v) : z = C = this.value();
                    switch (B.keyCode) {
                    case d.ui.keyCode.HOME:
                        C = this._valueMin();
                        break;
                    case d.ui.keyCode.END:
                        C = this._valueMax();
                        break;
                    case d.ui.keyCode.PAGE_UP:
                        C = this._trimAlignValue(z + (this._valueMax() - this._valueMin()) / f);
                        break;
                    case d.ui.keyCode.PAGE_DOWN:
                        C = this._trimAlignValue(z - (this._valueMax() - this._valueMin()) / f);
                        break;
                    case d.ui.keyCode.UP:
                    case d.ui.keyCode.RIGHT:
                        if (z === this._valueMax()) {
                            return
                        }
                        C = this._trimAlignValue(z + E);
                        break;
                    case d.ui.keyCode.DOWN:
                    case d.ui.keyCode.LEFT:
                        if (z === this._valueMin()) {
                            return
                        }
                        C = this._trimAlignValue(z - E)
                    }
                    this._slide(B, v, C)
                },
                keyup: function(o) {
                    var r = d(o.target).data("ui-slider-handle-index");
                    this._keySliding && (this._keySliding = !1,
                    this._stop(o, r),
                    this._change(o, r),
                    d(o.target).removeClass("ui-state-active"))
                }
            }),
            this._refreshValue(),
            this._animateOff = !1
        },
        _destroy: function() {
            this.handles.remove(),
            this.range.remove(),
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),
            this._mouseDestroy()
        },
        _mouseCapture: function(C) {
            var h, e, p, D, g, B, z, q, m = this, v = this.options;
            return v.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            },
            this.elementOffset = this.element.offset(),
            h = {
                x: C.pageX,
                y: C.pageY
            },
            e = this._normValueFromMouse(h),
            p = this._valueMax() - this._valueMin() + 1,
            this.handles.each(function(o) {
                var r = Math.abs(e - m.values(o));
                p > r && (p = r,
                D = d(this),
                g = o)
            }),
            v.range === !0 && this.values(1) === v.min && (g += 1,
            D = d(this.handles[g])),
            B = this._start(C, g),
            B === !1 ? !1 : (this._mouseSliding = !0,
            this._handleIndex = g,
            D.addClass("ui-state-active").focus(),
            z = D.offset(),
            q = !d(C.target).parents().andSelf().is(".ui-slider-handle"),
            this._clickOffset = q ? {
                left: 0,
                top: 0
            } : {
                left: C.pageX - z.left - D.width() / 2,
                top: C.pageY - z.top - D.height() / 2 - (parseInt(D.css("borderTopWidth"), 10) || 0) - (parseInt(D.css("borderBottomWidth"), 10) || 0) + (parseInt(D.css("marginTop"), 10) || 0)
            },
            this.handles.hasClass("ui-state-hover") || this._slide(C, g, e),
            this._animateOff = !0,
            !0))
        },
        _mouseStart: function() {
            return !0
        },
        _mouseDrag: function(h) {
            var g = {
                x: h.pageX,
                y: h.pageY
            }
              , m = this._normValueFromMouse(g);
            return this._slide(h, this._handleIndex, m),
            !1
        },
        _mouseStop: function(g) {
            return this.handles.removeClass("ui-state-active"),
            this._mouseSliding = !1,
            this._stop(g, this._handleIndex),
            this._change(g, this._handleIndex),
            this._handleIndex = null ,
            this._clickOffset = null ,
            this._animateOff = !1,
            !1
        },
        _detectOrientation: function() {
            this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(p) {
            var h, q, o, g, m;
            return this.orientation === "horizontal" ? (h = this.elementSize.width,
            q = p.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (h = this.elementSize.height,
            q = p.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)),
            o = q / h,
            o > 1 && (o = 1),
            o < 0 && (o = 0),
            this.orientation === "vertical" && (o = 1 - o),
            g = this._valueMax() - this._valueMin(),
            m = this._valueMin() + o * g,
            this._trimAlignValue(m)
        },
        _start: function(h, g) {
            var m = {
                handle: this.handles[g],
                value: this.value()
            };
            return this.options.values && this.options.values.length && (m.value = this.values(g),
            m.values = this.values()),
            this._trigger("start", h, m)
        },
        _slide: function(p, h, q) {
            var o, g, m;
            this.options.values && this.options.values.length ? (o = this.values(h ? 0 : 1),
            this.options.values.length === 2 && this.options.range === !0 && (h === 0 && q > o || h === 1 && q < o) && (q = o),
            q !== this.values(h) && (g = this.values(),
            g[h] = q,
            m = this._trigger("slide", p, {
                handle: this.handles[h],
                value: q,
                values: g
            }),
            o = this.values(h ? 0 : 1),
            m !== !1 && this.values(h, q, !0))) : q !== this.value() && (m = this._trigger("slide", p, {
                handle: this.handles[h],
                value: q
            }),
            m !== !1 && this.value(q))
        },
        _stop: function(h, g) {
            var m = {
                handle: this.handles[g],
                value: this.value()
            };
            this.options.values && this.options.values.length && (m.value = this.values(g),
            m.values = this.values()),
            this._trigger("stop", h, m)
        },
        _change: function(h, g) {
            if (!this._keySliding && !this._mouseSliding) {
                var m = {
                    handle: this.handles[g],
                    value: this.value()
                };
                this.options.values && this.options.values.length && (m.value = this.values(g),
                m.values = this.values()),
                this._trigger("change", h, m)
            }
        },
        value: function(g) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(g),
                this._refreshValue(),
                this._change(null , 0);
                return
            }
            return this._value()
        },
        values: function(g, o) {
            var m, e, h;
            if (arguments.length > 1) {
                this.options.values[g] = this._trimAlignValue(o),
                this._refreshValue(),
                this._change(null , g);
                return
            }
            if (!arguments.length) {
                return this._values()
            }
            if (!d.isArray(arguments[0])) {
                return this.options.values && this.options.values.length ? this._values(g) : this.value()
            }
            m = this.options.values,
            e = arguments[0];
            for (h = 0; h < m.length; h += 1) {
                m[h] = this._trimAlignValue(e[h]),
                this._change(null , h)
            }
            this._refreshValue()
        },
        _setOption: function(g, m) {
            var h, e = 0;
            d.isArray(this.options.values) && (e = this.options.values.length),
            d.Widget.prototype._setOption.apply(this, arguments);
            switch (g) {
            case "disabled":
                m ? (this.handles.filter(".ui-state-focus").blur(),
                this.handles.removeClass("ui-state-hover"),
                this.handles.prop("disabled", !0),
                this.element.addClass("ui-disabled")) : (this.handles.prop("disabled", !1),
                this.element.removeClass("ui-disabled"));
                break;
            case "orientation":
                this._detectOrientation(),
                this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation),
                this._refreshValue();
                break;
            case "value":
                this._animateOff = !0,
                this._refreshValue(),
                this._change(null , 0),
                this._animateOff = !1;
                break;
            case "values":
                this._animateOff = !0,
                this._refreshValue();
                for (h = 0; h < e; h += 1) {
                    this._change(null , h)
                }
                this._animateOff = !1;
                break;
            case "min":
            case "max":
                this._animateOff = !0,
                this._refreshValue(),
                this._animateOff = !1
            }
        },
        _value: function() {
            var g = this.options.value;
            return g = this._trimAlignValue(g),
            g
        },
        _values: function(m) {
            var g, o, h;
            if (arguments.length) {
                return g = this.options.values[m],
                g = this._trimAlignValue(g),
                g
            }
            o = this.options.values.slice();
            for (h = 0; h < o.length; h += 1) {
                o[h] = this._trimAlignValue(o[h])
            }
            return o
        },
        _trimAlignValue: function(m) {
            if (m <= this._valueMin()) {
                return this._valueMin()
            }
            if (m >= this._valueMax()) {
                return this._valueMax()
            }
            var g = this.options.step > 0 ? this.options.step : 1
              , o = (m - this._valueMin()) % g
              , h = m - o;
            return Math.abs(o) * 2 >= g && (h += o > 0 ? g : -g),
            parseFloat(h.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var B, h, e, p, C, g = this.options.range, z = this.options, v = this, q = this._animateOff ? !1 : z.animate, m = {};
            this.options.values && this.options.values.length ? this.handles.each(function(o) {
                h = (v.values(o) - v._valueMin()) / (v._valueMax() - v._valueMin()) * 100,
                m[v.orientation === "horizontal" ? "left" : "bottom"] = h + "%",
                d(this).stop(1, 1)[q ? "animate" : "css"](m, z.animate),
                v.options.range === !0 && (v.orientation === "horizontal" ? (o === 0 && v.range.stop(1, 1)[q ? "animate" : "css"]({
                    left: h + "%"
                }, z.animate),
                o === 1 && v.range[q ? "animate" : "css"]({
                    width: h - B + "%"
                }, {
                    queue: !1,
                    duration: z.animate
                })) : (o === 0 && v.range.stop(1, 1)[q ? "animate" : "css"]({
                    bottom: h + "%"
                }, z.animate),
                o === 1 && v.range[q ? "animate" : "css"]({
                    height: h - B + "%"
                }, {
                    queue: !1,
                    duration: z.animate
                }))),
                B = h
            }) : (e = this.value(),
            p = this._valueMin(),
            C = this._valueMax(),
            h = C !== p ? (e - p) / (C - p) * 100 : 0,
            m[this.orientation === "horizontal" ? "left" : "bottom"] = h + "%",
            this.handle.stop(1, 1)[q ? "animate" : "css"](m, z.animate),
            g === "min" && this.orientation === "horizontal" && this.range.stop(1, 1)[q ? "animate" : "css"]({
                width: h + "%"
            }, z.animate),
            g === "max" && this.orientation === "horizontal" && this.range[q ? "animate" : "css"]({
                width: 100 - h + "%"
            }, {
                queue: !1,
                duration: z.animate
            }),
            g === "min" && this.orientation === "vertical" && this.range.stop(1, 1)[q ? "animate" : "css"]({
                height: h + "%"
            }, z.animate),
            g === "max" && this.orientation === "vertical" && this.range[q ? "animate" : "css"]({
                height: 100 - h + "%"
            }, {
                queue: !1,
                duration: z.animate
            }))
        }
    })
})(jQuery);
(function(d) {
    function a(f) {
        return function() {
            var e = this.element.val();
            f.apply(this, arguments),
            this._refresh(),
            e !== this.element.val() && this._trigger("change")
        }
    }
    d.widget("ui.spinner", {
        version: "1.9.2",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null ,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: !0,
            max: null ,
            min: null ,
            numberFormat: null ,
            page: 10,
            step: 1,
            change: null ,
            spin: null ,
            start: null ,
            stop: null 
        },
        _create: function() {
            this._setOption("max", this.options.max),
            this._setOption("min", this.options.min),
            this._setOption("step", this.options.step),
            this._value(this.element.val(), !0),
            this._draw(),
            this._on(this._events),
            this._refresh(),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var e = {}
              , f = this.element;
            return d.each(["min", "max", "step"], function(m, h) {
                var g = f.attr(h);
                g !== undefined && g.length && (e[h] = g)
            }),
            e
        },
        _events: {
            keydown: function(f) {
                this._start(f) && this._keydown(f) && f.preventDefault()
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val()
            },
            blur: function(f) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                }
                this._refresh(),
                this.previous !== this.element.val() && this._trigger("change", f)
            },
            mousewheel: function(g, f) {
                if (!f) {
                    return
                }
                if (!this.spinning && !this._start(g)) {
                    return !1
                }
                this._spin((f > 0 ? 1 : -1) * this.options.step, g),
                clearTimeout(this.mousewheelTimer),
                this.mousewheelTimer = this._delay(function() {
                    this.spinning && this._stop(g)
                }, 100),
                g.preventDefault()
            },
            "mousedown .ui-spinner-button": function(e) {
                function f() {
                    var h = this.element[0] === this.document[0].activeElement;
                    h || (this.element.focus(),
                    this.previous = g,
                    this._delay(function() {
                        this.previous = g
                    }))
                }
                var g;
                g = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(),
                e.preventDefault(),
                f.call(this),
                this.cancelBlur = !0,
                this._delay(function() {
                    delete this.cancelBlur,
                    f.call(this)
                });
                if (this._start(e) === !1) {
                    return
                }
                this._repeat(null , d(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(e) {
                if (!d(e.currentTarget).hasClass("ui-state-active")) {
                    return
                }
                if (this._start(e) === !1) {
                    return !1
                }
                this._repeat(null , d(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function() {
            var f = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this.element.attr("role", "spinbutton"),
            this.buttons = f.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"),
            this.buttons.height() > Math.ceil(f.height() * 0.5) && f.height() > 0 && f.height(f.height()),
            this.options.disabled && this.disable()
        },
        _keydown: function(e) {
            var g = this.options
              , f = d.ui.keyCode;
            switch (e.keyCode) {
            case f.UP:
                return this._repeat(null , 1, e),
                !0;
            case f.DOWN:
                return this._repeat(null , -1, e),
                !0;
            case f.PAGE_UP:
                return this._repeat(null , g.page, e),
                !0;
            case f.PAGE_DOWN:
                return this._repeat(null , -g.page, e),
                !0
            }
            return !1
        },
        _uiSpinnerHtml: function() {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function() {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
        },
        _start: function(f) {
            return !this.spinning && this._trigger("start", f) === !1 ? !1 : (this.counter || (this.counter = 1),
            this.spinning = !0,
            !0)
        },
        _repeat: function(g, f, h) {
            g = g || 500,
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                this._repeat(40, f, h)
            }, g),
            this._spin(f * this.options.step, h)
        },
        _spin: function(g, f) {
            var h = this.value() || 0;
            this.counter || (this.counter = 1),
            h = this._adjustValue(h + g * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", f, {
                value: h
            }) !== !1) {
                this._value(h),
                this.counter++
            }
        },
        _increment: function(e) {
            var f = this.options.incremental;
            return f ? d.isFunction(f) ? f(e) : Math.floor(e * e * e / 50000 - e * e / 500 + 17 * e / 200 + 1) : 1
        },
        _precision: function() {
            var f = this._precisionOf(this.options.step);
            return this.options.min !== null  && (f = Math.max(f, this._precisionOf(this.options.min))),
            f
        },
        _precisionOf: function(g) {
            var f = g.toString()
              , h = f.indexOf(".");
            return h === -1 ? 0 : f.length - h - 1
        },
        _adjustValue: function(h) {
            var f, m, g = this.options;
            return f = g.min !== null  ? g.min : 0,
            m = h - f,
            m = Math.round(m / g.step) * g.step,
            h = f + m,
            h = parseFloat(h.toFixed(this._precision())),
            g.max !== null  && h > g.max ? g.max : g.min !== null  && h < g.min ? g.min : h
        },
        _stop: function(f) {
            if (!this.spinning) {
                return
            }
            clearTimeout(this.timer),
            clearTimeout(this.mousewheelTimer),
            this.counter = 0,
            this.spinning = !1,
            this._trigger("stop", f)
        },
        _setOption: function(g, f) {
            if (g === "culture" || g === "numberFormat") {
                var h = this._parse(this.element.val());
                this.options[g] = f,
                this.element.val(this._format(h));
                return
            }
            (g === "max" || g === "min" || g === "step") && typeof f == "string" && (f = this._parse(f)),
            this._super(g, f),
            g === "disabled" && (f ? (this.element.prop("disabled", !0),
            this.buttons.button("disable")) : (this.element.prop("disabled", !1),
            this.buttons.button("enable")))
        },
        _setOptions: a(function(f) {
            this._super(f),
            this._value(this.element.val())
        }),
        _parse: function(f) {
            return typeof f == "string" && f !== "" && (f = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(f, 10, this.options.culture) : +f),
            f === "" || isNaN(f) ? null  : f
        },
        _format: function(f) {
            return f === "" ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(f, this.options.numberFormat, this.options.culture) : f
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        _value: function(g, f) {
            var h;
            g !== "" && (h = this._parse(g),
            h !== null  && (f || (h = this._adjustValue(h)),
            g = this._format(h))),
            this.element.val(g),
            this._refresh()
        },
        _destroy: function() {
            this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: a(function(f) {
            this._stepUp(f)
        }),
        _stepUp: function(f) {
            this._spin((f || 1) * this.options.step)
        },
        stepDown: a(function(f) {
            this._stepDown(f)
        }),
        _stepDown: function(f) {
            this._spin((f || 1) * -this.options.step)
        },
        pageUp: a(function(f) {
            this._stepUp((f || 1) * this.options.page)
        }),
        pageDown: a(function(f) {
            this._stepDown((f || 1) * this.options.page)
        }),
        value: function(f) {
            if (!arguments.length) {
                return this._parse(this.element.val())
            }
            a(this._value).call(this, f)
        },
        widget: function() {
            return this.uiSpinner
        }
    })
})(jQuery);
(function(h, d) {
    function a() {
        return ++m
    }
    function f(o) {
        return o.hash.length > 1 && o.href.replace(g, "") === location.href.replace(g, "").replace(/\s/g, "%20")
    }
    var m = 0
      , g = /#.*$/;
    h.widget("ui.tabs", {
        version: "1.9.2",
        delay: 300,
        options: {
            active: null ,
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null ,
            show: null ,
            activate: null ,
            beforeActivate: null ,
            beforeLoad: null ,
            load: null 
        },
        _create: function() {
            var o = this
              , q = this.options
              , p = q.active
              , e = location.hash.substring(1);
            this.running = !1,
            this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", q.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(r) {
                h(this).is(".ui-state-disabled") && r.preventDefault()
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                h(this).closest("li").is(".ui-state-disabled") && this.blur()
            }),
            this._processTabs();
            if (p === null ) {
                e && this.tabs.each(function(r, u) {
                    if (h(u).attr("aria-controls") === e) {
                        return p = r,
                        !1
                    }
                }),
                p === null  && (p = this.tabs.index(this.tabs.filter(".ui-tabs-active")));
                if (p === null  || p === -1) {
                    p = this.tabs.length ? 0 : !1
                }
            }
            p !== !1 && (p = this.tabs.index(this.tabs.eq(p)),
            p === -1 && (p = q.collapsible ? !1 : 0)),
            q.active = p,
            !q.collapsible && q.active === !1 && this.anchors.length && (q.active = 0),
            h.isArray(q.disabled) && (q.disabled = h.unique(q.disabled.concat(h.map(this.tabs.filter(".ui-state-disabled"), function(r) {
                return o.tabs.index(r)
            }))).sort()),
            this.options.active !== !1 && this.anchors.length ? this.active = this._findActive(this.options.active) : this.active = h(),
            this._refresh(),
            this.active.length && this.load(q.active)
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: this.active.length ? this._getPanelForTab(this.active) : h()
            }
        },
        _tabKeydown: function(o) {
            var q = h(this.document[0].activeElement).closest("li")
              , p = this.tabs.index(q)
              , e = !0;
            if (this._handlePageNav(o)) {
                return
            }
            switch (o.keyCode) {
            case h.ui.keyCode.RIGHT:
            case h.ui.keyCode.DOWN:
                p++;
                break;
            case h.ui.keyCode.UP:
            case h.ui.keyCode.LEFT:
                e = !1,
                p--;
                break;
            case h.ui.keyCode.END:
                p = this.anchors.length - 1;
                break;
            case h.ui.keyCode.HOME:
                p = 0;
                break;
            case h.ui.keyCode.SPACE:
                o.preventDefault(),
                clearTimeout(this.activating),
                this._activate(p);
                return;
            case h.ui.keyCode.ENTER:
                o.preventDefault(),
                clearTimeout(this.activating),
                this._activate(p === this.options.active ? !1 : p);
                return;
            default:
                return
            }
            o.preventDefault(),
            clearTimeout(this.activating),
            p = this._focusNextTab(p, e),
            o.ctrlKey || (q.attr("aria-selected", "false"),
            this.tabs.eq(p).attr("aria-selected", "true"),
            this.activating = this._delay(function() {
                this.option("active", p)
            }, this.delay))
        },
        _panelKeydown: function(e) {
            if (this._handlePageNav(e)) {
                return
            }
            e.ctrlKey && e.keyCode === h.ui.keyCode.UP && (e.preventDefault(),
            this.active.focus())
        },
        _handlePageNav: function(e) {
            if (e.altKey && e.keyCode === h.ui.keyCode.PAGE_UP) {
                return this._activate(this._focusNextTab(this.options.active - 1, !1)),
                !0
            }
            if (e.altKey && e.keyCode === h.ui.keyCode.PAGE_DOWN) {
                return this._activate(this._focusNextTab(this.options.active + 1, !0)),
                !0
            }
        },
        _findNextTab: function(o, q) {
            function e() {
                return o > p && (o = 0),
                o < 0 && (o = p),
                o
            }
            var p = this.tabs.length - 1;
            while (h.inArray(e(), this.options.disabled) !== -1) {
                o = q ? o + 1 : o - 1
            }
            return o
        },
        _focusNextTab: function(p, o) {
            return p = this._findNextTab(p, o),
            this.tabs.eq(p).focus(),
            p
        },
        _setOption: function(p, o) {
            if (p === "active") {
                this._activate(o);
                return
            }
            if (p === "disabled") {
                this._setupDisabled(o);
                return
            }
            this._super(p, o),
            p === "collapsible" && (this.element.toggleClass("ui-tabs-collapsible", o),
            !o && this.options.active === !1 && this._activate(0)),
            p === "event" && this._setupEvents(o),
            p === "heightStyle" && this._setupHeightStyle(o)
        },
        _tabId: function(o) {
            return o.attr("aria-controls") || "ui-tabs-" + a()
        },
        _sanitizeSelector: function(o) {
            return o ? o.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var e = this.options
              , o = this.tablist.children(":has(a[href])");
            e.disabled = h.map(o.filter(".ui-state-disabled"), function(p) {
                return o.index(p)
            }),
            this._processTabs(),
            e.active === !1 || !this.anchors.length ? (e.active = !1,
            this.active = h()) : this.active.length && !h.contains(this.tablist[0], this.active[0]) ? this.tabs.length === e.disabled.length ? (e.active = !1,
            this.active = h()) : this._activate(this._findNextTab(Math.max(0, e.active - 1), !1)) : e.active = this.tabs.index(this.active),
            this._refresh()
        },
        _refresh: function() {
            this._setupDisabled(this.options.disabled),
            this._setupEvents(this.options.event),
            this._setupHeightStyle(this.options.heightStyle),
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }),
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }),
            this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({
                "aria-selected": "true",
                tabIndex: 0
            }),
            this._getPanelForTab(this.active).show().attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            })) : this.tabs.eq(0).attr("tabIndex", 0)
        },
        _processTabs: function() {
            var e = this;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist"),
            this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            }),
            this.anchors = this.tabs.map(function() {
                return h("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            }),
            this.panels = h(),
            this.anchors.each(function(E, B) {
                var z, D, v, q = h(B).uniqueId().attr("id"), C = h(B).closest("li"), p = C.attr("aria-controls");
                f(B) ? (z = B.hash,
                D = e.element.find(e._sanitizeSelector(z))) : (v = e._tabId(C),
                z = "#" + v,
                D = e.element.find(z),
                D.length || (D = e._createPanel(v),
                D.insertAfter(e.panels[E - 1] || e.tablist)),
                D.attr("aria-live", "polite")),
                D.length && (e.panels = e.panels.add(D)),
                p && C.data("ui-tabs-aria-controls", p),
                C.attr({
                    "aria-controls": z.substring(1),
                    "aria-labelledby": q
                }),
                D.attr("aria-labelledby", q)
            }),
            this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
        },
        _getList: function() {
            return this.element.find("ol,ul").eq(0)
        },
        _createPanel: function(e) {
            return h("<div>").attr("id", e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        },
        _setupDisabled: function(e) {
            h.isArray(e) && (e.length ? e.length === this.anchors.length && (e = !0) : e = !1);
            for (var p = 0, o; o = this.tabs[p]; p++) {
                e === !0 || h.inArray(p, e) !== -1 ? h(o).addClass("ui-state-disabled").attr("aria-disabled", "true") : h(o).removeClass("ui-state-disabled").removeAttr("aria-disabled")
            }
            this.options.disabled = e
        },
        _setupEvents: function(e) {
            var o = {
                click: function(p) {
                    p.preventDefault()
                }
            };
            e && h.each(e.split(" "), function(q, p) {
                o[p] = "_eventHandler"
            }),
            this._off(this.anchors.add(this.tabs).add(this.panels)),
            this._on(this.anchors, o),
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            }),
            this._on(this.panels, {
                keydown: "_panelKeydown"
            }),
            this._focusable(this.tabs),
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(o) {
            var q, p, e = this.element.parent();
            o === "fill" ? (h.support.minHeight || (p = e.css("overflow"),
            e.css("overflow", "hidden")),
            q = e.height(),
            this.element.siblings(":visible").each(function() {
                var u = h(this)
                  , v = u.css("position");
                if (v === "absolute" || v === "fixed") {
                    return
                }
                q -= u.outerHeight(!0)
            }),
            p && e.css("overflow", p),
            this.element.children().not(this.panels).each(function() {
                q -= h(this).outerHeight(!0)
            }),
            this.panels.each(function() {
                h(this).height(Math.max(0, q - h(this).innerHeight() + h(this).height()))
            }).css("overflow", "auto")) : o === "auto" && (q = 0,
            this.panels.each(function() {
                q = Math.max(q, h(this).height("").height())
            }).height(q))
        },
        _eventHandler: function(E) {
            var q = this.options
              , e = this.active
              , z = h(E.currentTarget)
              , F = z.closest("li")
              , p = F[0] === e[0]
              , D = p && q.collapsible
              , C = D ? h() : this._getPanelForTab(F)
              , B = e.length ? this._getPanelForTab(e) : h()
              , v = {
                oldTab: e,
                oldPanel: B,
                newTab: D ? h() : F,
                newPanel: C
            };
            E.preventDefault();
            if (F.hasClass("ui-state-disabled") || F.hasClass("ui-tabs-loading") || this.running || p && !q.collapsible || this._trigger("beforeActivate", E, v) === !1) {
                return
            }
            q.active = D ? !1 : this.tabs.index(F),
            this.active = p ? h() : F,
            this.xhr && this.xhr.abort(),
            !B.length && !C.length && h.error("jQuery UI Tabs: Mismatching fragment identifier."),
            C.length && this.load(this.tabs.index(F), E),
            this._toggle(E, v)
        },
        _toggle: function(q, C) {
            function B() {
                z.running = !1,
                z._trigger("activate", q, C)
            }
            function e() {
                C.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),
                p.length && z.options.show ? z._show(p, z.options.show, B) : (p.show(),
                B())
            }
            var z = this
              , p = C.newPanel
              , v = C.oldPanel;
            this.running = !0,
            v.length && this.options.hide ? this._hide(v, this.options.hide, function() {
                C.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
                e()
            }) : (C.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
            v.hide(),
            e()),
            v.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }),
            C.oldTab.attr("aria-selected", "false"),
            p.length && v.length ? C.oldTab.attr("tabIndex", -1) : p.length && this.tabs.filter(function() {
                return h(this).attr("tabIndex") === 0
            }).attr("tabIndex", -1),
            p.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }),
            C.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _activate: function(e) {
            var p, o = this._findActive(e);
            if (o[0] === this.active[0]) {
                return
            }
            o.length || (o = this.active),
            p = o.find(".ui-tabs-anchor")[0],
            this._eventHandler({
                target: p,
                currentTarget: p,
                preventDefault: h.noop
            })
        },
        _findActive: function(e) {
            return e === !1 ? h() : this.tabs.eq(e)
        },
        _getIndex: function(o) {
            return typeof o == "string" && (o = this.anchors.index(this.anchors.filter("[href$='" + o + "']"))),
            o
        },
        _destroy: function() {
            this.xhr && this.xhr.abort(),
            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),
            this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),
            this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId(),
            this.tabs.add(this.panels).each(function() {
                h.data(this, "ui-tabs-destroy") ? h(this).remove() : h(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
            }),
            this.tabs.each(function() {
                var e = h(this)
                  , o = e.data("ui-tabs-aria-controls");
                o ? e.attr("aria-controls", o) : e.removeAttr("aria-controls")
            }),
            this.panels.show(),
            this.options.heightStyle !== "content" && this.panels.css("height", "")
        },
        enable: function(o) {
            var e = this.options.disabled;
            if (e === !1) {
                return
            }
            o === d ? e = !1 : (o = this._getIndex(o),
            h.isArray(e) ? e = h.map(e, function(p) {
                return p !== o ? p : null 
            }) : e = h.map(this.tabs, function(q, p) {
                return p !== o ? p : null 
            })),
            this._setupDisabled(e)
        },
        disable: function(o) {
            var e = this.options.disabled;
            if (e === !0) {
                return
            }
            if (o === d) {
                e = !0
            } else {
                o = this._getIndex(o);
                if (h.inArray(o, e) !== -1) {
                    return
                }
                h.isArray(e) ? e = h.merge([o], e).sort() : e = [o]
            }
            this._setupDisabled(e)
        },
        load: function(v, C) {
            v = this._getIndex(v);
            var z = this
              , q = this.tabs.eq(v)
              , B = q.find(".ui-tabs-anchor")
              , p = this._getPanelForTab(q)
              , e = {
                tab: q,
                panel: p
            };
            if (f(B[0])) {
                return
            }
            this.xhr = h.ajax(this._ajaxSettings(B, C, e)),
            this.xhr && this.xhr.statusText !== "canceled" && (q.addClass("ui-tabs-loading"),
            p.attr("aria-busy", "true"),
            this.xhr.success(function(o) {
                setTimeout(function() {
                    p.html(o),
                    z._trigger("load", C, e)
                }, 1)
            }).complete(function(r, o) {
                setTimeout(function() {
                    o === "abort" && z.panels.stop(!1, !0),
                    q.removeClass("ui-tabs-loading"),
                    p.removeAttr("aria-busy"),
                    r === z.xhr && delete z.xhr
                }, 1)
            }))
        },
        _ajaxSettings: function(o, q, p) {
            var e = this;
            return {
                url: o.attr("href"),
                beforeSend: function(r, u) {
                    return e._trigger("beforeLoad", q, h.extend({
                        jqXHR: r,
                        ajaxSettings: u
                    }, p))
                }
            }
        },
        _getPanelForTab: function(e) {
            var o = h(e).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + o))
        }
    }),
    h.uiBackCompat !== !1 && (h.ui.tabs.prototype._ui = function(p, o) {
        return {
            tab: p,
            panel: o,
            index: this.anchors.index(p)
        }
    }
    ,
    h.widget("ui.tabs", h.ui.tabs, {
        url: function(p, o) {
            this.anchors.eq(p).attr("href", o)
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            ajaxOptions: null ,
            cache: !1
        },
        _create: function() {
            this._super();
            var e = this;
            this._on({
                tabsbeforeload: function(p, o) {
                    if (h.data(o.tab[0], "cache.tabs")) {
                        p.preventDefault();
                        return
                    }
                    o.jqXHR.success(function() {
                        e.options.cache && h.data(o.tab[0], "cache.tabs", !0)
                    })
                }
            })
        },
        _ajaxSettings: function(o, q, p) {
            var e = this.options.ajaxOptions;
            return h.extend({}, e, {
                error: function(u, r) {
                    try {
                        e.error(u, r, p.tab.closest("li").index(), p.tab[0])
                    } catch (v) {}
                }
            }, this._superApply(arguments))
        },
        _setOption: function(p, o) {
            p === "cache" && o === !1 && this.anchors.removeData("cache.tabs"),
            this._super(p, o)
        },
        _destroy: function() {
            this.anchors.removeData("cache.tabs"),
            this._super()
        },
        url: function(o) {
            this.anchors.eq(o).removeData("cache.tabs"),
            this._superApply(arguments)
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        abort: function() {
            this.xhr && this.xhr.abort()
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            spinner: "<em>Loading&#8230;</em>"
        },
        _create: function() {
            this._super(),
            this._on({
                tabsbeforeload: function(q, o) {
                    if (q.target !== this.element[0] || !this.options.spinner) {
                        return
                    }
                    var u = o.tab.find("span")
                      , p = u.html();
                    u.html(this.options.spinner),
                    o.jqXHR.complete(function() {
                        u.html(p)
                    })
                }
            })
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            enable: null ,
            disable: null 
        },
        enable: function(e) {
            var p = this.options, o;
            if (e && p.disabled === !0 || h.isArray(p.disabled) && h.inArray(e, p.disabled) !== -1) {
                o = !0
            }
            this._superApply(arguments),
            o && this._trigger("enable", null , this._ui(this.anchors[e], this.panels[e]))
        },
        disable: function(e) {
            var p = this.options, o;
            if (e && p.disabled === !1 || h.isArray(p.disabled) && h.inArray(e, p.disabled) === -1) {
                o = !0
            }
            this._superApply(arguments),
            o && this._trigger("disable", null , this._ui(this.anchors[e], this.panels[e]))
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            add: null ,
            remove: null ,
            tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
        },
        add: function(D, z, q) {
            q === d && (q = this.anchors.length);
            var v, C, p = this.options, e = h(p.tabTemplate.replace(/#\{href\}/g, D).replace(/#\{label\}/g, z)), B = D.indexOf("#") ? this._tabId(e) : D.replace("#", "");
            return e.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy", !0),
            e.attr("aria-controls", B),
            v = q >= this.tabs.length,
            C = this.element.find("#" + B),
            C.length || (C = this._createPanel(B),
            v ? q > 0 ? C.insertAfter(this.panels.eq(-1)) : C.appendTo(this.element) : C.insertBefore(this.panels[q])),
            C.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide(),
            v ? e.appendTo(this.tablist) : e.insertBefore(this.tabs[q]),
            p.disabled = h.map(p.disabled, function(o) {
                return o >= q ? ++o : o
            }),
            this.refresh(),
            this.tabs.length === 1 && p.active === !1 && this.option("active", 0),
            this._trigger("add", null , this._ui(this.anchors[q], this.panels[q])),
            this
        },
        remove: function(o) {
            o = this._getIndex(o);
            var q = this.options
              , p = this.tabs.eq(o).remove()
              , e = this._getPanelForTab(p).remove();
            return p.hasClass("ui-tabs-active") && this.anchors.length > 2 && this._activate(o + (o + 1 < this.anchors.length ? 1 : -1)),
            q.disabled = h.map(h.grep(q.disabled, function(r) {
                return r !== o
            }), function(r) {
                return r >= o ? --r : r
            }),
            this.refresh(),
            this._trigger("remove", null , this._ui(p.find("a")[0], e[0])),
            this
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        length: function() {
            return this.anchors.length
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            idPrefix: "ui-tabs-"
        },
        _tabId: function(e) {
            var o = e.is("li") ? e.find("a[href]") : e;
            return o = o[0],
            h(o).closest("li").attr("aria-controls") || o.title && o.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF\-]/g, "") || this.options.idPrefix + a()
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            panelTemplate: "<div></div>"
        },
        _createPanel: function(e) {
            return h(this.options.panelTemplate).attr("id", e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        _create: function() {
            var o = this.options;
            o.active === null  && o.selected !== d && (o.active = o.selected === -1 ? !1 : o.selected),
            this._super(),
            o.selected = o.active,
            o.selected === !1 && (o.selected = -1)
        },
        _setOption: function(p, o) {
            if (p !== "selected") {
                return this._super(p, o)
            }
            var q = this.options;
            this._super("active", o === -1 ? !1 : o),
            q.selected = q.active,
            q.selected === !1 && (q.selected = -1)
        },
        _eventHandler: function() {
            this._superApply(arguments),
            this.options.selected = this.options.active,
            this.options.selected === !1 && (this.options.selected = -1)
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            show: null ,
            select: null 
        },
        _create: function() {
            this._super(),
            this.options.active !== !1 && this._trigger("show", null , this._ui(this.active.find(".ui-tabs-anchor")[0], this._getPanelForTab(this.active)[0]))
        },
        _trigger: function(v, p, z) {
            var u, o, q = this._superApply(arguments);
            return q ? (v === "beforeActivate" ? (u = z.newTab.length ? z.newTab : z.oldTab,
            o = z.newPanel.length ? z.newPanel : z.oldPanel,
            q = this._super("select", p, {
                tab: u.find(".ui-tabs-anchor")[0],
                panel: o[0],
                index: u.closest("li").index()
            })) : v === "activate" && z.newTab.length && (q = this._super("show", p, {
                tab: z.newTab.find(".ui-tabs-anchor")[0],
                panel: z.newPanel[0],
                index: z.newTab.closest("li").index()
            })),
            q) : !1
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        select: function(o) {
            o = this._getIndex(o);
            if (o === -1) {
                if (!this.options.collapsible || this.options.selected === -1) {
                    return
                }
                o = this.options.selected
            }
            this.anchors.eq(o).trigger(this.options.event + this.eventNamespace)
        }
    }),
    function() {
        var e = 0;
        h.widget("ui.tabs", h.ui.tabs, {
            options: {
                cookie: null 
            },
            _create: function() {
                var p = this.options, o;
                p.active == null  && p.cookie && (o = parseInt(this._cookie(), 10),
                o === -1 && (o = !1),
                p.active = o),
                this._super()
            },
            _cookie: function(p) {
                var o = [this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + ++e)];
                return arguments.length && (o.push(p === !1 ? -1 : p),
                o.push(this.options.cookie)),
                h.cookie.apply(null , o)
            },
            _refresh: function() {
                this._super(),
                this.options.cookie && this._cookie(this.options.active, this.options.cookie)
            },
            _eventHandler: function() {
                this._superApply(arguments),
                this.options.cookie && this._cookie(this.options.active, this.options.cookie)
            },
            _destroy: function() {
                this._super(),
                this.options.cookie && this._cookie(null , this.options.cookie)
            }
        })
    }(),
    h.widget("ui.tabs", h.ui.tabs, {
        _trigger: function(o, q, p) {
            var e = h.extend({}, p);
            return o === "load" && (e.panel = e.panel[0],
            e.tab = e.tab.find(".ui-tabs-anchor")[0]),
            this._super(o, q, e)
        }
    }),
    h.widget("ui.tabs", h.ui.tabs, {
        options: {
            fx: null 
        },
        _getFx: function() {
            var e, p, o = this.options.fx;
            return o && (h.isArray(o) ? (e = o[0],
            p = o[1]) : e = p = o),
            o ? {
                show: p,
                hide: e
            } : null 
        },
        _toggle: function(C, v) {
            function D() {
                E.running = !1,
                E._trigger("activate", C, v)
            }
            function p() {
                v.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),
                B.length && z.show ? B.animate(z.show, z.show.duration, function() {
                    D()
                }) : (B.show(),
                D())
            }
            var E = this
              , B = v.newPanel
              , q = v.oldPanel
              , z = this._getFx();
            if (!z) {
                return this._super(C, v)
            }
            E.running = !0,
            q.length && z.hide ? q.animate(z.hide, z.hide.duration, function() {
                v.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
                p()
            }) : (v.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
            q.hide(),
            p())
        }
    }))
})(jQuery);
(function(f) {
    function g(e, m) {
        var h = (e.attr("aria-describedby") || "").split(/\s+/);
        h.push(m),
        e.data("ui-tooltip-id", m).attr("aria-describedby", f.trim(h.join(" ")))
    }
    function d(h) {
        var o = h.data("ui-tooltip-id")
          , m = (h.attr("aria-describedby") || "").split(/\s+/)
          , e = f.inArray(o, m);
        e !== -1 && m.splice(e, 1),
        h.removeData("ui-tooltip-id"),
        m = f.trim(m.join(" ")),
        m ? h.attr("aria-describedby", m) : h.removeAttr("aria-describedby")
    }
    var a = 0;
    f.widget("ui.tooltip", {
        version: "1.9.2",
        options: {
            content: function() {
                return f(this).attr("title")
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: !0,
            tooltipClass: null ,
            track: !1,
            close: null ,
            open: null 
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            }),
            this.tooltips = {},
            this.parents = {},
            this.options.disabled && this._disable()
        },
        _setOption: function(e, m) {
            var h = this;
            if (e === "disabled") {
                this[m ? "_disable" : "_enable"](),
                this.options[e] = m;
                return
            }
            this._super(e, m),
            e === "content" && f.each(this.tooltips, function(p, o) {
                h._updateContent(o)
            })
        },
        _disable: function() {
            var e = this;
            f.each(this.tooltips, function(o, m) {
                var h = f.Event("blur");
                h.target = h.currentTarget = m[0],
                e.close(h, !0)
            }),
            this.element.find(this.options.items).andSelf().each(function() {
                var h = f(this);
                h.is("[title]") && h.data("ui-tooltip-title", h.attr("title")).attr("title", "")
            })
        },
        _enable: function() {
            this.element.find(this.options.items).andSelf().each(function() {
                var e = f(this);
                e.data("ui-tooltip-title") && e.attr("title", e.data("ui-tooltip-title"))
            })
        },
        open: function(e) {
            var m = this
              , h = f(e ? e.target : this.element).closest(this.options.items);
            if (!h.length || h.data("ui-tooltip-id")) {
                return
            }
            h.attr("title") && h.data("ui-tooltip-title", h.attr("title")),
            h.data("ui-tooltip-open", !0),
            e && e.type === "mouseover" && h.parents().each(function() {
                var o = f(this), p;
                o.data("ui-tooltip-open") && (p = f.Event("blur"),
                p.target = p.currentTarget = this,
                m.close(p, !0)),
                o.attr("title") && (o.uniqueId(),
                m.parents[this.id] = {
                    element: this,
                    title: o.attr("title")
                },
                o.attr("title", ""))
            }),
            this._updateContent(h, e)
        },
        _updateContent: function(q, m) {
            var u, p = this.options.content, h = this, o = m ? m.type : null ;
            if (typeof p == "string") {
                return this._open(m, q, p)
            }
            u = p.call(q[0], function(e) {
                if (!q.data("ui-tooltip-open")) {
                    return
                }
                h._delay(function() {
                    m && (m.type = o),
                    this._open(m, q, e)
                })
            }),
            u && this._open(m, q, u)
        },
        _open: function(p, v, m) {
            function z(o) {
                e.of = o;
                if (q.is(":hidden")) {
                    return
                }
                q.position(e)
            }
            var q, B, h, e = f.extend({}, this.options.position);
            if (!m) {
                return
            }
            q = this._find(v);
            if (q.length) {
                q.find(".ui-tooltip-content").html(m);
                return
            }
            v.is("[title]") && (p && p.type === "mouseover" ? v.attr("title", "") : v.removeAttr("title")),
            q = this._tooltip(v),
            g(v, q.attr("id")),
            q.find(".ui-tooltip-content").html(m),
            this.options.track && p && /^mouse/.test(p.type) ? (this._on(this.document, {
                mousemove: z
            }),
            z(p)) : q.position(f.extend({
                of: v
            }, this.options.position)),
            q.hide(),
            this._show(q, this.options.show),
            this.options.show && this.options.show.delay && (h = setInterval(function() {
                q.is(":visible") && (z(e.of),
                clearInterval(h))
            }, f.fx.interval)),
            this._trigger("open", p, {
                tooltip: q
            }),
            B = {
                keyup: function(o) {
                    if (o.keyCode === f.ui.keyCode.ESCAPE) {
                        var r = f.Event(o);
                        r.currentTarget = v[0],
                        this.close(r, !0)
                    }
                },
                remove: function() {
                    this._removeTooltip(q)
                }
            };
            if (!p || p.type === "mouseover") {
                B.mouseleave = "close"
            }
            if (!p || p.type === "focusin") {
                B.focusout = "close"
            }
            this._on(!0, v, B)
        },
        close: function(h) {
            var o = this
              , e = f(h ? h.currentTarget : this.element)
              , m = this._find(e);
            if (this.closing) {
                return
            }
            e.data("ui-tooltip-title") && e.attr("title", e.data("ui-tooltip-title")),
            d(e),
            m.stop(!0),
            this._hide(m, this.options.hide, function() {
                o._removeTooltip(f(this))
            }),
            e.removeData("ui-tooltip-open"),
            this._off(e, "mouseleave focusout keyup"),
            e[0] !== this.element[0] && this._off(e, "remove"),
            this._off(this.document, "mousemove"),
            h && h.type === "mouseleave" && f.each(this.parents, function(p, q) {
                f(q.element).attr("title", q.title),
                delete o.parents[p]
            }),
            this.closing = !0,
            this._trigger("close", h, {
                tooltip: m
            }),
            this.closing = !1
        },
        _tooltip: function(m) {
            var h = "ui-tooltip-" + a++
              , e = f("<div>").attr({
                id: h,
                role: "tooltip"
            }).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
            return f("<div>").addClass("ui-tooltip-content").appendTo(e),
            e.appendTo(this.document[0].body),
            f.fn.bgiframe && e.bgiframe(),
            this.tooltips[h] = m,
            e
        },
        _find: function(e) {
            var h = e.data("ui-tooltip-id");
            return h ? f("#" + h) : f()
        },
        _removeTooltip: function(h) {
            h.remove(),
            delete this.tooltips[h.attr("id")]
        },
        _destroy: function() {
            var e = this;
            f.each(this.tooltips, function(o, m) {
                var h = f.Event("blur");
                h.target = h.currentTarget = m[0],
                e.close(h, !0),
                f("#" + o).remove(),
                m.data("ui-tooltip-title") && (m.attr("title", m.data("ui-tooltip-title")),
                m.removeData("ui-tooltip-title"))
            })
        }
    })
})(jQuery);
jQuery.effects || function(f, a) {
    var g = f.uiBackCompat !== !1
      , d = "ui-effects-";
    f.effects = {
        effect: {}
    },
    function(K, z) {
        function m(p, h, u) {
            var o = H[h.type] || {};
            return p == null  ? u || !h.def ? null  : h.def : (p = o.floor ? ~~p : parseFloat(p),
            isNaN(p) ? h.def : o.mod ? (p + o.mod) % o.mod : 0 > p ? 0 : o.max < p ? o.max : p)
        }
        function F(o) {
            var p = q()
              , h = p._rgba = [];
            return o = o.toLowerCase(),
            D(M, function(v, u) {
                var N, P = u.re.exec(o), r = P && u.parse(P), O = u.space || "rgba";
                if (r) {
                    return N = p[O](r),
                    p[J[O].cache] = N[J[O].cache],
                    h = p._rgba = N._rgba,
                    !1
                }
            }),
            h.length ? (h.join() === "0,0,0,0" && K.extend(h, G.transparent),
            p) : G[o]
        }
        function I(o, h, p) {
            return p = (p + 1) % 1,
            p * 6 < 1 ? o + (h - o) * p * 6 : p * 2 < 1 ? h : p * 3 < 2 ? o + (h - o) * (2 / 3 - p) * 6 : o
        }
        var e = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "), C = /^([\-+])=\s*(\d+\.?\d*)/, M = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
            parse: function(h) {
                return [h[1], h[2], h[3], h[4]]
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
            parse: function(h) {
                return [h[1] * 2.55, h[2] * 2.55, h[3] * 2.55, h[4]]
            }
        }, {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function(h) {
                return [parseInt(h[1], 16), parseInt(h[2], 16), parseInt(h[3], 16)]
            }
        }, {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function(h) {
                return [parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16), parseInt(h[3] + h[3], 16)]
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function(h) {
                return [h[1], h[2] / 100, h[3] / 100, h[4]]
            }
        }], q = K.Color = function(p, u, o, h) {
            return new K.Color.fn.parse(p,u,o,h)
        }
        , J = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },
            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        }, H = {
            "byte": {
                floor: !0,
                max: 255
            },
            percent: {
                max: 1
            },
            degrees: {
                mod: 360,
                floor: !0
            }
        }, E = q.support = {}, B = K("<p>")[0], G, D = K.each;
        B.style.cssText = "background-color:rgba(1,1,1,.5)",
        E.rgba = B.style.backgroundColor.indexOf("rgba") > -1,
        D(J, function(o, h) {
            h.cache = "_" + o,
            h.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        }),
        q.fn = K.extend(q.prototype, {
            parse: function(O, u, N, o) {
                if (O === z) {
                    return this._rgba = [null , null , null , null ],
                    this
                }
                if (O.jquery || O.nodeType) {
                    O = K(O).css(u),
                    u = z
                }
                var P = this
                  , h = K.type(O)
                  , p = this._rgba = [];
                u !== z && (O = [O, u, N, o],
                h = "array");
                if (h === "string") {
                    return this.parse(F(O) || G._default)
                }
                if (h === "array") {
                    return D(J.rgba.props, function(v, r) {
                        p[r.idx] = m(O[r.idx], r)
                    }),
                    this
                }
                if (h === "object") {
                    return O instanceof q ? D(J, function(v, r) {
                        O[r.cache] && (P[r.cache] = O[r.cache].slice())
                    }) : D(J, function(v, Q) {
                        var r = Q.cache;
                        D(Q.props, function(S, R) {
                            if (!P[r] && Q.to) {
                                if (S === "alpha" || O[S] == null ) {
                                    return
                                }
                                P[r] = Q.to(P._rgba)
                            }
                            P[r][R.idx] = m(O[S], R, !0)
                        }),
                        P[r] && f.inArray(null , P[r].slice(0, 3)) < 0 && (P[r][3] = 1,
                        Q.from && (P._rgba = Q.from(P[r])))
                    }),
                    this
                }
            },
            is: function(p) {
                var h = q(p)
                  , u = !0
                  , o = this;
                return D(J, function(N, r) {
                    var v, O = h[r.cache];
                    return O && (v = o[r.cache] || r.to && r.to(o._rgba) || [],
                    D(r.props, function(Q, P) {
                        if (O[P.idx] != null ) {
                            return u = O[P.idx] === v[P.idx],
                            u
                        }
                    })),
                    u
                }),
                u
            },
            _space: function() {
                var o = []
                  , h = this;
                return D(J, function(u, p) {
                    h[p.cache] && o.push(u)
                }),
                o.pop()
            },
            transition: function(O, p) {
                var P = q(O)
                  , v = P._space()
                  , o = J[v]
                  , u = this.alpha() === 0 ? q("transparent") : this
                  , N = u[o.cache] || o.to(u._rgba)
                  , h = N.slice();
                return P = P[o.cache],
                D(o.props, function(U, T) {
                    var R = T.idx
                      , S = N[R]
                      , V = P[R]
                      , Q = H[T.type] || {};
                    if (V === null ) {
                        return
                    }
                    S === null  ? h[R] = V : (Q.mod && (V - S > Q.mod / 2 ? S += Q.mod : S - V > Q.mod / 2 && (S -= Q.mod)),
                    h[R] = m((V - S) * p + S, T))
                }),
                this[v](h)
            },
            blend: function(p) {
                if (this._rgba[3] === 1) {
                    return this
                }
                var u = this._rgba.slice()
                  , o = u.pop()
                  , h = q(p)._rgba;
                return q(K.map(u, function(v, r) {
                    return (1 - o) * h[r] + o * v
                }))
            },
            toRgbaString: function() {
                var h = "rgba("
                  , o = K.map(this._rgba, function(r, p) {
                    return r == null  ? p > 2 ? 1 : 0 : r
                });
                return o[3] === 1 && (o.pop(),
                h = "rgb("),
                h + o.join() + ")"
            },
            toHslaString: function() {
                var h = "hsla("
                  , o = K.map(this.hsla(), function(r, p) {
                    return r == null  && (r = p > 2 ? 1 : 0),
                    p && p < 3 && (r = Math.round(r * 100) + "%"),
                    r
                });
                return o[3] === 1 && (o.pop(),
                h = "hsl("),
                h + o.join() + ")"
            },
            toHexString: function(o) {
                var p = this._rgba.slice()
                  , h = p.pop();
                return o && p.push(~~(h * 255)),
                "#" + K.map(p, function(r) {
                    return r = (r || 0).toString(16),
                    r.length === 1 ? "0" + r : r
                }).join("")
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        }),
        q.fn.parse.prototype = q.fn,
        J.hsla.to = function(Q) {
            if (Q[0] == null  || Q[1] == null  || Q[2] == null ) {
                return [null , null , null , Q[3]]
            }
            var U = Q[0] / 255, v = Q[1] / 255, h = Q[2] / 255, O = Q[3], V = Math.max(U, v, h), p = Math.min(U, v, h), T = V - p, S = V + p, P = S * 0.5, N, R;
            return p === V ? N = 0 : U === V ? N = 60 * (v - h) / T + 360 : v === V ? N = 60 * (h - U) / T + 120 : N = 60 * (U - v) / T + 240,
            P === 0 || P === 1 ? R = P : P <= 0.5 ? R = T / S : R = T / (2 - S),
            [Math.round(N) % 360, R, P, O == null  ? 1 : O]
        }
        ,
        J.hsla.from = function(N) {
            if (N[0] == null  || N[1] == null  || N[2] == null ) {
                return [null , null , null , N[3]]
            }
            var p = N[0] / 360
              , P = N[1]
              , v = N[2]
              , h = N[3]
              , u = v <= 0.5 ? v * (1 + P) : v + P - v * P
              , O = 2 * v - u;
            return [Math.round(I(O, u, p + 1 / 3) * 255), Math.round(I(O, u, p) * 255), Math.round(I(O, u, p - 1 / 3) * 255), h]
        }
        ,
        D(J, function(O, v) {
            var p = v.props
              , o = v.cache
              , h = v.to
              , N = v.from;
            q.fn[O] = function(R) {
                h && !this[o] && (this[o] = h(this._rgba));
                if (R === z) {
                    return this[o].slice()
                }
                var Q, P = K.type(R), u = P === "array" || P === "object" ? R : arguments, S = this[o].slice();
                return D(p, function(T, r) {
                    var U = u[P === "object" ? T : r.idx];
                    U == null  && (U = S[r.idx]),
                    S[r.idx] = m(U, r)
                }),
                N ? (Q = q(N(S)),
                Q[o] = S,
                Q) : q(S)
            }
            ,
            D(p, function(P, u) {
                if (q.fn[P]) {
                    return
                }
                q.fn[P] = function(S) {
                    var U = K.type(S), R = P === "alpha" ? this._hsla ? "hsla" : "rgba" : O, Q = this[R](), T = Q[u.idx], r;
                    return U === "undefined" ? T : (U === "function" && (S = S.call(this, T),
                    U = K.type(S)),
                    S == null  && u.empty ? this : (U === "string" && (r = C.exec(S),
                    r && (S = T + parseFloat(r[2]) * (r[1] === "+" ? 1 : -1))),
                    Q[u.idx] = S,
                    this[R](Q)))
                }
            })
        }),
        D(e, function(h, o) {
            K.cssHooks[o] = {
                set: function(R, Q) {
                    var O, P, N = "";
                    if (K.type(Q) !== "string" || (O = F(Q))) {
                        Q = q(O || Q);
                        if (!E.rgba && Q._rgba[3] !== 1) {
                            P = o === "backgroundColor" ? R.parentNode : R;
                            while ((N === "" || N === "transparent") && P && P.style) {
                                try {
                                    N = K.css(P, "backgroundColor"),
                                    P = P.parentNode
                                } catch (v) {}
                            }
                            Q = Q.blend(N && N !== "transparent" ? N : "_default")
                        }
                        Q = Q.toRgbaString()
                    }
                    try {
                        R.style[o] = Q
                    } catch (p) {}
                }
            },
            K.fx.step[o] = function(p) {
                p.colorInit || (p.start = q(p.elem, o),
                p.end = q(p.end),
                p.colorInit = !0),
                K.cssHooks[o].set(p.elem, p.start.transition(p.end, p.pos))
            }
        }),
        K.cssHooks.borderColor = {
            expand: function(o) {
                var h = {};
                return D(["Top", "Right", "Bottom", "Left"], function(u, p) {
                    h["border" + p + "Color"] = o
                }),
                h
            }
        },
        G = K.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null , null , null , 0],
            _default: "#ffffff"
        }
    }(jQuery),
    function() {
        function e() {
            var q = this.ownerDocument.defaultView ? this.ownerDocument.defaultView.getComputedStyle(this, null ) : this.currentStyle, v = {}, u, p;
            if (q && q.length && q[0] && q[q[0]]) {
                p = q.length;
                while (p--) {
                    u = q[p],
                    typeof q[u] == "string" && (v[f.camelCase(u)] = q[u])
                }
            } else {
                for (u in q) {
                    typeof q[u] == "string" && (v[u] = q[u])
                }
            }
            return v
        }
        function h(q, v) {
            var p = {}, r, u;
            for (r in v) {
                u = v[r],
                q[r] !== u && !m[r] && (f.fx.step[r] || !isNaN(parseFloat(u))) && (p[r] = u)
            }
            return p
        }
        var o = ["add", "remove", "toggle"]
          , m = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        f.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(p, q) {
            f.fx.step[q] = function(r) {
                if (r.end !== "none" && !r.setAttr || r.pos === 1 && !r.setAttr) {
                    jQuery.style(r.elem, q, r.end),
                    r.setAttr = !0
                }
            }
        }),
        f.effects.animateClass = function(v, z, B, q) {
            var p = f.speed(z, B, q);
            return this.queue(function() {
                var D = f(this), F = D.attr("class") || "", C, E = p.children ? D.find("*").andSelf() : D;
                E = E.map(function() {
                    var r = f(this);
                    return {
                        el: r,
                        start: e.call(this)
                    }
                }),
                C = function() {
                    f.each(o, function(r, u) {
                        v[u] && D[u + "Class"](v[u])
                    })
                }
                ,
                C(),
                E = E.map(function() {
                    return this.end = e.call(this.el[0]),
                    this.diff = h(this.start, this.end),
                    this
                }),
                D.attr("class", F),
                E = E.map(function() {
                    var u = this
                      , H = f.Deferred()
                      , G = jQuery.extend({}, p, {
                        queue: !1,
                        complete: function() {
                            H.resolve(u)
                        }
                    });
                    return this.el.animate(this.diff, G),
                    H.promise()
                }),
                f.when.apply(f, E.get()).done(function() {
                    C(),
                    f.each(arguments, function() {
                        var r = this.el;
                        f.each(this.diff, function(u) {
                            r.css(u, "")
                        })
                    }),
                    p.complete.call(D[0])
                })
            })
        }
        ,
        f.fn.extend({
            _addClass: f.fn.addClass,
            addClass: function(q, v, u, p) {
                return v ? f.effects.animateClass.call(this, {
                    add: q
                }, v, u, p) : this._addClass(q)
            },
            _removeClass: f.fn.removeClass,
            removeClass: function(q, v, u, p) {
                return v ? f.effects.animateClass.call(this, {
                    remove: q
                }, v, u, p) : this._removeClass(q)
            },
            _toggleClass: f.fn.toggleClass,
            toggleClass: function(z, u, p, q, v) {
                return typeof u == "boolean" || u === a ? p ? f.effects.animateClass.call(this, u ? {
                    add: z
                } : {
                    remove: z
                }, p, q, v) : this._toggleClass(z, u) : f.effects.animateClass.call(this, {
                    toggle: z
                }, u, p, q)
            },
            switchClass: function(q, z, v, p, u) {
                return f.effects.animateClass.call(this, {
                    add: z,
                    remove: q
                }, v, p, u)
            }
        })
    }(),
    function() {
        function e(o, q, p, m) {
            f.isPlainObject(o) && (q = o,
            o = o.effect),
            o = {
                effect: o
            },
            q == null  && (q = {}),
            f.isFunction(q) && (m = q,
            p = null ,
            q = {});
            if (typeof q == "number" || f.fx.speeds[q]) {
                m = p,
                p = q,
                q = {}
            }
            return f.isFunction(p) && (m = p,
            p = null ),
            q && f.extend(o, q),
            p = p || q.duration,
            o.duration = f.fx.off ? 0 : typeof p == "number" ? p : p in f.fx.speeds ? f.fx.speeds[p] : f.fx.speeds._default,
            o.complete = m || q.complete,
            o
        }
        function h(m) {
            return !m || typeof m == "number" || f.fx.speeds[m] ? !0 : typeof m == "string" && !f.effects.effect[m] ? g && f.effects[m] ? !1 : !0 : !1
        }
        f.extend(f.effects, {
            version: "1.9.2",
            save: function(o, m) {
                for (var p = 0; p < m.length; p++) {
                    m[p] !== null  && o.data(d + m[p], o[0].style[m[p]])
                }
            },
            restore: function(p, q) {
                var m, o;
                for (o = 0; o < q.length; o++) {
                    q[o] !== null  && (m = p.data(d + q[o]),
                    m === a && (m = ""),
                    p.css(q[o], m))
                }
            },
            setMode: function(o, m) {
                return m === "toggle" && (m = o.is(":hidden") ? "show" : "hide"),
                m
            },
            getBaseline: function(p, m) {
                var q, o;
                switch (p[0]) {
                case "top":
                    q = 0;
                    break;
                case "middle":
                    q = 0.5;
                    break;
                case "bottom":
                    q = 1;
                    break;
                default:
                    q = p[0] / m.height
                }
                switch (p[1]) {
                case "left":
                    o = 0;
                    break;
                case "center":
                    o = 0.5;
                    break;
                case "right":
                    o = 1;
                    break;
                default:
                    o = p[1] / m.width
                }
                return {
                    x: o,
                    y: q
                }
            },
            createWrapper: function(p) {
                if (p.parent().is(".ui-effects-wrapper")) {
                    return p.parent()
                }
                var z = {
                    width: p.outerWidth(!0),
                    height: p.outerHeight(!0),
                    "float": p.css("float")
                }
                  , u = f("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                })
                  , m = {
                    width: p.width(),
                    height: p.height()
                }
                  , q = document.activeElement;
                try {
                    q.id
                } catch (v) {
                    q = document.body
                }
                return p.wrap(u),
                (p[0] === q || f.contains(p[0], q)) && f(q).focus(),
                u = p.parent(),
                p.css("position") === "static" ? (u.css({
                    position: "relative"
                }),
                p.css({
                    position: "relative"
                })) : (f.extend(z, {
                    position: p.css("position"),
                    zIndex: p.css("z-index")
                }),
                f.each(["top", "left", "bottom", "right"], function(B, o) {
                    z[o] = p.css(o),
                    isNaN(parseInt(z[o], 10)) && (z[o] = "auto")
                }),
                p.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })),
                p.css(m),
                u.css(z).show()
            },
            removeWrapper: function(m) {
                var o = document.activeElement;
                return m.parent().is(".ui-effects-wrapper") && (m.parent().replaceWith(m),
                (m[0] === o || f.contains(m[0], o)) && f(o).focus()),
                m
            },
            setTransition: function(o, q, p, m) {
                return m = m || {},
                f.each(q, function(u, v) {
                    var r = o.cssUnit(v);
                    r[0] > 0 && (m[v] = r[0] * p + r[1])
                }),
                m
            }
        }),
        f.fn.extend({
            effect: function() {
                function m(F) {
                    function o() {
                        f.isFunction(C) && C.call(E[0]),
                        f.isFunction(F) && F()
                    }
                    var E = f(this)
                      , C = q.complete
                      , D = q.mode;
                    (E.is(":hidden") ? D === "hide" : D === "show") ? o() : B.call(E[0], q, o)
                }
                var q = e.apply(this, arguments)
                  , z = q.mode
                  , v = q.queue
                  , B = f.effects.effect[q.effect]
                  , p = !B && g && f.effects[q.effect];
                return f.fx.off || !B && !p ? z ? this[z](q.duration, q.complete) : this.each(function() {
                    q.complete && q.complete.call(this)
                }) : B ? v === !1 ? this.each(m) : this.queue(v || "fx", m) : p.call(this, {
                    options: q,
                    duration: q.duration,
                    callback: q.complete,
                    mode: q.mode
                })
            },
            _show: f.fn.show,
            show: function(o) {
                if (h(o)) {
                    return this._show.apply(this, arguments)
                }
                var m = e.apply(this, arguments);
                return m.mode = "show",
                this.effect.call(this, m)
            },
            _hide: f.fn.hide,
            hide: function(o) {
                if (h(o)) {
                    return this._hide.apply(this, arguments)
                }
                var m = e.apply(this, arguments);
                return m.mode = "hide",
                this.effect.call(this, m)
            },
            __toggle: f.fn.toggle,
            toggle: function(m) {
                if (h(m) || typeof m == "boolean" || f.isFunction(m)) {
                    return this.__toggle.apply(this, arguments)
                }
                var o = e.apply(this, arguments);
                return o.mode = "toggle",
                this.effect.call(this, o)
            },
            cssUnit: function(m) {
                var p = this.css(m)
                  , o = [];
                return f.each(["em", "px", "%", "pt"], function(r, q) {
                    p.indexOf(q) > 0 && (o = [parseFloat(p), q])
                }),
                o
            }
        })
    }(),
    function() {
        var e = {};
        f.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(h, m) {
            e[m] = function(o) {
                return Math.pow(o, h + 2)
            }
        }),
        f.extend(e, {
            Sine: function(h) {
                return 1 - Math.cos(h * Math.PI / 2)
            },
            Circ: function(h) {
                return 1 - Math.sqrt(1 - h * h)
            },
            Elastic: function(h) {
                return h === 0 || h === 1 ? h : -Math.pow(2, 8 * (h - 1)) * Math.sin(((h - 1) * 80 - 7.5) * Math.PI / 15)
            },
            Back: function(h) {
                return h * h * (3 * h - 2)
            },
            Bounce: function(m) {
                var h, o = 4;
                while (m < ((h = Math.pow(2, --o)) - 1) / 11) {}
                return 1 / Math.pow(4, 3 - o) - 7.5625 * Math.pow((h * 3 - 2) / 22 - m, 2)
            }
        }),
        f.each(e, function(h, m) {
            f.easing["easeIn" + h] = m,
            f.easing["easeOut" + h] = function(o) {
                return 1 - m(1 - o)
            }
            ,
            f.easing["easeInOut" + h] = function(o) {
                return o < 0.5 ? m(o * 2) / 2 : 1 - m(o * -2 + 2) / 2
            }
        })
    }()
}(jQuery);
(function(f, a) {
    var g = /up|down|vertical/
      , d = /up|left|vertical|horizontal/;
    f.effects.effect.blind = function(K, B) {
        var M = f(this), q = ["position", "top", "bottom", "left", "right", "height", "width"], J = f.effects.setMode(M, K.mode || "hide"), H = K.direction || "up", E = g.test(H), z = E ? "height" : "width", G = E ? "top" : "left", C = d.test(H), e = {}, F = J === "show", I, r, D;
        M.parent().is(".ui-effects-wrapper") ? f.effects.save(M.parent(), q) : f.effects.save(M, q),
        M.show(),
        I = f.effects.createWrapper(M).css({
            overflow: "hidden"
        }),
        r = I[z](),
        D = parseFloat(I.css(G)) || 0,
        e[z] = F ? r : 0,
        C || (M.css(E ? "bottom" : "right", 0).css(E ? "top" : "left", "auto").css({
            position: "absolute"
        }),
        e[G] = F ? D : r + D),
        F && (I.css(z, 0),
        C || I.css(G, D + r)),
        I.animate(e, {
            duration: K.duration,
            easing: K.easing,
            queue: !1,
            complete: function() {
                J === "hide" && M.hide(),
                f.effects.restore(M, q),
                f.effects.removeWrapper(M),
                B()
            }
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.bounce = function(C, H) {
        var E = d(this), K = ["position", "top", "bottom", "left", "right", "height", "width"], D = d.effects.setMode(E, C.mode || "effect"), G = D === "hide", B = D === "show", S = C.direction || "up", O = C.distance, J = C.times || 5, Q = J * 2 + (B || G ? 1 : 0), M = C.duration / Q, F = C.easing, P = S === "up" || S === "down" ? "top" : "left", z = S === "up" || S === "left", I, N, e, R = E.queue(), q = R.length;
        (B || G) && K.push("opacity"),
        d.effects.save(E, K),
        E.show(),
        d.effects.createWrapper(E),
        O || (O = E[P === "top" ? "outerHeight" : "outerWidth"]() / 3),
        B && (e = {
            opacity: 1
        },
        e[P] = 0,
        E.css("opacity", 0).css(P, z ? -O * 2 : O * 2).animate(e, M, F)),
        G && (O /= Math.pow(2, J - 1)),
        e = {},
        e[P] = 0;
        for (I = 0; I < J; I++) {
            N = {},
            N[P] = (z ? "-=" : "+=") + O,
            E.animate(N, M, F).animate(e, M, F),
            O = G ? O * 2 : O / 2
        }
        G && (N = {
            opacity: 0
        },
        N[P] = (z ? "-=" : "+=") + O,
        E.animate(N, M, F)),
        E.queue(function() {
            G && E.hide(),
            d.effects.restore(E, K),
            d.effects.removeWrapper(E),
            H()
        }),
        q > 1 && R.splice.apply(R, [1, 0].concat(R.splice(q, Q + 1))),
        E.dequeue()
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.clip = function(H, q) {
        var e = d(this), z = ["position", "top", "bottom", "left", "right", "height", "width"], I = d.effects.setMode(e, H.mode || "hide"), m = I === "show", G = H.direction || "vertical", F = G === "vertical", C = F ? "height" : "width", v = F ? "top" : "left", E = {}, B, g, D;
        d.effects.save(e, z),
        e.show(),
        B = d.effects.createWrapper(e).css({
            overflow: "hidden"
        }),
        g = e[0].tagName === "IMG" ? B : e,
        D = g[C](),
        m && (g.css(C, 0),
        g.css(v, D / 2)),
        E[C] = m ? D : 0,
        E[v] = m ? 0 : D / 2,
        g.animate(E, {
            queue: !1,
            duration: H.duration,
            easing: H.easing,
            complete: function() {
                m || e.hide(),
                d.effects.restore(e, z),
                d.effects.removeWrapper(e),
                q()
            }
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.drop = function(C, h) {
        var e = d(this), p = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"], D = d.effects.setMode(e, C.mode || "hide"), g = D === "show", B = C.direction || "left", z = B === "up" || B === "down" ? "top" : "left", q = B === "up" || B === "left" ? "pos" : "neg", m = {
            opacity: g ? 1 : 0
        }, v;
        d.effects.save(e, p),
        e.show(),
        d.effects.createWrapper(e),
        v = C.distance || e[z === "top" ? "outerHeight" : "outerWidth"](!0) / 2,
        g && e.css("opacity", 0).css(z, q === "pos" ? -v : v),
        m[z] = (g ? q === "pos" ? "+=" : "-=" : q === "pos" ? "-=" : "+=") + v,
        e.animate(m, {
            queue: !1,
            duration: C.duration,
            easing: C.easing,
            complete: function() {
                D === "hide" && e.hide(),
                d.effects.restore(e, p),
                d.effects.removeWrapper(e),
                h()
            }
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.explode = function(B, G) {
        function e() {
            P.push(this),
            P.length === D * J && Q()
        }
        function Q() {
            C.css({
                visibility: "visible"
            }),
            d(P).remove(),
            z || C.hide(),
            G()
        }
        var D = B.pieces ? Math.round(Math.sqrt(B.pieces)) : 3, J = D, C = d(this), F = d.effects.setMode(C, B.mode || "hide"), z = F === "show", R = C.show().css("visibility", "hidden").offset(), N = Math.ceil(C.outerWidth() / J), I = Math.ceil(C.outerHeight() / D), P = [], K, E, O, q, H, M;
        for (K = 0; K < D; K++) {
            q = R.top + K * I,
            M = K - (D - 1) / 2;
            for (E = 0; E < J; E++) {
                O = R.left + E * N,
                H = E - (J - 1) / 2,
                C.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -E * N,
                    top: -K * I
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: N,
                    height: I,
                    left: O + (z ? H * N : 0),
                    top: q + (z ? M * I : 0),
                    opacity: z ? 0 : 1
                }).animate({
                    left: O + (z ? 0 : H * N),
                    top: q + (z ? 0 : M * I),
                    opacity: z ? 1 : 0
                }, B.duration || 500, B.easing, e)
            }
        }
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.fade = function(f, h) {
        var g = d(this)
          , e = d.effects.setMode(g, f.mode || "toggle");
        g.animate({
            opacity: e
        }, {
            queue: !1,
            duration: f.duration,
            easing: f.easing,
            complete: h
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.fold = function(O, B) {
        var e = d(this), E = ["position", "top", "bottom", "left", "right", "height", "width"], P = d.effects.setMode(e, O.mode || "hide"), z = P === "show", N = P === "hide", K = O.size || 15, H = /([0-9]+)%/.exec(K), D = !!O.horizFirst, J = z !== D, F = J ? ["width", "height"] : ["height", "width"], q = O.duration / 2, I, M, C = {}, G = {};
        d.effects.save(e, E),
        e.show(),
        I = d.effects.createWrapper(e).css({
            overflow: "hidden"
        }),
        M = J ? [I.width(), I.height()] : [I.height(), I.width()],
        H && (K = parseInt(H[1], 10) / 100 * M[N ? 0 : 1]),
        z && I.css(D ? {
            height: 0,
            width: K
        } : {
            height: K,
            width: 0
        }),
        C[F[0]] = z ? M[0] : K,
        G[F[1]] = z ? M[1] : 0,
        I.animate(C, q, O.easing).animate(G, q, O.easing, function() {
            N && e.hide(),
            d.effects.restore(e, E),
            d.effects.removeWrapper(e),
            B()
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.highlight = function(f, p) {
        var h = d(this)
          , e = ["backgroundImage", "backgroundColor", "opacity"]
          , g = d.effects.setMode(h, f.mode || "show")
          , m = {
            backgroundColor: h.css("backgroundColor")
        };
        g === "hide" && (m.opacity = 0),
        d.effects.save(h, e),
        h.show().css({
            backgroundImage: "none",
            backgroundColor: f.color || "#ffff99"
        }).animate(m, {
            queue: !1,
            duration: f.duration,
            easing: f.easing,
            complete: function() {
                g === "hide" && h.hide(),
                d.effects.restore(h, e),
                p()
            }
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.pulsate = function(G, q) {
        var e = d(this), z = d.effects.setMode(e, G.mode || "show"), H = z === "show", m = z === "hide", F = H || z === "hide", E = (G.times || 5) * 2 + (F ? 1 : 0), C = G.duration / E, v = 0, D = e.queue(), B = D.length, g;
        if (H || !e.is(":visible")) {
            e.css("opacity", 0).show(),
            v = 1
        }
        for (g = 1; g < E; g++) {
            e.animate({
                opacity: v
            }, C, G.easing),
            v = 1 - v
        }
        e.animate({
            opacity: v
        }, C, G.easing),
        e.queue(function() {
            m && e.hide(),
            q()
        }),
        B > 1 && D.splice.apply(D, [1, 0].concat(D.splice(B, E + 1))),
        e.dequeue()
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.puff = function(h, v) {
        var p = d(this)
          , g = d.effects.setMode(p, h.mode || "hide")
          , m = g === "hide"
          , q = parseInt(h.percent, 10) || 150
          , f = q / 100
          , e = {
            height: p.height(),
            width: p.width(),
            outerHeight: p.outerHeight(),
            outerWidth: p.outerWidth()
        };
        d.extend(h, {
            effect: "scale",
            queue: !1,
            fade: !0,
            mode: g,
            complete: v,
            percent: m ? q : 100,
            from: m ? e : {
                height: e.height * f,
                width: e.width * f,
                outerHeight: e.outerHeight * f,
                outerWidth: e.outerWidth * f
            }
        }),
        p.effect(h)
    }
    ,
    d.effects.effect.scale = function(B, h) {
        var e = d(this)
          , p = d.extend(!0, {}, B)
          , C = d.effects.setMode(e, B.mode || "effect")
          , g = parseInt(B.percent, 10) || (parseInt(B.percent, 10) === 0 ? 0 : C === "hide" ? 0 : 100)
          , z = B.direction || "both"
          , v = B.origin
          , q = {
            height: e.height(),
            width: e.width(),
            outerHeight: e.outerHeight(),
            outerWidth: e.outerWidth()
        }
          , m = {
            y: z !== "horizontal" ? g / 100 : 1,
            x: z !== "vertical" ? g / 100 : 1
        };
        p.effect = "size",
        p.queue = !1,
        p.complete = h,
        C !== "effect" && (p.origin = v || ["middle", "center"],
        p.restore = !0),
        p.from = B.from || (C === "show" ? {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        } : q),
        p.to = {
            height: q.height * m.y,
            width: q.width * m.x,
            outerHeight: q.outerHeight * m.y,
            outerWidth: q.outerWidth * m.x
        },
        p.fade && (C === "show" && (p.from.opacity = 0,
        p.to.opacity = 1),
        C === "hide" && (p.from.opacity = 1,
        p.to.opacity = 0)),
        e.effect(p)
    }
    ,
    d.effects.effect.size = function(B, G) {
        var D, J, C, F = d(this), z = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], R = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], N = ["width", "height", "overflow"], I = ["fontSize"], P = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], K = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], E = d.effects.setMode(F, B.mode || "effect"), O = B.restore || E !== "effect", q = B.scale || "both", H = B.origin || ["middle", "center"], M = F.css("position"), e = O ? z : R, Q = {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        };
        E === "show" && F.show(),
        D = {
            height: F.height(),
            width: F.width(),
            outerHeight: F.outerHeight(),
            outerWidth: F.outerWidth()
        },
        B.mode === "toggle" && E === "show" ? (F.from = B.to || Q,
        F.to = B.from || D) : (F.from = B.from || (E === "show" ? Q : D),
        F.to = B.to || (E === "hide" ? Q : D)),
        C = {
            from: {
                y: F.from.height / D.height,
                x: F.from.width / D.width
            },
            to: {
                y: F.to.height / D.height,
                x: F.to.width / D.width
            }
        };
        if (q === "box" || q === "both") {
            C.from.y !== C.to.y && (e = e.concat(P),
            F.from = d.effects.setTransition(F, P, C.from.y, F.from),
            F.to = d.effects.setTransition(F, P, C.to.y, F.to)),
            C.from.x !== C.to.x && (e = e.concat(K),
            F.from = d.effects.setTransition(F, K, C.from.x, F.from),
            F.to = d.effects.setTransition(F, K, C.to.x, F.to))
        }
        (q === "content" || q === "both") && C.from.y !== C.to.y && (e = e.concat(I).concat(N),
        F.from = d.effects.setTransition(F, I, C.from.y, F.from),
        F.to = d.effects.setTransition(F, I, C.to.y, F.to)),
        d.effects.save(F, e),
        F.show(),
        d.effects.createWrapper(F),
        F.css("overflow", "hidden").css(F.from),
        H && (J = d.effects.getBaseline(H, D),
        F.from.top = (D.outerHeight - F.outerHeight()) * J.y,
        F.from.left = (D.outerWidth - F.outerWidth()) * J.x,
        F.to.top = (D.outerHeight - F.to.outerHeight) * J.y,
        F.to.left = (D.outerWidth - F.to.outerWidth) * J.x),
        F.css(F.from);
        if (q === "content" || q === "both") {
            P = P.concat(["marginTop", "marginBottom"]).concat(I),
            K = K.concat(["marginLeft", "marginRight"]),
            N = z.concat(P).concat(K),
            F.find("*[width]").each(function() {
                var g = d(this)
                  , f = {
                    height: g.height(),
                    width: g.width(),
                    outerHeight: g.outerHeight(),
                    outerWidth: g.outerWidth()
                };
                O && d.effects.save(g, N),
                g.from = {
                    height: f.height * C.from.y,
                    width: f.width * C.from.x,
                    outerHeight: f.outerHeight * C.from.y,
                    outerWidth: f.outerWidth * C.from.x
                },
                g.to = {
                    height: f.height * C.to.y,
                    width: f.width * C.to.x,
                    outerHeight: f.height * C.to.y,
                    outerWidth: f.width * C.to.x
                },
                C.from.y !== C.to.y && (g.from = d.effects.setTransition(g, P, C.from.y, g.from),
                g.to = d.effects.setTransition(g, P, C.to.y, g.to)),
                C.from.x !== C.to.x && (g.from = d.effects.setTransition(g, K, C.from.x, g.from),
                g.to = d.effects.setTransition(g, K, C.to.x, g.to)),
                g.css(g.from),
                g.animate(g.to, B.duration, B.easing, function() {
                    O && d.effects.restore(g, N)
                })
            })
        }
        F.animate(F.to, {
            queue: !1,
            duration: B.duration,
            easing: B.easing,
            complete: function() {
                F.to.opacity === 0 && F.css("opacity", F.from.opacity),
                E === "hide" && F.hide(),
                d.effects.restore(F, e),
                O || (M === "static" ? F.css({
                    position: "relative",
                    top: F.to.top,
                    left: F.to.left
                }) : d.each(["top", "left"], function(g, f) {
                    F.css(f, function(m, p) {
                        var o = parseInt(p, 10)
                          , h = g ? F.to.left : F.to.top;
                        return p === "auto" ? h + "px" : o + h + "px"
                    })
                })),
                d.effects.removeWrapper(F),
                G()
            }
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.shake = function(B, G) {
        var D = d(this), J = ["position", "top", "bottom", "left", "right", "height", "width"], C = d.effects.setMode(D, B.mode || "effect"), F = B.direction || "left", z = B.distance || 20, Q = B.times || 3, N = Q * 2 + 1, I = Math.round(B.duration / N), P = F === "up" || F === "down" ? "top" : "left", K = F === "up" || F === "left", E = {}, O = {}, q = {}, H, M = D.queue(), e = M.length;
        d.effects.save(D, J),
        D.show(),
        d.effects.createWrapper(D),
        E[P] = (K ? "-=" : "+=") + z,
        O[P] = (K ? "+=" : "-=") + z * 2,
        q[P] = (K ? "-=" : "+=") + z * 2,
        D.animate(E, I, B.easing);
        for (H = 1; H < Q; H++) {
            D.animate(O, I, B.easing).animate(q, I, B.easing)
        }
        D.animate(O, I, B.easing).animate(E, I / 2, B.easing).queue(function() {
            C === "hide" && D.hide(),
            d.effects.restore(D, J),
            d.effects.removeWrapper(D),
            G()
        }),
        e > 1 && M.splice.apply(M, [1, 0].concat(M.splice(e, N + 1))),
        D.dequeue()
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.slide = function(C, h) {
        var e = d(this), p = ["position", "top", "bottom", "left", "right", "width", "height"], D = d.effects.setMode(e, C.mode || "show"), g = D === "show", B = C.direction || "left", z = B === "up" || B === "down" ? "top" : "left", q = B === "up" || B === "left", m, v = {};
        d.effects.save(e, p),
        e.show(),
        m = C.distance || e[z === "top" ? "outerHeight" : "outerWidth"](!0),
        d.effects.createWrapper(e).css({
            overflow: "hidden"
        }),
        g && e.css(z, q ? isNaN(m) ? "-" + m : -m : m),
        v[z] = (g ? q ? "+=" : "-=" : q ? "-=" : "+=") + m,
        e.animate(v, {
            queue: !1,
            duration: C.duration,
            easing: C.easing,
            complete: function() {
                D === "hide" && e.hide(),
                d.effects.restore(e, p),
                d.effects.removeWrapper(e),
                h()
            }
        })
    }
})(jQuery);
(function(d, a) {
    d.effects.effect.transfer = function(E, m) {
        var e = d(this)
          , q = d(E.to)
          , F = q.css("position") === "fixed"
          , g = d("body")
          , D = F ? g.scrollTop() : 0
          , C = F ? g.scrollLeft() : 0
          , z = q.offset()
          , p = {
            top: z.top - D,
            left: z.left - C,
            height: q.innerHeight(),
            width: q.innerWidth()
        }
          , B = e.offset()
          , v = d('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(E.className).css({
            top: B.top - D,
            left: B.left - C,
            height: e.innerHeight(),
            width: e.innerWidth(),
            position: F ? "fixed" : "absolute"
        }).animate(p, E.duration, E.easing, function() {
            v.remove(),
            m()
        })
    }
})(jQuery);
(function(a) {
    if (a && window.XDomainRequest) {
        a.ajaxTransport(function(e) {
            if (e.crossDomain && e.async) {
                if (e.timeout) {
                    e.xdrTimeout = e.timeout;
                    delete e.timeout
                }
                var d;
                return {
                    send: function(g, f) {
                        function h(m, q, p, o) {
                            d.onload = d.onerror = d.ontimeout = function() {}
                            ;
                            d = undefined;
                            f(m, q, p, o)
                        }
                        d = new XDomainRequest();
                        d.open(e.type, e.url);
                        d.onload = function() {
                            h(200, "OK", {
                                text: d.responseText
                            }, "Content-Type: " + d.contentType)
                        }
                        ;
                        d.onerror = function() {
                            h(404, "Not Found")
                        }
                        ;
                        d.ontimeout = function() {
                            h(0, "timeout")
                        }
                        ;
                        if (e.xdrTimeout) {
                            d.timeout = e.xdrTimeout
                        } else {
                            d.timeout = 5000
                        }
                        d.onprogress = function() {}
                        ;
                        d.send((e.hasContent && e.data) || null )
                    },
                    abort: function() {
                        if (d) {
                            d.onerror = a.noop;
                            d.abort()
                        }
                    }
                }
            }
        })
    }
})(jQuery);
(function(d) {
    function a(e) {
        this.options = d.extend({}, a.defaults, e)
    }
    a.instances = [];
    a.repositionAll = function() {
        for (var f = 0; f < a.instances.length; f++) {
            if (!a.instances[f]) {
                continue
            }
            var e = a.instances[f].options;
            new a(e).positionImg(d(a.instances[f].target), d.data(a.instances[f].target, "busy"), e.position)
        }
    }
    ;
    a.prototype.hide = function(e) {
        e.each(function() {
            var g = d.data(this, "busy");
            if (g) {
                g.remove()
            }
            d(this).css("visibility", "");
            d.data(this, "busy", null );
            for (var f = 0; f < a.instances.length; f++) {
                if (a.instances[f] != null  && a.instances[f].target == this) {
                    a.instances[f] = null 
                }
            }
        })
    }
    ;
    a.prototype.show = function(e) {
        var f = this;
        e.each(function() {
            if (d.data(this, "busy")) {
                return
            }
            var h = d(this);
            var g = f.buildImg();
            g.css("visibility", "hidden");
            g.load(function() {
                f.positionImg(h, g, f.options.position);
                g.css("visibility", "")
            });
            d("body").append(g);
            if (f.options.hide) {
                h.css("visibility", "hidden")
            }
            d.data(this, "busy", g);
            a.instances.push({
                target: this,
                options: f.options
            })
        })
    }
    ;
    a.prototype.preload = function() {
        var e = this.buildImg();
        e.css("visibility", "hidden");
        e.load(function() {
            d(this).remove()
        });
        d("body").append(e)
    }
    ;
    a.prototype.buildImg = function() {
        var e = "<img src='" + this.options.img + "' alt='" + this.options.alt + "' title='" + this.options.title + "'";
        if (this.options.width) {
            e += " width='" + this.options.width + "'"
        }
        if (this.options.height) {
            e += " height='" + this.options.height + "'"
        }
        e += " />";
        return d(e)
    }
    ;
    a.prototype.positionImg = function(p, e, m) {
        var h = p.offset();
        var q = p.outerWidth();
        var o = p.outerHeight();
        var r = e.outerWidth();
        var u = e.outerHeight();
        if (m == "left") {
            var f = h.left - r - this.options.offset
        } else {
            if (m == "right") {
                var f = h.left + q + this.options.offset
            } else {
                var f = h.left + (q - r) / 2
            }
        }
        var g = h.top + (o - u) / 2;
        e.css("position", "absolute");
        e.css("left", f + "px");
        e.css("top", g + "px")
    }
    ;
    a.defaults = {
        img: "busy.gif",
        alt: "Please wait...",
        title: "Please wait...",
        hide: true,
        position: "center",
        zIndex: 1001,
        width: null ,
        height: null ,
        offset: 10
    };
    d.fn.busy = function(e, f) {
        if (d.inArray(e, ["clear", "hide", "remove"]) != -1) {
            new a(e).hide(d(this))
        } else {
            if (e == "defaults") {
                d.extend(a.defaults, f || {})
            } else {
                if (e == "preload") {
                    new a(e).preload()
                } else {
                    if (e == "reposition") {
                        a.repositionAll()
                    } else {
                        new a(e).show(d(this));
                        return d(this)
                    }
                }
            }
        }
    }
})(jQuery);
(function(a) {
    function d(e) {
        this.options = a.extend({}, d.defaults, e)
    }
    d.prototype.hide = function(e) {
        e.each(function() {
            var f = a.data(this, "loader");
            if (f) {
                f.remove()
            }
            a.data(this, "loader", null )
        })
    }
    ;
    d.prototype.show = function(e) {
        var f = this;
        e.each(function() {
            if (a.data(this, "loader")) {
                return
            }
            var h = (h ? h : "Loading...");
            var g = a("<div style='width:100%; text-align:center;' class='loader' ></div> ");
            g.html('<div style=\'margin:5px auto;\'><div class="loading" style="margin:0 auto;width:16px;height:16px" alt=\'' + h + "'></div></div>");
            var m = a(this);
            g.appendTo(m);
            a.data(this, "loader", g)
        })
    }
    ;
    a.fn.loader = function(e, f) {
        if (a.inArray(e, ["clear", "hide", "remove"]) != -1) {
            new d(e).hide(a(this));
            return a(this)
        } else {
            new d(e).show(a(this));
            return a(this)
        }
    }
})(window.jQuery || giscloud.exposeJQuery());
(function(g) {
    var h = {}
      , e = {}
      , q = {}
      , o = {}
      , u = {}
      , m = null ;
    function f(v, z) {
        if (v.height() && v.width()) {
            clearInterval(e[z]);
            clearTimeout(q[z]);
            delete e[z];
            delete q[z];
            delete o[z];
            h[z].resolveWith(v, [v[0]])
        }
    }
    function a(v) {
        console.log("timeout", v);
        if (e[v]) {
            clearInterval(e[v]);
            delete e[v];
            delete q[v];
            delete u[v];
            h[v].reject()
        }
    }
    function d(z, B) {
        var v = new g.Deferred();
        o[B] = function() {
            f(z, B)
        }
        ;
        u[B] = function() {
            a(B)
        }
        ;
        e[B] = setInterval(o[B], 100);
        q[B] = setTimeout(u[B], 5000);
        z.load(o[B]);
        h[B] = v;
        return h[B]
    }
    function p() {
        return g("<div/>", {
            id: "a" + Math.floor(Math.random() * 1000),
            css: {
                width: "1px",
                height: "1px",
                position: "absolute",
                top: "-5000px",
                left: "-5000px",
                overflow: "hidden"
            }
        }).appendTo("body")
    }
    function r(B) {
        var v, z = B && B.replace && B.replace(/[\W]+/g, "_");
        if (!z) {
            return null 
        }
        if (h[z]) {
            return h[z].promise()
        }
        if (!m) {
            m = p()
        }
        v = g("<img/>", {
            src: B
        }).appendTo(m);
        return d(v, z).promise()
    }
    g.loadImage = r;
    g.fn.loadImage = function(v) {
        if (!this.is("img")) {
            return null 
        }
        return r(this.attr("src") || v)
    }
}(jQuery));
(function(ac, aJ, aA, af, aF, ai) {
    var aK = this;
    var aC = Math.floor(Math.random() * 100) * 100;
    var az = Function.prototype;
    var Z = /^(http.?:\/\/([^\/\s]+))/;
    var Y = /[\-\w]+\/\.\.\//;
    var ak = /([^:])\/\//g;
    var ah = "";
    var aB = {};
    var ad = ac.easyXDM;
    var U = "easyXDM_";
    var al;
    function an(e, a) {
        var d = typeof e[a];
        return d == "function" || (!!(d == "object" && e[a])) || d == "unknown"
    }
    function av(d, a) {
        return !!(typeof (d[a]) == "object" && d[a])
    }
    function ay(a) {
        return Object.prototype.toString.call(a) === "[object Array]"
    }
    var au, ar;
    if (an(ac, "addEventListener")) {
        au = function(a, e, d) {
            a.addEventListener(e, d, false)
        }
        ;
        ar = function(a, e, d) {
            a.removeEventListener(e, d, false)
        }
    } else {
        if (an(ac, "attachEvent")) {
            au = function(e, a, d) {
                e.attachEvent("on" + a, d)
            }
            ;
            ar = function(e, a, d) {
                e.detachEvent("on" + a, d)
            }
        } else {
            throw new Error("Browser not supported")
        }
    }
    var S = false, ag = [], ae;
    if ("readyState" in aJ) {
        ae = aJ.readyState;
        S = ae == "complete" || (~navigator.userAgent.indexOf("AppleWebKit/") && (ae == "loaded" || ae == "interactive"))
    } else {
        S = !!aJ.body
    }
    function ax() {
        ax = az;
        S = true;
        for (var a = 0; a < ag.length; a++) {
            ag[a]()
        }
        ag.length = 0
    }
    if (!S) {
        if (an(ac, "addEventListener")) {
            au(aJ, "DOMContentLoaded", ax)
        } else {
            au(aJ, "readystatechange", function() {
                if (aJ.readyState == "complete") {
                    ax()
                }
            });
            if (aJ.documentElement.doScroll && ac === top) {
                (function aH() {
                    if (S) {
                        return
                    }
                    try {
                        aJ.documentElement.doScroll("left")
                    } catch (a) {
                        af(aH, 1);
                        return
                    }
                    ax()
                }())
            }
        }
        au(ac, "load", ax)
    }
    function aj(a, d) {
        if (S) {
            a.call(d);
            return
        }
        ag.push(function() {
            a.call(d)
        })
    }
    function aD() {
        var a = parent;
        if (ah !== "") {
            for (var e = 0, d = ah.split("."); e < d.length; e++) {
                a = a[d[e]]
            }
        }
        return a.easyXDM
    }
    function aI(a) {
        ac.easyXDM = ad;
        ah = a;
        if (ah) {
            U = "easyXDM_" + ah.replace(".", "_") + "_"
        }
        return aB
    }
    function aq(a) {
        return a.match(Z)[2]
    }
    function aG(a) {
        return a.match(Z)[1]
    }
    function ao(d) {
        d = d.replace(ak, "$1/");
        if (!d.match(/^(http||https):\/\//)) {
            var a = (d.substring(0, 1) === "/") ? "" : aA.pathname;
            if (a.substring(a.length - 1) !== "/") {
                a = a.substring(0, a.lastIndexOf("/") + 1)
            }
            d = aA.protocol + "//" + aA.host + a + d
        }
        while (Y.test(d)) {
            d = d.replace(Y, "")
        }
        return d
    }
    function aa(g, d) {
        var h = ""
          , e = g.indexOf("#");
        if (e !== -1) {
            h = g.substring(e);
            g = g.substring(0, e)
        }
        var a = [];
        for (var f in d) {
            if (d.hasOwnProperty(f)) {
                a.push(f + "=" + ai(d[f]))
            }
        }
        return g + ((g.indexOf("?") === -1) ? "?" : "&") + a.join("&") + h
    }
    var W = (function() {
        var d = {}, a, e = aA.search.substring(1).split("&"), f = e.length;
        while (f--) {
            a = e[f].split("=");
            d[a[0]] = aF(a[1])
        }
        return d
    }());
    function aw(a) {
        return typeof a === "undefined"
    }
    function ab() {
        var d = {};
        var a = {
            a: [1, 2, 3]
        }
          , e = '{"a":[1,2,3]}';
        if (JSON && typeof JSON.stringify === "function" && JSON.stringify(a).replace((/\s/g), "") === e) {
            return JSON
        }
        if (Object.toJSON) {
            if (Object.toJSON(a).replace((/\s/g), "") === e) {
                d.stringify = Object.toJSON
            }
        }
        if (typeof String.prototype.evalJSON === "function") {
            a = e.evalJSON();
            if (a.a && a.a.length === 3 && a.a[2] === 3) {
                d.parse = function(f) {
                    return f.evalJSON()
                }
            }
        }
        if (d.stringify && d.parse) {
            ab = function() {
                return d
            }
            ;
            return d
        }
        return null 
    }
    function V(g, f, e) {
        var a;
        for (var d in f) {
            if (f.hasOwnProperty(d)) {
                if (d in g) {
                    a = f[d];
                    if (typeof a === "object") {
                        V(g[d], a, e)
                    } else {
                        if (!e) {
                            g[d] = f[d]
                        }
                    }
                } else {
                    g[d] = f[d]
                }
            }
        }
        return g
    }
    function aL() {
        var a = aJ.createElement("iframe");
        a.name = U + "TEST";
        V(a.style, {
            position: "absolute",
            left: "-2000px",
            top: "0px"
        });
        aJ.body.appendChild(a);
        al = !(a.contentWindow === ac.frames[a.name]);
        aJ.body.removeChild(a)
    }
    function ap(d) {
        if (aw(al)) {
            aL()
        }
        var a;
        if (al) {
            a = aJ.createElement('<iframe name="' + d.props.name + '"/>')
        } else {
            a = aJ.createElement("IFRAME");
            a.name = d.props.name
        }
        a.id = a.name = d.props.name;
        delete d.props.name;
        if (d.onLoad) {
            au(a, "load", d.onLoad)
        }
        if (typeof d.container == "string") {
            d.container = aJ.getElementById(d.container)
        }
        if (!d.container) {
            a.style.position = "absolute";
            a.style.left = "-2000px";
            a.style.top = "0px";
            d.container = aJ.body
        }
        a.border = a.frameBorder = 0;
        d.container.insertBefore(a, d.container.firstChild);
        V(a, d.props);
        return a
    }
    function T(a, d) {
        if (typeof a == "string") {
            a = [a]
        }
        var e, f = a.length;
        while (f--) {
            e = a[f];
            e = new RegExp(e.substr(0, 1) == "^" ? e : ("^" + e.replace(/(\*)/g, ".$1").replace(/\?/g, ".") + "$"));
            if (e.test(d)) {
                return true
            }
        }
        return false
    }
    function aE(e) {
        var h = e.protocol, f;
        e.isHost = e.isHost || aw(W.xdm_p);
        if (!e.props) {
            e.props = {}
        }
        if (!e.isHost) {
            e.channel = W.xdm_c;
            e.secret = W.xdm_s;
            e.remote = W.xdm_e;
            h = W.xdm_p;
            if (e.acl && !T(e.acl, e.remote)) {
                throw new Error("Access denied for " + e.remote)
            }
        } else {
            e.remote = ao(e.remote);
            e.channel = e.channel || "default" + aC++;
            e.secret = Math.random().toString(16).substring(2);
            if (aw(h)) {
                if (aG(aA.href) == aG(e.remote)) {
                    h = "4"
                } else {
                    if (an(ac, "postMessage") || an(aJ, "postMessage")) {
                        h = "1"
                    } else {
                        if (an(ac, "ActiveXObject") && an(ac, "execScript")) {
                            h = "3"
                        } else {
                            if (navigator.product === "Gecko" && "frameElement" in ac && navigator.userAgent.indexOf("WebKit") == -1) {
                                h = "5"
                            } else {
                                if (e.remoteHelper) {
                                    e.remoteHelper = ao(e.remoteHelper);
                                    h = "2"
                                } else {
                                    h = "0"
                                }
                            }
                        }
                    }
                }
            }
        }
        switch (h) {
        case "0":
            V(e, {
                interval: 100,
                delay: 2000,
                useResize: true,
                useParent: false,
                usePolling: false
            }, true);
            if (e.isHost) {
                if (!e.local) {
                    var o = aA.protocol + "//" + aA.host, g = aJ.body.getElementsByTagName("img"), m;
                    var d = g.length;
                    while (d--) {
                        m = g[d];
                        if (m.src.substring(0, o.length) === o) {
                            e.local = m.src;
                            break
                        }
                    }
                    if (!e.local) {
                        e.local = ac
                    }
                }
                var a = {
                    xdm_c: e.channel,
                    xdm_p: 0
                };
                if (e.local === ac) {
                    e.usePolling = true;
                    e.useParent = true;
                    e.local = aA.protocol + "//" + aA.host + aA.pathname + aA.search;
                    a.xdm_e = e.local;
                    a.xdm_pa = 1
                } else {
                    a.xdm_e = ao(e.local)
                }
                if (e.container) {
                    e.useResize = false;
                    a.xdm_po = 1
                }
                e.remote = aa(e.remote, a)
            } else {
                V(e, {
                    channel: W.xdm_c,
                    remote: W.xdm_e,
                    useParent: !aw(W.xdm_pa),
                    usePolling: !aw(W.xdm_po),
                    useResize: e.useParent ? false : e.useResize
                })
            }
            f = [new aB.stack.HashTransport(e), new aB.stack.ReliableBehavior({}), new aB.stack.QueueBehavior({
                encode: true,
                maxLength: 4000 - e.remote.length
            }), new aB.stack.VerifyBehavior({
                initiate: e.isHost
            })];
            break;
        case "1":
            f = [new aB.stack.PostMessageTransport(e)];
            break;
        case "2":
            f = [new aB.stack.NameTransport(e), new aB.stack.QueueBehavior(), new aB.stack.VerifyBehavior({
                initiate: e.isHost
            })];
            break;
        case "3":
            f = [new aB.stack.NixTransport(e)];
            break;
        case "4":
            f = [new aB.stack.SameOriginTransport(e)];
            break;
        case "5":
            f = [new aB.stack.FrameElementTransport(e)];
            break
        }
        f.push(new aB.stack.QueueBehavior({
            lazy: e.lazy,
            remove: true
        }));
        return f
    }
    function am(d) {
        var a, e = {
            incoming: function(h, m) {
                this.up.incoming(h, m)
            },
            outgoing: function(m, h) {
                this.down.outgoing(m, h)
            },
            callback: function(h) {
                this.up.callback(h)
            },
            init: function() {
                this.down.init()
            },
            destroy: function() {
                this.down.destroy()
            }
        };
        for (var f = 0, g = d.length; f < g; f++) {
            a = d[f];
            V(a, e, true);
            if (f !== 0) {
                a.down = d[f - 1]
            }
            if (f !== g - 1) {
                a.up = d[f + 1]
            }
        }
        return a
    }
    function at(a) {
        a.up.down = a.down;
        a.down.up = a.up;
        a.up = a.down = null 
    }
    V(aB, {
        version: "2.4.10.103",
        query: W,
        stack: {},
        apply: V,
        getJSONObject: ab,
        whenReady: aj,
        noConflict: aI
    });
    aB.DomHelper = {
        on: au,
        un: ar,
        requiresJSON: function(a) {
            if (!av(ac, "JSON")) {
                aJ.write('<script type="text/javascript" src="' + a + '"><\/script>')
            }
        }
    };
    (function() {
        var a = {};
        aB.Fn = {
            set: function(e, d) {
                a[e] = d
            },
            get: function(e, f) {
                var d = a[e];
                if (f) {
                    delete a[e]
                }
                return d
            }
        }
    }());
    aB.Socket = function(d) {
        var e = am(aE(d).concat([{
            incoming: function(f, g) {
                d.onMessage(f, g)
            },
            callback: function(f) {
                if (d.onReady) {
                    d.onReady(f)
                }
            }
        }]))
          , a = aG(d.remote);
        this.origin = aG(d.remote);
        this.destroy = function() {
            e.destroy()
        }
        ;
        this.postMessage = function(f) {
            e.outgoing(f, a)
        }
        ;
        e.init()
    }
    ;
    aB.Rpc = function(e, f) {
        if (f.local) {
            for (var a in f.local) {
                if (f.local.hasOwnProperty(a)) {
                    var d = f.local[a];
                    if (typeof d === "function") {
                        f.local[a] = {
                            method: d
                        }
                    }
                }
            }
        }
        var g = am(aE(e).concat([new aB.stack.RpcBehavior(this,f), {
            callback: function(h) {
                if (e.onReady) {
                    e.onReady(h)
                }
            }
        }]));
        this.origin = aG(e.remote);
        this.destroy = function() {
            g.destroy()
        }
        ;
        g.init()
    }
    ;
    aB.stack.SameOriginTransport = function(f) {
        var e, a, d, g;
        return ( e = {
            outgoing: function(m, h, o) {
                d(m);
                if (o) {
                    o()
                }
            },
            destroy: function() {
                if (a) {
                    a.parentNode.removeChild(a);
                    a = null 
                }
            },
            onDOMReady: function() {
                g = aG(f.remote);
                if (f.isHost) {
                    V(f.props, {
                        src: aa(f.remote, {
                            xdm_e: aA.protocol + "//" + aA.host + aA.pathname,
                            xdm_c: f.channel,
                            xdm_p: 4
                        }),
                        name: U + f.channel + "_provider"
                    });
                    a = ap(f);
                    aB.Fn.set(f.channel, function(h) {
                        d = h;
                        af(function() {
                            e.up.callback(true)
                        }, 0);
                        return function(m) {
                            e.up.incoming(m, g)
                        }
                    })
                } else {
                    d = aD().Fn.get(f.channel, true)(function(h) {
                        e.up.incoming(h, g)
                    });
                    af(function() {
                        e.up.callback(true)
                    }, 0)
                }
            },
            init: function() {
                aj(e.onDOMReady, e)
            }
        }) 
    }
    ;
    aB.stack.PostMessageTransport = function(d) {
        var m, h, f, e;
        function g(o) {
            if (o.origin) {
                return o.origin
            }
            if (o.uri) {
                return aG(o.uri)
            }
            if (o.domain) {
                return aA.protocol + "//" + o.domain
            }
            throw "Unable to retrieve the origin of the event"
        }
        function a(p) {
            var o = g(p);
            if (o == e && p.data.substring(0, d.channel.length + 1) == d.channel + " ") {
                m.up.incoming(p.data.substring(d.channel.length + 1), o)
            }
        }
        return ( m = {
            outgoing: function(q, o, p) {
                f.postMessage(d.channel + " " + q, o || e);
                if (p) {
                    p()
                }
            },
            destroy: function() {
                ar(ac, "message", a);
                if (h) {
                    f = null ;
                    h.parentNode.removeChild(h);
                    h = null 
                }
            },
            onDOMReady: function() {
                e = aG(d.remote);
                if (d.isHost) {
                    au(ac, "message", function o(p) {
                        if (p.data == d.channel + "-ready") {
                            f = ("postMessage" in h.contentWindow) ? h.contentWindow : h.contentWindow.document;
                            ar(ac, "message", o);
                            au(ac, "message", a);
                            af(function() {
                                m.up.callback(true)
                            }, 0)
                        }
                    });
                    V(d.props, {
                        src: aa(d.remote, {
                            xdm_e: aA.protocol + "//" + aA.host,
                            xdm_c: d.channel,
                            xdm_p: 1
                        }),
                        name: U + d.channel + "_provider"
                    });
                    h = ap(d)
                } else {
                    au(ac, "message", a);
                    f = ("postMessage" in ac.parent) ? ac.parent : ac.parent.document;
                    f.postMessage(d.channel + "-ready", e);
                    af(function() {
                        m.up.callback(true)
                    }, 0)
                }
            },
            init: function() {
                aj(m.onDOMReady, m)
            }
        }) 
    }
    ;
    aB.stack.FrameElementTransport = function(f) {
        var e, a, d, g;
        return ( e = {
            outgoing: function(m, h, o) {
                d.call(this, m);
                if (o) {
                    o()
                }
            },
            destroy: function() {
                if (a) {
                    a.parentNode.removeChild(a);
                    a = null 
                }
            },
            onDOMReady: function() {
                g = aG(f.remote);
                if (f.isHost) {
                    V(f.props, {
                        src: aa(f.remote, {
                            xdm_e: aA.protocol + "//" + aA.host + aA.pathname + aA.search,
                            xdm_c: f.channel,
                            xdm_p: 5
                        }),
                        name: U + f.channel + "_provider"
                    });
                    a = ap(f);
                    a.fn = function(h) {
                        delete a.fn;
                        d = h;
                        af(function() {
                            e.up.callback(true)
                        }, 0);
                        return function(m) {
                            e.up.incoming(m, g)
                        }
                    }
                } else {
                    ac.parent.location = W.xdm_e + "#";
                    d = ac.frameElement.fn(function(h) {
                        e.up.incoming(h, g)
                    });
                    e.up.callback(true)
                }
            },
            init: function() {
                aj(e.onDOMReady, e)
            }
        }) 
    }
    ;
    aB.stack.NixTransport = function(f) {
        var d, h, a, g, e;
        return ( d = {
            outgoing: function(o, m, p) {
                a(o);
                if (p) {
                    p()
                }
            },
            destroy: function() {
                e = null ;
                if (h) {
                    h.parentNode.removeChild(h);
                    h = null 
                }
            },
            onDOMReady: function() {
                g = aG(f.remote);
                if (f.isHost) {
                    try {
                        if (!an(ac, "getNixProxy")) {
                            ac.execScript("Class NixProxy\n    Private m_parent, m_child, m_Auth\n\n    Public Sub SetParent(obj, auth)\n        If isEmpty(m_Auth) Then m_Auth = auth\n        SET m_parent = obj\n    End Sub\n    Public Sub SetChild(obj)\n        SET m_child = obj\n        m_parent.ready()\n    End Sub\n\n    Public Sub SendToParent(data, auth)\n        If m_Auth = auth Then m_parent.send(CStr(data))\n    End Sub\n    Public Sub SendToChild(data, auth)\n        If m_Auth = auth Then m_child.send(CStr(data))\n    End Sub\nEnd Class\nFunction getNixProxy()\n    Set GetNixProxy = New NixProxy\nEnd Function\n", "vbscript")
                        }
                        e = getNixProxy();
                        e.SetParent({
                            send: function(p) {
                                d.up.incoming(p, g)
                            },
                            ready: function() {
                                af(function() {
                                    d.up.callback(true)
                                }, 0)
                            }
                        }, f.secret);
                        a = function(p) {
                            e.SendToChild(p, f.secret)
                        }
                    } catch (m) {
                        throw new Error("Could not set up VBScript NixProxy:" + m.message)
                    }
                    V(f.props, {
                        src: aa(f.remote, {
                            xdm_e: aA.protocol + "//" + aA.host + aA.pathname + aA.search,
                            xdm_c: f.channel,
                            xdm_s: f.secret,
                            xdm_p: 3
                        }),
                        name: U + f.channel + "_provider"
                    });
                    h = ap(f);
                    h.contentWindow.opener = e
                } else {
                    ac.parent.location = W.xdm_e + "#";
                    try {
                        e = ac.opener
                    } catch (o) {
                        throw new Error("Cannot access window.opener")
                    }
                    e.SetChild({
                        send: function(p) {
                            aK.setTimeout(function() {
                                d.up.incoming(p, g)
                            }, 0)
                        }
                    });
                    a = function(p) {
                        e.SendToParent(p, f.secret)
                    }
                    ;
                    af(function() {
                        d.up.callback(true)
                    }, 0)
                }
            },
            init: function() {
                aj(d.onDOMReady, d)
            }
        }) 
    }
    ;
    aB.stack.NameTransport = function(g) {
        var f;
        var d, r, h, v, u, o, p;
        function a(z) {
            var B = g.remoteHelper + (d ? "#_3" : "#_2") + g.channel;
            r.contentWindow.sendMessage(z, B)
        }
        function e() {
            if (d) {
                if (++v === 2 || !d) {
                    f.up.callback(true)
                }
            } else {
                a("ready");
                f.up.callback(true)
            }
        }
        function q(z) {
            f.up.incoming(z, o)
        }
        function m() {
            if (u) {
                af(function() {
                    u(true)
                }, 0)
            }
        }
        return ( f = {
            outgoing: function(B, z, C) {
                u = C;
                a(B)
            },
            destroy: function() {
                r.parentNode.removeChild(r);
                r = null ;
                if (d) {
                    h.parentNode.removeChild(h);
                    h = null 
                }
            },
            onDOMReady: function() {
                d = g.isHost;
                v = 0;
                o = aG(g.remote);
                g.local = ao(g.local);
                if (d) {
                    aB.Fn.set(g.channel, function(B) {
                        if (d && B === "ready") {
                            aB.Fn.set(g.channel, q);
                            e()
                        }
                    });
                    p = aa(g.remote, {
                        xdm_e: g.local,
                        xdm_c: g.channel,
                        xdm_p: 2
                    });
                    V(g.props, {
                        src: p + "#" + g.channel,
                        name: U + g.channel + "_provider"
                    });
                    h = ap(g)
                } else {
                    g.remoteHelper = g.remote;
                    aB.Fn.set(g.channel, q)
                }
                r = ap({
                    props: {
                        src: g.local + "#_4" + g.channel
                    },
                    onLoad: function z() {
                        ar(r, "load", z);
                        aB.Fn.set(g.channel + "_load", m);
                        (function B() {
                            if (typeof r.contentWindow.sendMessage == "function") {
                                e()
                            } else {
                                af(B, 50)
                            }
                        }())
                    }
                })
            },
            init: function() {
                aj(f.onDOMReady, f)
            }
        }) 
    }
    ;
    aB.stack.HashTransport = function(m) {
        var f;
        var B = this, a, h, p, e, q, g, r;
        var C, o;
        function u(E) {
            if (!r) {
                return
            }
            var D = m.remote + "#" + (q++) + "_" + E;
            ((a || !C) ? r.contentWindow : r).location = D
        }
        function d(D) {
            e = D;
            f.up.incoming(e.substring(e.indexOf("_") + 1), o)
        }
        function v() {
            if (!g) {
                return
            }
            var D = g.location.href
              , E = ""
              , F = D.indexOf("#");
            if (F != -1) {
                E = D.substring(F)
            }
            if (E && E != e) {
                d(E)
            }
        }
        function z() {
            h = setInterval(v, p)
        }
        return ( f = {
            outgoing: function(D, E) {
                u(D)
            },
            destroy: function() {
                ac.clearInterval(h);
                if (a || !C) {
                    r.parentNode.removeChild(r)
                }
                r = null 
            },
            onDOMReady: function() {
                a = m.isHost;
                p = m.interval;
                e = "#" + m.channel;
                q = 0;
                C = m.useParent;
                o = aG(m.remote);
                if (a) {
                    m.props = {
                        src: m.remote,
                        name: U + m.channel + "_provider"
                    };
                    if (C) {
                        m.onLoad = function() {
                            g = ac;
                            z();
                            f.up.callback(true)
                        }
                    } else {
                        var E = 0
                          , D = m.delay / 50;
                        (function F() {
                            if (++E > D) {
                                throw new Error("Unable to reference listenerwindow")
                            }
                            try {
                                g = r.contentWindow.frames[U + m.channel + "_consumer"]
                            } catch (G) {}
                            if (g) {
                                z();
                                f.up.callback(true)
                            } else {
                                af(F, 50)
                            }
                        }())
                    }
                    r = ap(m)
                } else {
                    g = ac;
                    z();
                    if (C) {
                        r = parent;
                        f.up.callback(true)
                    } else {
                        V(m, {
                            props: {
                                src: m.remote + "#" + m.channel + new Date(),
                                name: U + m.channel + "_consumer"
                            },
                            onLoad: function() {
                                f.up.callback(true)
                            }
                        });
                        r = ap(m)
                    }
                }
            },
            init: function() {
                aj(f.onDOMReady, f)
            }
        }) 
    }
    ;
    aB.stack.ReliableBehavior = function(f) {
        var d, h;
        var a = 0
          , g = 0
          , e = "";
        return ( d = {
            incoming: function(p, q) {
                var o = p.indexOf("_")
                  , m = p.substring(0, o).split(",");
                p = p.substring(o + 1);
                if (m[0] == a) {
                    e = "";
                    if (h) {
                        h(true)
                    }
                }
                if (p.length > 0) {
                    d.down.outgoing(m[1] + "," + a + "_" + e, q);
                    if (g != m[1]) {
                        g = m[1];
                        d.up.incoming(p, q)
                    }
                }
            },
            outgoing: function(o, p, m) {
                e = o;
                h = m;
                d.down.outgoing(g + "," + (++a) + "_" + o, p)
            }
        }) 
    }
    ;
    aB.stack.QueueBehavior = function(m) {
        var f, e = [], q = true, h = "", a, p = 0, o = false, g = false;
        function d() {
            if (m.remove && e.length === 0) {
                at(f);
                return
            }
            if (q || e.length === 0 || a) {
                return
            }
            q = true;
            var r = e.shift();
            f.down.outgoing(r.data, r.origin, function(u) {
                q = false;
                if (r.callback) {
                    af(function() {
                        r.callback(u)
                    }, 0)
                }
                d()
            })
        }
        return ( f = {
            init: function() {
                if (aw(m)) {
                    m = {}
                }
                if (m.maxLength) {
                    p = m.maxLength;
                    g = true
                }
                if (m.lazy) {
                    o = true
                } else {
                    f.down.init()
                }
            },
            callback: function(r) {
                q = false;
                var u = f.up;
                d();
                u.callback(r)
            },
            incoming: function(r, v) {
                if (g) {
                    var u = r.indexOf("_")
                      , z = parseInt(r.substring(0, u), 10);
                    h += r.substring(u + 1);
                    if (z === 0) {
                        if (m.encode) {
                            h = aF(h)
                        }
                        f.up.incoming(h, v);
                        h = ""
                    }
                } else {
                    f.up.incoming(r, v)
                }
            },
            outgoing: function(r, z, u) {
                if (m.encode) {
                    r = ai(r)
                }
                var B = [], v;
                if (g) {
                    while (r.length !== 0) {
                        v = r.substring(0, p);
                        r = r.substring(v.length);
                        B.push(v)
                    }
                    while ((v = B.shift()) ) {
                        e.push({
                            data: B.length + "_" + v,
                            origin: z,
                            callback: B.length === 0 ? u : null 
                        })
                    }
                } else {
                    e.push({
                        data: r,
                        origin: z,
                        callback: u
                    })
                }
                if (o) {
                    f.down.init()
                } else {
                    d()
                }
            },
            destroy: function() {
                a = true;
                f.down.destroy()
            }
        }) 
    }
    ;
    aB.stack.VerifyBehavior = function(a) {
        var h, d, f, e = false;
        function g() {
            d = Math.random().toString(16).substring(2);
            h.down.outgoing(d)
        }
        return ( h = {
            incoming: function(o, p) {
                var m = o.indexOf("_");
                if (m === -1) {
                    if (o === d) {
                        h.up.callback(true)
                    } else {
                        if (!f) {
                            f = o;
                            if (!a.initiate) {
                                g()
                            }
                            h.down.outgoing(o)
                        }
                    }
                } else {
                    if (o.substring(0, m) === f) {
                        h.up.incoming(o.substring(m + 1), p)
                    }
                }
            },
            outgoing: function(o, p, m) {
                h.down.outgoing(d + "_" + o, p, m)
            },
            callback: function(m) {
                if (a.initiate) {
                    g()
                }
            }
        }) 
    }
    ;
    aB.stack.RpcBehavior = function(e, o) {
        var h, a = o.serializer || ab();
        var d = 0
          , f = {};
        function p(q) {
            q.jsonrpc = "2.0";
            h.down.outgoing(a.stringify(q))
        }
        function g(u, q) {
            var r = Array.prototype.slice;
            return function() {
                var B = arguments.length, v, z = {
                    method: q
                };
                if (B > 0 && typeof arguments[B - 1] === "function") {
                    if (B > 1 && typeof arguments[B - 2] === "function") {
                        v = {
                            success: arguments[B - 2],
                            error: arguments[B - 1]
                        };
                        z.params = r.call(arguments, 0, B - 2)
                    } else {
                        v = {
                            success: arguments[B - 1]
                        };
                        z.params = r.call(arguments, 0, B - 1)
                    }
                    f["" + (++d)] = v;
                    z.id = d
                } else {
                    z.params = r.call(arguments, 0)
                }
                if (u.namedParams && z.params.length === 1) {
                    z.params = z.params[0]
                }
                p(z)
            }
        }
        function m(q, r, B, u) {
            if (!B) {
                if (r) {
                    p({
                        id: r,
                        error: {
                            code: -32601,
                            message: "Procedure not found."
                        }
                    })
                }
                return
            }
            var v, C;
            if (r) {
                v = function(E) {
                    v = az;
                    p({
                        id: r,
                        result: E
                    })
                }
                ;
                C = function(G, F) {
                    C = az;
                    var E = {
                        id: r,
                        error: {
                            code: -32099,
                            message: G
                        }
                    };
                    if (F) {
                        E.error.data = F
                    }
                    p(E)
                }
            } else {
                v = C = az
            }
            if (!ay(u)) {
                u = [u]
            }
            try {
                var D = B.method.apply(B.scope, u.concat([v, C]));
                if (!aw(D)) {
                    v(D)
                }
            } catch (z) {
                C(z.message)
            }
        }
        return ( h = {
            incoming: function(u, v) {
                var r = a.parse(u);
                if (r.method) {
                    if (o.handle) {
                        o.handle(r, p)
                    } else {
                        m(r.method, r.id, o.local[r.method], r.params)
                    }
                } else {
                    var q = f[r.id];
                    if (r.error) {
                        if (q.error) {
                            q.error(r.error)
                        }
                    } else {
                        if (q.success) {
                            q.success(r.result)
                        }
                    }
                    delete f[r.id]
                }
            },
            init: function() {
                if (o.remote) {
                    for (var q in o.remote) {
                        if (o.remote.hasOwnProperty(q)) {
                            e[q] = g(o.remote[q], q)
                        }
                    }
                }
                h.down.init()
            },
            destroy: function() {
                for (var q in o.remote) {
                    if (o.remote.hasOwnProperty(q) && e.hasOwnProperty(q)) {
                        delete e[q]
                    }
                }
                h.down.destroy()
            }
        }) 
    }
    ;
    aK.easyXDM = aB
})(window, document, location, window.setTimeout, decodeURIComponent, encodeURIComponent);
(function(a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            a(require("jquery"))
        } else {
            a(jQuery)
        }
    }
}(function(p, g) {
    /*!
 * jsTree 3.0.0
 * http://jstree.com/
 *
 * Copyright (c) 2013 Ivan Bozhanov (http://vakata.com)
 *
 * Licensed same as jquery - under the terms of the MIT License
 *   http://www.opensource.org/licenses/mit-license.php
 */
    /*!
 * if using jslint please allow for the jQuery global and use following options: 
 * jslint: browser: true, ass: true, bitwise: true, continue: true, nomen: true, plusplus: true, regexp: true, unparam: true, todo: true, white: true
 */
    if (p.jstree) {
        return
    }
    var e = 0, f = false, r = false, q = false, v = [], a = p("script:last").attr("src"), u = document, B = u.createElement("LI"), m, h;
    B.setAttribute("role", "treeitem");
    m = u.createElement("I");
    m.className = "jstree-icon jstree-ocl";
    B.appendChild(m);
    m = u.createElement("A");
    m.className = "jstree-anchor";
    m.setAttribute("href", "#");
    h = u.createElement("I");
    h.className = "jstree-icon jstree-themeicon";
    m.appendChild(h);
    B.appendChild(m);
    m = h = null ;
    p.jstree = {
        version: "3.0.0",
        defaults: {
            plugins: []
        },
        plugins: {},
        path: a && a.indexOf("/") !== -1 ? a.replace(/\/[^\/]+$/, "") : "",
        idregex: /[\\:&'".,=\- \/]/g
    };
    p.jstree.create = function(F, C) {
        var E = new p.jstree.core(++e)
          , D = C;
        C = p.extend(true, {}, p.jstree.defaults, C);
        if (D && D.plugins) {
            C.plugins = D.plugins
        }
        p.each(C.plugins, function(H, G) {
            if (H !== "core") {
                E = E.plugin(G, C[G])
            }
        });
        E.init(F, C);
        return E
    }
    ;
    p.jstree.core = function(C) {
        this._id = C;
        this._cnt = 0;
        this._data = {
            core: {
                themes: {
                    name: false,
                    dots: false,
                    icons: false
                },
                selected: [],
                last_error: {}
            }
        }
    }
    ;
    p.jstree.reference = function(E) {
        var C = null 
          , D = null ;
        if (E && E.id) {
            E = E.id
        }
        if (!D || !D.length) {
            try {
                D = p(E)
            } catch (F) {}
        }
        if (!D || !D.length) {
            try {
                D = p("#" + E.replace(p.jstree.idregex, "\\$&"))
            } catch (F) {}
        }
        if (D && D.length && (D = D.closest(".jstree")).length && (D = D.data("jstree"))) {
            C = D
        } else {
            p(".jstree").each(function() {
                var G = p(this).data("jstree");
                if (G && G._model.data[E]) {
                    C = G;
                    return false
                }
            })
        }
        return C
    }
    ;
    p.fn.jstree = function(D) {
        var F = (typeof D === "string")
          , E = Array.prototype.slice.call(arguments, 1)
          , C = null ;
        this.each(function() {
            var G = p.jstree.reference(this)
              , H = F && G ? G[D] : null ;
            C = F && H ? H.apply(G, E) : null ;
            if (!G && !F && (D === g || p.isPlainObject(D))) {
                p(this).data("jstree", new p.jstree.create(this,D))
            }
            if ((G && !F) || D === true) {
                C = G || false
            }
            if (C !== null  && C !== g) {
                return false
            }
        });
        return C !== null  && C !== g ? C : this
    }
    ;
    p.expr[":"].jstree = p.expr.createPseudo(function(C) {
        return function(D) {
            return p(D).hasClass("jstree") && p(D).data("jstree") !== g
        }
    });
    p.jstree.defaults.core = {
        data: false,
        strings: false,
        check_callback: false,
        error: p.noop,
        animation: 200,
        multiple: true,
        themes: {
            name: false,
            url: false,
            dir: false,
            dots: true,
            icons: true,
            stripes: false,
            variant: false,
            responsive: true
        },
        expand_selected_onload: true
    };
    p.jstree.core.prototype = {
        plugin: function(E, D) {
            var C = p.jstree.plugins[E];
            if (C) {
                this._data[E] = {};
                C.prototype = this;
                return new C(D,this)
            }
            return this
        },
        init: function(D, C) {
            this._model = {
                data: {
                    "#": {
                        id: "#",
                        parent: null ,
                        parents: [],
                        children: [],
                        children_d: [],
                        state: {
                            loaded: false
                        }
                    }
                },
                changed: [],
                force_full_redraw: false,
                redraw_timeout: false,
                default_state: {
                    loaded: true,
                    opened: false,
                    selected: false,
                    disabled: false
                }
            };
            this.element = p(D).addClass("jstree jstree-" + this._id);
            this.settings = C;
            this.element.bind("destroyed", p.proxy(this.teardown, this));
            this._data.core.ready = false;
            this._data.core.loaded = false;
            this._data.core.rtl = (this.element.css("direction") === "rtl");
            this.element[this._data.core.rtl ? "addClass" : "removeClass"]("jstree-rtl");
            this.element.attr("role", "tree");
            this.bind();
            this.trigger("init");
            this._data.core.original_container_html = this.element.find(" > ul > li").clone(true);
            this._data.core.original_container_html.find("li").addBack().contents().filter(function() {
                return this.nodeType === 3 && (!this.nodeValue || /^\s+$/.test(this.nodeValue))
            }).remove();
            this.element.html("<ul class='jstree-container-ul jstree-children'><li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>" + this.get_string("Loading ...") + "</a></li></ul>");
            this._data.core.li_height = this.get_container_ul().children("li:eq(0)").height() || 18;
            this.trigger("loading");
            this.load_node("#")
        },
        destroy: function() {
            this.element.unbind("destroyed", this.teardown);
            this.teardown()
        },
        teardown: function() {
            this.unbind();
            this.element.removeClass("jstree").removeData("jstree").find("[class^='jstree']").addBack().attr("class", function() {
                return this.className.replace(/jstree[^ ]*|$/ig, "")
            });
            this.element = null 
        },
        bind: function() {
            this.element.on("dblclick.jstree", function() {
                if (document.selection && document.selection.empty) {
                    document.selection.empty()
                } else {
                    if (window.getSelection) {
                        var C = window.getSelection();
                        try {
                            C.removeAllRanges();
                            C.collapse()
                        } catch (D) {}
                    }
                }
            }).on("click.jstree", ".jstree-ocl", p.proxy(function(C) {
                this.toggle_node(C.target)
            }, this)).on("click.jstree", ".jstree-anchor", p.proxy(function(C) {
                C.preventDefault();
                p(C.currentTarget).focus();
                this.activate_node(C.currentTarget, C)
            }, this)).on("keydown.jstree", ".jstree-anchor", p.proxy(function(C) {
                if (C.target.tagName === "INPUT") {
                    return true
                }
                var D = null ;
                switch (C.which) {
                case 13:
                case 32:
                    C.type = "click";
                    p(C.currentTarget).trigger(C);
                    break;
                case 37:
                    C.preventDefault();
                    if (this.is_open(C.currentTarget)) {
                        this.close_node(C.currentTarget)
                    } else {
                        D = this.get_prev_dom(C.currentTarget);
                        if (D && D.length) {
                            D.children(".jstree-anchor").focus()
                        }
                    }
                    break;
                case 38:
                    C.preventDefault();
                    D = this.get_prev_dom(C.currentTarget);
                    if (D && D.length) {
                        D.children(".jstree-anchor").focus()
                    }
                    break;
                case 39:
                    C.preventDefault();
                    if (this.is_closed(C.currentTarget)) {
                        this.open_node(C.currentTarget, function(E) {
                            this.get_node(E, true).children(".jstree-anchor").focus()
                        })
                    } else {
                        D = this.get_next_dom(C.currentTarget);
                        if (D && D.length) {
                            D.children(".jstree-anchor").focus()
                        }
                    }
                    break;
                case 40:
                    C.preventDefault();
                    D = this.get_next_dom(C.currentTarget);
                    if (D && D.length) {
                        D.children(".jstree-anchor").focus()
                    }
                    break;
                case 46:
                    C.preventDefault();
                    D = this.get_node(C.currentTarget);
                    if (D && D.id && D.id !== "#") {
                        D = this.is_selected(D) ? this.get_selected() : D
                    }
                    break;
                case 113:
                    C.preventDefault();
                    D = this.get_node(C.currentTarget);
                    /*!
								if(o && o.id && o.id !== '#') {
									// this.edit(o);
								}
								*/
                    break;
                default:
                    break
                }
            }, this)).on("load_node.jstree", p.proxy(function(G, F) {
                if (F.status) {
                    if (F.node.id === "#" && !this._data.core.loaded) {
                        this._data.core.loaded = true;
                        this.trigger("loaded")
                    }
                    if (!this._data.core.ready && !this.get_container_ul().find(".jstree-loading:eq(0)").length) {
                        this._data.core.ready = true;
                        if (this._data.core.selected.length) {
                            if (this.settings.core.expand_selected_onload) {
                                var E = [], D, C;
                                for (D = 0,
                                C = this._data.core.selected.length; D < C; D++) {
                                    E = E.concat(this._model.data[this._data.core.selected[D]].parents)
                                }
                                E = p.vakata.array_unique(E);
                                for (D = 0,
                                C = E.length; D < C; D++) {
                                    this.open_node(E[D], false, 0)
                                }
                            }
                            this.trigger("changed", {
                                action: "ready",
                                selected: this._data.core.selected
                            })
                        }
                        setTimeout(p.proxy(function() {
                            this.trigger("ready")
                        }, this), 0)
                    }
                }
            }, this)).on("init.jstree", p.proxy(function() {
                var C = this.settings.core.themes;
                this._data.core.themes.dots = C.dots;
                this._data.core.themes.stripes = C.stripes;
                this._data.core.themes.icons = C.icons;
                this.set_theme(C.name || "default", C.url);
                this.set_theme_variant(C.variant)
            }, this)).on("loading.jstree", p.proxy(function() {
                this[this._data.core.themes.dots ? "show_dots" : "hide_dots"]();
                this[this._data.core.themes.icons ? "show_icons" : "hide_icons"]();
                this[this._data.core.themes.stripes ? "show_stripes" : "hide_stripes"]()
            }, this)).on("focus.jstree", ".jstree-anchor", p.proxy(function(C) {
                this.element.find(".jstree-hovered").not(C.currentTarget).mouseleave();
                p(C.currentTarget).mouseenter()
            }, this)).on("mouseenter.jstree", ".jstree-anchor", p.proxy(function(C) {
                this.hover_node(C.currentTarget)
            }, this)).on("mouseleave.jstree", ".jstree-anchor", p.proxy(function(C) {
                this.dehover_node(C.currentTarget)
            }, this))
        },
        unbind: function() {
            this.element.off(".jstree");
            p(document).off(".jstree-" + this._id)
        },
        trigger: function(C, D) {
            if (!D) {
                D = {}
            }
            D.instance = this;
            this.element.triggerHandler(C.replace(".jstree", "") + ".jstree", D)
        },
        get_container: function() {
            return this.element
        },
        get_container_ul: function() {
            return this.element.children(".jstree-children:eq(0)")
        },
        get_string: function(D) {
            var C = this.settings.core.strings;
            if (p.isFunction(C)) {
                return C.call(this, D)
            }
            if (C && C[D]) {
                return C[D]
            }
            return D
        },
        _firstChild: function(C) {
            C = C ? C.firstChild : null ;
            while (C !== null  && C.nodeType !== 1) {
                C = C.nextSibling
            }
            return C
        },
        _nextSibling: function(C) {
            C = C ? C.nextSibling : null ;
            while (C !== null  && C.nodeType !== 1) {
                C = C.nextSibling
            }
            return C
        },
        _previousSibling: function(C) {
            C = C ? C.previousSibling : null ;
            while (C !== null  && C.nodeType !== 1) {
                C = C.previousSibling
            }
            return C
        },
        get_node: function(E, C) {
            if (E && E.id) {
                E = E.id
            }
            var F;
            try {
                if (this._model.data[E]) {
                    E = this._model.data[E]
                } else {
                    if (((F = p(E, this.element)).length || (F = p("#" + E.replace(p.jstree.idregex, "\\$&"), this.element)).length) && this._model.data[F.closest(".jstree-node").attr("id")]) {
                        E = this._model.data[F.closest(".jstree-node").attr("id")]
                    } else {
                        if ((F = p(E, this.element)).length && F.hasClass("jstree")) {
                            E = this._model.data["#"]
                        } else {
                            return false
                        }
                    }
                }
                if (C) {
                    E = E.id === "#" ? this.element : p("#" + E.id.replace(p.jstree.idregex, "\\$&"), this.element)
                }
                return E
            } catch (D) {
                return false
            }
        },
        get_path: function(H, F, E) {
            H = H.parents ? H : this.get_node(H);
            if (!H || H.id === "#" || !H.parents) {
                return false
            }
            var D, C, G = [];
            G.push(E ? H.id : H.text);
            for (D = 0,
            C = H.parents.length; D < C; D++) {
                G.push(E ? H.parents[D] : this.get_text(H.parents[D]))
            }
            G = G.reverse().slice(1);
            return F ? G.join(F) : G
        },
        get_next_dom: function(E, C) {
            var D;
            E = this.get_node(E, true);
            if (E[0] === this.element[0]) {
                D = this._firstChild(this.get_container_ul()[0]);
                return D ? p(D) : false
            }
            if (!E || !E.length) {
                return false
            }
            if (C) {
                D = this._nextSibling(E[0]);
                return D ? p(D) : false
            }
            if (E.hasClass("jstree-open")) {
                D = this._firstChild(E.children(".jstree-children")[0]);
                return D ? p(D) : false
            }
            if ((D = this._nextSibling(E[0])) !== null ) {
                return p(D)
            }
            return E.parentsUntil(".jstree", ".jstree-node").next(".jstree-node").eq(0)
        },
        get_prev_dom: function(E, C) {
            var D;
            E = this.get_node(E, true);
            if (E[0] === this.element[0]) {
                D = this.get_container_ul()[0].lastChild;
                return D ? p(D) : false
            }
            if (!E || !E.length) {
                return false
            }
            if (C) {
                D = this._previousSibling(E[0]);
                return D ? p(D) : false
            }
            if ((D = this._previousSibling(E[0])) !== null ) {
                E = p(D);
                while (E.hasClass("jstree-open")) {
                    E = E.children(".jstree-children:eq(0)").children(".jstree-node:last")
                }
                return E
            }
            D = E[0].parentNode.parentNode;
            return D && D.className && D.className.indexOf("jstree-node") !== -1 ? p(D) : false
        },
        get_parent: function(C) {
            C = this.get_node(C);
            if (!C || C.id === "#") {
                return false
            }
            return C.parent
        },
        get_children_dom: function(C) {
            C = this.get_node(C, true);
            if (C[0] === this.element[0]) {
                return this.get_container_ul().children(".jstree-node")
            }
            if (!C || !C.length) {
                return false
            }
            return C.children(".jstree-children").children(".jstree-node")
        },
        is_parent: function(C) {
            C = this.get_node(C);
            return C && (C.state.loaded === false || C.children.length > 0)
        },
        is_loaded: function(C) {
            C = this.get_node(C);
            return C && C.state.loaded
        },
        is_loading: function(C) {
            C = this.get_node(C);
            return C && C.state && C.state.loading
        },
        is_open: function(C) {
            C = this.get_node(C);
            return C && C.state.opened
        },
        is_closed: function(C) {
            C = this.get_node(C);
            return C && this.is_parent(C) && !C.state.opened
        },
        is_leaf: function(C) {
            return !this.is_parent(C)
        },
        load_node: function(F, K) {
            var I, H, D, C, G, E, J;
            if (p.isArray(F)) {
                F = F.slice();
                for (I = 0,
                H = F.length; I < H; I++) {
                    this.load_node(F[I], K)
                }
                return true
            }
            F = this.get_node(F);
            if (!F) {
                if (K) {
                    K.call(this, F, false)
                }
                return false
            }
            if (F.state.loaded) {
                F.state.loaded = false;
                for (D = 0,
                C = F.children_d.length; D < C; D++) {
                    for (G = 0,
                    E = F.parents.length; G < E; G++) {
                        this._model.data[F.parents[G]].children_d = p.vakata.array_remove_item(this._model.data[F.parents[G]].children_d, F.children_d[D])
                    }
                    if (this._model.data[F.children_d[D]].state.selected) {
                        J = true;
                        this._data.core.selected = p.vakata.array_remove_item(this._data.core.selected, F.children_d[D])
                    }
                    delete this._model.data[F.children_d[D]]
                }
                F.children = [];
                F.children_d = [];
                if (J) {
                    this.trigger("changed", {
                        action: "load_node",
                        node: F,
                        selected: this._data.core.selected
                    })
                }
            }
            F.state.loading = true;
            this.get_node(F, true).addClass("jstree-loading");
            this._load_node(F, p.proxy(function(M) {
                F.state.loading = false;
                F.state.loaded = M;
                var N = this.get_node(F, true);
                if (F.state.loaded && !F.children.length && N && N.length && !N.hasClass("jstree-leaf")) {
                    N.removeClass("jstree-closed jstree-open").addClass("jstree-leaf")
                }
                N.removeClass("jstree-loading");
                this.trigger("load_node", {
                    node: F,
                    status: M
                });
                if (K) {
                    K.call(this, F, M)
                }
            }, this));
            return true
        },
        _load_nodes: function(D, J, G) {
            var H = true, I = function() {
                this._load_nodes(D, J, true)
            }
            , C = this._model.data, F, E;
            for (F = 0,
            E = D.length; F < E; F++) {
                if (C[D[F]] && (!C[D[F]].state.loaded || !G)) {
                    if (!this.is_loading(D[F])) {
                        this.load_node(D[F], I)
                    }
                    H = false
                }
            }
            if (H) {
                if (!J.done) {
                    J.call(this, D);
                    J.done = true
                }
            }
        },
        _load_node: function(E, F) {
            var D = this.settings.core.data, C;
            if (!D) {
                return F.call(this, E.id === "#" ? this._append_html_data(E, this._data.core.original_container_html.clone(true)) : false)
            }
            if (p.isFunction(D)) {
                return D.call(this, E, p.proxy(function(G) {
                    return G === false ? F.call(this, false) : F.call(this, this[typeof G === "string" ? "_append_html_data" : "_append_json_data"](E, typeof G === "string" ? p(G) : G))
                }, this))
            }
            if (typeof D === "object") {
                if (D.url) {
                    D = p.extend(true, {}, D);
                    if (p.isFunction(D.url)) {
                        D.url = D.url.call(this, E)
                    }
                    if (p.isFunction(D.data)) {
                        D.data = D.data.call(this, E)
                    }
                    return p.ajax(D).done(p.proxy(function(J, H, G) {
                        var I = G.getResponseHeader("Content-Type");
                        if (I.indexOf("json") !== -1 || typeof J === "object") {
                            return F.call(this, this._append_json_data(E, J))
                        }
                        if (I.indexOf("html") !== -1 || typeof J === "string") {
                            return F.call(this, this._append_html_data(E, p(J)))
                        }
                        this._data.core.last_error = {
                            error: "ajax",
                            plugin: "core",
                            id: "core_04",
                            reason: "Could not load node",
                            data: JSON.stringify({
                                id: E.id,
                                xhr: G
                            })
                        };
                        return F.call(this, false)
                    }, this)).fail(p.proxy(function(G) {
                        F.call(this, false);
                        this._data.core.last_error = {
                            error: "ajax",
                            plugin: "core",
                            id: "core_04",
                            reason: "Could not load node",
                            data: JSON.stringify({
                                id: E.id,
                                xhr: G
                            })
                        };
                        this.settings.core.error.call(this, this._data.core.last_error)
                    }, this))
                }
                C = (p.isArray(D) || p.isPlainObject(D)) ? JSON.parse(JSON.stringify(D)) : D;
                if (E.id !== "#") {
                    this._data.core.last_error = {
                        error: "nodata",
                        plugin: "core",
                        id: "core_05",
                        reason: "Could not load node",
                        data: JSON.stringify({
                            id: E.id
                        })
                    }
                }
                return F.call(this, (E.id === "#" ? this._append_json_data(E, C) : false))
            }
            if (typeof D === "string") {
                if (E.id !== "#") {
                    this._data.core.last_error = {
                        error: "nodata",
                        plugin: "core",
                        id: "core_06",
                        reason: "Could not load node",
                        data: JSON.stringify({
                            id: E.id
                        })
                    }
                }
                return F.call(this, (E.id === "#" ? this._append_html_data(E, p(D)) : false))
            }
            return F.call(this, false)
        },
        _node_changed: function(C) {
            C = this.get_node(C);
            if (C) {
                this._model.changed.push(C.id)
            }
        },
        _append_html_data: function(F, I) {
            F = this.get_node(F);
            F.children = [];
            F.children_d = [];
            var M = I.is("ul") ? I.children() : I, K = F.id, O = [], J = [], D = this._model.data, C = D[K], N = this._data.core.selected.length, H, G, E;
            M.each(p.proxy(function(Q, P) {
                H = this._parse_model_from_html(p(P), K, C.parents.concat());
                if (H) {
                    O.push(H);
                    J.push(H);
                    if (D[H].children_d.length) {
                        J = J.concat(D[H].children_d)
                    }
                }
            }, this));
            C.children = O;
            C.children_d = J;
            for (G = 0,
            E = C.parents.length; G < E; G++) {
                D[C.parents[G]].children_d = D[C.parents[G]].children_d.concat(J)
            }
            this.trigger("model", {
                nodes: J,
                parent: K
            });
            if (K !== "#") {
                this._node_changed(K);
                this.redraw()
            } else {
                this.get_container_ul().children(".jstree-initial-node").remove();
                this.redraw(true)
            }
            if (this._data.core.selected.length !== N) {
                this.trigger("changed", {
                    action: "model",
                    selected: this._data.core.selected
                })
            }
            return true
        },
        _append_json_data: function(F, I) {
            F = this.get_node(F);
            F.children = [];
            F.children_d = [];
            var M = I, K = F.id, O = [], J = [], D = this._model.data, C = D[K], N = this._data.core.selected.length, H, G, E;
            if (M.d) {
                M = M.d;
                if (typeof M === "string") {
                    M = JSON.parse(M)
                }
            }
            if (!p.isArray(M)) {
                M = [M]
            }
            if (M.length && M[0].id !== g && M[0].parent !== g) {
                for (G = 0,
                E = M.length; G < E; G++) {
                    if (!M[G].children) {
                        M[G].children = []
                    }
                    D[M[G].id.toString()] = M[G]
                }
                for (G = 0,
                E = M.length; G < E; G++) {
                    D[M[G].parent.toString()].children.push(M[G].id.toString());
                    C.children_d.push(M[G].id.toString())
                }
                for (G = 0,
                E = C.children.length; G < E; G++) {
                    H = this._parse_model_from_flat_json(D[C.children[G]], K, C.parents.concat());
                    J.push(H);
                    if (D[H].children_d.length) {
                        J = J.concat(D[H].children_d)
                    }
                }
            } else {
                for (G = 0,
                E = M.length; G < E; G++) {
                    H = this._parse_model_from_json(M[G], K, C.parents.concat());
                    if (H) {
                        O.push(H);
                        J.push(H);
                        if (D[H].children_d.length) {
                            J = J.concat(D[H].children_d)
                        }
                    }
                }
                C.children = O;
                C.children_d = J;
                for (G = 0,
                E = C.parents.length; G < E; G++) {
                    D[C.parents[G]].children_d = D[C.parents[G]].children_d.concat(J)
                }
            }
            this.trigger("model", {
                nodes: J,
                parent: K
            });
            if (K !== "#") {
                this._node_changed(K);
                this.redraw()
            } else {
                this.redraw(true)
            }
            if (this._data.core.selected.length !== N) {
                this.trigger("changed", {
                    action: "model",
                    selected: this._data.core.selected
                })
            }
            return true
        },
        _parse_model_from_html: function(K, D, C) {
            if (!C) {
                C = []
            } else {
                C = [].concat(C)
            }
            if (D) {
                C.unshift(D)
            }
            var M, J, E = this._model.data, H = {
                id: false,
                text: false,
                icon: true,
                parent: D,
                parents: C,
                children: [],
                children_d: [],
                data: null ,
                state: {},
                li_attr: {
                    id: false
                },
                a_attr: {
                    href: "#"
                },
                original: false
            }, I, G, F;
            for (I in this._model.default_state) {
                if (this._model.default_state.hasOwnProperty(I)) {
                    H.state[I] = this._model.default_state[I]
                }
            }
            G = p.vakata.attributes(K, true);
            p.each(G, function(O, N) {
                N = p.trim(N);
                if (!N.length) {
                    return true
                }
                H.li_attr[O] = N;
                if (O === "id") {
                    H.id = N.toString()
                }
            });
            G = K.children("a").eq(0);
            if (G.length) {
                G = p.vakata.attributes(G, true);
                p.each(G, function(O, N) {
                    N = p.trim(N);
                    if (N.length) {
                        H.a_attr[O] = N
                    }
                })
            }
            G = K.children("a:eq(0)").length ? K.children("a:eq(0)").clone() : K.clone();
            G.children("ins, i, ul").remove();
            G = G.html();
            G = p("<div />").html(G);
            H.text = G.html();
            G = K.data();
            H.data = G ? p.extend(true, {}, G) : null ;
            H.state.opened = K.hasClass("jstree-open");
            H.state.selected = K.children("a").hasClass("jstree-clicked");
            H.state.disabled = K.children("a").hasClass("jstree-disabled");
            if (H.data && H.data.jstree) {
                for (I in H.data.jstree) {
                    if (H.data.jstree.hasOwnProperty(I)) {
                        H.state[I] = H.data.jstree[I]
                    }
                }
            }
            G = K.children("a").children(".jstree-themeicon");
            if (G.length) {
                H.icon = G.hasClass("jstree-themeicon-hidden") ? false : G.attr("rel")
            }
            if (H.state.icon) {
                H.icon = H.state.icon
            }
            G = K.children("ul").children("li");
            do {
                F = "j" + this._id + "_" + (++this._cnt)
            } while (E[F]);H.id = H.li_attr.id ? H.li_attr.id.toString() : F;
            if (G.length) {
                G.each(p.proxy(function(O, N) {
                    M = this._parse_model_from_html(p(N), H.id, C);
                    J = this._model.data[M];
                    H.children.push(M);
                    if (J.children_d.length) {
                        H.children_d = H.children_d.concat(J.children_d)
                    }
                }, this));
                H.children_d = H.children_d.concat(H.children)
            } else {
                if (K.hasClass("jstree-closed")) {
                    H.state.loaded = false
                }
            }
            if (H.li_attr["class"]) {
                H.li_attr["class"] = H.li_attr["class"].replace("jstree-closed", "").replace("jstree-open", "")
            }
            if (H.a_attr["class"]) {
                H.a_attr["class"] = H.a_attr["class"].replace("jstree-clicked", "").replace("jstree-disabled", "")
            }
            E[H.id] = H;
            if (H.state.selected) {
                this._data.core.selected.push(H.id)
            }
            return H.id
        },
        _parse_model_from_flat_json: function(K, D, C) {
            if (!C) {
                C = []
            } else {
                C = C.concat()
            }
            if (D) {
                C.unshift(D)
            }
            var F = K.id.toString(), E = this._model.data, N = this._model.default_state, I, G, M, J, H = {
                id: F,
                text: K.text || "",
                icon: K.icon !== g ? K.icon : true,
                parent: D,
                parents: C,
                children: K.children || [],
                children_d: K.children_d || [],
                data: K.data,
                state: {},
                li_attr: {
                    id: false
                },
                a_attr: {
                    href: "#"
                },
                original: false
            };
            for (I in N) {
                if (N.hasOwnProperty(I)) {
                    H.state[I] = N[I]
                }
            }
            if (K && K.data && K.data.jstree && K.data.jstree.icon) {
                H.icon = K.data.jstree.icon
            }
            if (K && K.data) {
                H.data = K.data;
                if (K.data.jstree) {
                    for (I in K.data.jstree) {
                        if (K.data.jstree.hasOwnProperty(I)) {
                            H.state[I] = K.data.jstree[I]
                        }
                    }
                }
            }
            if (K && typeof K.state === "object") {
                for (I in K.state) {
                    if (K.state.hasOwnProperty(I)) {
                        H.state[I] = K.state[I]
                    }
                }
            }
            if (K && typeof K.li_attr === "object") {
                for (I in K.li_attr) {
                    if (K.li_attr.hasOwnProperty(I)) {
                        H.li_attr[I] = K.li_attr[I]
                    }
                }
            }
            if (!H.li_attr.id) {
                H.li_attr.id = F
            }
            if (K && typeof K.a_attr === "object") {
                for (I in K.a_attr) {
                    if (K.a_attr.hasOwnProperty(I)) {
                        H.a_attr[I] = K.a_attr[I]
                    }
                }
            }
            if (K && K.children && K.children === true) {
                H.state.loaded = false;
                H.children = [];
                H.children_d = []
            }
            E[H.id] = H;
            for (I = 0,
            G = H.children.length; I < G; I++) {
                M = this._parse_model_from_flat_json(E[H.children[I]], H.id, C);
                J = E[M];
                H.children_d.push(M);
                if (J.children_d.length) {
                    H.children_d = H.children_d.concat(J.children_d)
                }
            }
            delete K.data;
            delete K.children;
            E[H.id].original = K;
            if (H.state.selected) {
                this._data.core.selected.push(H.id)
            }
            return H.id
        },
        _parse_model_from_json: function(K, D, C) {
            if (!C) {
                C = []
            } else {
                C = C.concat()
            }
            if (D) {
                C.unshift(D)
            }
            var F = false, I, G, M, J, E = this._model.data, N = this._model.default_state, H;
            do {
                F = "j" + this._id + "_" + (++this._cnt)
            } while (E[F]);H = {
                id: false,
                text: typeof K === "string" ? K : "",
                icon: typeof K === "object" && K.icon !== g ? K.icon : true,
                parent: D,
                parents: C,
                children: [],
                children_d: [],
                data: null ,
                state: {},
                li_attr: {
                    id: false
                },
                a_attr: {
                    href: "#"
                },
                original: false
            };
            for (I in N) {
                if (N.hasOwnProperty(I)) {
                    H.state[I] = N[I]
                }
            }
            if (K && K.id) {
                H.id = K.id.toString()
            }
            if (K && K.text) {
                H.text = K.text
            }
            if (K && K.data && K.data.jstree && K.data.jstree.icon) {
                H.icon = K.data.jstree.icon
            }
            if (K && K.data) {
                H.data = K.data;
                if (K.data.jstree) {
                    for (I in K.data.jstree) {
                        if (K.data.jstree.hasOwnProperty(I)) {
                            H.state[I] = K.data.jstree[I]
                        }
                    }
                }
            }
            if (K && typeof K.state === "object") {
                for (I in K.state) {
                    if (K.state.hasOwnProperty(I)) {
                        H.state[I] = K.state[I]
                    }
                }
            }
            if (K && typeof K.li_attr === "object") {
                for (I in K.li_attr) {
                    if (K.li_attr.hasOwnProperty(I)) {
                        H.li_attr[I] = K.li_attr[I]
                    }
                }
            }
            if (H.li_attr.id && !H.id) {
                H.id = H.li_attr.id.toString()
            }
            if (!H.id) {
                H.id = F
            }
            if (!H.li_attr.id) {
                H.li_attr.id = H.id
            }
            if (K && typeof K.a_attr === "object") {
                for (I in K.a_attr) {
                    if (K.a_attr.hasOwnProperty(I)) {
                        H.a_attr[I] = K.a_attr[I]
                    }
                }
            }
            if (K && K.children && K.children.length) {
                for (I = 0,
                G = K.children.length; I < G; I++) {
                    M = this._parse_model_from_json(K.children[I], H.id, C);
                    J = E[M];
                    H.children.push(M);
                    if (J.children_d.length) {
                        H.children_d = H.children_d.concat(J.children_d)
                    }
                }
                H.children_d = H.children_d.concat(H.children)
            }
            if (K && K.children && K.children === true) {
                H.state.loaded = false;
                H.children = [];
                H.children_d = []
            }
            delete K.data;
            delete K.children;
            H.original = K;
            E[H.id] = H;
            if (H.state.selected) {
                this._data.core.selected.push(H.id)
            }
            return H.id
        },
        _redraw: function() {
            var C = this._model.force_full_redraw ? this._model.data["#"].children.concat([]) : this._model.changed.concat([]), G = document.createElement("UL"), F, E, D;
            for (E = 0,
            D = C.length; E < D; E++) {
                F = this.redraw_node(C[E], true, this._model.force_full_redraw);
                if (F && this._model.force_full_redraw) {
                    G.appendChild(F)
                }
            }
            if (this._model.force_full_redraw) {
                G.className = this.get_container_ul()[0].className;
                this.element.empty().append(G)
            }
            this._model.force_full_redraw = false;
            this._model.changed = [];
            this.trigger("redraw", {
                nodes: C
            })
        },
        redraw: function(C) {
            if (C) {
                this._model.force_full_redraw = true
            }
            this._redraw()
        },
        redraw_node: function(F, R, Q) {
            var J = this.get_node(F)
              , O = false
              , C = false
              , D = false
              , K = false
              , H = false
              , G = false
              , P = ""
              , N = document
              , E = this._model.data
              , M = false
              , S = false
              , I = null ;
            if (!J) {
                return false
            }
            if (J.id === "#") {
                return this.redraw(true)
            }
            R = R || J.children.length === 0;
            F = !document.querySelector ? document.getElementById(J.id) : this.element[0].querySelector("#" + ("0123456789".indexOf(J.id[0]) !== -1 ? "\\3" + J.id[0] + " " + J.id.substr(1).replace(p.jstree.idregex, "\\$&") : J.id.replace(p.jstree.idregex, "\\$&")));
            if (!F) {
                R = true;
                if (!Q) {
                    O = J.parent !== "#" ? p("#" + J.parent.replace(p.jstree.idregex, "\\$&"), this.element)[0] : null ;
                    if (O !== null  && (!O || !E[J.parent].state.opened)) {
                        return false
                    }
                    C = p.inArray(J.id, O === null  ? E["#"].children : E[J.parent].children)
                }
            } else {
                F = p(F);
                if (!Q) {
                    O = F.parent().parent()[0];
                    if (O === this.element[0]) {
                        O = null 
                    }
                    C = F.index()
                }
                if (!R && J.children.length && !F.children(".jstree-children").length) {
                    R = true
                }
                if (!R) {
                    D = F.children(".jstree-children")[0]
                }
                S = F.attr("aria-selected");
                M = F.children(".jstree-anchor")[0] === document.activeElement;
                F.remove()
            }
            F = B.cloneNode(true);
            P = "jstree-node ";
            for (K in J.li_attr) {
                if (J.li_attr.hasOwnProperty(K)) {
                    if (K === "id") {
                        continue
                    }
                    if (K !== "class") {
                        F.setAttribute(K, J.li_attr[K])
                    } else {
                        P += J.li_attr[K]
                    }
                }
            }
            if (S && S !== "false") {
                F.setAttribute("aria-selected", true)
            }
            if (J.state.loaded && !J.children.length) {
                P += " jstree-leaf"
            } else {
                P += J.state.opened && J.state.loaded ? " jstree-open" : " jstree-closed";
                F.setAttribute("aria-expanded", (J.state.opened && J.state.loaded))
            }
            if (J.parent !== null  && E[J.parent].children[E[J.parent].children.length - 1] === J.id) {
                P += " jstree-last"
            }
            F.id = J.id;
            F.className = P;
            P = (J.state.selected ? " jstree-clicked" : "") + (J.state.disabled ? " jstree-disabled" : "");
            for (H in J.a_attr) {
                if (J.a_attr.hasOwnProperty(H)) {
                    if (H === "href" && J.a_attr[H] === "#") {
                        continue
                    }
                    if (H !== "class") {
                        F.childNodes[1].setAttribute(H, J.a_attr[H])
                    } else {
                        P += " " + J.a_attr[H]
                    }
                }
            }
            if (P.length) {
                F.childNodes[1].className = "jstree-anchor " + P
            }
            if ((J.icon && J.icon !== true) || J.icon === false) {
                if (J.icon === false) {
                    F.childNodes[1].childNodes[0].className += " jstree-themeicon-hidden"
                } else {
                    if (J.icon.indexOf("/") === -1 && J.icon.indexOf(".") === -1) {
                        F.childNodes[1].childNodes[0].className += " " + J.icon + " jstree-themeicon-custom"
                    } else {
                        F.childNodes[1].childNodes[0].style.backgroundImage = "url(" + J.icon + ")";
                        F.childNodes[1].childNodes[0].style.backgroundPosition = "center center";
                        F.childNodes[1].childNodes[0].style.backgroundSize = "auto";
                        F.childNodes[1].childNodes[0].className += " jstree-themeicon-custom"
                    }
                }
            }
            F.childNodes[1].innerHTML += J.text;
            if (R && J.children.length && J.state.opened && J.state.loaded) {
                G = N.createElement("UL");
                G.setAttribute("role", "group");
                G.className = "jstree-children";
                for (K = 0,
                H = J.children.length; K < H; K++) {
                    G.appendChild(this.redraw_node(J.children[K], R, true))
                }
                F.appendChild(G)
            }
            if (D) {
                F.appendChild(D)
            }
            if (!Q) {
                if (!O) {
                    O = this.element[0]
                }
                for (K = 0,
                H = O.childNodes.length; K < H; K++) {
                    if (O.childNodes[K] && O.childNodes[K].className && O.childNodes[K].className.indexOf("jstree-children") !== -1) {
                        I = O.childNodes[K];
                        break
                    }
                }
                if (!I) {
                    I = N.createElement("UL");
                    I.setAttribute("role", "group");
                    I.className = "jstree-children";
                    O.appendChild(I)
                }
                O = I;
                if (C < O.childNodes.length) {
                    O.insertBefore(F, O.childNodes[C])
                } else {
                    O.appendChild(F)
                }
                if (M) {
                    F.childNodes[1].focus()
                }
            }
            if (J.state.opened && !J.state.loaded) {
                J.state.opened = false;
                setTimeout(p.proxy(function() {
                    this.open_node(J.id, false, 0)
                }, this), 0)
            }
            return F
        },
        open_node: function(G, I, F) {
            var E, D, H, C;
            if (p.isArray(G)) {
                G = G.slice();
                for (E = 0,
                D = G.length; E < D; E++) {
                    this.open_node(G[E], I, F)
                }
                return true
            }
            G = this.get_node(G);
            if (!G || G.id === "#") {
                return false
            }
            F = F === g ? this.settings.core.animation : F;
            if (!this.is_closed(G)) {
                if (I) {
                    I.call(this, G, false)
                }
                return false
            }
            if (!this.is_loaded(G)) {
                if (this.is_loading(G)) {
                    return setTimeout(p.proxy(function() {
                        this.open_node(G, I, F)
                    }, this), 500)
                }
                this.load_node(G, function(K, J) {
                    return J ? this.open_node(K, I, F) : (I ? I.call(this, K, false) : false)
                })
            } else {
                H = this.get_node(G, true);
                C = this;
                if (H.length) {
                    if (G.children.length && !this._firstChild(H.children(".jstree-children")[0])) {
                        G.state.opened = true;
                        this.redraw_node(G, true);
                        H = this.get_node(G, true)
                    }
                    if (!F) {
                        this.trigger("before_open", {
                            node: G
                        });
                        H[0].className = H[0].className.replace("jstree-closed", "jstree-open");
                        H[0].setAttribute("aria-expanded", true)
                    } else {
                        this.trigger("before_open", {
                            node: G
                        });
                        H.children(".jstree-children").css("display", "none").end().removeClass("jstree-closed").addClass("jstree-open").attr("aria-expanded", true).children(".jstree-children").stop(true, true).slideDown(F, function() {
                            this.style.display = "";
                            C.trigger("after_open", {
                                node: G
                            })
                        })
                    }
                }
                G.state.opened = true;
                if (I) {
                    I.call(this, G, true)
                }
                if (!H.length) {
                    this.trigger("before_open", {
                        node: G
                    })
                }
                this.trigger("open_node", {
                    node: G
                });
                if (!F || !H.length) {
                    this.trigger("after_open", {
                        node: G
                    })
                }
            }
        },
        _open_to: function(F) {
            F = this.get_node(F);
            if (!F || F.id === "#") {
                return false
            }
            var D, C, E = F.parents;
            for (D = 0,
            C = E.length; D < C; D += 1) {
                if (D !== "#") {
                    this.open_node(E[D], false, 0)
                }
            }
            return p("#" + F.id.replace(p.jstree.idregex, "\\$&"), this.element)
        },
        close_node: function(G, F) {
            var E, D, C, H;
            if (p.isArray(G)) {
                G = G.slice();
                for (E = 0,
                D = G.length; E < D; E++) {
                    this.close_node(G[E], F)
                }
                return true
            }
            G = this.get_node(G);
            if (!G || G.id === "#") {
                return false
            }
            if (this.is_closed(G)) {
                return false
            }
            F = F === g ? this.settings.core.animation : F;
            C = this;
            H = this.get_node(G, true);
            if (H.length) {
                if (!F) {
                    H[0].className = H[0].className.replace("jstree-open", "jstree-closed");
                    H.attr("aria-expanded", false).children(".jstree-children").remove()
                } else {
                    H.children(".jstree-children").attr("style", "display:block !important").end().removeClass("jstree-open").addClass("jstree-closed").attr("aria-expanded", false).children(".jstree-children").stop(true, true).slideUp(F, function() {
                        this.style.display = "";
                        H.children(".jstree-children").remove();
                        C.trigger("after_close", {
                            node: G
                        })
                    })
                }
            }
            G.state.opened = false;
            this.trigger("close_node", {
                node: G
            });
            if (!F || !H.length) {
                this.trigger("after_close", {
                    node: G
                })
            }
        },
        toggle_node: function(E) {
            var D, C;
            if (p.isArray(E)) {
                E = E.slice();
                for (D = 0,
                C = E.length; D < C; D++) {
                    this.toggle_node(E[D])
                }
                return true
            }
            if (this.is_closed(E)) {
                return this.open_node(E)
            }
            if (this.is_open(E)) {
                return this.close_node(E)
            }
        },
        open_all: function(G, F, C) {
            if (!G) {
                G = "#"
            }
            G = this.get_node(G);
            if (!G) {
                return false
            }
            var H = G.id === "#" ? this.get_container_ul() : this.get_node(G, true), E, D, I;
            if (!H.length) {
                for (E = 0,
                D = G.children_d.length; E < D; E++) {
                    if (this.is_closed(this._model.data[G.children_d[E]])) {
                        this._model.data[G.children_d[E]].state.opened = true
                    }
                }
                return this.trigger("open_all", {
                    node: G
                })
            }
            C = C || H;
            I = this;
            H = this.is_closed(G) ? H.find(".jstree-closed").addBack() : H.find(".jstree-closed");
            H.each(function() {
                I.open_node(this, function(K, J) {
                    if (J && this.is_parent(K)) {
                        this.open_all(K, F, C)
                    }
                }, F || 0)
            });
            if (C.find(".jstree-closed").length === 0) {
                this.trigger("open_all", {
                    node: this.get_node(C)
                })
            }
        },
        close_all: function(F, E) {
            if (!F) {
                F = "#"
            }
            F = this.get_node(F);
            if (!F) {
                return false
            }
            var G = F.id === "#" ? this.get_container_ul() : this.get_node(F, true), H = this, D, C;
            if (!G.length) {
                for (D = 0,
                C = F.children_d.length; D < C; D++) {
                    this._model.data[F.children_d[D]].state.opened = false
                }
                return this.trigger("close_all", {
                    node: F
                })
            }
            G = this.is_open(F) ? G.find(".jstree-open").addBack() : G.find(".jstree-open");
            p(G.get().reverse()).each(function() {
                H.close_node(this, E || 0)
            });
            this.trigger("close_all", {
                node: F
            })
        },
        is_disabled: function(C) {
            C = this.get_node(C);
            return C && C.state && C.state.disabled
        },
        enable_node: function(E) {
            var D, C;
            if (p.isArray(E)) {
                E = E.slice();
                for (D = 0,
                C = E.length; D < C; D++) {
                    this.enable_node(E[D])
                }
                return true
            }
            E = this.get_node(E);
            if (!E || E.id === "#") {
                return false
            }
            E.state.disabled = false;
            this.get_node(E, true).children(".jstree-anchor").removeClass("jstree-disabled");
            this.trigger("enable_node", {
                node: E
            })
        },
        disable_node: function(E) {
            var D, C;
            if (p.isArray(E)) {
                E = E.slice();
                for (D = 0,
                C = E.length; D < C; D++) {
                    this.disable_node(E[D])
                }
                return true
            }
            E = this.get_node(E);
            if (!E || E.id === "#") {
                return false
            }
            E.state.disabled = true;
            this.get_node(E, true).children(".jstree-anchor").addClass("jstree-disabled");
            this.trigger("disable_node", {
                node: E
            })
        },
        activate_node: function(H, G) {
            if (this.is_disabled(H)) {
                return false
            }
            this._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== g ? this.get_node(this._data.core.last_clicked.id) : null ;
            if (this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) {
                this._data.core.last_clicked = null 
            }
            if (!this._data.core.last_clicked && this._data.core.selected.length) {
                this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1])
            }
            if (!this.settings.core.multiple || (!G.metaKey && !G.ctrlKey && !G.shiftKey) || (G.shiftKey && (!this._data.core.last_clicked || !this.get_parent(H) || this.get_parent(H) !== this._data.core.last_clicked.parent))) {
                if (!this.settings.core.multiple && (G.metaKey || G.ctrlKey || G.shiftKey) && this.is_selected(H)) {
                    this.deselect_node(H, false, false, G)
                } else {
                    this.deselect_all(true);
                    this.select_node(H, false, false, G);
                    this._data.core.last_clicked = this.get_node(H)
                }
            } else {
                if (G.shiftKey) {
                    var I = this.get_node(H).id, C = this._data.core.last_clicked.id, F = this.get_node(this._data.core.last_clicked.parent).children, J = false, E, D;
                    for (E = 0,
                    D = F.length; E < D; E += 1) {
                        if (F[E] === I) {
                            J = !J
                        }
                        if (F[E] === C) {
                            J = !J
                        }
                        if (J || F[E] === I || F[E] === C) {
                            this.select_node(F[E], false, false, G)
                        } else {
                            this.deselect_node(F[E], false, false, G)
                        }
                    }
                } else {
                    if (!this.is_selected(H)) {
                        this.select_node(H, false, false, G)
                    } else {
                        this.deselect_node(H, false, false, G)
                    }
                }
            }
            this.trigger("activate_node", {
                node: this.get_node(H)
            })
        },
        hover_node: function(D) {
            D = this.get_node(D, true);
            if (!D || !D.length || D.children(".jstree-hovered").length) {
                return false
            }
            var E = this.element.find(".jstree-hovered")
              , C = this.element;
            if (E && E.length) {
                this.dehover_node(E)
            }
            D.children(".jstree-anchor").addClass("jstree-hovered");
            this.trigger("hover_node", {
                node: this.get_node(D)
            });
            setTimeout(function() {
                C.attr("aria-activedescendant", D[0].id);
                D.attr("aria-selected", true)
            }, 0)
        },
        dehover_node: function(C) {
            C = this.get_node(C, true);
            if (!C || !C.length || !C.children(".jstree-hovered").length) {
                return false
            }
            C.attr("aria-selected", false).children(".jstree-anchor").removeClass("jstree-hovered");
            this.trigger("dehover_node", {
                node: this.get_node(C)
            })
        },
        select_node: function(H, J, C, G) {
            var I, F, D, E;
            if (p.isArray(H)) {
                H = H.slice();
                for (F = 0,
                D = H.length; F < D; F++) {
                    this.select_node(H[F], J, C, G)
                }
                return true
            }
            H = this.get_node(H);
            if (!H || H.id === "#") {
                return false
            }
            I = this.get_node(H, true);
            if (!H.state.selected) {
                H.state.selected = true;
                this._data.core.selected.push(H.id);
                if (!C) {
                    I = this._open_to(H)
                }
                if (I && I.length) {
                    I.children(".jstree-anchor").addClass("jstree-clicked")
                }
                this.trigger("select_node", {
                    node: H,
                    selected: this._data.core.selected,
                    event: G
                });
                if (!J) {
                    this.trigger("changed", {
                        action: "select_node",
                        node: H,
                        selected: this._data.core.selected,
                        event: G
                    })
                }
            }
        },
        deselect_node: function(F, H, E) {
            var D, C, G;
            if (p.isArray(F)) {
                F = F.slice();
                for (D = 0,
                C = F.length; D < C; D++) {
                    this.deselect_node(F[D], H, E)
                }
                return true
            }
            F = this.get_node(F);
            if (!F || F.id === "#") {
                return false
            }
            G = this.get_node(F, true);
            if (F.state.selected) {
                F.state.selected = false;
                this._data.core.selected = p.vakata.array_remove_item(this._data.core.selected, F.id);
                if (G.length) {
                    G.children(".jstree-anchor").removeClass("jstree-clicked")
                }
                this.trigger("deselect_node", {
                    node: F,
                    selected: this._data.core.selected,
                    event: E
                });
                if (!H) {
                    this.trigger("changed", {
                        action: "deselect_node",
                        node: F,
                        selected: this._data.core.selected,
                        event: E
                    })
                }
            }
        },
        select_all: function(F) {
            var E = this._data.core.selected.concat([]), D, C;
            this._data.core.selected = this._model.data["#"].children_d.concat();
            for (D = 0,
            C = this._data.core.selected.length; D < C; D++) {
                if (this._model.data[this._data.core.selected[D]]) {
                    this._model.data[this._data.core.selected[D]].state.selected = true
                }
            }
            this.redraw(true);
            this.trigger("select_all", {
                selected: this._data.core.selected
            });
            if (!F) {
                this.trigger("changed", {
                    action: "select_all",
                    selected: this._data.core.selected,
                    old_selection: E
                })
            }
        },
        deselect_all: function(F) {
            var E = this._data.core.selected.concat([]), D, C;
            for (D = 0,
            C = this._data.core.selected.length; D < C; D++) {
                if (this._model.data[this._data.core.selected[D]]) {
                    this._model.data[this._data.core.selected[D]].state.selected = false
                }
            }
            this._data.core.selected = [];
            this.element.find(".jstree-clicked").removeClass("jstree-clicked");
            this.trigger("deselect_all", {
                selected: this._data.core.selected,
                node: E
            });
            if (!F) {
                this.trigger("changed", {
                    action: "deselect_all",
                    selected: this._data.core.selected,
                    old_selection: E
                })
            }
        },
        is_selected: function(C) {
            C = this.get_node(C);
            if (!C || C.id === "#") {
                return false
            }
            return C.state.selected
        },
        get_selected: function(C) {
            return C ? p.map(this._data.core.selected, p.proxy(function(D) {
                return this.get_node(D)
            }, this)) : this._data.core.selected
        },
        get_top_selected: function(H) {
            var G = this.get_selected(true), I = {}, F, E, D, C;
            for (F = 0,
            E = G.length; F < E; F++) {
                I[G[F].id] = G[F]
            }
            for (F = 0,
            E = G.length; F < E; F++) {
                for (D = 0,
                C = G[F].children_d.length; D < C; D++) {
                    if (I[G[F].children_d[D]]) {
                        delete I[G[F].children_d[D]]
                    }
                }
            }
            G = [];
            for (F in I) {
                if (I.hasOwnProperty(F)) {
                    G.push(F)
                }
            }
            return H ? p.map(G, p.proxy(function(J) {
                return this.get_node(J)
            }, this)) : G
        },
        get_bottom_selected: function(F) {
            var E = this.get_selected(true), G = [], D, C;
            for (D = 0,
            C = E.length; D < C; D++) {
                if (!E[D].children.length) {
                    G.push(E[D].id)
                }
            }
            return F ? p.map(G, p.proxy(function(H) {
                return this.get_node(H)
            }, this)) : G
        },
        get_state: function() {
            var D = {
                core: {
                    open: [],
                    scroll: {
                        left: this.element.scrollLeft(),
                        top: this.element.scrollTop()
                    },
                    /*!
					'themes' : {
						'name' : this.get_theme(),
						'icons' : this._data.core.themes.icons,
						'dots' : this._data.core.themes.dots
					},
					*/
                    selected: []
                }
            }, C;
            for (C in this._model.data) {
                if (this._model.data.hasOwnProperty(C)) {
                    if (C !== "#") {
                        if (this._model.data[C].state.opened) {
                            D.core.open.push(C)
                        }
                        if (this._model.data[C].state.selected) {
                            D.core.selected.push(C)
                        }
                    }
                }
            }
            return D
        },
        set_state: function(E, H) {
            if (E) {
                if (E.core) {
                    var D, G, C, F;
                    if (E.core.open) {
                        if (!p.isArray(E.core.open)) {
                            delete E.core.open;
                            this.set_state(E, H);
                            return false
                        }
                        D = true;
                        G = false;
                        C = this;
                        p.each(E.core.open.concat([]), function(J, I) {
                            G = C.get_node(I);
                            if (G) {
                                if (C.is_loaded(I)) {
                                    if (C.is_closed(I)) {
                                        C.open_node(I, false, 0)
                                    }
                                    if (E && E.core && E.core.open) {
                                        p.vakata.array_remove_item(E.core.open, I)
                                    }
                                } else {
                                    if (!C.is_loading(I)) {
                                        C.open_node(I, p.proxy(function(M, K) {
                                            if (!K && E && E.core && E.core.open) {
                                                p.vakata.array_remove_item(E.core.open, M.id)
                                            }
                                            this.set_state(E, H)
                                        }, C), 0)
                                    }
                                    D = false
                                }
                            }
                        });
                        if (D) {
                            delete E.core.open;
                            this.set_state(E, H)
                        }
                        return false
                    }
                    if (E.core.scroll) {
                        if (E.core.scroll && E.core.scroll.left !== g) {
                            this.element.scrollLeft(E.core.scroll.left)
                        }
                        if (E.core.scroll && E.core.scroll.top !== g) {
                            this.element.scrollTop(E.core.scroll.top)
                        }
                        delete E.core.scroll;
                        this.set_state(E, H);
                        return false;
                        /*!
					if(state.core.themes) {
						if(state.core.themes.name) {
							this.set_theme(state.core.themes.name);
						}
						if(typeof state.core.themes.dots !== 'undefined') {
							this[ state.core.themes.dots ? "show_dots" : "hide_dots" ]();
						}
						if(typeof state.core.themes.icons !== 'undefined') {
							this[ state.core.themes.icons ? "show_icons" : "hide_icons" ]();
						}
						delete state.core.themes;
						delete state.core.open;
						this.set_state(state, callback);
						return false;
					}
					*/
                    }
                    if (E.core.selected) {
                        F = this;
                        this.deselect_all();
                        p.each(E.core.selected, function(J, I) {
                            F.select_node(I)
                        });
                        delete E.core.selected;
                        this.set_state(E, H);
                        return false
                    }
                    if (p.isEmptyObject(E.core)) {
                        delete E.core;
                        this.set_state(E, H);
                        return false
                    }
                }
                if (p.isEmptyObject(E)) {
                    E = null ;
                    if (H) {
                        H.call(this)
                    }
                    this.trigger("set_state");
                    return false
                }
                return true
            }
            return false
        },
        refresh: function(C) {
            this._data.core.state = this.get_state();
            this._cnt = 0;
            this._model.data = {
                "#": {
                    id: "#",
                    parent: null ,
                    parents: [],
                    children: [],
                    children_d: [],
                    state: {
                        loaded: false
                    }
                }
            };
            var D = this.get_container_ul()[0].className;
            if (!C) {
                this.element.html("<ul class='jstree-container-ul jstree-children'><li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>" + this.get_string("Loading ...") + "</a></li></ul>")
            }
            this.load_node("#", function(F, E) {
                if (E) {
                    this.get_container_ul()[0].className = D;
                    this.set_state(p.extend(true, {}, this._data.core.state), function() {
                        this.trigger("refresh")
                    })
                }
                this._data.core.state = null 
            })
        },
        refresh_node: function(D) {
            D = this.get_node(D);
            if (!D || D.id === "#") {
                return false
            }
            var E = []
              , C = this._data.core.selected.concat([]);
            if (D.state.opened === true) {
                E.push(D.id)
            }
            this.get_node(D, true).find(".jstree-open").each(function() {
                E.push(this.id)
            });
            this._load_nodes(E, p.proxy(function(F) {
                this.open_node(F, false, 0);
                this.select_node(this._data.core.selected);
                this.trigger("refresh_node", {
                    node: D,
                    nodes: F
                })
            }, this))
        },
        set_id: function(F, G) {
            F = this.get_node(F);
            if (!F || F.id === "#") {
                return false
            }
            var E, D, C = this._model.data;
            G = G.toString();
            C[F.parent].children[p.inArray(F.id, C[F.parent].children)] = G;
            for (E = 0,
            D = F.parents.length; E < D; E++) {
                C[F.parents[E]].children_d[p.inArray(F.id, C[F.parents[E]].children_d)] = G
            }
            for (E = 0,
            D = F.children.length; E < D; E++) {
                C[F.children[E]].parent = G
            }
            for (E = 0,
            D = F.children_d.length; E < D; E++) {
                C[F.children_d[E]].parents[p.inArray(F.id, C[F.children_d[E]].parents)] = G
            }
            E = p.inArray(F.id, this._data.core.selected);
            if (E !== -1) {
                this._data.core.selected[E] = G
            }
            E = this.get_node(F.id, true);
            if (E) {
                E.attr("id", G)
            }
            delete C[F.id];
            F.id = G;
            C[G] = F;
            return true
        },
        get_text: function(C) {
            C = this.get_node(C);
            return (!C || C.id === "#") ? false : C.text
        },
        set_text: function(F, H) {
            var E, D, G, C;
            if (p.isArray(F)) {
                F = F.slice();
                for (E = 0,
                D = F.length; E < D; E++) {
                    this.set_text(F[E], H)
                }
                return true
            }
            F = this.get_node(F);
            if (!F || F.id === "#") {
                return false
            }
            F.text = H;
            G = this.get_node(F, true);
            if (G.length) {
                G = G.children(".jstree-anchor:eq(0)");
                C = G.children("I").clone();
                G.html(H).prepend(C);
                this.trigger("set_text", {
                    obj: F,
                    text: H
                })
            }
            return true
        },
        get_json: function(G, D, H) {
            G = this.get_node(G || "#");
            if (!G) {
                return false
            }
            if (D && D.flat && !H) {
                H = []
            }
            var F = {
                id: G.id,
                text: G.text,
                icon: this.get_icon(G),
                li_attr: G.li_attr,
                a_attr: G.a_attr,
                state: {},
                data: D && D.no_data ? false : G.data
            }, E, C;
            if (D && D.flat) {
                F.parent = G.parent
            } else {
                F.children = []
            }
            if (!D || !D.no_state) {
                for (E in G.state) {
                    if (G.state.hasOwnProperty(E)) {
                        F.state[E] = G.state[E]
                    }
                }
            }
            if (D && D.no_id) {
                delete F.id;
                if (F.li_attr && F.li_attr.id) {
                    delete F.li_attr.id
                }
            }
            if (D && D.flat && G.id !== "#") {
                H.push(F)
            }
            if (!D || !D.no_children) {
                for (E = 0,
                C = G.children.length; E < C; E++) {
                    if (D && D.flat) {
                        this.get_json(G.children[E], D, H)
                    } else {
                        F.children.push(this.get_json(G.children[E], D))
                    }
                }
            }
            return D && D.flat ? H : (G.id === "#" ? F.children : F)
        },
        create_node: function(H, C, J, K, I) {
            if (H === null ) {
                H = "#"
            }
            H = this.get_node(H);
            if (!H) {
                return false
            }
            J = J === g ? "last" : J;
            if (!J.toString().match(/^(before|after)$/) && !I && !this.is_loaded(H)) {
                return this.load_node(H, function() {
                    this.create_node(H, C, J, K, true)
                })
            }
            if (!C) {
                C = {
                    text: this.get_string("New node")
                }
            }
            if (C.text === g) {
                C.text = this.get_string("New node")
            }
            var E, G, F, D;
            if (H.id === "#") {
                if (J === "before") {
                    J = "first"
                }
                if (J === "after") {
                    J = "last"
                }
            }
            switch (J) {
            case "before":
                E = this.get_node(H.parent);
                J = p.inArray(H.id, E.children);
                H = E;
                break;
            case "after":
                E = this.get_node(H.parent);
                J = p.inArray(H.id, E.children) + 1;
                H = E;
                break;
            case "inside":
            case "first":
                J = 0;
                break;
            case "last":
                J = H.children.length;
                break;
            default:
                if (!J) {
                    J = 0
                }
                break
            }
            if (J > H.children.length) {
                J = H.children.length
            }
            if (!C.id) {
                C.id = true
            }
            if (!this.check("create_node", C, H, J)) {
                this.settings.core.error.call(this, this._data.core.last_error);
                return false
            }
            if (C.id === true) {
                delete C.id
            }
            C = this._parse_model_from_json(C, H.id, H.parents.concat());
            if (!C) {
                return false
            }
            E = this.get_node(C);
            G = [];
            G.push(C);
            G = G.concat(E.children_d);
            this.trigger("model", {
                nodes: G,
                parent: H.id
            });
            H.children_d = H.children_d.concat(G);
            for (F = 0,
            D = H.parents.length; F < D; F++) {
                this._model.data[H.parents[F]].children_d = this._model.data[H.parents[F]].children_d.concat(G)
            }
            C = E;
            E = [];
            for (F = 0,
            D = H.children.length; F < D; F++) {
                E[F >= J ? F + 1 : F] = H.children[F]
            }
            E[J] = C.id;
            H.children = E;
            this.redraw_node(H, true);
            if (K) {
                K.call(this, this.get_node(C))
            }
            this.trigger("create_node", {
                node: this.get_node(C),
                parent: H.id,
                position: J
            });
            return C.id
        },
        rename_node: function(F, G) {
            var E, D, C;
            if (p.isArray(F)) {
                F = F.slice();
                for (E = 0,
                D = F.length; E < D; E++) {
                    this.rename_node(F[E], G)
                }
                return true
            }
            F = this.get_node(F);
            if (!F || F.id === "#") {
                return false
            }
            C = F.text;
            if (!this.check("rename_node", F, this.get_parent(F), G)) {
                this.settings.core.error.call(this, this._data.core.last_error);
                return false
            }
            this.set_text(F, G);
            this.trigger("rename_node", {
                node: F,
                text: G,
                old: C
            });
            return true
        },
        delete_node: function(F) {
            var J, I, K, N, G, H, E, D, C, M;
            if (p.isArray(F)) {
                F = F.slice();
                for (J = 0,
                I = F.length; J < I; J++) {
                    this.delete_node(F[J])
                }
                return true
            }
            F = this.get_node(F);
            if (!F || F.id === "#") {
                return false
            }
            K = this.get_node(F.parent);
            N = p.inArray(F.id, K.children);
            M = false;
            if (!this.check("delete_node", F, K, N)) {
                this.settings.core.error.call(this, this._data.core.last_error);
                return false
            }
            if (N !== -1) {
                K.children = p.vakata.array_remove(K.children, N)
            }
            G = F.children_d.concat([]);
            G.push(F.id);
            for (D = 0,
            C = G.length; D < C; D++) {
                for (H = 0,
                E = F.parents.length; H < E; H++) {
                    N = p.inArray(G[D], this._model.data[F.parents[H]].children_d);
                    if (N !== -1) {
                        this._model.data[F.parents[H]].children_d = p.vakata.array_remove(this._model.data[F.parents[H]].children_d, N)
                    }
                }
                if (this._model.data[G[D]].state.selected) {
                    M = true;
                    N = p.inArray(G[D], this._data.core.selected);
                    if (N !== -1) {
                        this._data.core.selected = p.vakata.array_remove(this._data.core.selected, N)
                    }
                }
            }
            this.trigger("delete_node", {
                node: F,
                parent: K.id
            });
            if (M) {
                this.trigger("changed", {
                    action: "delete_node",
                    node: F,
                    selected: this._data.core.selected,
                    parent: K.id
                })
            }
            for (D = 0,
            C = G.length; D < C; D++) {
                delete this._model.data[G[D]]
            }
            this.redraw_node(K, true);
            return true
        },
        check: function(C, G, F, I, E) {
            G = G && G.id ? G : this.get_node(G);
            F = F && F.id ? F : this.get_node(F);
            var D = C.match(/^move_node|copy_node|create_node$/i) ? F : G
              , H = this.settings.core.check_callback;
            if (C === "move_node" || C === "copy_node") {
                if ((!E || !E.is_multi) && (G.id === F.id || p.inArray(G.id, F.children) === I || p.inArray(F.id, G.children_d) !== -1)) {
                    this._data.core.last_error = {
                        error: "check",
                        plugin: "core",
                        id: "core_01",
                        reason: "Moving parent inside child",
                        data: JSON.stringify({
                            chk: C,
                            pos: I,
                            obj: G && G.id ? G.id : false,
                            par: F && F.id ? F.id : false
                        })
                    };
                    return false
                }
            }
            if (D && D.data) {
                D = D.data
            }
            if (D && D.functions && (D.functions[C] === false || D.functions[C] === true)) {
                if (D.functions[C] === false) {
                    this._data.core.last_error = {
                        error: "check",
                        plugin: "core",
                        id: "core_02",
                        reason: "Node data prevents function: " + C,
                        data: JSON.stringify({
                            chk: C,
                            pos: I,
                            obj: G && G.id ? G.id : false,
                            par: F && F.id ? F.id : false
                        })
                    }
                }
                return D.functions[C]
            }
            if (H === false || (p.isFunction(H) && H.call(this, C, G, F, I, E) === false) || (H && H[C] === false)) {
                this._data.core.last_error = {
                    error: "check",
                    plugin: "core",
                    id: "core_03",
                    reason: "User config for core.check_callback prevents function: " + C,
                    data: JSON.stringify({
                        chk: C,
                        pos: I,
                        obj: G && G.id ? G.id : false,
                        par: F && F.id ? F.id : false
                    })
                };
                return false
            }
            return true
        },
        last_error: function() {
            return this._data.core.last_error
        },
        move_node: function(J, M, E, C, K) {
            var H, G, I, T, U, D, F, S, R, Q, P, O, N;
            if (p.isArray(J)) {
                J = J.reverse().slice();
                for (H = 0,
                G = J.length; H < G; H++) {
                    this.move_node(J[H], M, E, C, K)
                }
                return true
            }
            J = J && J.id ? J : this.get_node(J);
            M = this.get_node(M);
            E = E === g ? 0 : E;
            if (!M || !J || J.id === "#") {
                return false
            }
            if (!E.toString().match(/^(before|after)$/) && !K && !this.is_loaded(M)) {
                return this.load_node(M, function() {
                    this.move_node(J, M, E, C, true)
                })
            }
            I = (J.parent || "#").toString();
            T = (!E.toString().match(/^(before|after)$/) || M.id === "#") ? M : this.get_node(M.parent);
            U = J.instance ? J.instance : (this._model.data[J.id] ? this : p.jstree.reference(J.id));
            D = !U || !U._id || (this._id !== U._id);
            if (D) {
                if (this.copy_node(J, M, E, C, K)) {
                    if (U) {
                        U.delete_node(J)
                    }
                    return true
                }
                return false
            }
            if (T.id === "#") {
                if (E === "before") {
                    E = "first"
                }
                if (E === "after") {
                    E = "last"
                }
            }
            switch (E) {
            case "before":
                E = p.inArray(M.id, T.children);
                break;
            case "after":
                E = p.inArray(M.id, T.children) + 1;
                break;
            case "inside":
            case "first":
                E = 0;
                break;
            case "last":
                E = T.children.length;
                break;
            default:
                if (!E) {
                    E = 0
                }
                break
            }
            if (E > T.children.length) {
                E = T.children.length
            }
            if (!this.check("move_node", J, T, E, {
                core: true,
                is_multi: (U && U._id && U._id !== this._id),
                is_foreign: (!U || !U._id)
            })) {
                this.settings.core.error.call(this, this._data.core.last_error);
                return false
            }
            if (J.parent === T.id) {
                F = T.children.concat();
                S = p.inArray(J.id, F);
                if (S !== -1) {
                    F = p.vakata.array_remove(F, S);
                    if (E > S) {
                        E--
                    }
                }
                S = [];
                for (R = 0,
                Q = F.length; R < Q; R++) {
                    S[R >= E ? R + 1 : R] = F[R]
                }
                S[E] = J.id;
                T.children = S;
                this._node_changed(T.id);
                this.redraw(T.id === "#")
            } else {
                S = J.children_d.concat();
                S.push(J.id);
                for (R = 0,
                Q = J.parents.length; R < Q; R++) {
                    F = [];
                    N = U._model.data[J.parents[R]].children_d;
                    for (P = 0,
                    O = N.length; P < O; P++) {
                        if (p.inArray(N[P], S) === -1) {
                            F.push(N[P])
                        }
                    }
                    U._model.data[J.parents[R]].children_d = F
                }
                U._model.data[I].children = p.vakata.array_remove_item(U._model.data[I].children, J.id);
                for (R = 0,
                Q = T.parents.length; R < Q; R++) {
                    this._model.data[T.parents[R]].children_d = this._model.data[T.parents[R]].children_d.concat(S)
                }
                F = [];
                for (R = 0,
                Q = T.children.length; R < Q; R++) {
                    F[R >= E ? R + 1 : R] = T.children[R]
                }
                F[E] = J.id;
                T.children = F;
                T.children_d.push(J.id);
                T.children_d = T.children_d.concat(J.children_d);
                J.parent = T.id;
                S = T.parents.concat();
                S.unshift(T.id);
                N = J.parents.length;
                J.parents = S;
                S = S.concat();
                for (R = 0,
                Q = J.children_d.length; R < Q; R++) {
                    this._model.data[J.children_d[R]].parents = this._model.data[J.children_d[R]].parents.slice(0, N * -1);
                    Array.prototype.push.apply(this._model.data[J.children_d[R]].parents, S)
                }
                this._node_changed(I);
                this._node_changed(T.id);
                this.redraw(I === "#" || T.id === "#")
            }
            if (C) {
                C.call(this, J, T, E)
            }
            this.trigger("move_node", {
                node: J,
                parent: T.id,
                position: E,
                old_parent: I,
                is_multi: (U && U._id && U._id !== this._id),
                is_foreign: (!U || !U._id),
                old_instance: U,
                new_instance: this
            });
            return true
        },
        copy_node: function(I, P, R, S, Q) {
            var N, M, K, H, G, F, D, O, C, J, E;
            if (p.isArray(I)) {
                I = I.reverse().slice();
                for (N = 0,
                M = I.length; N < M; N++) {
                    this.copy_node(I[N], P, R, S, Q)
                }
                return true
            }
            I = I && I.id ? I : this.get_node(I);
            P = this.get_node(P);
            R = R === g ? 0 : R;
            if (!P || !I || I.id === "#") {
                return false
            }
            if (!R.toString().match(/^(before|after)$/) && !Q && !this.is_loaded(P)) {
                return this.load_node(P, function() {
                    this.copy_node(I, P, R, S, true)
                })
            }
            O = (I.parent || "#").toString();
            C = (!R.toString().match(/^(before|after)$/) || P.id === "#") ? P : this.get_node(P.parent);
            J = I.instance ? I.instance : (this._model.data[I.id] ? this : p.jstree.reference(I.id));
            E = !J || !J._id || (this._id !== J._id);
            if (C.id === "#") {
                if (R === "before") {
                    R = "first"
                }
                if (R === "after") {
                    R = "last"
                }
            }
            switch (R) {
            case "before":
                R = p.inArray(P.id, C.children);
                break;
            case "after":
                R = p.inArray(P.id, C.children) + 1;
                break;
            case "inside":
            case "first":
                R = 0;
                break;
            case "last":
                R = C.children.length;
                break;
            default:
                if (!R) {
                    R = 0
                }
                break
            }
            if (R > C.children.length) {
                R = C.children.length
            }
            if (!this.check("copy_node", I, C, R, {
                core: true,
                is_multi: (J && J._id && J._id !== this._id),
                is_foreign: (!J || !J._id)
            })) {
                this.settings.core.error.call(this, this._data.core.last_error);
                return false
            }
            D = J ? J.get_json(I, {
                no_id: true,
                no_data: true,
                no_state: true
            }) : I;
            if (!D) {
                return false
            }
            if (D.id === true) {
                delete D.id
            }
            D = this._parse_model_from_json(D, C.id, C.parents.concat());
            if (!D) {
                return false
            }
            H = this.get_node(D);
            if (I && I.state && I.state.loaded === false) {
                H.state.loaded = false
            }
            K = [];
            K.push(D);
            K = K.concat(H.children_d);
            this.trigger("model", {
                nodes: K,
                parent: C.id
            });
            for (G = 0,
            F = C.parents.length; G < F; G++) {
                this._model.data[C.parents[G]].children_d = this._model.data[C.parents[G]].children_d.concat(K)
            }
            K = [];
            for (G = 0,
            F = C.children.length; G < F; G++) {
                K[G >= R ? G + 1 : G] = C.children[G]
            }
            K[R] = H.id;
            C.children = K;
            C.children_d.push(H.id);
            C.children_d = C.children_d.concat(H.children_d);
            this._node_changed(C.id);
            this.redraw(C.id === "#");
            if (S) {
                S.call(this, H, C, R)
            }
            this.trigger("copy_node", {
                node: H,
                original: I,
                parent: C.id,
                position: R,
                old_parent: O,
                is_multi: (J && J._id && J._id !== this._id),
                is_foreign: (!J || !J._id),
                old_instance: J,
                new_instance: this
            });
            return H.id
        },
        cut: function(F) {
            if (!F) {
                F = this._data.core.selected.concat()
            }
            if (!p.isArray(F)) {
                F = [F]
            }
            if (!F.length) {
                return false
            }
            var C = [], G, E, D;
            for (E = 0,
            D = F.length; E < D; E++) {
                G = this.get_node(F[E]);
                if (G && G.id && G.id !== "#") {
                    C.push(G)
                }
            }
            if (!C.length) {
                return false
            }
            f = C;
            q = this;
            r = "move_node";
            this.trigger("cut", {
                node: F
            })
        },
        copy: function(F) {
            if (!F) {
                F = this._data.core.selected.concat()
            }
            if (!p.isArray(F)) {
                F = [F]
            }
            if (!F.length) {
                return false
            }
            var C = [], G, E, D;
            for (E = 0,
            D = F.length; E < D; E++) {
                G = this.get_node(F[E]);
                if (G && G.id && G.id !== "#") {
                    C.push(G)
                }
            }
            if (!C.length) {
                return false
            }
            f = C;
            q = this;
            r = "copy_node";
            this.trigger("copy", {
                node: F
            })
        },
        get_buffer: function() {
            return {
                mode: r,
                node: f,
                inst: q
            }
        },
        can_paste: function() {
            return r !== false && f !== false
        },
        paste: function(C, D) {
            C = this.get_node(C);
            if (!C || !r || !r.match(/^(copy_node|move_node)$/) || !f) {
                return false
            }
            if (this[r](f, C, D)) {
                this.trigger("paste", {
                    parent: C.id,
                    node: f,
                    mode: r
                })
            }
            f = false;
            r = false;
            q = false
        },
        edit: function(C, H) {
            C = this._open_to(C);
            if (!C || !C.length) {
                return false
            }
            var G = this._data.core.rtl
              , J = this.element.width()
              , I = C.children(".jstree-anchor")
              , M = p("<span>")
            /*!
				oi = obj.children("i:visible"),
				ai = a.children("i:visible"),
				w1 = oi.width() * oi.length,
				w2 = ai.width() * ai.length,
				*/
              
            , K = typeof H === "string" ? H : this.get_text(C)
              , E = p("<div />", {
                css: {
                    position: "absolute",
                    top: "-200px",
                    left: (G ? "0px" : "-1000px"),
                    visibility: "hidden"
                }
            }).appendTo("body")
              , D = p("<input />", {
                value: K,
                "class": "jstree-rename-input",
                css: {
                    padding: "0",
                    border: "1px solid silver",
                    "box-sizing": "border-box",
                    display: "inline-block",
                    height: (this._data.core.li_height) + "px",
                    lineHeight: (this._data.core.li_height) + "px",
                    width: "150px"
                },
                blur: p.proxy(function() {
                    var O = M.children(".jstree-rename-input")
                      , N = O.val();
                    if (N === "") {
                        N = K
                    }
                    E.remove();
                    M.replaceWith(I);
                    M.remove();
                    this.set_text(C, K);
                    if (this.rename_node(C, N) === false) {
                        this.set_text(C, K)
                    }
                }, this),
                keydown: function(O) {
                    var N = O.which;
                    if (N === 27) {
                        this.value = K
                    }
                    if (N === 27 || N === 13 || N === 37 || N === 38 || N === 39 || N === 40 || N === 32) {
                        O.stopImmediatePropagation()
                    }
                    if (N === 27 || N === 13) {
                        O.preventDefault();
                        this.blur()
                    }
                },
                click: function(N) {
                    N.stopImmediatePropagation()
                },
                mousedown: function(N) {
                    N.stopImmediatePropagation()
                },
                keyup: function(N) {
                    D.width(Math.min(E.text("pW" + this.value).width(), J))
                },
                keypress: function(N) {
                    if (N.which === 13) {
                        return false
                    }
                }
            })
              , F = {
                fontFamily: I.css("fontFamily") || "",
                fontSize: I.css("fontSize") || "",
                fontWeight: I.css("fontWeight") || "",
                fontStyle: I.css("fontStyle") || "",
                fontStretch: I.css("fontStretch") || "",
                fontVariant: I.css("fontVariant") || "",
                letterSpacing: I.css("letterSpacing") || "",
                wordSpacing: I.css("wordSpacing") || ""
            };
            this.set_text(C, "");
            M.attr("class", I.attr("class")).append(I.contents().clone()).append(D);
            I.replaceWith(M);
            E.css(F);
            D.css(F).width(Math.min(E.text("pW" + D[0].value).width(), J))[0].select()
        },
        set_theme: function(E, C) {
            if (!E) {
                return false
            }
            if (C === true) {
                var D = this.settings.core.themes.dir;
                if (!D) {
                    D = p.jstree.path + "/themes"
                }
                C = D + "/" + E + "/style.css"
            }
            if (C && p.inArray(C, v) === -1) {
                p("head").append('<link rel="stylesheet" href="' + C + '" type="text/css" />');
                v.push(C)
            }
            if (this._data.core.themes.name) {
                this.element.removeClass("jstree-" + this._data.core.themes.name)
            }
            this._data.core.themes.name = E;
            this.element.addClass("jstree-" + E);
            this.element[this.settings.core.themes.responsive ? "addClass" : "removeClass"]("jstree-" + E + "-responsive");
            this.trigger("set_theme", {
                theme: E
            })
        },
        get_theme: function() {
            return this._data.core.themes.name
        },
        set_theme_variant: function(C) {
            if (this._data.core.themes.variant) {
                this.element.removeClass("jstree-" + this._data.core.themes.name + "-" + this._data.core.themes.variant)
            }
            this._data.core.themes.variant = C;
            if (C) {
                this.element.addClass("jstree-" + this._data.core.themes.name + "-" + this._data.core.themes.variant)
            }
        },
        get_theme_variant: function() {
            return this._data.core.themes.variant
        },
        show_stripes: function() {
            this._data.core.themes.stripes = true;
            this.get_container_ul().addClass("jstree-striped")
        },
        hide_stripes: function() {
            this._data.core.themes.stripes = false;
            this.get_container_ul().removeClass("jstree-striped")
        },
        toggle_stripes: function() {
            if (this._data.core.themes.stripes) {
                this.hide_stripes()
            } else {
                this.show_stripes()
            }
        },
        show_dots: function() {
            this._data.core.themes.dots = true;
            this.get_container_ul().removeClass("jstree-no-dots")
        },
        hide_dots: function() {
            this._data.core.themes.dots = false;
            this.get_container_ul().addClass("jstree-no-dots")
        },
        toggle_dots: function() {
            if (this._data.core.themes.dots) {
                this.hide_dots()
            } else {
                this.show_dots()
            }
        },
        show_icons: function() {
            this._data.core.themes.icons = true;
            this.get_container_ul().removeClass("jstree-no-icons")
        },
        hide_icons: function() {
            this._data.core.themes.icons = false;
            this.get_container_ul().addClass("jstree-no-icons")
        },
        toggle_icons: function() {
            if (this._data.core.themes.icons) {
                this.hide_icons()
            } else {
                this.show_icons()
            }
        },
        set_icon: function(G, E) {
            var F, D, H, C;
            if (p.isArray(G)) {
                G = G.slice();
                for (F = 0,
                D = G.length; F < D; F++) {
                    this.set_icon(G[F], E)
                }
                return true
            }
            G = this.get_node(G);
            if (!G || G.id === "#") {
                return false
            }
            C = G.icon;
            G.icon = E;
            H = this.get_node(G, true).children(".jstree-anchor").children(".jstree-themeicon");
            if (E === false) {
                this.hide_icon(G)
            } else {
                if (E === true) {
                    H.removeClass("jstree-themeicon-custom " + C).css("background", "").removeAttr("rel")
                } else {
                    if (E.indexOf("/") === -1 && E.indexOf(".") === -1) {
                        H.removeClass(C).css("background", "");
                        H.addClass(E + " jstree-themeicon-custom").attr("rel", E)
                    } else {
                        H.removeClass(C).css("background", "");
                        H.addClass("jstree-themeicon-custom").css("background", "url('" + E + "') center center no-repeat").attr("rel", E)
                    }
                }
            }
            return true
        },
        get_icon: function(C) {
            C = this.get_node(C);
            return (!C || C.id === "#") ? false : C.icon
        },
        hide_icon: function(E) {
            var D, C;
            if (p.isArray(E)) {
                E = E.slice();
                for (D = 0,
                C = E.length; D < C; D++) {
                    this.hide_icon(E[D])
                }
                return true
            }
            E = this.get_node(E);
            if (!E || E === "#") {
                return false
            }
            E.icon = false;
            this.get_node(E, true).children(".jstree-anchor").children(".jstree-themeicon").addClass("jstree-themeicon-hidden");
            return true
        },
        show_icon: function(E) {
            var D, C, F;
            if (p.isArray(E)) {
                E = E.slice();
                for (D = 0,
                C = E.length; D < C; D++) {
                    this.show_icon(E[D])
                }
                return true
            }
            E = this.get_node(E);
            if (!E || E === "#") {
                return false
            }
            F = this.get_node(E, true);
            E.icon = F.length ? F.children(".jstree-anchor").children(".jstree-themeicon").attr("rel") : true;
            if (!E.icon) {
                E.icon = true
            }
            F.children(".jstree-anchor").children(".jstree-themeicon").removeClass("jstree-themeicon-hidden");
            return true
        }
    };
    p.vakata = {};
    p.vakata.attributes = function(D, E) {
        D = p(D)[0];
        var C = E ? {} : [];
        if (D && D.attributes) {
            p.each(D.attributes, function(G, F) {
                if (p.inArray(F.nodeName.toLowerCase(), ["style", "contenteditable", "hasfocus", "tabindex"]) !== -1) {
                    return
                }
                if (F.nodeValue !== null  && p.trim(F.nodeValue) !== "") {
                    if (E) {
                        C[F.nodeName] = F.nodeValue
                    } else {
                        C.push(F.nodeName)
                    }
                }
            })
        }
        return C
    }
    ;
    p.vakata.array_unique = function(G) {
        var D = [], F, E, C;
        for (F = 0,
        C = G.length; F < C; F++) {
            for (E = 0; E <= F; E++) {
                if (G[F] === G[E]) {
                    break
                }
            }
            if (E === F) {
                D.push(G[F])
            }
        }
        return D
    }
    ;
    p.vakata.array_remove = function(F, E, D) {
        var C = F.slice((D || E) + 1 || F.length);
        F.length = E < 0 ? F.length + E : E;
        F.push.apply(F, C);
        return F
    }
    ;
    p.vakata.array_remove_item = function(E, D) {
        var C = p.inArray(D, E);
        return C !== -1 ? p.vakata.array_remove(E, C) : E
    }
    ;
    (function() {
        var D = {}
          , E = function(G) {
            G = G.toLowerCase();
            var F = /(chrome)[ \/]([\w.]+)/.exec(G) || /(webkit)[ \/]([\w.]+)/.exec(G) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(G) || /(msie) ([\w.]+)/.exec(G) || (G.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(G)) || [];
            return {
                browser: F[1] || "",
                version: F[2] || "0"
            }
        }
          , C = E(window.navigator.userAgent);
        if (C.browser) {
            D[C.browser] = true;
            D.version = C.version
        }
        if (D.chrome) {
            D.webkit = true
        } else {
            if (D.webkit) {
                D.safari = true
            }
        }
        p.vakata.browser = D
    }());
    if (p.vakata.browser.msie && p.vakata.browser.version < 8) {
        p.jstree.defaults.core.animation = 0
    }
    var o = document.createElement("I");
    o.className = "jstree-icon jstree-checkbox";
    p.jstree.defaults.checkbox = {
        visible: true,
        three_state: true,
        whole_node: true,
        keep_selected_style: true
    };
    p.jstree.plugins.checkbox = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            this._data.checkbox.uto = false;
            this.element.on("init.jstree", p.proxy(function() {
                this._data.checkbox.visible = this.settings.checkbox.visible;
                if (!this.settings.checkbox.keep_selected_style) {
                    this.element.addClass("jstree-checkbox-no-clicked")
                }
            }, this)).on("loading.jstree", p.proxy(function() {
                this[this._data.checkbox.visible ? "show_checkboxes" : "hide_checkboxes"]()
            }, this));
            if (this.settings.checkbox.three_state) {
                this.element.on("changed.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree", p.proxy(function() {
                    if (this._data.checkbox.uto) {
                        clearTimeout(this._data.checkbox.uto)
                    }
                    this._data.checkbox.uto = setTimeout(p.proxy(this._undetermined, this), 50)
                }, this)).on("model.jstree", p.proxy(function(O, K) {
                    var F = this._model.data, E = F[K.parent], N = K.nodes, Q = [], P, M, I, H, G, J;
                    if (E.state.selected) {
                        for (M = 0,
                        I = N.length; M < I; M++) {
                            F[N[M]].state.selected = true
                        }
                        this._data.core.selected = this._data.core.selected.concat(N)
                    } else {
                        for (M = 0,
                        I = N.length; M < I; M++) {
                            if (F[N[M]].state.selected) {
                                for (H = 0,
                                G = F[N[M]].children_d.length; H < G; H++) {
                                    F[F[N[M]].children_d[H]].state.selected = true
                                }
                                this._data.core.selected = this._data.core.selected.concat(F[N[M]].children_d)
                            }
                        }
                    }
                    for (M = 0,
                    I = E.children_d.length; M < I; M++) {
                        if (!F[E.children_d[M]].children.length) {
                            Q.push(F[E.children_d[M]].parent)
                        }
                    }
                    Q = p.vakata.array_unique(Q);
                    for (H = 0,
                    G = Q.length; H < G; H++) {
                        E = F[Q[H]];
                        while (E && E.id !== "#") {
                            P = 0;
                            for (M = 0,
                            I = E.children.length; M < I; M++) {
                                P += F[E.children[M]].state.selected
                            }
                            if (P === I) {
                                E.state.selected = true;
                                this._data.core.selected.push(E.id);
                                J = this.get_node(E, true);
                                if (J && J.length) {
                                    J.children(".jstree-anchor").addClass("jstree-clicked")
                                }
                            } else {
                                break
                            }
                            E = this.get_node(E.parent)
                        }
                    }
                    this._data.core.selected = p.vakata.array_unique(this._data.core.selected)
                }, this)).on("select_node.jstree", p.proxy(function(M, J) {
                    var I = J.node, E = this._model.data, N = this.get_node(I.parent), F = this.get_node(I, true), K, G, O, H;
                    this._data.core.selected = p.vakata.array_unique(this._data.core.selected.concat(I.children_d));
                    for (K = 0,
                    G = I.children_d.length; K < G; K++) {
                        H = E[I.children_d[K]];
                        H.state.selected = true;
                        if (H && H.original && H.original.state && H.original.state.undetermined) {
                            H.original.state.undetermined = false
                        }
                    }
                    while (N && N.id !== "#") {
                        O = 0;
                        for (K = 0,
                        G = N.children.length; K < G; K++) {
                            O += E[N.children[K]].state.selected
                        }
                        if (O === G) {
                            N.state.selected = true;
                            this._data.core.selected.push(N.id);
                            H = this.get_node(N, true);
                            if (H && H.length) {
                                H.children(".jstree-anchor").addClass("jstree-clicked")
                            }
                        } else {
                            break
                        }
                        N = this.get_node(N.parent)
                    }
                    if (F.length) {
                        F.find(".jstree-anchor").addClass("jstree-clicked")
                    }
                }, this)).on("deselect_all.jstree", p.proxy(function(K, I) {
                    var J = this.get_node("#"), E = this._model.data, H, F, G;
                    for (H = 0,
                    F = J.children_d.length; H < F; H++) {
                        G = E[J.children_d[H]];
                        if (G && G.original && G.original.state && G.original.state.undetermined) {
                            G.original.state.undetermined = false
                        }
                    }
                }, this)).on("deselect_node.jstree", p.proxy(function(J, H) {
                    var I = H.node, K = this.get_node(I, true), G, E, F;
                    if (I && I.original && I.original.state && I.original.state.undetermined) {
                        I.original.state.undetermined = false
                    }
                    for (G = 0,
                    E = I.children_d.length; G < E; G++) {
                        F = this._model.data[I.children_d[G]];
                        F.state.selected = false;
                        if (F && F.original && F.original.state && F.original.state.undetermined) {
                            F.original.state.undetermined = false
                        }
                    }
                    for (G = 0,
                    E = I.parents.length; G < E; G++) {
                        F = this._model.data[I.parents[G]];
                        F.state.selected = false;
                        if (F && F.original && F.original.state && F.original.state.undetermined) {
                            F.original.state.undetermined = false
                        }
                        F = this.get_node(I.parents[G], true);
                        if (F && F.length) {
                            F.children(".jstree-anchor").removeClass("jstree-clicked")
                        }
                    }
                    F = [];
                    for (G = 0,
                    E = this._data.core.selected.length; G < E; G++) {
                        if (p.inArray(this._data.core.selected[G], I.children_d) === -1 && p.inArray(this._data.core.selected[G], I.parents) === -1) {
                            F.push(this._data.core.selected[G])
                        }
                    }
                    this._data.core.selected = p.vakata.array_unique(F);
                    if (K.length) {
                        K.find(".jstree-anchor").removeClass("jstree-clicked")
                    }
                }, this)).on("delete_node.jstree", p.proxy(function(K, I) {
                    var J = this.get_node(I.parent), E = this._model.data, H, F, M, G;
                    while (J && J.id !== "#") {
                        M = 0;
                        for (H = 0,
                        F = J.children.length; H < F; H++) {
                            M += E[J.children[H]].state.selected
                        }
                        if (M === F) {
                            J.state.selected = true;
                            this._data.core.selected.push(J.id);
                            G = this.get_node(J, true);
                            if (G && G.length) {
                                G.children(".jstree-anchor").addClass("jstree-clicked")
                            }
                        } else {
                            break
                        }
                        J = this.get_node(J.parent)
                    }
                }, this)).on("move_node.jstree", p.proxy(function(O, M) {
                    var H = M.is_multi, N = M.old_parent, E = this.get_node(M.parent), G = this._model.data, F, P, K, I, J;
                    if (!H) {
                        F = this.get_node(N);
                        while (F && F.id !== "#") {
                            P = 0;
                            for (K = 0,
                            I = F.children.length; K < I; K++) {
                                P += G[F.children[K]].state.selected
                            }
                            if (P === I) {
                                F.state.selected = true;
                                this._data.core.selected.push(F.id);
                                J = this.get_node(F, true);
                                if (J && J.length) {
                                    J.children(".jstree-anchor").addClass("jstree-clicked")
                                }
                            } else {
                                break
                            }
                            F = this.get_node(F.parent)
                        }
                    }
                    F = E;
                    while (F && F.id !== "#") {
                        P = 0;
                        for (K = 0,
                        I = F.children.length; K < I; K++) {
                            P += G[F.children[K]].state.selected
                        }
                        if (P === I) {
                            if (!F.state.selected) {
                                F.state.selected = true;
                                this._data.core.selected.push(F.id);
                                J = this.get_node(F, true);
                                if (J && J.length) {
                                    J.children(".jstree-anchor").addClass("jstree-clicked")
                                }
                            }
                        } else {
                            if (F.state.selected) {
                                F.state.selected = false;
                                this._data.core.selected = p.vakata.array_remove_item(this._data.core.selected, F.id);
                                J = this.get_node(F, true);
                                if (J && J.length) {
                                    J.children(".jstree-anchor").removeClass("jstree-clicked")
                                }
                            } else {
                                break
                            }
                        }
                        F = this.get_node(F.parent)
                    }
                }, this))
            }
        }
        ;
        this._undetermined = function() {
            var H, F, E = this._model.data, I = this._data.core.selected, J = [], G = this;
            for (H = 0,
            F = I.length; H < F; H++) {
                if (E[I[H]] && E[I[H]].parents) {
                    J = J.concat(E[I[H]].parents)
                }
            }
            this.element.find(".jstree-closed").not(":has(.jstree-children)").each(function() {
                var K = G.get_node(this), M;
                if (!K.state.loaded) {
                    if (K.original && K.original.state && K.original.state.undetermined && K.original.state.undetermined === true) {
                        J.push(K.id);
                        J = J.concat(K.parents)
                    }
                } else {
                    for (H = 0,
                    F = K.children_d.length; H < F; H++) {
                        M = E[K.children_d[H]];
                        if (!M.state.loaded && M.original && M.original.state && M.original.state.undetermined && M.original.state.undetermined === true) {
                            J.push(M.id);
                            J = J.concat(M.parents)
                        }
                    }
                }
            });
            J = p.vakata.array_unique(J);
            J = p.vakata.array_remove_item(J, "#");
            this.element.find(".jstree-undetermined").removeClass("jstree-undetermined");
            for (H = 0,
            F = J.length; H < F; H++) {
                if (!E[J[H]].state.selected) {
                    I = this.get_node(J[H], true);
                    if (I && I.length) {
                        I.children(".jstree-anchor").children(".jstree-checkbox").addClass("jstree-undetermined")
                    }
                }
            }
        }
        ;
        this.redraw_node = function(J, E, I) {
            J = D.redraw_node.call(this, J, E, I);
            if (J) {
                var H, F, G = null ;
                for (H = 0,
                F = J.childNodes.length; H < F; H++) {
                    if (J.childNodes[H] && J.childNodes[H].className && J.childNodes[H].className.indexOf("jstree-anchor") !== -1) {
                        G = J.childNodes[H];
                        break
                    }
                }
                if (G) {
                    G.insertBefore(o.cloneNode(false), G.childNodes[0])
                }
            }
            if (!I && this.settings.checkbox.three_state) {
                if (this._data.checkbox.uto) {
                    clearTimeout(this._data.checkbox.uto)
                }
                this._data.checkbox.uto = setTimeout(p.proxy(this._undetermined, this), 50)
            }
            return J
        }
        ;
        this.activate_node = function(F, E) {
            if (this.settings.checkbox.whole_node || p(E.target).hasClass("jstree-checkbox")) {
                E.ctrlKey = true
            }
            return D.activate_node.call(this, F, E)
        }
        ;
        this.show_checkboxes = function() {
            this._data.core.themes.checkboxes = true;
            this.get_container_ul().removeClass("jstree-no-checkboxes")
        }
        ;
        this.hide_checkboxes = function() {
            this._data.core.themes.checkboxes = false;
            this.get_container_ul().addClass("jstree-no-checkboxes")
        }
        ;
        this.toggle_checkboxes = function() {
            if (this._data.core.themes.checkboxes) {
                this.hide_checkboxes()
            } else {
                this.show_checkboxes()
            }
        }
    }
    ;
    p.jstree.defaults.contextmenu = {
        select_node: true,
        show_at_node: true,
        items: function(D, C) {
            return {
                create: {
                    separator_before: false,
                    separator_after: true,
                    _disabled: false,
                    label: "Create",
                    action: function(F) {
                        var E = p.jstree.reference(F.reference)
                          , G = E.get_node(F.reference);
                        E.create_node(G, {}, "last", function(H) {
                            setTimeout(function() {
                                E.edit(H)
                            }, 0)
                        })
                    }
                },
                rename: {
                    separator_before: false,
                    separator_after: false,
                    _disabled: false,
                    label: "Rename",
                    action: function(F) {
                        var E = p.jstree.reference(F.reference)
                          , G = E.get_node(F.reference);
                        E.edit(G)
                    }
                },
                remove: {
                    separator_before: false,
                    icon: false,
                    separator_after: false,
                    _disabled: false,
                    label: "Delete",
                    action: function(F) {
                        var E = p.jstree.reference(F.reference)
                          , G = E.get_node(F.reference);
                        if (E.is_selected(G)) {
                            E.delete_node(E.get_selected())
                        } else {
                            E.delete_node(G)
                        }
                    }
                },
                ccp: {
                    separator_before: true,
                    icon: false,
                    separator_after: false,
                    label: "Edit",
                    action: false,
                    submenu: {
                        cut: {
                            separator_before: false,
                            separator_after: false,
                            label: "Cut",
                            action: function(F) {
                                var E = p.jstree.reference(F.reference)
                                  , G = E.get_node(F.reference);
                                if (E.is_selected(G)) {
                                    E.cut(E.get_selected())
                                } else {
                                    E.cut(G)
                                }
                            }
                        },
                        copy: {
                            separator_before: false,
                            icon: false,
                            separator_after: false,
                            label: "Copy",
                            action: function(F) {
                                var E = p.jstree.reference(F.reference)
                                  , G = E.get_node(F.reference);
                                if (E.is_selected(G)) {
                                    E.copy(E.get_selected())
                                } else {
                                    E.copy(G)
                                }
                            }
                        },
                        paste: {
                            separator_before: false,
                            icon: false,
                            _disabled: function(E) {
                                return !p.jstree.reference(E.reference).can_paste()
                            },
                            separator_after: false,
                            label: "Paste",
                            action: function(F) {
                                var E = p.jstree.reference(F.reference)
                                  , G = E.get_node(F.reference);
                                E.paste(G)
                            }
                        }
                    }
                }
            }
        }
    };
    p.jstree.plugins.contextmenu = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            var E = 0;
            this.element.on("contextmenu.jstree", ".jstree-anchor", p.proxy(function(F) {
                F.preventDefault();
                E = F.ctrlKey ? F.timeStamp : 0;
                if (!this.is_loading(F.currentTarget)) {
                    this.show_contextmenu(F.currentTarget, F.pageX, F.pageY, F)
                }
            }, this)).on("click.jstree", ".jstree-anchor", p.proxy(function(F) {
                if (this._data.contextmenu.visible && (!E || F.timeStamp - E > 250)) {
                    p.vakata.context.hide()
                }
            }, this));
            p(document).on("context_hide.vakata", p.proxy(function() {
                this._data.contextmenu.visible = false
            }, this))
        }
        ;
        this.teardown = function() {
            if (this._data.contextmenu.visible) {
                p.vakata.context.hide()
            }
            D.teardown.call(this)
        }
        ;
        this.show_contextmenu = function(G, M, J, H) {
            G = this.get_node(G);
            if (!G || G.id === "#") {
                return false
            }
            var N = this.settings.contextmenu
              , I = this.get_node(G, true)
              , K = I.children(".jstree-anchor")
              , E = false
              , F = false;
            if (N.show_at_node || M === g || J === g) {
                E = K.offset();
                M = E.left;
                J = E.top + this._data.core.li_height
            }
            if (this.settings.contextmenu.select_node && !this.is_selected(G)) {
                this.deselect_all();
                this.select_node(G, false, false, H)
            }
            F = N.items;
            if (p.isFunction(F)) {
                F = F.call(this, G, p.proxy(function(O) {
                    this._show_contextmenu(G, M, J, O)
                }, this))
            }
            if (p.isPlainObject(F)) {
                this._show_contextmenu(G, M, J, F)
            }
        }
        ;
        this._show_contextmenu = function(H, E, J, G) {
            var I = this.get_node(H, true)
              , F = I.children(".jstree-anchor");
            p(document).one("context_show.vakata", p.proxy(function(N, M) {
                var K = "jstree-contextmenu jstree-" + this.get_theme() + "-contextmenu";
                p(M.element).addClass(K)
            }, this));
            this._data.contextmenu.visible = true;
            p.vakata.context.show(F, {
                x: E,
                y: J
            }, G);
            this.trigger("show_contextmenu", {
                node: H,
                x: E,
                y: J
            })
        }
    }
    ;
    (function(D) {
        var E = false
          , C = {
            element: false,
            reference: false,
            position_x: 0,
            position_y: 0,
            items: [],
            html: "",
            is_visible: false
        };
        D.vakata.context = {
            settings: {
                hide_onmouseleave: 0,
                icons: true
            },
            _trigger: function(F) {
                D(document).triggerHandler("context_" + F + ".vakata", {
                    reference: C.reference,
                    element: C.element,
                    position: {
                        x: C.position_x,
                        y: C.position_y
                    }
                })
            },
            _execute: function(F) {
                F = C.items[F];
                return F && (!F._disabled || (D.isFunction(F._disabled) && !F._disabled({
                    item: F,
                    reference: C.reference,
                    element: C.element
                }))) && F.action ? F.action.call(null , {
                    item: F,
                    reference: C.reference,
                    element: C.element,
                    position: {
                        x: C.position_x,
                        y: C.position_y
                    }
                }) : false
            },
            _parse: function(J, H) {
                if (!J) {
                    return false
                }
                if (!H) {
                    C.html = "";
                    C.items = []
                }
                var I = "", F = false, G;
                if (H) {
                    I += "<ul>"
                }
                D.each(J, function(K, M) {
                    if (!M) {
                        return true
                    }
                    C.items.push(M);
                    if (!F && M.separator_before) {
                        I += "<li class='vakata-context-separator'><a href='#' " + (D.vakata.context.settings.icons ? "" : 'style="margin-left:0px;"') + ">&#160;</a></li>"
                    }
                    F = false;
                    I += "<li class='" + (M._class || "") + (M._disabled === true || (D.isFunction(M._disabled) && M._disabled({
                        item: M,
                        reference: C.reference,
                        element: C.element
                    })) ? " vakata-contextmenu-disabled " : "") + "' " + (M.shortcut ? " data-shortcut='" + M.shortcut + "' " : "") + ">";
                    I += "<a href='#' rel='" + (C.items.length - 1) + "'>";
                    if (D.vakata.context.settings.icons) {
                        I += "<i ";
                        if (M.icon) {
                            if (M.icon.indexOf("/") !== -1 || M.icon.indexOf(".") !== -1) {
                                I += " style='background:url(\"" + M.icon + "\") center center no-repeat' "
                            } else {
                                I += " class='" + M.icon + "' "
                            }
                        }
                        I += "></i><span class='vakata-contextmenu-sep'>&#160;</span>"
                    }
                    I += (D.isFunction(M.label) ? M.label({
                        item: K,
                        reference: C.reference,
                        element: C.element
                    }) : M.label) + (M.shortcut ? ' <span class="vakata-contextmenu-shortcut vakata-contextmenu-shortcut-' + M.shortcut + '">' + (M.shortcut_label || "") + "</span>" : "") + "</a>";
                    if (M.submenu) {
                        G = D.vakata.context._parse(M.submenu, true);
                        if (G) {
                            I += G
                        }
                    }
                    I += "</li>";
                    if (M.separator_after) {
                        I += "<li class='vakata-context-separator'><a href='#' " + (D.vakata.context.settings.icons ? "" : 'style="margin-left:0px;"') + ">&#160;</a></li>";
                        F = true
                    }
                });
                I = I.replace(/<li class\='vakata-context-separator'\><\/li\>$/, "");
                if (H) {
                    I += "</ul>"
                }
                if (!H) {
                    C.html = I;
                    D.vakata.context._trigger("parse")
                }
                return I.length > 10 ? I : false
            },
            _show_submenu: function(M) {
                M = D(M);
                if (!M.length || !M.children("ul").length) {
                    return
                }
                var K = M.children("ul")
                  , F = M.offset().left + M.outerWidth()
                  , N = M.offset().top
                  , G = K.width()
                  , I = K.height()
                  , H = D(window).width() + D(window).scrollLeft()
                  , J = D(window).height() + D(window).scrollTop();
                if (E) {
                    M[F - (G + 10 + M.outerWidth()) < 0 ? "addClass" : "removeClass"]("vakata-context-left")
                } else {
                    M[F + G + 10 > H ? "addClass" : "removeClass"]("vakata-context-right")
                }
                if (N + I + 10 > J) {
                    K.css("bottom", "-1px")
                }
                K.show()
            },
            show: function(H, K, I) {
                var G, M, Q, P, R, J, F, O, N = true;
                if (C.element && C.element.length) {
                    C.element.width("")
                }
                switch (N) {
                case (!K && !H):
                    return false;
                case (!!K && !!H):
                    C.reference = H;
                    C.position_x = K.x;
                    C.position_y = K.y;
                    break;
                case (!K && !!H):
                    C.reference = H;
                    G = H.offset();
                    C.position_x = G.left + H.outerHeight();
                    C.position_y = G.top;
                    break;
                case (!!K && !H):
                    C.position_x = K.x;
                    C.position_y = K.y;
                    break
                }
                if (!!H && !I && D(H).data("vakata_contextmenu")) {
                    I = D(H).data("vakata_contextmenu")
                }
                if (D.vakata.context._parse(I)) {
                    C.element.html(C.html)
                }
                if (C.items.length) {
                    M = C.element;
                    Q = C.position_x;
                    P = C.position_y;
                    R = M.width();
                    J = M.height();
                    F = D(window).width() + D(window).scrollLeft();
                    O = D(window).height() + D(window).scrollTop();
                    if (E) {
                        Q -= M.outerWidth();
                        if (Q < D(window).scrollLeft() + 20) {
                            Q = D(window).scrollLeft() + 20
                        }
                    }
                    if (Q + R + 20 > F) {
                        Q = F - (R + 20)
                    }
                    if (P + J + 20 > O) {
                        P = O - (J + 20)
                    }
                    C.element.css({
                        left: Q,
                        top: P
                    }).show().find("a:eq(0)").focus().parent().addClass("vakata-context-hover");
                    C.is_visible = true;
                    D.vakata.context._trigger("show")
                }
            },
            hide: function() {
                if (C.is_visible) {
                    C.element.hide().find("ul").hide().end().find(":focus").blur();
                    C.is_visible = false;
                    D.vakata.context._trigger("hide")
                }
            }
        };
        D(function() {
            E = D("body").css("direction") === "rtl";
            var F = false;
            C.element = D("<ul class='vakata-context'></ul>");
            C.element.on("mouseenter", "li", function(G) {
                G.stopImmediatePropagation();
                if (D.contains(this, G.relatedTarget)) {
                    return
                }
                if (F) {
                    clearTimeout(F)
                }
                C.element.find(".vakata-context-hover").removeClass("vakata-context-hover").end();
                D(this).siblings().find("ul").hide().end().end().parentsUntil(".vakata-context", "li").addBack().addClass("vakata-context-hover");
                D.vakata.context._show_submenu(this)
            }).on("mouseleave", "li", function(G) {
                if (D.contains(this, G.relatedTarget)) {
                    return
                }
                D(this).find(".vakata-context-hover").addBack().removeClass("vakata-context-hover")
            }).on("mouseleave", function(G) {
                D(this).find(".vakata-context-hover").removeClass("vakata-context-hover");
                if (D.vakata.context.settings.hide_onmouseleave) {
                    F = setTimeout((function(H) {
                        return function() {
                            D.vakata.context.hide()
                        }
                    }(this)), D.vakata.context.settings.hide_onmouseleave)
                }
            }).on("click", "a", function(G) {
                G.preventDefault()
            }).on("mouseup", "a", function(G) {
                if (!D(this).blur().parent().hasClass("vakata-context-disabled") && D.vakata.context._execute(D(this).attr("rel")) !== false) {
                    D.vakata.context.hide()
                }
            }).on("keydown", "a", function(G) {
                var H = null ;
                switch (G.which) {
                case 13:
                case 32:
                    G.type = "mouseup";
                    G.preventDefault();
                    D(G.currentTarget).trigger(G);
                    break;
                case 37:
                    if (C.is_visible) {
                        C.element.find(".vakata-context-hover").last().parents("li:eq(0)").find("ul").hide().find(".vakata-context-hover").removeClass("vakata-context-hover").end().end().children("a").focus();
                        G.stopImmediatePropagation();
                        G.preventDefault()
                    }
                    break;
                case 38:
                    if (C.is_visible) {
                        H = C.element.find("ul:visible").addBack().last().children(".vakata-context-hover").removeClass("vakata-context-hover").prevAll("li:not(.vakata-context-separator)").first();
                        if (!H.length) {
                            H = C.element.find("ul:visible").addBack().last().children("li:not(.vakata-context-separator)").last()
                        }
                        H.addClass("vakata-context-hover").children("a").focus();
                        G.stopImmediatePropagation();
                        G.preventDefault()
                    }
                    break;
                case 39:
                    if (C.is_visible) {
                        C.element.find(".vakata-context-hover").last().children("ul").show().children("li:not(.vakata-context-separator)").removeClass("vakata-context-hover").first().addClass("vakata-context-hover").children("a").focus();
                        G.stopImmediatePropagation();
                        G.preventDefault()
                    }
                    break;
                case 40:
                    if (C.is_visible) {
                        H = C.element.find("ul:visible").addBack().last().children(".vakata-context-hover").removeClass("vakata-context-hover").nextAll("li:not(.vakata-context-separator)").first();
                        if (!H.length) {
                            H = C.element.find("ul:visible").addBack().last().children("li:not(.vakata-context-separator)").first()
                        }
                        H.addClass("vakata-context-hover").children("a").focus();
                        G.stopImmediatePropagation();
                        G.preventDefault()
                    }
                    break;
                case 27:
                    D.vakata.context.hide();
                    G.preventDefault();
                    break;
                default:
                    break
                }
            }).on("keydown", function(H) {
                H.preventDefault();
                var G = C.element.find(".vakata-contextmenu-shortcut-" + H.which).parent();
                if (G.parent().not(".vakata-context-disabled")) {
                    G.mouseup()
                }
            }).appendTo("body");
            D(document).on("mousedown", function(G) {
                if (C.is_visible && !D.contains(C.element[0], G.target)) {
                    D.vakata.context.hide()
                }
            }).on("context_show.vakata", function(H, G) {
                C.element.find("li:has(ul)").children("a").addClass("vakata-context-parent");
                if (E) {
                    C.element.addClass("vakata-context-rtl").css("direction", "rtl")
                }
                C.element.find("ul").hide().end()
            })
        })
    }(p));
    p.jstree.defaults.dnd = {
        copy: true,
        open_timeout: 500,
        is_draggable: true,
        check_while_dragging: true,
        always_copy: false
    };
    p.jstree.plugins.dnd = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            this.element.on("mousedown.jstree touchstart.jstree", ".jstree-anchor", p.proxy(function(G) {
                var F = this.get_node(G.target)
                  , E = this.is_selected(F) ? this.get_selected().length : 1;
                if (F && F.id && F.id !== "#" && (G.which === 1 || G.type === "touchstart") && (this.settings.dnd.is_draggable === true || (p.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (E > 1 ? this.get_selected(true) : [F]))))) {
                    this.element.trigger("mousedown.jstree");
                    return p.vakata.dnd.start(G, {
                        jstree: true,
                        origin: this,
                        obj: this.get_node(F, true),
                        nodes: E > 1 ? this.get_selected() : [F.id]
                    }, '<div id="jstree-dnd" class="jstree-' + this.get_theme() + '"><i class="jstree-icon jstree-er"></i>' + (E > 1 ? E + " " + this.get_string("nodes") : this.get_text(G.currentTarget, true)) + '<ins class="jstree-copy" style="display:none;">+</ins></div>')
                }
            }, this))
        }
    }
    ;
    p(function() {
        var F = false
          , E = false
          , D = false
          , C = p('<div id="jstree-marker">&#160;</div>').hide().appendTo("body");
        p(document).bind("dnd_start.vakata", function(H, G) {
            F = false
        }).bind("dnd_move.vakata", function(W, Z) {
            if (D) {
                clearTimeout(D)
            }
            if (!Z.data.jstree) {
                return
            }
            if (Z.event.target.id && Z.event.target.id === "jstree-marker") {
                return
            }
            var G = p.jstree.reference(Z.event.target), I = false, Y = false, H = false, T, O, V, P, U, Q, N, M, K, J, R, S;
            if (G && G._data && G._data.dnd) {
                C.attr("class", "jstree-" + G.get_theme());
                Z.helper.children().attr("class", "jstree-" + G.get_theme()).find(".jstree-copy:eq(0)")[Z.data.origin && (Z.data.origin.settings.dnd.always_copy || (Z.data.origin.settings.dnd.copy && (Z.event.metaKey || Z.event.ctrlKey))) ? "show" : "hide"]();
                if ((Z.event.target === G.element[0] || Z.event.target === G.get_container_ul()[0]) && G.get_container_ul().children().length === 0) {
                    N = true;
                    for (M = 0,
                    K = Z.data.nodes.length; M < K; M++) {
                        N = N && G.check((Z.data.origin && (Z.data.origin.settings.dnd.always_copy || (Z.data.origin.settings.dnd.copy && (Z.event.metaKey || Z.event.ctrlKey))) ? "copy_node" : "move_node"), (Z.data.origin && Z.data.origin !== G ? Z.data.origin.get_node(Z.data.nodes[M]) : Z.data.nodes[M]), "#", "last", {
                            dnd: true,
                            ref: G.get_node("#"),
                            pos: "i",
                            is_multi: (Z.data.origin && Z.data.origin !== G),
                            is_foreign: (!Z.data.origin)
                        });
                        if (!N) {
                            break
                        }
                    }
                    if (N) {
                        F = {
                            ins: G,
                            par: "#",
                            pos: "last"
                        };
                        C.hide();
                        Z.helper.find(".jstree-icon:eq(0)").removeClass("jstree-er").addClass("jstree-ok");
                        return
                    }
                } else {
                    I = p(Z.event.target).closest(".jstree-anchor");
                    if (I && I.length && I.parent().is(".jstree-closed, .jstree-open, .jstree-leaf")) {
                        Y = I.offset();
                        H = Z.event.pageY - Y.top;
                        V = I.height();
                        if (H < V / 3) {
                            Q = ["b", "i", "a"]
                        } else {
                            if (H > V - V / 3) {
                                Q = ["a", "i", "b"]
                            } else {
                                Q = H > V / 2 ? ["i", "a", "b"] : ["i", "b", "a"]
                            }
                        }
                        p.each(Q, function(ab, aa) {
                            switch (aa) {
                            case "b":
                                T = Y.left - 6;
                                O = Y.top - 5;
                                P = G.get_parent(I);
                                U = I.parent().index();
                                break;
                            case "i":
                                T = Y.left - 2;
                                O = Y.top - 5 + V / 2 + 1;
                                P = G.get_node(I.parent()).id;
                                U = 0;
                                break;
                            case "a":
                                T = Y.left - 6;
                                O = Y.top - 5 + V;
                                P = G.get_parent(I);
                                U = I.parent().index() + 1;
                                break
                            }
                            /*!
								// TODO: moving inside, but the node is not yet loaded?
								// the check will work anyway, as when moving the node will be loaded first and checked again
								if(v === 'i' && !ins.is_loaded(p)) { }
								*/
                            N = true;
                            for (M = 0,
                            K = Z.data.nodes.length; M < K; M++) {
                                J = Z.data.origin && (Z.data.origin.settings.dnd.always_copy || (Z.data.origin.settings.dnd.copy && (Z.event.metaKey || Z.event.ctrlKey))) ? "copy_node" : "move_node";
                                R = U;
                                if (J === "move_node" && aa === "a" && (Z.data.origin && Z.data.origin === G) && P === G.get_parent(Z.data.nodes[M])) {
                                    S = G.get_node(P);
                                    if (R > p.inArray(Z.data.nodes[M], S.children)) {
                                        R -= 1
                                    }
                                }
                                N = N && ((G && G.settings && G.settings.dnd && G.settings.dnd.check_while_dragging === false) || G.check(J, (Z.data.origin && Z.data.origin !== G ? Z.data.origin.get_node(Z.data.nodes[M]) : Z.data.nodes[M]), P, R, {
                                    dnd: true,
                                    ref: G.get_node(I.parent()),
                                    pos: aa,
                                    is_multi: (Z.data.origin && Z.data.origin !== G),
                                    is_foreign: (!Z.data.origin)
                                }));
                                if (!N) {
                                    if (G && G.last_error) {
                                        E = G.last_error()
                                    }
                                    break
                                }
                            }
                            if (N) {
                                if (aa === "i" && I.parent().is(".jstree-closed") && G.settings.dnd.open_timeout) {
                                    D = setTimeout((function(ac, ad) {
                                        return function() {
                                            ac.open_node(ad)
                                        }
                                    }(G, I)), G.settings.dnd.open_timeout)
                                }
                                F = {
                                    ins: G,
                                    par: P,
                                    pos: U
                                };
                                C.css({
                                    left: T + "px",
                                    top: O + "px"
                                }).show();
                                Z.helper.find(".jstree-icon:eq(0)").removeClass("jstree-er").addClass("jstree-ok");
                                E = {};
                                Q = true;
                                return false
                            }
                        });
                        if (Q === true) {
                            return
                        }
                    }
                }
            }
            F = false;
            Z.helper.find(".jstree-icon").removeClass("jstree-ok").addClass("jstree-er");
            C.hide()
        }).bind("dnd_scroll.vakata", function(H, G) {
            if (!G.data.jstree) {
                return
            }
            C.hide();
            F = false;
            G.helper.find(".jstree-icon:eq(0)").removeClass("jstree-ok").addClass("jstree-er")
        }).bind("dnd_stop.vakata", function(K, J) {
            if (D) {
                clearTimeout(D)
            }
            if (!J.data.jstree) {
                return
            }
            C.hide();
            var I, H, G = [];
            if (F) {
                for (I = 0,
                H = J.data.nodes.length; I < H; I++) {
                    G[I] = J.data.origin ? J.data.origin.get_node(J.data.nodes[I]) : J.data.nodes[I];
                    if (J.data.origin) {
                        G[I].instance = J.data.origin
                    }
                }
                F.ins[J.data.origin && (J.data.origin.settings.dnd.always_copy || (J.data.origin.settings.dnd.copy && (J.event.metaKey || J.event.ctrlKey))) ? "copy_node" : "move_node"](G, F.par, F.pos)
            } else {
                I = p(J.event.target).closest(".jstree");
                if (I.length && E && E.error && E.error === "check") {
                    I = I.jstree(true);
                    if (I) {
                        I.settings.core.error.call(this, E)
                    }
                }
            }
        }).bind("keyup keydown", function(H, G) {
            G = p.vakata.dnd._get();
            if (G.data && G.data.jstree) {
                G.helper.find(".jstree-copy:eq(0)")[G.data.origin && (G.data.origin.settings.dnd.always_copy || (G.data.origin.settings.dnd.copy && (H.metaKey || H.ctrlKey))) ? "show" : "hide"]()
            }
        })
    });
    (function(D) {
        var C = {
            element: false,
            is_down: false,
            is_drag: false,
            helper: false,
            helper_w: 0,
            data: false,
            init_x: 0,
            init_y: 0,
            scroll_l: 0,
            scroll_t: 0,
            scroll_e: false,
            scroll_i: false
        };
        D.vakata.dnd = {
            settings: {
                scroll_speed: 10,
                scroll_proximity: 20,
                helper_left: 5,
                helper_top: 10,
                threshold: 5
            },
            _trigger: function(G, F) {
                var E = D.vakata.dnd._get();
                E.event = F;
                D(document).triggerHandler("dnd_" + G + ".vakata", E)
            },
            _get: function() {
                return {
                    data: C.data,
                    element: C.element,
                    helper: C.helper
                }
            },
            _clean: function() {
                if (C.helper) {
                    C.helper.remove()
                }
                if (C.scroll_i) {
                    clearInterval(C.scroll_i);
                    C.scroll_i = false
                }
                C = {
                    element: false,
                    is_down: false,
                    is_drag: false,
                    helper: false,
                    helper_w: 0,
                    data: false,
                    init_x: 0,
                    init_y: 0,
                    scroll_l: 0,
                    scroll_t: 0,
                    scroll_e: false,
                    scroll_i: false
                };
                D(document).off("mousemove touchmove", D.vakata.dnd.drag);
                D(document).off("mouseup touchend", D.vakata.dnd.stop)
            },
            _scroll: function(G) {
                if (!C.scroll_e || (!C.scroll_l && !C.scroll_t)) {
                    if (C.scroll_i) {
                        clearInterval(C.scroll_i);
                        C.scroll_i = false
                    }
                    return false
                }
                if (!C.scroll_i) {
                    C.scroll_i = setInterval(D.vakata.dnd._scroll, 100);
                    return false
                }
                if (G === true) {
                    return false
                }
                var F = C.scroll_e.scrollTop()
                  , E = C.scroll_e.scrollLeft();
                C.scroll_e.scrollTop(F + C.scroll_t * D.vakata.dnd.settings.scroll_speed);
                C.scroll_e.scrollLeft(E + C.scroll_l * D.vakata.dnd.settings.scroll_speed);
                if (F !== C.scroll_e.scrollTop() || E !== C.scroll_e.scrollLeft()) {
                    D.vakata.dnd._trigger("scroll", C.scroll_e)
                }
            },
            start: function(G, F, E) {
                if (G.type === "touchstart" && G.originalEvent && G.originalEvent.changedTouches && G.originalEvent.changedTouches[0]) {
                    G.pageX = G.originalEvent.changedTouches[0].pageX;
                    G.pageY = G.originalEvent.changedTouches[0].pageY;
                    G.target = document.elementFromPoint(G.originalEvent.changedTouches[0].pageX - window.pageXOffset, G.originalEvent.changedTouches[0].pageY - window.pageYOffset)
                }
                if (C.is_drag) {
                    D.vakata.dnd.stop({})
                }
                try {
                    G.currentTarget.unselectable = "on";
                    G.currentTarget.onselectstart = function() {
                        return false
                    }
                    ;
                    if (G.currentTarget.style) {
                        G.currentTarget.style.MozUserSelect = "none"
                    }
                } catch (H) {}
                C.init_x = G.pageX;
                C.init_y = G.pageY;
                C.data = F;
                C.is_down = true;
                C.element = G.currentTarget;
                if (E !== false) {
                    C.helper = D("<div id='vakata-dnd'></div>").html(E).css({
                        display: "block",
                        margin: "0",
                        padding: "0",
                        position: "absolute",
                        top: "-2000px",
                        lineHeight: "16px",
                        zIndex: "10000"
                    })
                }
                D(document).bind("mousemove touchmove", D.vakata.dnd.drag);
                D(document).bind("mouseup touchend", D.vakata.dnd.stop);
                return false
            },
            drag: function(K) {
                if (K.type === "touchmove" && K.originalEvent && K.originalEvent.changedTouches && K.originalEvent.changedTouches[0]) {
                    K.pageX = K.originalEvent.changedTouches[0].pageX;
                    K.pageY = K.originalEvent.changedTouches[0].pageY;
                    K.target = document.elementFromPoint(K.originalEvent.changedTouches[0].pageX - window.pageXOffset, K.originalEvent.changedTouches[0].pageY - window.pageYOffset)
                }
                if (!C.is_down) {
                    return
                }
                if (!C.is_drag) {
                    if (Math.abs(K.pageX - C.init_x) > D.vakata.dnd.settings.threshold || Math.abs(K.pageY - C.init_y) > D.vakata.dnd.settings.threshold) {
                        if (C.helper) {
                            C.helper.appendTo("body");
                            C.helper_w = C.helper.outerWidth()
                        }
                        C.is_drag = true;
                        D.vakata.dnd._trigger("start", K)
                    } else {
                        return
                    }
                }
                var M = false
                  , P = false
                  , N = false
                  , F = false
                  , E = false
                  , I = false
                  , H = false
                  , J = false
                  , O = false
                  , G = false;
                C.scroll_t = 0;
                C.scroll_l = 0;
                C.scroll_e = false;
                D(D(K.target).parentsUntil("body").addBack().get().reverse()).filter(function() {
                    return (/^auto|scroll$/).test(D(this).css("overflow")) && (this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth)
                }).each(function() {
                    var Q = D(this)
                      , R = Q.offset();
                    if (this.scrollHeight > this.offsetHeight) {
                        if (R.top + Q.height() - K.pageY < D.vakata.dnd.settings.scroll_proximity) {
                            C.scroll_t = 1
                        }
                        if (K.pageY - R.top < D.vakata.dnd.settings.scroll_proximity) {
                            C.scroll_t = -1
                        }
                    }
                    if (this.scrollWidth > this.offsetWidth) {
                        if (R.left + Q.width() - K.pageX < D.vakata.dnd.settings.scroll_proximity) {
                            C.scroll_l = 1
                        }
                        if (K.pageX - R.left < D.vakata.dnd.settings.scroll_proximity) {
                            C.scroll_l = -1
                        }
                    }
                    if (C.scroll_t || C.scroll_l) {
                        C.scroll_e = D(this);
                        return false
                    }
                });
                if (!C.scroll_e) {
                    M = D(document);
                    P = D(window);
                    N = M.height();
                    F = P.height();
                    E = M.width();
                    I = P.width();
                    H = M.scrollTop();
                    J = M.scrollLeft();
                    if (N > F && K.pageY - H < D.vakata.dnd.settings.scroll_proximity) {
                        C.scroll_t = -1
                    }
                    if (N > F && F - (K.pageY - H) < D.vakata.dnd.settings.scroll_proximity) {
                        C.scroll_t = 1
                    }
                    if (E > I && K.pageX - J < D.vakata.dnd.settings.scroll_proximity) {
                        C.scroll_l = -1
                    }
                    if (E > I && I - (K.pageX - J) < D.vakata.dnd.settings.scroll_proximity) {
                        C.scroll_l = 1
                    }
                    if (C.scroll_t || C.scroll_l) {
                        C.scroll_e = M
                    }
                }
                if (C.scroll_e) {
                    D.vakata.dnd._scroll(true)
                }
                if (C.helper) {
                    O = parseInt(K.pageY + D.vakata.dnd.settings.helper_top, 10);
                    G = parseInt(K.pageX + D.vakata.dnd.settings.helper_left, 10);
                    if (N && O + 25 > N) {
                        O = N - 50
                    }
                    if (E && G + C.helper_w > E) {
                        G = E - (C.helper_w + 2)
                    }
                    C.helper.css({
                        left: G + "px",
                        top: O + "px"
                    })
                }
                D.vakata.dnd._trigger("move", K)
            },
            stop: function(E) {
                if (E.type === "touchend" && E.originalEvent && E.originalEvent.changedTouches && E.originalEvent.changedTouches[0]) {
                    E.pageX = E.originalEvent.changedTouches[0].pageX;
                    E.pageY = E.originalEvent.changedTouches[0].pageY;
                    E.target = document.elementFromPoint(E.originalEvent.changedTouches[0].pageX - window.pageXOffset, E.originalEvent.changedTouches[0].pageY - window.pageYOffset)
                }
                if (C.is_drag) {
                    D.vakata.dnd._trigger("stop", E)
                }
                D.vakata.dnd._clean()
            }
        }
    }(jQuery));
    p.jstree.defaults.search = {
        ajax: false,
        fuzzy: true,
        case_sensitive: false,
        show_only_matches: false,
        close_opened_onclear: true,
        search_leaves_only: false
    };
    p.jstree.plugins.search = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            this._data.search.str = "";
            this._data.search.dom = p();
            this._data.search.res = [];
            this._data.search.opn = [];
            this.element.on("before_open.jstree", p.proxy(function(K, J) {
                var F, E, I, H = this._data.search.res, G = [], M = p();
                if (H && H.length) {
                    this._data.search.dom = p();
                    for (F = 0,
                    E = H.length; F < E; F++) {
                        G = G.concat(this.get_node(H[F]).parents);
                        I = this.get_node(H[F], true);
                        if (I) {
                            this._data.search.dom = this._data.search.dom.add(I)
                        }
                    }
                    G = p.vakata.array_unique(G);
                    for (F = 0,
                    E = G.length; F < E; F++) {
                        if (G[F] === "#") {
                            continue
                        }
                        I = this.get_node(G[F], true);
                        if (I) {
                            M = M.add(I)
                        }
                    }
                    this._data.search.dom.children(".jstree-anchor").addClass("jstree-search");
                    if (this.settings.search.show_only_matches && this._data.search.res.length) {
                        this.element.find(".jstree-node").hide().filter(".jstree-last").filter(function() {
                            return this.nextSibling
                        }).removeClass("jstree-last");
                        M = M.add(this._data.search.dom);
                        M.parentsUntil(".jstree").addBack().show().filter(".jstree-children").each(function() {
                            p(this).children(".jstree-node:visible").eq(-1).addClass("jstree-last")
                        })
                    }
                }
            }, this));
            if (this.settings.search.show_only_matches) {
                this.element.on("search.jstree", function(F, E) {
                    if (E.nodes.length) {
                        p(this).find(".jstree-node").hide().filter(".jstree-last").filter(function() {
                            return this.nextSibling
                        }).removeClass("jstree-last");
                        E.nodes.parentsUntil(".jstree").addBack().show().filter(".jstree-children").each(function() {
                            p(this).children(".jstree-node:visible").eq(-1).addClass("jstree-last")
                        })
                    }
                }).on("clear_search.jstree", function(F, E) {
                    if (E.nodes.length) {
                        p(this).find(".jstree-node").css("display", "").filter(".jstree-last").filter(function() {
                            return this.nextSibling
                        }).removeClass("jstree-last")
                    }
                })
            }
        }
        ;
        this.search = function(J, M) {
            if (J === false || p.trim(J) === "") {
                return this.clear_search()
            }
            var N = this.settings.search, K = N.ajax ? N.ajax : false, I = null , E = [], F = [], H, G;
            if (this._data.search.res.length) {
                this.clear_search()
            }
            if (!M && K !== false) {
                if (p.isFunction(K)) {
                    return K.call(this, J, p.proxy(function(O) {
                        if (O && O.d) {
                            O = O.d
                        }
                        this._load_nodes(!p.isArray(O) ? [] : O, function() {
                            this.search(J, true)
                        })
                    }, this))
                } else {
                    K = p.extend({}, K);
                    if (!K.data) {
                        K.data = {}
                    }
                    K.data.str = J;
                    return p.ajax(K).fail(p.proxy(function() {
                        this._data.core.last_error = {
                            error: "ajax",
                            plugin: "search",
                            id: "search_01",
                            reason: "Could not load search parents",
                            data: JSON.stringify(K)
                        };
                        this.settings.core.error.call(this, this._data.core.last_error)
                    }, this)).done(p.proxy(function(O) {
                        if (O && O.d) {
                            O = O.d
                        }
                        this._load_nodes(!p.isArray(O) ? [] : O, function() {
                            this.search(J, true)
                        })
                    }, this))
                }
            }
            this._data.search.str = J;
            this._data.search.dom = p();
            this._data.search.res = [];
            this._data.search.opn = [];
            I = new p.vakata.search(J,true,{
                caseSensitive: N.case_sensitive,
                fuzzy: N.fuzzy
            });
            p.each(this._model.data, function(P, O) {
                if (O.text && I.search(O.text).isMatch && (!N.search_leaves_only || (O.state.loaded && O.children.length === 0))) {
                    E.push(P);
                    F = F.concat(O.parents)
                }
            });
            if (E.length) {
                F = p.vakata.array_unique(F);
                this._search_open(F);
                for (H = 0,
                G = E.length; H < G; H++) {
                    I = this.get_node(E[H], true);
                    if (I) {
                        this._data.search.dom = this._data.search.dom.add(I)
                    }
                }
                this._data.search.res = E;
                this._data.search.dom.children(".jstree-anchor").addClass("jstree-search")
            }
            this.trigger("search", {
                nodes: this._data.search.dom,
                str: J,
                res: this._data.search.res
            })
        }
        ;
        this.clear_search = function() {
            this._data.search.dom.children(".jstree-anchor").removeClass("jstree-search");
            if (this.settings.search.close_opened_onclear) {
                this.close_node(this._data.search.opn, 0)
            }
            this.trigger("clear_search", {
                nodes: this._data.search.dom,
                str: this._data.search.str,
                res: this._data.search.res
            });
            this._data.search.str = "";
            this._data.search.res = [];
            this._data.search.opn = [];
            this._data.search.dom = p()
        }
        ;
        this._search_open = function(F) {
            var E = this;
            p.each(F.concat([]), function(H, G) {
                if (G === "#") {
                    return true
                }
                try {
                    G = p("#" + G.replace(p.jstree.idregex, "\\$&"), E.element)
                } catch (I) {}
                if (G && G.length) {
                    if (E.is_closed(G)) {
                        E._data.search.opn.push(G[0].id);
                        E.open_node(G, function() {
                            E._search_open(F)
                        }, 0)
                    }
                }
            })
        }
    }
    ;
    (function(C) {
        C.vakata.search = function(I, G, O) {
            O = O || {};
            if (O.fuzzy !== false) {
                O.fuzzy = true
            }
            I = O.caseSensitive ? I : I.toLowerCase();
            var K = O.location || 0, M = O.distance || 100, J = O.threshold || 0.6, D = I.length, E, F, H, N;
            if (D > 32) {
                O.fuzzy = false
            }
            if (O.fuzzy) {
                E = 1 << (D - 1);
                F = (function() {
                    var P = {}
                      , Q = 0;
                    for (Q = 0; Q < D; Q++) {
                        P[I.charAt(Q)] = 0
                    }
                    for (Q = 0; Q < D; Q++) {
                        P[I.charAt(Q)] |= 1 << (D - Q - 1)
                    }
                    return P
                }());
                H = function(S, P) {
                    var R = S / D
                      , Q = Math.abs(K - P);
                    if (!M) {
                        return Q ? 1 : R
                    }
                    return R + (Q / M)
                }
            }
            N = function(ad) {
                ad = O.caseSensitive ? ad : ad.toLowerCase();
                if (I === ad || ad.indexOf(I) !== -1) {
                    return {
                        isMatch: true,
                        score: 0
                    }
                }
                if (!O.fuzzy) {
                    return {
                        isMatch: false,
                        score: 1
                    }
                }
                var Y, W, ac = ad.length, T = J, V = ad.indexOf(I, K), aa, S, Q = D + ac, P, R, ab, af, ae, U = 1, Z = [];
                if (V !== -1) {
                    T = Math.min(H(0, V), T);
                    V = ad.lastIndexOf(I, K + D);
                    if (V !== -1) {
                        T = Math.min(H(0, V), T)
                    }
                }
                V = -1;
                for (Y = 0; Y < D; Y++) {
                    aa = 0;
                    S = Q;
                    while (aa < S) {
                        if (H(Y, K + S) <= T) {
                            aa = S
                        } else {
                            Q = S
                        }
                        S = Math.floor((Q - aa) / 2 + aa)
                    }
                    Q = S;
                    R = Math.max(1, K - S + 1);
                    ab = Math.min(K + S, ac) + D;
                    af = new Array(ab + 2);
                    af[ab + 1] = (1 << Y) - 1;
                    for (W = ab; W >= R; W--) {
                        ae = F[ad.charAt(W - 1)];
                        if (Y === 0) {
                            af[W] = ((af[W + 1] << 1) | 1) & ae
                        } else {
                            af[W] = ((af[W + 1] << 1) | 1) & ae | (((P[W + 1] | P[W]) << 1) | 1) | P[W + 1]
                        }
                        if (af[W] & E) {
                            U = H(Y, W - 1);
                            if (U <= T) {
                                T = U;
                                V = W - 1;
                                Z.push(V);
                                if (V > K) {
                                    R = Math.max(1, 2 * K - V)
                                } else {
                                    break
                                }
                            }
                        }
                    }
                    if (H(Y + 1, K) > T) {
                        break
                    }
                    P = af
                }
                return {
                    isMatch: V >= 0,
                    score: U
                }
            }
            ;
            return G === true ? {
                search: N
            } : N(G)
        }
    }(jQuery));
    p.jstree.defaults.sort = function(D, C) {
        return this.get_text(D) > this.get_text(C) ? 1 : -1
    }
    ;
    p.jstree.plugins.sort = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            this.element.on("model.jstree", p.proxy(function(F, E) {
                this.sort(E.parent, true)
            }, this)).on("rename_node.jstree create_node.jstree", p.proxy(function(F, E) {
                this.sort(E.parent || E.node.parent, false);
                this.redraw_node(E.parent || E.node.parent, true)
            }, this)).on("move_node.jstree copy_node.jstree", p.proxy(function(F, E) {
                this.sort(E.parent, false);
                this.redraw_node(E.parent, true)
            }, this))
        }
        ;
        this.sort = function(H, E) {
            var G, F;
            H = this.get_node(H);
            if (H && H.children && H.children.length) {
                H.children.sort(p.proxy(this.settings.sort, this));
                if (E) {
                    for (G = 0,
                    F = H.children_d.length; G < F; G++) {
                        this.sort(H.children_d[G], false)
                    }
                }
            }
        }
    }
    ;
    var z = false;
    p.jstree.defaults.state = {
        key: "jstree",
        events: "changed.jstree open_node.jstree close_node.jstree",
        ttl: false,
        filter: false
    };
    p.jstree.plugins.state = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            var E = p.proxy(function() {
                this.element.on(this.settings.state.events, p.proxy(function() {
                    if (z) {
                        clearTimeout(z)
                    }
                    z = setTimeout(p.proxy(function() {
                        this.save_state()
                    }, this), 100)
                }, this))
            }, this);
            this.element.on("ready.jstree", p.proxy(function(G, F) {
                this.element.one("restore_state.jstree", E);
                if (!this.restore_state()) {
                    E()
                }
            }, this))
        }
        ;
        this.save_state = function() {
            var E = {
                state: this.get_state(),
                ttl: this.settings.state.ttl,
                sec: +(new Date())
            };
            p.vakata.storage.set(this.settings.state.key, JSON.stringify(E))
        }
        ;
        this.restore_state = function() {
            var E = p.vakata.storage.get(this.settings.state.key);
            if (!!E) {
                try {
                    E = JSON.parse(E)
                } catch (F) {
                    return false
                }
            }
            if (!!E && E.ttl && E.sec && +(new Date()) - E.sec > E.ttl) {
                return false
            }
            if (!!E && E.state) {
                E = E.state
            }
            if (!!E && p.isFunction(this.settings.state.filter)) {
                E = this.settings.state.filter.call(this, E)
            }
            if (!!E) {
                this.element.one("set_state.jstree", function(H, G) {
                    G.instance.trigger("restore_state", {
                        state: p.extend(true, {}, E)
                    })
                });
                this.set_state(E);
                return true
            }
            return false
        }
        ;
        this.clear_state = function() {
            return p.vakata.storage.del(this.settings.state.key)
        }
    }
    ;
    (function(C, D) {
        C.vakata.storage = {
            set: function(E, F) {
                return window.localStorage.setItem(E, F)
            },
            get: function(E) {
                return window.localStorage.getItem(E)
            },
            del: function(E) {
                return window.localStorage.removeItem(E)
            }
        }
    }(jQuery));
    p.jstree.defaults.types = {
        "#": {},
        "default": {}
    };
    p.jstree.plugins.types = function(C, D) {
        this.init = function(H, F) {
            var G, E;
            if (F && F.types && F.types["default"]) {
                for (G in F.types) {
                    if (G !== "default" && G !== "#" && F.types.hasOwnProperty(G)) {
                        for (E in F.types["default"]) {
                            if (F.types["default"].hasOwnProperty(E) && F.types[G][E] === g) {
                                F.types[G][E] = F.types["default"][E]
                            }
                        }
                    }
                }
            }
            D.init.call(this, H, F);
            this._model.data["#"].type = "#"
        }
        ;
        this.refresh = function(E) {
            D.refresh.call(this, E);
            this._model.data["#"].type = "#"
        }
        ;
        this.bind = function() {
            this.element.on("model.jstree", p.proxy(function(J, I) {
                var E = this._model.data, M = I.nodes, H = this.settings.types, G, F, K = "default";
                for (G = 0,
                F = M.length; G < F; G++) {
                    K = "default";
                    if (E[M[G]].original && E[M[G]].original.type && H[E[M[G]].original.type]) {
                        K = E[M[G]].original.type
                    }
                    if (E[M[G]].data && E[M[G]].data.jstree && E[M[G]].data.jstree.type && H[E[M[G]].data.jstree.type]) {
                        K = E[M[G]].data.jstree.type
                    }
                    E[M[G]].type = K;
                    if (E[M[G]].icon === true && H[K].icon !== g) {
                        E[M[G]].icon = H[K].icon
                    }
                }
            }, this));
            D.bind.call(this)
        }
        ;
        this.get_json = function(K, G, M) {
            var J, F, E = this._model.data, I = G ? p.extend(true, {}, G, {
                no_id: false
            }) : {}, H = D.get_json.call(this, K, I, M);
            if (H === false) {
                return false
            }
            if (p.isArray(H)) {
                for (J = 0,
                F = H.length; J < F; J++) {
                    H[J].type = H[J].id && E[H[J].id] && E[H[J].id].type ? E[H[J].id].type : "default";
                    if (G && G.no_id) {
                        delete H[J].id;
                        if (H[J].li_attr && H[J].li_attr.id) {
                            delete H[J].li_attr.id
                        }
                    }
                }
            } else {
                H.type = H.id && E[H.id] && E[H.id].type ? E[H.id].type : "default";
                if (G && G.no_id) {
                    H = this._delete_ids(H)
                }
            }
            return H
        }
        ;
        this._delete_ids = function(G) {
            if (p.isArray(G)) {
                for (var F = 0, E = G.length; F < E; F++) {
                    G[F] = this._delete_ids(G[F])
                }
                return G
            }
            delete G.id;
            if (G.li_attr && G.li_attr.id) {
                delete G.li_attr.id
            }
            if (G.children && p.isArray(G.children)) {
                G.children = this._delete_ids(G.children)
            }
            return G
        }
        ;
        this.check = function(N, H, K, O, M) {
            if (D.check.call(this, N, H, K, O, M) === false) {
                return false
            }
            H = H && H.id ? H : this.get_node(H);
            K = K && K.id ? K : this.get_node(K);
            var E = H && H.id ? p.jstree.reference(H.id) : null , I, J, G, F;
            E = E && E._model && E._model.data ? E._model.data : null ;
            switch (N) {
            case "create_node":
            case "move_node":
            case "copy_node":
                if (N !== "move_node" || p.inArray(H.id, K.children) === -1) {
                    I = this.get_rules(K);
                    if (I.max_children !== g && I.max_children !== -1 && I.max_children === K.children.length) {
                        this._data.core.last_error = {
                            error: "check",
                            plugin: "types",
                            id: "types_01",
                            reason: "max_children prevents function: " + N,
                            data: JSON.stringify({
                                chk: N,
                                pos: O,
                                obj: H && H.id ? H.id : false,
                                par: K && K.id ? K.id : false
                            })
                        };
                        return false
                    }
                    if (I.valid_children !== g && I.valid_children !== -1 && p.inArray(H.type, I.valid_children) === -1) {
                        this._data.core.last_error = {
                            error: "check",
                            plugin: "types",
                            id: "types_02",
                            reason: "valid_children prevents function: " + N,
                            data: JSON.stringify({
                                chk: N,
                                pos: O,
                                obj: H && H.id ? H.id : false,
                                par: K && K.id ? K.id : false
                            })
                        };
                        return false
                    }
                    if (E && H.children_d && H.parents) {
                        J = 0;
                        for (G = 0,
                        F = H.children_d.length; G < F; G++) {
                            J = Math.max(J, E[H.children_d[G]].parents.length)
                        }
                        J = J - H.parents.length + 1
                    }
                    if (J <= 0 || J === g) {
                        J = 1
                    }
                    do {
                        if (I.max_depth !== g && I.max_depth !== -1 && I.max_depth < J) {
                            this._data.core.last_error = {
                                error: "check",
                                plugin: "types",
                                id: "types_03",
                                reason: "max_depth prevents function: " + N,
                                data: JSON.stringify({
                                    chk: N,
                                    pos: O,
                                    obj: H && H.id ? H.id : false,
                                    par: K && K.id ? K.id : false
                                })
                            };
                            return false
                        }
                        K = this.get_node(K.parent);
                        I = this.get_rules(K);
                        J++
                    } while (K)
                }
                break
            }
            return true
        }
        ;
        this.get_rules = function(F) {
            F = this.get_node(F);
            if (!F) {
                return false
            }
            var E = this.get_type(F, true);
            if (E.max_depth === g) {
                E.max_depth = -1
            }
            if (E.max_children === g) {
                E.max_children = -1
            }
            if (E.valid_children === g) {
                E.valid_children = -1
            }
            return E
        }
        ;
        this.get_type = function(E, F) {
            E = this.get_node(E);
            return (!E) ? false : (F ? p.extend({
                type: E.type
            }, this.settings.types[E.type]) : E.type)
        }
        ;
        this.set_type = function(K, I) {
            var G, J, H, F, E;
            if (p.isArray(K)) {
                K = K.slice();
                for (J = 0,
                H = K.length; J < H; J++) {
                    this.set_type(K[J], I)
                }
                return true
            }
            G = this.settings.types;
            K = this.get_node(K);
            if (!G[I] || !K) {
                return false
            }
            F = K.type;
            E = this.get_icon(K);
            K.type = I;
            if (E === true || (G[F] && G[F].icon && E === G[F].icon)) {
                this.set_icon(K, G[I].icon !== g ? G[I].icon : true)
            }
            return true
        }
    }
    ;
    p.jstree.plugins.unique = function(C, D) {
        this.check = function(N, I, J, O, K) {
            if (D.check.call(this, N, I, J, O, K) === false) {
                return false
            }
            I = I && I.id ? I : this.get_node(I);
            J = J && J.id ? J : this.get_node(J);
            if (!J || !J.children) {
                return true
            }
            var E = N === "rename_node" ? O : I.text, M = [], F = this._model.data, H, G;
            for (H = 0,
            G = J.children.length; H < G; H++) {
                M.push(F[J.children[H]].text)
            }
            switch (N) {
            case "delete_node":
                return true;
            case "rename_node":
            case "copy_node":
                H = (p.inArray(E, M) === -1);
                if (!H) {
                    this._data.core.last_error = {
                        error: "check",
                        plugin: "unique",
                        id: "unique_01",
                        reason: "Child with name " + E + " already exists. Preventing: " + N,
                        data: JSON.stringify({
                            chk: N,
                            pos: O,
                            obj: I && I.id ? I.id : false,
                            par: J && J.id ? J.id : false
                        })
                    }
                }
                return H;
            case "move_node":
                H = (I.parent === J.id || p.inArray(E, M) === -1);
                if (!H) {
                    this._data.core.last_error = {
                        error: "check",
                        plugin: "unique",
                        id: "unique_01",
                        reason: "Child with name " + E + " already exists. Preventing: " + N,
                        data: JSON.stringify({
                            chk: N,
                            pos: O,
                            obj: I && I.id ? I.id : false,
                            par: J && J.id ? J.id : false
                        })
                    }
                }
                return H
            }
            return true
        }
    }
    ;
    var d = document.createElement("DIV");
    d.setAttribute("unselectable", "on");
    d.className = "jstree-wholerow";
    d.innerHTML = "&#160;";
    p.jstree.plugins.wholerow = function(C, D) {
        this.bind = function() {
            D.bind.call(this);
            this.element.on("loading", p.proxy(function() {
                d.style.height = this._data.core.li_height + "px"
            }, this)).on("ready.jstree set_state.jstree", p.proxy(function() {
                this.hide_dots()
            }, this)).on("ready.jstree", p.proxy(function() {
                this.get_container_ul().addClass("jstree-wholerow-ul")
            }, this)).on("deselect_all.jstree", p.proxy(function(F, E) {
                this.element.find(".jstree-wholerow-clicked").removeClass("jstree-wholerow-clicked")
            }, this)).on("changed.jstree", p.proxy(function(I, H) {
                this.element.find(".jstree-wholerow-clicked").removeClass("jstree-wholerow-clicked");
                var G = false, F, E;
                for (F = 0,
                E = H.selected.length; F < E; F++) {
                    G = this.get_node(H.selected[F], true);
                    if (G && G.length) {
                        G.children(".jstree-wholerow").addClass("jstree-wholerow-clicked")
                    }
                }
            }, this)).on("open_node.jstree", p.proxy(function(F, E) {
                this.get_node(E.node, true).find(".jstree-clicked").parent().children(".jstree-wholerow").addClass("jstree-wholerow-clicked")
            }, this)).on("hover_node.jstree dehover_node.jstree", p.proxy(function(F, E) {
                this.get_node(E.node, true).children(".jstree-wholerow")[F.type === "hover_node" ? "addClass" : "removeClass"]("jstree-wholerow-hovered")
            }, this)).on("contextmenu.jstree", ".jstree-wholerow", p.proxy(function(F) {
                F.preventDefault();
                var E = p.Event("contextmenu", {
                    metaKey: F.metaKey,
                    ctrlKey: F.ctrlKey,
                    altKey: F.altKey,
                    shiftKey: F.shiftKey,
                    pageX: F.pageX,
                    pageY: F.pageY
                });
                p(F.currentTarget).closest(".jstree-node").children(".jstree-anchor:eq(0)").trigger(E)
            }, this)).on("click.jstree", ".jstree-wholerow", function(F) {
                F.stopImmediatePropagation();
                var E = p.Event("click", {
                    metaKey: F.metaKey,
                    ctrlKey: F.ctrlKey,
                    altKey: F.altKey,
                    shiftKey: F.shiftKey
                });
                p(F.currentTarget).closest(".jstree-node").children(".jstree-anchor:eq(0)").trigger(E).focus()
            }).on("click.jstree", ".jstree-leaf > .jstree-ocl", p.proxy(function(F) {
                F.stopImmediatePropagation();
                var E = p.Event("click", {
                    metaKey: F.metaKey,
                    ctrlKey: F.ctrlKey,
                    altKey: F.altKey,
                    shiftKey: F.shiftKey
                });
                p(F.currentTarget).closest(".jstree-node").children(".jstree-anchor:eq(0)").trigger(E).focus()
            }, this)).on("mouseover.jstree", ".jstree-wholerow, .jstree-icon", p.proxy(function(E) {
                E.stopImmediatePropagation();
                this.hover_node(E.currentTarget);
                return false
            }, this)).on("mouseleave.jstree", ".jstree-node", p.proxy(function(E) {
                this.dehover_node(E.currentTarget)
            }, this))
        }
        ;
        this.teardown = function() {
            if (this.settings.wholerow) {
                this.element.find(".jstree-wholerow").remove()
            }
            D.teardown.call(this)
        }
        ;
        this.redraw_node = function(G, E, H) {
            G = D.redraw_node.call(this, G, E, H);
            if (G) {
                var F = d.cloneNode(true);
                if (p.inArray(G.id, this._data.core.selected) !== -1) {
                    F.className += " jstree-wholerow-clicked"
                }
                G.insertBefore(F, G.childNodes[0])
            }
            return G
        }
    }
}));
(function(a, d) {
    if (typeof define === "function" && define.amd) {
        define(d)
    } else {
        a.Dragdealer = d()
    }
}(this, function() {
    var q = function(D, C) {
        this.bindMethods();
        this.options = this.applyDefaults(C || {});
        this.wrapper = this.getWrapperElement(D);
        if (!this.wrapper) {
            return
        }
        this.handle = this.getHandleElement(this.wrapper, this.options.handleClass);
        if (!this.handle) {
            return
        }
        this.init();
        this.bindEventListeners()
    }
    ;
    q.prototype = {
        defaults: {
            disabled: false,
            horizontal: true,
            vertical: false,
            slide: true,
            steps: 0,
            snap: false,
            loose: false,
            speed: 0.1,
            xPrecision: 0,
            yPrecision: 0,
            handleClass: "handle",
            css3: true,
            requestAnimationFrame: false,
            activeClass: "active",
            tapping: true
        },
        init: function() {
            if (this.options.css3) {
                B(this.handle)
            }
            this.value = {
                prev: [-1, -1],
                current: [this.options.x || 0, this.options.y || 0],
                target: [this.options.x || 0, this.options.y || 0]
            };
            this.offset = {
                wrapper: [0, 0],
                mouse: [0, 0],
                prev: [-999999, -999999],
                current: [0, 0],
                target: [0, 0]
            };
            this.change = [0, 0];
            this.stepRatios = this.calculateStepRatios();
            this.activity = false;
            this.dragging = false;
            this.tapping = false;
            this.reflow();
            if (this.options.disabled) {
                this.disable()
            }
        },
        applyDefaults: function(D) {
            for (var C in this.defaults) {
                if (!D.hasOwnProperty(C)) {
                    D[C] = this.defaults[C]
                }
            }
            return D
        },
        getWrapperElement: function(C) {
            if (typeof (C) == "string") {
                return document.getElementById(C)
            } else {
                return C
            }
        },
        getHandleElement: function(G, C) {
            var E, F, D;
            if (G.getElementsByClassName) {
                E = G.getElementsByClassName(C);
                if (E.length > 0) {
                    return E[0]
                }
            } else {
                F = new RegExp("(^|\\s)" + C + "(\\s|$)");
                E = G.getElementsByTagName("*");
                for (D = 0; D < E.length; D++) {
                    if (F.test(E[D].className)) {
                        return E[D]
                    }
                }
            }
        },
        calculateStepRatios: function() {
            var C = [];
            if (this.options.steps > 1) {
                for (var D = 0; D <= this.options.steps - 1; D++) {
                    C[D] = D / (this.options.steps - 1)
                }
            }
            return C
        },
        setWrapperOffset: function() {
            this.offset.wrapper = e.get(this.wrapper)
        },
        calculateBounds: function() {
            var C = {
                top: this.options.top || 0,
                bottom: -(this.options.bottom || 0) + this.wrapper.offsetHeight,
                left: this.options.left || 0,
                right: -(this.options.right || 0) + this.wrapper.offsetWidth
            };
            C.availWidth = (C.right - C.left) - this.handle.offsetWidth;
            C.availHeight = (C.bottom - C.top) - this.handle.offsetHeight;
            return C
        },
        calculateValuePrecision: function() {
            var C = this.options.xPrecision || Math.abs(this.bounds.availWidth)
              , D = this.options.yPrecision || Math.abs(this.bounds.availHeight);
            return [C ? 1 / C : 0, D ? 1 / D : 0]
        },
        bindMethods: function() {
            this.animateWithRequestAnimationFrame = p(this.animateWithRequestAnimationFrame, this);
            this.animate = p(this.animate, this);
            this.onHandleMouseDown = p(this.onHandleMouseDown, this);
            this.onHandleTouchStart = p(this.onHandleTouchStart, this);
            this.onDocumentMouseMove = p(this.onDocumentMouseMove, this);
            this.onWrapperTouchMove = p(this.onWrapperTouchMove, this);
            this.onWrapperMouseDown = p(this.onWrapperMouseDown, this);
            this.onWrapperTouchStart = p(this.onWrapperTouchStart, this);
            this.onDocumentMouseUp = p(this.onDocumentMouseUp, this);
            this.onDocumentTouchEnd = p(this.onDocumentTouchEnd, this);
            this.onHandleClick = p(this.onHandleClick, this);
            this.onWindowResize = p(this.onWindowResize, this)
        },
        bindEventListeners: function() {
            g(this.handle, "mousedown", this.onHandleMouseDown);
            g(this.handle, "touchstart", this.onHandleTouchStart);
            g(document, "mousemove", this.onDocumentMouseMove);
            g(this.wrapper, "touchmove", this.onWrapperTouchMove);
            g(this.wrapper, "mousedown", this.onWrapperMouseDown);
            g(this.wrapper, "touchstart", this.onWrapperTouchStart);
            g(document, "mouseup", this.onDocumentMouseUp);
            g(document, "touchend", this.onDocumentTouchEnd);
            g(this.handle, "click", this.onHandleClick);
            g(window, "resize", this.onWindowResize);
            this.animate(false, true);
            if (this.options.requestAnimationFrame) {
                this.interval = o(this.animateWithRequestAnimationFrame)
            } else {
                this.timeOffset = 25;
                this.interval = setInterval(this.animate, this.timeOffset)
            }
        },
        unbindEventListeners: function() {
            d(this.handle, "mousedown", this.onHandleMouseDown);
            d(this.handle, "touchstart", this.onHandleTouchStart);
            d(document, "mousemove", this.onDocumentMouseMove);
            d(this.wrapper, "touchmove", this.onWrapperTouchMove);
            d(this.wrapper, "mousedown", this.onWrapperMouseDown);
            d(this.wrapper, "touchstart", this.onWrapperTouchStart);
            d(document, "mouseup", this.onDocumentMouseUp);
            d(document, "touchend", this.onDocumentTouchEnd);
            d(this.handle, "click", this.onHandleClick);
            d(window, "resize", this.onWindowResize);
            if (this.options.requestAnimationFrame) {
                m(this.interval)
            } else {
                clearInterval(this.interval)
            }
        },
        onHandleMouseDown: function(C) {
            z.refresh(C);
            h(C);
            a(C);
            this.activity = false;
            this.startDrag()
        },
        onHandleTouchStart: function(C) {
            z.refresh(C);
            a(C);
            this.activity = false;
            this.startDrag()
        },
        onDocumentMouseMove: function(C) {
            z.refresh(C);
            if (this.dragging) {
                this.activity = true
            }
        },
        onWrapperTouchMove: function(C) {
            z.refresh(C);
            if (!this.activity && this.draggingOnDisabledAxis()) {
                if (this.dragging) {
                    this.stopDrag()
                }
                return
            }
            h(C);
            this.activity = true
        },
        onWrapperMouseDown: function(C) {
            z.refresh(C);
            h(C);
            this.startTap()
        },
        onWrapperTouchStart: function(C) {
            z.refresh(C);
            h(C);
            this.startTap()
        },
        onDocumentMouseUp: function(C) {
            this.stopDrag();
            this.stopTap()
        },
        onDocumentTouchEnd: function(C) {
            this.stopDrag();
            this.stopTap()
        },
        onHandleClick: function(C) {
            if (this.activity) {
                h(C);
                a(C)
            }
        },
        onWindowResize: function(C) {
            this.reflow()
        },
        enable: function() {
            this.disabled = false;
            this.handle.className = this.handle.className.replace(/\s?disabled/g, "")
        },
        disable: function() {
            this.disabled = true;
            this.handle.className += " disabled"
        },
        reflow: function() {
            this.setWrapperOffset();
            this.bounds = this.calculateBounds();
            this.valuePrecision = this.calculateValuePrecision();
            this.updateOffsetFromValue()
        },
        getStep: function() {
            return [this.getStepNumber(this.value.target[0]), this.getStepNumber(this.value.target[1])]
        },
        getValue: function() {
            return this.value.target
        },
        setStep: function(D, E, C) {
            this.setValue(this.options.steps && D > 1 ? (D - 1) / (this.options.steps - 1) : 0, this.options.steps && E > 1 ? (E - 1) / (this.options.steps - 1) : 0, C)
        },
        setValue: function(D, E, C) {
            this.setTargetValue([D, E || 0]);
            if (C) {
                this.groupCopy(this.value.current, this.value.target);
                this.updateOffsetFromValue();
                this.callAnimationCallback()
            }
        },
        startTap: function() {
            if (this.disabled || !this.options.tapping) {
                return
            }
            this.tapping = true;
            this.setWrapperOffset();
            this.setTargetValueByOffset([z.x - this.offset.wrapper[0] - (this.handle.offsetWidth / 2), z.y - this.offset.wrapper[1] - (this.handle.offsetHeight / 2)])
        },
        stopTap: function() {
            if (this.disabled || !this.tapping) {
                return
            }
            this.tapping = false;
            this.setTargetValue(this.value.current)
        },
        startDrag: function() {
            if (this.disabled) {
                return
            }
            this.dragging = true;
            this.setWrapperOffset();
            this.offset.mouse = [z.x - e.get(this.handle)[0], z.y - e.get(this.handle)[1]];
            if (!this.wrapper.className.match(this.options.activeClass)) {
                this.wrapper.className += " " + this.options.activeClass
            }
        },
        stopDrag: function() {
            if (this.disabled || !this.dragging) {
                return
            }
            this.dragging = false;
            var D = this.groupClone(this.value.current);
            if (this.options.slide) {
                var C = this.change;
                D[0] += C[0] * 4;
                D[1] += C[1] * 4
            }
            this.setTargetValue(D);
            this.wrapper.className = this.wrapper.className.replace(" " + this.options.activeClass, "")
        },
        callAnimationCallback: function() {
            var C = this.value.current;
            if (this.options.snap && this.options.steps > 1) {
                C = this.getClosestSteps(C)
            }
            if (!this.groupCompare(C, this.value.prev)) {
                if (typeof (this.options.animationCallback) == "function") {
                    this.options.animationCallback.call(this, C[0], C[1])
                }
                this.groupCopy(this.value.prev, C)
            }
        },
        callTargetCallback: function() {
            if (typeof (this.options.callback) == "function") {
                this.options.callback.call(this, this.value.target[0], this.value.target[1])
            }
        },
        animateWithRequestAnimationFrame: function(C) {
            if (C) {
                this.timeOffset = this.timeStamp ? C - this.timeStamp : 0;
                this.timeStamp = C
            } else {
                this.timeOffset = 25
            }
            this.animate();
            this.interval = o(this.animateWithRequestAnimationFrame)
        },
        animate: function(F, E) {
            if (F && !this.dragging) {
                return
            }
            if (this.dragging) {
                var C = this.groupClone(this.value.target);
                var D = [z.x - this.offset.wrapper[0] - this.offset.mouse[0], z.y - this.offset.wrapper[1] - this.offset.mouse[1]];
                this.setTargetValueByOffset(D, this.options.loose);
                this.change = [this.value.target[0] - C[0], this.value.target[1] - C[1]]
            }
            if (this.dragging || E) {
                this.groupCopy(this.value.current, this.value.target)
            }
            if (this.dragging || this.glide() || E) {
                this.updateOffsetFromValue();
                this.callAnimationCallback()
            }
        },
        glide: function() {
            var C = [this.value.target[0] - this.value.current[0], this.value.target[1] - this.value.current[1]];
            if (!C[0] && !C[1]) {
                return false
            }
            if (Math.abs(C[0]) > this.valuePrecision[0] || Math.abs(C[1]) > this.valuePrecision[1]) {
                this.value.current[0] += C[0] * this.options.speed * this.timeOffset / 25;
                this.value.current[1] += C[1] * this.options.speed * this.timeOffset / 25
            } else {
                this.groupCopy(this.value.current, this.value.target)
            }
            return true
        },
        updateOffsetFromValue: function() {
            if (!this.options.snap) {
                this.offset.current = this.getOffsetsByRatios(this.value.current)
            } else {
                this.offset.current = this.getOffsetsByRatios(this.getClosestSteps(this.value.current))
            }
            if (!this.groupCompare(this.offset.current, this.offset.prev)) {
                this.renderHandlePosition();
                this.groupCopy(this.offset.prev, this.offset.current)
            }
        },
        renderHandlePosition: function() {
            var C = "";
            if (this.options.css3 && f.transform) {
                if (this.options.horizontal) {
                    C += "translateX(" + this.offset.current[0] + "px)"
                }
                if (this.options.vertical) {
                    C += " translateY(" + this.offset.current[1] + "px)"
                }
                this.handle.style[f.transform] = C;
                return
            }
            if (this.options.horizontal) {
                this.handle.style.left = this.offset.current[0] + "px"
            }
            if (this.options.vertical) {
                this.handle.style.top = this.offset.current[1] + "px"
            }
        },
        setTargetValue: function(C, E) {
            var D = E ? this.getLooseValue(C) : this.getProperValue(C);
            this.groupCopy(this.value.target, D);
            this.offset.target = this.getOffsetsByRatios(D);
            this.callTargetCallback()
        },
        setTargetValueByOffset: function(E, F) {
            var C = this.getRatiosByOffsets(E);
            var D = F ? this.getLooseValue(C) : this.getProperValue(C);
            this.groupCopy(this.value.target, D);
            this.offset.target = this.getOffsetsByRatios(D)
        },
        getLooseValue: function(D) {
            var C = this.getProperValue(D);
            return [C[0] + ((D[0] - C[0]) / 4), C[1] + ((D[1] - C[1]) / 4)]
        },
        getProperValue: function(D) {
            var C = this.groupClone(D);
            C[0] = Math.max(C[0], 0);
            C[1] = Math.max(C[1], 0);
            C[0] = Math.min(C[0], 1);
            C[1] = Math.min(C[1], 1);
            if ((!this.dragging && !this.tapping) || this.options.snap) {
                if (this.options.steps > 1) {
                    C = this.getClosestSteps(C)
                }
            }
            return C
        },
        getRatiosByOffsets: function(C) {
            return [this.getRatioByOffset(C[0], this.bounds.availWidth, this.bounds.left), this.getRatioByOffset(C[1], this.bounds.availHeight, this.bounds.top)]
        },
        getRatioByOffset: function(E, C, D) {
            return C ? (E - D) / C : 0
        },
        getOffsetsByRatios: function(C) {
            return [this.getOffsetByRatio(C[0], this.bounds.availWidth, this.bounds.left), this.getOffsetByRatio(C[1], this.bounds.availHeight, this.bounds.top)]
        },
        getOffsetByRatio: function(D, C, E) {
            return Math.round(D * C) + E
        },
        getStepNumber: function(C) {
            return this.getClosestStep(C) * (this.options.steps - 1) + 1
        },
        getClosestSteps: function(C) {
            return [this.getClosestStep(C[0]), this.getClosestStep(C[1])]
        },
        getClosestStep: function(F) {
            var C = 0;
            var E = 1;
            for (var D = 0; D <= this.options.steps - 1; D++) {
                if (Math.abs(this.stepRatios[D] - F) < E) {
                    E = Math.abs(this.stepRatios[D] - F);
                    C = D
                }
            }
            return this.stepRatios[C]
        },
        groupCompare: function(D, C) {
            return D[0] == C[0] && D[1] == C[1]
        },
        groupCopy: function(D, C) {
            D[0] = C[0];
            D[1] = C[1]
        },
        groupClone: function(C) {
            return [C[0], C[1]]
        },
        draggingOnDisabledAxis: function() {
            return (!this.options.horizontal && z.xDiff > z.yDiff) || (!this.options.vertical && z.yDiff > z.xDiff)
        }
    };
    var p = function(D, C) {
        return function() {
            return D.apply(C, arguments)
        }
    }
    ;
    var g = function(C, D, E) {
        if (C.addEventListener) {
            C.addEventListener(D, E, false)
        } else {
            if (C.attachEvent) {
                C.attachEvent("on" + D, E)
            }
        }
    }
    ;
    var d = function(C, D, E) {
        if (C.removeEventListener) {
            C.removeEventListener(D, E, false)
        } else {
            if (C.detachEvent) {
                C.detachEvent("on" + D, E)
            }
        }
    }
    ;
    var h = function(C) {
        if (!C) {
            C = window.event
        }
        if (C.preventDefault) {
            C.preventDefault()
        }
        C.returnValue = false
    }
    ;
    var a = function(C) {
        if (!C) {
            C = window.event
        }
        if (C.stopPropagation) {
            C.stopPropagation()
        }
        C.cancelBubble = true
    }
    ;
    var z = {
        x: 0,
        y: 0,
        xDiff: 0,
        yDiff: 0,
        refresh: function(C) {
            if (!C) {
                C = window.event
            }
            if (C.type == "mousemove") {
                this.set(C)
            } else {
                if (C.touches) {
                    this.set(C.touches[0])
                }
            }
        },
        set: function(E) {
            var D = this.x
              , C = this.y;
            if (E.clientX || E.clientY) {
                this.x = E.clientX;
                this.y = E.clientY
            } else {
                if (E.pageX || E.pageY) {
                    this.x = E.pageX - document.body.scrollLeft - document.documentElement.scrollLeft;
                    this.y = E.pageY - document.body.scrollTop - document.documentElement.scrollTop
                }
            }
            this.xDiff = Math.abs(this.x - D);
            this.yDiff = Math.abs(this.y - C)
        }
    };
    var e = {
        get: function(D) {
            var C = {
                left: 0,
                top: 0
            };
            if (D.getBoundingClientRect !== undefined) {
                C = D.getBoundingClientRect()
            }
            return [C.left, C.top]
        }
    };
    var f = {
        transform: u("transform"),
        perspective: u("perspective"),
        backfaceVisibility: u("backfaceVisibility")
    };
    function u(F) {
        var E = "Webkit Moz ms O".split(" ")
          , D = document.documentElement.style;
        if (D[F] !== undefined) {
            return F
        }
        F = F.charAt(0).toUpperCase() + F.substr(1);
        for (var C = 0; C < E.length; C++) {
            if (D[E[C] + F] !== undefined) {
                return E[C] + F
            }
        }
    }
    function B(C) {
        if (f.backfaceVisibility && f.perspective) {
            C.style[f.perspective] = "1000px";
            C.style[f.backfaceVisibility] = "hidden"
        }
    }
    var v = ["webkit", "moz"];
    var o = window.requestAnimationFrame;
    var m = window.cancelAnimationFrame;
    for (var r = 0; r < v.length && !o; ++r) {
        o = window[v[r] + "RequestAnimationFrame"];
        m = window[v[r] + "CancelAnimationFrame"] || window[v[r] + "CancelRequestAnimationFrame"]
    }
    if (!o) {
        o = function(C) {
            return setTimeout(C, 25)
        }
        ;
        m = clearTimeout
    }
    return q
}));
(function(a) {
    var d, f, e;
    d = ["assert", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "time", "timeEnd", "trace", "warn"];
    f = function() {}
    ;
    do {
        e = d.pop();
        if (!a[e]) {
            a[e] = f
        }
    } while (d.length > 0);window.console = a
}(window.console || {}));
(function(m, r, d, e) {
    var v = new m.Deferred(), u, B = new m.Deferred(), p, q, f, h = false, a = /([!"#$%&'()*+,.\/:;<=>?@\[\\\]^`{|}~])/g;
    m(function() {
        if (d.oauth2 && !d.oauth2.thisIsOauthFrame()) {
            v.resolveWith(d, [d])
        }
    });
    d = m.extend(d, {
        exposeJQuery: function() {
            return m
        },
        ready: function(C) {
            if (arguments.length === 0) {
                return v.promise()
            }
            if (typeof C === "function") {
                v.done(C)
            }
            return this
        },
        includeCss: function(G, H) {
            var D = new m.Deferred()
              , F = r.document.getElementsByTagName("head")[0]
              , E = document.createElement("link")
              , C = function() {
                if (typeof H === "function" && D.state() === "pending") {
                    H()
                }
                D.resolve()
            }
            ;
            G += (G.indexOf("?") > -1 ? "&" : "?") + "_nch=" + giscloud_config.nch;
            E.setAttribute("rel", "stylesheet");
            E.setAttribute("type", "text/css");
            E.setAttribute("href", G);
            E.onreadystatechange = function() {
                if (E.readyState === "complete" || E.readyState === "loaded") {
                    C()
                }
            }
            ;
            if (E.addEventListener) {
                E.addEventListener("load", function() {
                    C()
                }, false)
            }
            E.onload = function() {
                C()
            }
            ;
            F.appendChild(E);
            return D.promise()
        },
        includeJs: function(H, I, E) {
            var D = new m.Deferred()
              , F = document.getElementsByTagName("head")[0]
              , G = document.createElement("script")
              , C = function() {
                if (typeof I === "function" && D.state() === "pending") {
                    I()
                }
                D.resolve()
            }
            ;
            if (!E) {
                H += (H.indexOf("?") > -1 ? "&" : "?") + "_nch=" + giscloud_config.nch
            }
            G.setAttribute("type", "text/javascript");
            G.setAttribute("src", H);
            G.onreadystatechange = function() {
                if (G.readyState === "complete" || G.readyState === "loaded") {
                    C()
                }
            }
            ;
            if (G.addEventListener) {
                G.addEventListener("load", function() {
                    C()
                }, false)
            }
            G.onload = function() {
                C()
            }
            ;
            F.appendChild(G);
            return D.promise()
        },
        formats: {
            IFRAME: "iframe",
            HTML: "iframe",
            PNG: "png",
            JPEG: "jpg",
            SHAPEFILE: "shp",
            GPX: "gpx",
            MIF: "mif",
            GML: "gml",
            exportFormats: {
                SHAPEFILE: "shp",
                GPX: "gpx",
                MIF: "mif",
                GML: "gml"
            },
            renderFormats: {
                IFRAME: "iframe",
                PNG: "png",
                JPEG: "jpg"
            }
        },
        toMeterRatios: {
            km: 1000,
            m: 1,
            meter: 1,
            dm: 1 / 10,
            cm: 1 / 100,
            mm: 1 / 1000,
            kmi: 1852,
            "in": 0.0254,
            inch: 0.0254,
            ft: 0.3048,
            foot: 0.3048,
            feet: 0.3048,
            yd: 0.9144,
            yard: 0.9144,
            mi: 1609.344,
            mile: 1609.344,
            fath: 1.8288,
            fathom: 1.8288,
            ch: 20.1168,
            link: 0.201168,
            "us-in": 1 / 39.37,
            "inch us": 1 / 39.37,
            "us-ft": 0.304800609601219,
            foot_us: 0.304800609601219,
            "us-yd": 0.914401828803658,
            "us-ch": 20.11684023368047,
            "us-mi": 1609.347218694437,
            "ind-yd": 0.91439523,
            "ind-ft": 0.30479841,
            "ind-ch": 20.11669506
        },
        toSqMeterRatio: {
            acre: 0.00024711,
            ha: 0.0001,
            hectare: 0.0001
        },
        fromSquareMeter: function(E, G) {
            var D = d.toSqMeterRatio[E];
            var F = E && D;
            var C;
            if (!F) {
                console.log("Unknown unit.");
                return null 
            }
            return G * D
        },
        toMeters: function(E, H, F) {
            var D = d.toMeterRatios[E];
            var G = E && D;
            var C;
            if (!G) {
                console.log("Unknown unit.");
                return null 
            }
            return H * (F ? Math.pow(D, 2) : D)
        },
        fromMeters: function(D, F, E) {
            var C = d.toMeters(D, 1 / F, E);
            return C && (1 / C) || null 
        },
        apiKey: function(C) {
            if (typeof C == "string") {
                q = C;
                return this
            } else {
                return q
            }
        },
        appInstanceId: function(C) {
            if (typeof C == "number") {
                f = C;
                return this
            } else {
                return f
            }
        },
        logDeferredResults: function(E, D, C, K) {
            var F, I = function() {
                console.log("DONE", arguments)
            }
            , H = function() {
                console.log("FAIL", arguments)
            }
            , G = function() {
                console.log("PROGRESS", arguments)
            }
            ;
            try {
                if (m.isFunction(E.done) && m.isFunction(E.fail)) {
                    if (D != null  && C == null  && K == null ) {
                        K = D;
                        D = null 
                    }
                    F = E
                } else {
                    if (C === e) {
                        C = r
                    }
                    if (D == null ) {
                        D = []
                    } else {
                        if (!m.isArray(D)) {
                            D = [D]
                        }
                    }
                    F = E.apply(C, D)
                }
                if (m.isFunction(F.done) && m.isFunction(F.fail)) {
                    F.done(I);
                    F.fail(H);
                    F.progress(G);
                    if (K) {
                        F.done(function(M) {
                            if (typeof K == "string") {
                                r[K] = M
                            } else {
                                K = M
                            }
                        })
                    }
                } else {
                    console.log("NOT DEFERRED", F)
                }
            } catch (J) {
                console.log("ERROR", J, E, D, C)
            }
        },
        common: function() {
            return u
        }
    });
    function o() {
        var C;
        if (B.state() === "pending") {
            C = function() {
                var D = u.restHost() + "/assets/api/1/gcremote.php?restUrl=" + u.restHost() + "/1/";
                p = new easyXDM.Rpc({
                    remote: D,
                    onReady: function() {
                        B.resolve(arguments)
                    }
                },{
                    remote: {
                        ping: {},
                        execute: {},
                        getJSON: {},
                        rest: {},
                        restGet: {},
                        restPost: {},
                        restPut: {},
                        restDelete: {}
                    },
                    local: {
                        restUrl: function() {
                            return u.rest.url()
                        },
                        pingback: function(E, F, G, H) {
                            console.log(JSON.stringify({
                                pingOrigin: F,
                                pingTime: H,
                                pingbackOrigin: E,
                                pingbackTime: G,
                                duration: G - H
                            }))
                        }
                    }
                })
            }
            ;
            if (typeof JSON !== "undefined") {
                C()
            } else {
                d.includeJs(u.apiHost() + "/libs/json2/json2.min.js").done(C)
            }
        }
        return B.promise()
    }
    d.pingRpc = function() {
        o().done(function() {
            p.ping(document.location, m.now())
        })
    }
    ;
    d.remoteGetJSON = function(D, F) {
        var E, C;
        C = new m.Deferred();
        E = function() {
            p.getJSON(D, F, C.resolve, C.reject)
        }
        ;
        if (!!p) {
            E()
        } else {
            o().done(E)
        }
        return C.promise()
    }
    ;
    d.sessid = function() {
        var D = document.cookie
          , C = D && D.match && D.match(/PHPSESSID=([^ ;]+)/);
        return C && C[1] || null 
    }
    ;
    d.construct = function(D, C) {
        var E = {};
        if (C) {
            if (m.isArray(C)) {
                m.each(C, function(F, G) {
                    m.extend(E, G)
                })
            } else {
                m.extend(E, C)
            }
        }
        E.higher = E;
        D.prototype = E;
        return D
    }
    ;
    u = {
        restHost: function() {
            return giscloud_config.restHost()
        },
        apiHost: function() {
            return giscloud_config.apiHost()
        },
        apiHostname: function() {
            return giscloud_config.apiHostname()
        },
        authHost: function() {
            return giscloud_config.authHost()
        },
        liveSite: function() {
            return giscloud_config.liveSite()
        },
        tileSite: function() {
            return giscloud_config.tileSite()
        },
        https: function() {
            return giscloud_config.https
        },
        isMobileBrowser: /android.+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|e\-|e\/|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\-|2|g)|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4)),
        clone: function(D) {
            var C = function() {}
            ;
            m.extend(true, C.prototype, D);
            return new C()
        },
        bindFirst: function(E, D, G) {
            var C, F;
            E.on(D, G);
            E.each(function() {
                C = m._data(this, "events")[D.split(".")[0]];
                F = C.pop();
                C.splice(0, 0, F)
            });
            return E
        },
        oid: function() {
            var C = Math.random
              , E = Math.ceil
              , D = (m.now().toString() + E(C() * 100000)).substr(3)
              , F = E(C() * 15);
            return D.substr(F) + D.substr(0, F)
        },
        setError: function(C, E, D) {
            if (C.errors === e) {
                C.errors = []
            }
            C.errors.push({
                time: new Date(),
                src: E,
                msg: D
            })
        },
        __: function(D) {
            var C;
            if (!r.gclang) {
                return D
            }
            C = D.replace(/[ ,.?!;:'\\+\-()]/g, "_");
            C = C.replace(/\&/g, "and");
            return (C in gclang) ? gclang[C] : D
        },
        highlight: function(D, F, E, C) {
            D.modifyObject(F.toString(), {
                color: "selectcolor",
                alpha: 100,
                from_color: 13421772,
                glow: {
                    color: 65280,
                    strength: 2,
                    blurX: 10,
                    blurY: 10
                }
            }, E === null  ? "" : ("layer" + E + "||"), C)
        },
        highlightMultiple: function(D, F, E, C) {
            D.modifyObject(F.join(), {
                color: "selectcolor",
                alpha: 100,
                from_color: 13421772,
                glow: {
                    color: 65280,
                    strength: 2,
                    blurX: 10,
                    blurY: 10
                }
            }, E === null  ? "" : ("layer" + E + "||"), C)
        },
        getHighlightAndSelectColors: function(C) {
            var D;
            if (C && C.length) {
                D = d.Color.fromString(C);
                return [D.brighter(15).hex(), "#C9FFE5"]
            }
            return null 
        },
        deferreds: {},
        refs: {},
        toXml: function(C, H) {
            var F = "", G, E, D;
            if (H === null  || H === e || H === "") {
                return "<" + C + "/>"
            } else {
                if (typeof H === "object") {
                    F += "<" + C + ">";
                    if (m.isArray(H)) {
                        if (C[C.length - 1] === "s") {
                            D = C.substr(0, C.length - 1)
                        } else {
                            D = C
                        }
                        for (G = 0,
                        E = H.length; G < E; G++) {
                            F += this.toXml(D, H[G])
                        }
                    } else {
                        for (G in H) {
                            if (H.hasOwnProperty(G)) {
                                F += this.toXml(G, H[G])
                            }
                        }
                    }
                    F += "</" + C + ">"
                } else {
                    F += "<" + C + ">" + H.toString().replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/&/g, "&amp;") + "</" + C + ">"
                }
            }
            return F
        },
        debounce: function z(G, D, E, C) {
            var H, F;
            E = E || r;
            C = m.isArray(C) ? C : (C == null  ? [] : [C]);
            F = (function() {
                var J, I;
                if (H) {
                    clearTimeout(H)
                }
                if (m.isFunction(Function.prototype.bind)) {
                    J = [E].concat(Array.prototype.slice.apply(arguments), C);
                    H = setTimeout(G.bind.apply(G, J), D)
                } else {
                    I = (function() {
                        G.apply(E, Array.prototype.slice.apply(arguments).concat(C))
                    }
                    );
                    I.name = (G.name || "") + "wrapped";
                    H = setTimeout(I, D)
                }
            }
            );
            F.name = (G.name || "") + "debounced";
            return F
        },
        haversine: function(F, H, E, G, C) {
            var M = Math.PI / 180
              , I = (E - F) * M
              , D = (G - H) * M
              , K = Math.sin(I / 2) * Math.sin(I / 2) + Math.cos(F * M) * Math.cos(E * M) * Math.sin(D / 2) * Math.sin(D / 2)
              , J = 2 * Math.atan2(Math.sqrt(K), Math.sqrt(1 - K));
            C = C || 6371000;
            return C * J
        },
        zoomToBounds: function(H, F) {
            var E = 1300, D, C, G;
            C = H.instance.getLayer(0);
            if (C) {
                G = C.getCurrentLevel()
            }
            if (F.isPoint()) {
                if (G > 10) {
                    H.center(F.center())
                } else {
                    D = H.bounds().clone().center(F.center()).width(E, true)
                }
            } else {
                D = F
            }
            H.bounds(D)
        },
        viewerShowFeatureInfo: (function() {
            function C(H) {
                var F, G = H.meta && H.meta.columns;
                if (!G) {
                    return H.data
                }
                F = {};
                m.each(G, function(J, K) {
                    var I = K.alias || K.field;
                    if (K.field === "FID") {
                        F[I] = H.id
                    } else {
                        if (K.field === "OWNER") {
                            F[I] = H.owner || ""
                        } else {
                            if (K.field === "CREATED") {
                                F[I] = H.created.toLocaleString()
                            } else {
                                if (K.field === "MODIFIED") {
                                    F[I] = H.created.toLocaleString()
                                } else {
                                    F[I] = H.data[I]
                                }
                            }
                        }
                    }
                });
                return F
            }
            function D(I, F) {
                var H = /^(((\S+)?)(@|mailto\:|(news|(ht|f)tp(s?))\:\/\/)\S+)$/i
                  , G = /^<a href=['"]javascript:;['"] onclick=['"]fn\.showMedia\(\{url:\[['"][\w:\/.]+['"]\][\w, :]+\}\);return false;["']\s+>[\w<> ='"-\/]+<\/a>$/;
                I = (I == null ) ? "null" : I;
                if (d.ui.map && G.test(I)) {
                    return m("<tr/>").append(m("<td/>", {
                        "class": "gc-info-key-cell",
                        title: F
                    }).text(F), m("<td/>", {
                        "class": "gc-info-value-cell"
                    }).append(m(I)))
                }
                if (H.test(I)) {
                    return m("<tr/>").append(m("<td/>", {
                        "class": "gc-info-key-cell",
                        title: F
                    }).text(F), m("<td/>", {
                        "class": "gc-info-value-cell"
                    }).append(m("<a/>", {
                        href: I,
                        target: "_blank"
                    }).html(I)))
                }
                return m("<tr/>").append(m("<td/>", {
                    "class": "gc-info-key-cell",
                    title: F
                }).text(F), m("<td/>", {
                    "class": "gc-info-value-cell",
                    title: I
                }).html(I))
            }
            return function E(M, G, H, F, J) {
                var I = this, K;
                if (!(M instanceof d.Viewer)) {
                    throw "Invalid viewer param"
                }
                if (!G) {
                    throw "No layerId param."
                }
                if (!H) {
                    throw "No feature param."
                }
                if (typeof H === "object") {
                    K = m.Deferred().resolve(H)
                } else {
                    K = d.features.byId(G, H, {
                        format: true
                    })
                }
                K.done(function(S) {
                    var U, T, R, Q, O = m(I).data("marker"), N = m(I).data("lastLonLat"), P = N || S.bounds.center();
                    if (O) {
                        M.removeMarker(O)
                    }
                    U = m("<div/>");
                    Q = M.layerById(G);
                    m("<table/>", {
                        "class": "gc-info-popup-content-table"
                    }).append(S.meta && S.meta.columns ? m.map(C(S), D) : m.map(S.data, D)).appendTo(U);
                    T = Q && Q.name || "";
                    R = U.html();
                    if (m.isFunction(J)) {
                        R = J.call(U, {
                            feature: S,
                            layer: Q,
                            content: R,
                            position: P
                        })
                    }
                    O = new d.FlagMarker(P,T,R);
                    M.addMarker(O);
                    m(I).data("marker", O)
                })
            }
        }()),
        rest: (function() {
            var C = function(E) {
                var F = E || {};
                if (F.sort) {
                    if (typeof F.sort === "string" || F.sort.length === e) {
                        F.order_by = F.sort
                    } else {
                        F.order_by = F.sort.join()
                    }
                    delete F.sort
                }
                if (F.page || F.perPage) {
                    F.page = F.page || 1;
                    F.perpage = F.perPage || 10;
                    delete F.perPage
                }
                if (F.field && F.field.length && F.value && F.value.length) {
                    F.where = F.field + "='" + F.value + "'";
                    delete F.field;
                    delete F.value
                }
                if (F.expand && m.isArray(F.expand)) {
                    F.expand = F.expand.join(",")
                }
                return F
            }
              , D = function(E) {
                var G = document.location
                  , F = G.protocol + "//" + G.host;
                if (d.forceLocal || d.offlineMode()) {
                    return true
                }
                if (E && G.protocol !== "https:" && u.https()) {
                    return false
                }
                return u.liveSite().indexOf(F) === 0 || u.restHost().indexOf(F) === 0
            }
            ;
            this.url = function(G) {
                var H = document.location, F = H.protocol + "//" + H.host, E;
                if (u.liveSite().indexOf(F) === 0 && u.liveSite().indexOf(u.restHost()) !== 0) {
                    E = u.liveSite() + "rest/1/"
                } else {
                    E = u.restHost() + "/1/"
                }
                if (d.offlineMode()) {
                    E = E.replace(/http.?:\/\//, "giscloud://")
                }
                if (typeof G === "string") {
                    return E + G
                } else {
                    return E
                }
            }
            ;
            this.local = function(E, M, N, I, K) {
                var J, F, G = {};
                F = this.url(N);
                J = new m.Deferred();
                if (K && u.https()) {
                    if (F.indexOf("https:") !== 0) {
                        F = F.replace("http:", "https:")
                    }
                    if (I.api_key != null ) {
                        G["API-key"] = I.api_key;
                        delete I.api_key
                    } else {
                        G["API-sessid"] = d.sessid()
                    }
                }
                if (E === "get" || E === "GET") {
                    if (d.offlineMode()) {
                        var H = F.split(",");
                        giscloudOffline.getRest([F], function() {
                            var O = Array.prototype.slice.apply(arguments);
                            O[0] = r.JSON.parse(O[0]);
                            J.resolve.apply(J, O)
                        }, function() {
                            var O = Array.prototype.slice.apply(arguments);
                            J.reject.apply(J, O)
                        })
                    } else {
                        m.ajax({
                            url: F,
                            type: "GET",
                            cache: false,
                            dataType: "json",
                            data: I,
                            headers: G
                        }).done(function() {
                            var O = Array.prototype.slice.apply(arguments);
                            J.resolve.apply(J, O)
                        }).fail(function() {
                            var O = Array.prototype.slice.apply(arguments);
                            J.reject.apply(J, O)
                        })
                    }
                } else {
                    if (M === "application/json" && m.isPlainObject(I)) {
                        I = JSON.stringify(I)
                    }
                    m.ajax({
                        url: F,
                        type: E,
                        cache: false,
                        dataType: "json",
                        accept: "application/json",
                        contentType: M || "application/x-www-form-urlencoded",
                        data: I,
                        headers: G
                    }).success(function(P, O, Q) {
                        J.resolve(P, Q.getResponseHeader("Location"))
                    }).error(function(T, O, P) {
                        var R, Q, S, U;
                        if (T.getResponseHeader("Content-Type") === "application/json") {
                            R = JSON.parse(T.responseText);
                            Q = R.code;
                            S = R.msg;
                            U = R.nested
                        } else {
                            if (T.getResponseHeader("Content-Type") === "application/json") {
                                R = m(T.responseText);
                                Q = R.find("code").text();
                                S = R.find("msg").text();
                                U = R.find("nested").text()
                            }
                        }
                        J.reject(T.status, O, P, Q, S, U)
                    })
                }
                return J.promise()
            }
            ;
            this.call = function(E, P, H, N, J) {
                var I, O, G, K, M, F;
                H = C(H);
                G = d.oauth2.token();
                if (G) {
                    H.oauth_token = G
                }
                F = d.appInstanceId();
                if (F) {
                    H.app_instance_id = F
                }
                K = d.apiKey();
                if (K) {
                    H.api_key = K;
                    J = true
                }
                if (D(J)) {
                    return this.local(E, N, P, H, J)
                }
                if (!K && !G && J) {
                    M = d.sessid();
                    if (M) {
                        P += (P.indexOf("?") === -1 ? "?" : "&") + "api_sessid=" + M
                    }
                }
                O = new m.Deferred();
                I = function() {
                    p.rest(E, N, P, H, G, K, function(Q) {
                        O.resolve.apply(O, Q)
                    }, function() {
                        O.reject.apply(O, arguments && arguments[0] && arguments[0].message)
                    })
                }
                ;
                if (!!p) {
                    I()
                } else {
                    o().done(I)
                }
                return O.promise()
            }
            ;
            this.get = function(J, K) {
                var I, F, H, G, E = false;
                K = C(K);
                H = d.oauth2.token();
                if (H) {
                    K.oauth_token = H
                }
                G = d.appInstanceId();
                if (G) {
                    K.app_instance_id = G
                }
                q = d.apiKey();
                if (q) {
                    K.api_key = q
                }
                if (K && K.forceSecure) {
                    E = true
                }
                if (D()) {
                    return this.local("GET", null , J, K, E)
                }
                F = new m.Deferred();
                I = function() {
                    p.restGet(J, K, F.resolve, F.reject)
                }
                ;
                if (!!p) {
                    I()
                } else {
                    o().done(I)
                }
                return F.promise()
            }
            ;
            return this
        }
        .apply({}))
    };
    if (m.fn.busy) {
        m().busy("defaults", {
            img: u.apiHost() + "/assets/api/1/images/busy.gif"
        })
    }
    d.Promise = function(C) {
        C = C || new m.Deferred();
        return C.promise()
    }
    ;
    d.xssSafe = function(C) {
        if (!C) {
            return C
        }
        return m("<div/>", {
            text: C
        }).html()
    }
    ;
    d.escapeSelector = function(C) {
        if (!C || !C.replace) {
            return C
        }
        return C.replace(a, "\\$1")
    }
    ;
    d.offlineMode = function(C) {
        if (C == null ) {
            return h && !!r.giscloudOffline
        }
        h = C
    }
    ;
    r.giscloud = d;
    r.out = function g() {
        console.log(arguments)
    }
    ;
    r.out.id = function(D) {
        return ( function C() {
            console.log(D, arguments)
        }
        ) 
    }
})(jQuery.noConflict(true), window, window.giscloud || {});
(function(e, a) {
    a.addEventsInterface = function d(o, h) {
        var p;
        if (h == null ) {
            p = e({})
        } else {
            p = h
        }
        function u(C, B) {
            if (typeof C === "string") {
                return new e.Event(C,{
                    instance: B
                })
            }
            if (C instanceof e.Event) {
                if (!C.instance) {
                    C.instance = B
                }
                return C
            }
            return null 
        }
        function z(B) {
            if (e.isFunction(p)) {
                return e(p.call(B, B))
            }
            return e(p)
        }
        e.extend(o, {
            trigger: function g(E) {
                var C = u(E, this), B = z(this), D;
                if (!C) {
                    throw "No event defined."
                }
                D = [C].concat(Array.prototype.slice.call(arguments, 1));
                B.trigger.apply(B, D);
                return this
            },
            triggerHandler: function g(E) {
                var C = u(E, this), B = z(this), D;
                if (!C) {
                    throw "No event defined."
                }
                D = [C].concat(Array.prototype.slice.call(arguments, 1));
                B.triggerHandler.apply(B, D);
                return this
            },
            on: function q() {
                var B = z(this);
                B.on.apply(B, Array.prototype.slice.call(arguments));
                return this
            },
            off: function f() {
                var B = z(this);
                B.off.apply(B, Array.prototype.slice.call(arguments));
                return this
            },
            one: function m() {
                var B = z(this);
                B.one.apply(B, Array.prototype.slice.call(arguments));
                return this
            },
            bind: function r() {
                return this.on.apply(this, Array.prototype.slice.call(arguments))
            },
            unbind: function v() {
                return this.on.apply(this, Array.prototype.slice.call(arguments))
            }
        })
    }
}(giscloud.exposeJQuery(), giscloud.common()));
fnCanvas2 = function(z) {
    var p = giscloud.exposeJQuery()
      , K = []
      , Q = 0
      , e = {
        handlers: []
    }
      , S = false
      , r = false
      , q = false
      , M = true
      , N = {}
      , h = {}
      , I = {};
    function O(U) {
        return typeof U == "string" && parseInt(U.replace(/s(\d+)/, "$1"), 10)
    }
    function m(U) {
        return "s" + U
    }
    function D(U) {
        if (U != null ) {
            return giscloud.Color.fromHex(U).hex()
        }
        return null 
    }
    function G(U) {
        this.id = U;
        this.attributes = {};
        this.removed = false;
        this.clear = function() {
            this.removed = true
        }
        ;
        this.wkt = function() {
            return S.currentShapeGeometry(true)
        }
        ;
        this.edit = function() {}
    }
    function T() {
        var U = K.length;
        K.push(new G(m(U)));
        Q++;
        return U
    }
    function d(W) {
        var V = K[W], U;
        if (V instanceof G) {
            K.splice(W, 1);
            Q--
        }
        U = V.attributes;
        return U
    }
    function C(V) {
        var U, W;
        W = V.geometries || V.polygons || V.rings || V.lines || V.points || null ;
        if (W === null ) {
            W = z.toLeafletCoords(V.x, V.y, V.z);
            V.x = W.lng;
            V.y = W.lat
        } else {
            for (U in W) {
                if (W.hasOwnProperty(U)) {
                    C(W[U])
                }
            }
        }
    }
    function f(Y, W) {
        var V, Z, U;
        Z = Y.geometries || Y.polygons || Y.rings || Y.lines || Y.points || null ;
        if (Z === null ) {
            return z.toLeafletCoords(Y.x, Y.y, Y.z, W)
        }
        U = [];
        for (V in Z) {
            if (Z.hasOwnProperty(V)) {
                U.push(f(Z[V], W))
            }
        }
        return U
    }
    function g(Y, U, V) {
        var W, Z;
        Z = Y.geometries || Y.polygons || Y.rings || Y.lines || Y.points || null ;
        if (Z === null ) {
            U.push({
                x: Y.x,
                y: Y.y,
                z: Y.z,
                layerName: V
            })
        }
        for (W in Z) {
            if (Z.hasOwnProperty(W)) {
                g(Z[W], U, V)
            }
        }
    }
    function H(W, Y, V) {
        var U = f(W, V);
        if (W instanceof giscloud.geometry.Multipolygon) {
            return new L.MultiPolygon(U,Y)
        } else {
            if (W instanceof giscloud.geometry.Polygon) {
                return new L.Polygon(U,Y)
            } else {
                if (W instanceof giscloud.geometry.Multiline) {
                    return new L.MultiPolyline(U,Y)
                } else {
                    if (W instanceof giscloud.geometry.Line) {
                        return new L.Polyline(U,Y)
                    } else {
                        Y = Y || {};
                        Y.icon = Y.icon || (new L.Handler.PolyEdit()).options.icon;
                        Y.draggable = Y.draggable || false;
                        if (W instanceof giscloud.geometry.Multipoint) {
                            return new L.FeatureGroup(p.map(U, function(Z) {
                                return new L.Marker(Z,Y)
                            }),Y)
                        } else {
                            if (W instanceof giscloud.geometry.Point) {
                                return new L.Marker(U,Y)
                            } else {
                                return null 
                            }
                        }
                    }
                }
            }
        }
    }
    function P(V, W) {
        var U, Y;
        if (p.isArray(V)) {
            return p.map(V, function(Z) {
                return [P(Z, W)]
            })
        } else {
            if (V instanceof L.LatLng) {
                Y = z.fromLeafletCoords(V);
                if (W) {
                    Y.z = Y.z || 0
                }
                return Y
            } else {
                if (V instanceof L.Marker) {
                    return z.fromLeafletCoords(V.getLatLng())
                } else {
                    if (V instanceof L.Polygon) {
                        U = V.getLatLngs();
                        if (p.isArray(U[0])) {
                            return new giscloud.geometry.Polygon(p.map(U, function(Z) {
                                return new giscloud.geometry.Line(p.map(Z, function(aa) {
                                    return P(aa, W)
                                }))
                            }))
                        }
                        return new giscloud.geometry.Polygon([new giscloud.geometry.Line(p.map(U, function(Z) {
                            return P(Z, W)
                        }))])
                    } else {
                        if (V instanceof L.MultiPolygon) {
                            return new giscloud.geometry.Multipolygon(p.map(V._layers, function(Z) {
                                return P(Z, W)
                            }))
                        } else {
                            if (V instanceof L.Polyline) {
                                return new giscloud.geometry.Line(p.map(V.getLatLngs(), function(Z) {
                                    return P(Z, W)
                                }))
                            } else {
                                if (V instanceof L.MultiPolyline) {
                                    return new giscloud.geometry.Multiline(p.map(V._layers, function(Z) {
                                        return P(Z, W)
                                    }))
                                } else {
                                    if (V instanceof L.FeatureGroup) {
                                        return new giscloud.geometry.GeometryCollection(p.map(V._layers, P))
                                    } else {
                                        return null 
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    function F(W, U) {
        var V = U && U.points && U.points.length;
        if (W != null  && V) {
            W.points = p.map(U.points, function(Y) {
                return z.toLeafletCoords(Y.x, Y.y, Y.z)
            });
            W.draw()
        }
    }
    function u(U) {
        if (U._snapPoint) {
            if (U._snapPoint.z != null ) {
                return new giscloud.geometry.Point(U._snapPoint.x,U._snapPoint.y,U._snapPoint.z)
            }
            return new giscloud.geometry.Point(U._snapPoint.x,U._snapPoint.y)
        }
        return z.fromLeafletCoords(U)
    }
    function o(W, V, Y) {
        var U, Z;
        if (V.length) {
            switch (W) {
            case "point":
                Z = u(V[0]);
                U = new giscloud.geometry.Point(Z.x,Z.y);
                break;
            case "line":
                Z = p.map(V, function(ab) {
                    var aa = u(ab);
                    return new giscloud.geometry.Point(aa.x,aa.y)
                });
                U = new giscloud.geometry.Line(Z);
                break;
            case "polygon":
                Z = p.map(V, function(ab) {
                    var aa = u(ab);
                    return new giscloud.geometry.Point(aa.x,aa.y)
                });
                U = new giscloud.geometry.Polygon([new giscloud.geometry.Line(Z)]);
                break
            }
        }
        if (!U) {
            return null 
        }
        return Y ? U.toOGC() : U
    }
    function B(U) {
        p(e).triggerHandler(U.type + ".fnCanvas2", [{
            id: this.id,
            type: U.type
        }])
    }
    function v(V, U) {
        V.on("click dblclick mousedown mouseover mouseout", B, U)
    }
    function a(V, U) {
        this.id = V;
        this.color = D(U.color) || "#000000";
        this.fill = D(U.fill) || "#ffffff";
        this.alpha = (U.alpha != null ) ? U.alpha : 1;
        this.width = (U.width != null ) ? U.width : 8;
        this.border = (U.border != null ) ? U.border : 1;
        this.borderRadius = U.shape === "circle" ? (this.width + this.border) : 0;
        this.cursor = null ;
        this.marker = null ;
        if (this.alpha > 1) {
            this.alpha = this.alpha / 100
        }
    }
    a.prototype = {
        draw: function() {
            var U = new L.DivIcon({
                iconSize: new L.Point(this.width,this.width),
                className: "leaflet-div-icon"
            });
            U.__div = U.createIcon();
            U.createIcon = function() {
                return this.__div
            }
            ;
            p(U.__div).css("background-color", this.fill).css("border", "solid " + this.border + "px " + this.color).css("border-radius", this.borderRadius).css("-moz-border-radius", this.borderRadius).css("-webkit-border-radius", this.borderRadius).css("opacity", this.alpha);
            this.marker = new L.Marker(this.cursor,{
                icon: U,
                draggable: false
            });
            this.marker.on("dragend", p.proxy(function() {
                this.cursor = this.marker.getLatLng()
            }, this));
            v(this.marker, this);
            if (this.visibility !== false) {
                z.exposeLeaflet().addLayer(this.marker)
            }
        },
        clear: function() {
            z.exposeLeaflet().removeLayer(this.marker);
            this.marker = null ;
            this.cursor = null 
        },
        edit: function(U) {
            if (U === false) {
                this.marker.dragging.disable()
            } else {
                this.marker.dragging.enable()
            }
        },
        geom: function() {
            var V = this.cursor, U;
            if (V) {
                U = P(V, this.hasZ);
                return U
            }
            return null 
        },
        wkt: function() {
            var V = this.cursor, U;
            if (V) {
                U = P(V, this.hasZ);
                return U ? U.toOGC() : ""
            }
            return null 
        },
        redraw: function() {
            var U = this.cursor;
            this.clear();
            this.cursor = U;
            this.draw()
        }
    };
    function E(V, U) {
        this.id = V;
        this.color = D(U.color) || "#ff0088";
        this.alpha = (U.alpha != null ) ? U.alpha : 1;
        this.width = (U.width != null ) ? U.width : 1;
        this.cursor = null ;
        this.lines = [];
        this.points = [];
        if (this.alpha > 1) {
            this.alpha = this.alpha / 100
        }
    }
    E.prototype = {
        currentLine: function() {
            return this.lines[this.lines.length - 1]
        },
        draw: function() {
            var U = new L.Polyline(this.points,{
                color: this.color,
                opacity: this.alpha,
                weight: this.width
            });
            this.lines.push(U);
            v(U, this);
            if (this.visibility !== false) {
                z.exposeLeaflet().addLayer(U)
            }
        },
        addLine: function() {
            var U = new L.Polyline([this.cursor],{
                color: this.color,
                opacity: this.alpha,
                weight: this.width
            });
            this.lines.push(U);
            v(U, this);
            if (this.visibility !== false) {
                z.exposeLeaflet().addLayer(U)
            }
        },
        extendLine: function() {
            var U = this.currentLine();
            if (U) {
                U.addLatLng(this.cursor)
            }
        },
        edit: function(U) {
            var V = this.currentLine();
            if (V) {
                if (U === false) {
                    V.editing.disable()
                } else {
                    V.editing.enable()
                }
            }
        },
        geom: function() {
            var U = this.currentLine(), V;
            if (U) {
                V = P(U, this.hasZ);
                return V
            }
            return null 
        },
        wkt: function() {
            var U = this.currentLine(), V;
            if (U) {
                V = P(U, this.hasZ);
                return V ? V.toOGC() : ""
            }
            return null 
        },
        redraw: function() {
            var U = this.currentLine()
              , V = new L.Polyline(U.getLatLngs(),{
                color: this.color,
                opacity: this.alpha,
                weight: this.width
            });
            this.clear();
            this.lines.push(V);
            v(V, this);
            if (this.visibility !== false) {
                z.exposeLeaflet().addLayer(V)
            }
        },
        clear: function() {
            var V, U;
            for (V = 0,
            U = this.lines.length; V < U; V++) {
                z.exposeLeaflet().removeLayer(this.lines[V]);
                this.lines[V] = null 
            }
            this.lines = [];
            this.cursor = null 
        }
    };
    function J(V, U) {
        this.id = V;
        this.color = D(U.color) || "#ff0088";
        this.alpha = (U.alpha != null ) ? U.alpha : 1;
        this.width = (U.width != null ) ? U.width : 1;
        this.ring = null ;
        this.polygon = null ;
        if (this.alpha > 1) {
            this.alpha = this.alpha / 100
        }
    }
    J.prototype = {
        draw: function() {
            this.polygon = new L.Polygon(this.ring,{
                color: this.color,
                opacity: this.alpha,
                weight: this.width
            });
            v(this.polygon, this);
            if (this.visibility !== false) {
                z.exposeLeaflet().addLayer(this.polygon)
            }
        },
        clear: function() {
            z.exposeLeaflet().removeLayer(this.polygon);
            this.polygon = null ;
            this.ring = null 
        },
        edit: function(U) {
            if (this.polygon) {
                if (U === false) {
                    this.polygon.editing.disable()
                } else {
                    this.polygon.editing.enable()
                }
            }
        },
        geom: function() {
            var U = this.ring, V;
            if (U) {
                V = P(this.polygon, this.hasZ);
                return V
            }
            return null 
        },
        wkt: function() {
            var U = this.ring, V;
            if (U) {
                V = P(this.polygon, this.hasZ);
                return V ? V.toOGC() : ""
            }
            return null 
        },
        redraw: function() {
            var U = this.ring;
            this.clear();
            this.ring = U;
            this.draw()
        }
    };
    function R(V, U) {
        this.id = V;
        this.color = D(U.color) || "#ff0088";
        this.alpha = (U.alpha != null ) ? U.alpha : 1;
        this.width = (U.width != null ) ? U.width : 1;
        this.shapes = null ;
        this.featureGroup = null ;
        this.type = "multi";
        if (this.alpha > 1) {
            this.alpha = this.alpha / 100
        }
    }
    R.prototype = {
        draw: function() {
            this.featureGroup = new L.FeatureGroup(this.shapes,{
                color: this.color,
                opacity: this.alpha,
                weight: this.width
            });
            v(this.featureGroup, this);
            if (this.visibility !== false) {
                z.exposeLeaflet().addLayer(this.featureGroup)
            }
        },
        clear: function() {
            z.exposeLeaflet().removeLayer(this.featureGroup);
            this.shapes = null ;
            this.featureGroup = null 
        },
        edit: function(V) {
            var U;
            if (this.shapes) {
                if (V === false) {
                    U = function(Y, W) {
                        if (W.editing) {
                            W.editing.disable()
                        } else {
                            if (W.dragging) {
                                W.dragging.disable()
                            } else {
                                if (W._layers) {
                                    p.each(W._layers, U)
                                }
                            }
                        }
                    }
                } else {
                    U = function(Y, W) {
                        if (W.editing) {
                            W.editing.enable()
                        } else {
                            if (W.dragging) {
                                W.dragging.enable()
                            } else {
                                if (W._layers) {
                                    p.each(W._layers, U)
                                }
                            }
                        }
                    }
                }
                p.each(this.shapes, U)
            }
        },
        redraw: function() {
            var U = this.shapes;
            this.clear();
            this.shapes = U;
            this.draw()
        },
        geom: function() {
            var U = P(this.shapes, this.hasZ);
            if (!U) {
                return null 
            } else {
                if (U instanceof giscloud.geometry.Multipoint || U instanceof giscloud.geometry.Multiline || U instanceof giscloud.geometry.Multipolygon) {
                    return U
                } else {
                    if (U.length === 1 && U[0] instanceof giscloud.geometry.Multipoint || U[0] instanceof giscloud.geometry.Multiline || U[0] instanceof giscloud.geometry.Multipolygon) {
                        return U[0]
                    }
                }
            }
            switch (this.type) {
            case "point":
                return new giscloud.geometry.Multipoint(U);
            case "line":
                return new giscloud.geometry.Multiline(U);
            case "polygon":
                return new giscloud.geometry.Multipolygon(U);
            default:
                return new giscloud.geometry.GeometryCollection(U)
            }
        },
        wkt: function() {
            var U = P(this.shapes, this.hasZ);
            if (!U) {
                return null 
            } else {
                if (U instanceof giscloud.geometry.Multipoint || U instanceof giscloud.geometry.Multiline || U instanceof giscloud.geometry.Multipolygon) {
                    return U.toOGC()
                } else {
                    if (U.length === 1 && U[0] instanceof giscloud.geometry.Multipoint || U[0] instanceof giscloud.geometry.Multiline || U[0] instanceof giscloud.geometry.Multipolygon) {
                        return U[0].toOGC()
                    }
                }
            }
            switch (this.type) {
            case "point":
                return new giscloud.geometry.Multipoint(U).toOGC();
            case "line":
                return new giscloud.geometry.Multiline(U).toOGC();
            case "polygon":
                return new giscloud.geometry.Multipolygon(U).toOGC();
            default:
                return new giscloud.geometry.GeometryCollection(U).toOGC()
            }
        }
    };
    S = (function(aE) {
        var aR, aN, a1, ai = (new L.Handler.PolyEdit()).options.icon, aH = [], aZ = [], at = new L.DivIcon({
            className: "gc-map-tip"
        }), ar = new L.DivIcon({
            className: "gc-map-tip"
        }), ae = new L.DivIcon({
            className: "gc-map-tip gc-input-label"
        }), aa = new L.Marker(new L.LatLng(0,0),{
            icon: at,
            clickable: false
        }), Y = new L.Marker(new L.LatLng(0,0),{
            icon: ar,
            clickable: false
        }), am = new L.Marker(new L.LatLng(0,0),{
            icon: ae,
            clickable: false
        }), ay = "", a0 = (1.1).toLocaleString().match(/\D/)[0], aP = null , aY = false, aU = false, ax = false, aj = [], ab = 6371000, aL;
        function W(a4) {
            var a3 = new L.Marker(a4,{
                icon: ai
            });
            aE.addLayer(a3);
            aZ.push(a3)
        }
        function aq() {
            if (aY === "line") {
                aZ[aZ.length - 1].off("click", aq)
            } else {
                if (aY === "polygon") {
                    if (aZ && aZ.length) {
                        aZ[0].off("click", aq)
                    }
                } else {
                    if (aY === "rectangle") {
                        if (aH.length !== 5) {
                            aH = null 
                        }
                        p(document).off("mouseup", aq);
                        aE.dragging.enable()
                    }
                }
            }
            aM();
            S.end()
        }
        function an(a3, a5, a4) {
            if (!q) {
                return
            }
            if (!a3) {
                a3 = aa
            }
            if (!a3.isVisible) {
                aE.addLayer(a3);
                a3.isVisible = true
            }
            a3.setLatLng(a5);
            a3._icon.innerHTML = a4
        }
        function aM(a3) {
            if (!a3) {
                aM(aa);
                aM(Y);
                return
            }
            if (!a3.isVisible) {
                return
            }
            aE.removeLayer(a3);
            a3.isVisible = false
        }
        function aF() {}
        function ao(a6) {
            var a3, a5, a4, a7;
            if (!ax) {
                return
            }
            if (!am.isVisible) {
                aE.addLayer(am);
                am.isVisible = true
            }
            a3 = p(am._icon).find(".gc-map-tip-mock-input");
            if (aY === "line") {
                a5 = aN._latlngs[0];
                a4 = aN._latlngs[1]
            } else {
                a5 = aN._latlngs[aH.length - 1];
                a4 = aN._latlngs[aH.length]
            }
            a7 = new L.LatLng((a4.lat + a5.lat) / 2,(a4.lng + a5.lng) / 2);
            if (a6 == null ) {
                a6 = ay
            }
            if (!a3.length) {
                a3 = p("<span/>", {
                    "class": "gc-map-tip-mock-input",
                    text: a6
                });
                p(am._icon).append(a3)
            } else {
                a3.text(a6)
            }
            am.setLatLng(a7)
        }
        function V() {
            if (!am.isVisible) {
                return
            }
            aE.removeLayer(am);
            am.isVisible = false;
            ax = false;
            ay = ""
        }
        function aG(a4, a3) {
            return Math.sqrt((a4.x - a3.x) * (a4.x - a3.x) + (a4.y - a3.y) * (a4.y - a3.y))
        }
        function aD(a4) {
            var a9 = z.fromLeafletCoords(a4);
            var bb = z.parent.scale();
            var bc = 7 / z.calculateScaleZoom(bb);
            var a5 = null ;
            var a6 = null ;
            var ba;
            var a3 = a9.hasZ();
            for (var a7 = 0, a8 = aj.length; a7 < a8; a7++) {
                ba = aG(a9, aj[a7]);
                if (ba < bc) {
                    bc = ba;
                    a6 = aj[a7];
                    a5 = z.toLeafletCoords(a6.x, a6.y, a3 ? a6.z : null , true);
                    a5._snapPoint = a6
                }
            }
            if (a5) {
                a4 = a5;
                z.parent.showTip(["<span class='gc-map-tip-snap-icon'>", a6.layerName.replace(/ /g, "&nbsp;"), "</span>"].join(""), true)
            } else {
                z.parent.hideTip()
            }
            return a4
        }
        function ag(ba, a9, a7) {
            var bc, a4, a3, bb, a6, a8, a5;
            if (ba.y === a9.y && ba.x === a9.x) {
                ba.y -= Number.MIN_VALUE
            }
            bc = ((a7.y - ba.y) * (a9.y - ba.y)) + ((a7.x - ba.x) * (a9.x - ba.x));
            a4 = Math.pow(a9.y - ba.y, 2) + Math.pow(a9.x - ba.x, 2);
            bc /= a4;
            a3 = new giscloud.geometry.Point(ba.x + (bc * (a9.x - ba.x)),ba.y + (bc * (a9.y - ba.y)));
            return a3
        }
        function al(a4, a3) {
            return Math.sqrt(Math.pow(a4.lng - a3.lng, 2) + Math.pow(a4.lat - a3.lat, 2))
        }
        function aK(be, bc, a9) {
            var bf, a7, a6, bd, bh, bb, a8, bj, ba, a5, a4, a3, bk, bi, bg;
            bf = z.fromLeafletCoords(be);
            a7 = z.fromLeafletCoords(bc);
            a6 = z.fromLeafletCoords(a9);
            bd = new giscloud.geometry.Point(a7.x - bf.x,a7.y - bf.y);
            bh = new giscloud.geometry.Point(a6.x - a7.x,a6.y - a7.y);
            bb = Math.sqrt(bd.x * bd.x + bd.y * bd.y);
            a8 = Math.sqrt(bh.x * bh.x + bh.y * bh.y);
            if (bb === 0 || a8 === 0) {
                return a9
            }
            bj = new giscloud.geometry.Point(a8 * bd.x / bb,a8 * bd.y / bb);
            a5 = ag(a7, new giscloud.geometry.Point(a7.x + -1 * bj.y,a7.y + bj.x), a6);
            a4 = ag(a7, new giscloud.geometry.Point(a7.x + bj.y,a7.y + -1 * bj.x), a6);
            a3 = ag(a7, new giscloud.geometry.Point(a7.x + bj.x,a7.y + bj.y), a6);
            bk = a5 ? aG(a6, a5) : Number.MAX_VALUE;
            bi = a4 ? aG(a6, a4) : Number.MAX_VALUE;
            bg = a3 ? aG(a6, a3) : Number.MAX_VALUE;
            ba = Math.min(bk, bi, bg);
            if (ba === Number.MAX_VALUE) {
                return a9
            }
            if (ba === bk) {
                return z.toLeafletCoords(a5.x, a5.y)
            }
            if (ba === bi) {
                return z.toLeafletCoords(a4.x, a4.y)
            }
            return z.toLeafletCoords(a3.x, a3.y)
        }
        function aA(ba, a9, a8) {
            var a3, a4, bb, a5, a7, a6;
            a3 = z.fromLeafletCoords(ba);
            a4 = z.fromLeafletCoords(a9);
            bb = new giscloud.geometry.Point(a4.x - a3.x,a4.y - a3.y);
            a5 = Math.sqrt(bb.x * bb.x + bb.y * bb.y);
            a7 = new giscloud.geometry.Point(a8 * bb.x / a5,a8 * bb.y / a5);
            a6 = new giscloud.geometry.Point(a3.x + a7.x,a3.y + a7.y);
            return z.toLeafletCoords(a6.x, a6.y)
        }
        function U(be, bb, a7, bf) {
            var a3 = giscloud.fromMeters(bf, ab), bg = Math.PI / 180, a5 = be.lat * bg, a4 = bb.lat * bg, bd = be.lng * bg, ba = bb.lng * bg, a9 = Math.sin(ba - bd) * Math.cos(a4), bc = Math.cos(a5) * Math.sin(a4) - Math.sin(a5) * Math.cos(a4) * Math.cos(ba - bd), bh = Math.atan2(a9, bc), a6, a8;
            a6 = Math.asin(Math.sin(a5) * Math.cos(a7 / ab) + Math.cos(a5) * Math.sin(a7 / ab) * Math.cos(bh));
            a8 = bd + Math.atan2(Math.sin(bh) * Math.sin(a7 / ab) * Math.cos(a5), Math.cos(a7 / ab) - Math.sin(a5) * Math.sin(a6));
            return new L.LatLng(a6 / bg,a8 / bg)
        }
        function aQ(a4) {
            var a3 = aZ.length, a5;
            if (a4 === true || (ax && !isNaN(parseFloat(ay)))) {
                a5 = aN._latlngs[aN._latlngs.length - 1]
            } else {
                a5 = r ? aD(a4.latlng) : a4.latlng;
                if (a3 > 1 && aU) {
                    a5 = aK(aH[a3 - 2], aH[a3 - 1], a5)
                }
            }
            aH.push(a5);
            aj.push(a5);
            W(a5);
            if (aY === "point") {
                S.end();
                return
            } else {
                if (aY === "line") {
                    if (a3 > 0) {
                        aZ[a3 - 1].off("click", aq)
                    }
                    aZ[a3].on("click", aq);
                    if (aH.length >= 2) {
                        if (aR) {
                            aE.removeLayer(aR)
                        }
                        aR = new L.Polyline(aH);
                        aE.addLayer(aR)
                    }
                    if (aN) {
                        aE.removeLayer(aN);
                        aN = null 
                    }
                } else {
                    if (aY === "polygon") {
                        if (a3 === 0) {
                            aZ[0].on("click", aq)
                        }
                        if (a3 !== 0 && aH.length >= 3) {
                            aZ[a3].on("click", aq);
                            aZ[a3 - 1].off("click", aq)
                        }
                        if (aH.length >= 3) {
                            if (aR) {
                                aE.removeLayer(aR)
                            }
                            aR = new L.Polygon(aH,{
                                stroke: false
                            });
                            aE.addLayer(aR)
                        }
                        if (aN) {
                            aN.setLatLngs(aH.concat([a5]))
                        }
                    }
                }
            }
            a1 && a1.notify(o(aY, aH));
            V()
        }
        function aC(a3) {
            var a4 = a3.latlng;
            aE.off("click", aQ);
            aE.off("mousedown", aC);
            aE.dragging.disable();
            p(document).on("mouseup", function() {
                aE.dragging.enable()
            }).on("mouseup", aq);
            aY = "rectangle";
            aH = [a3.latlng]
        }
        function aX(bc, a3) {
            var bb = aH.length - 1, a4 = r ? aD(bc.latlng) : bc.latlng, bd, ba, a9, a8, a7, a6, a5;
            if (bb < 0 || aY === "point") {
                return
            }
            a4 = bc.latlng;
            aP = {
                latlng: new L.LatLng(a4.lat,a4.lng)
            };
            if (!a3) {
                if (r) {
                    a4 = aD(bc.latlng)
                }
                if (bb > 0 && aU) {
                    a4 = aK(aH[bb - 1], aH[bb], a4)
                }
                if (ax && !isNaN(parseFloat(ay))) {
                    a5 = parseFloat(ay.replace(a0, "."));
                    if (z.epsg === "900913" || z.epsg === "3857") {
                        a4 = U(aH[bb], a4, a5, z.measureUnit)
                    } else {
                        a4 = aA(aH[bb], a4, a5)
                    }
                }
            }
            if (aY === "line") {
                if (!aN) {
                    aN = new L.Polyline([aH[bb], a4],{
                        color: "black",
                        weight: 2,
                        dashArray: "5, 5"
                    });
                    aE.addLayer(aN)
                } else {
                    aN.spliceLatLngs(1, 1, a4)
                }
            } else {
                if (aY === "rectangle") {
                    if (!aN) {
                        aH = [aH[0], new L.LatLng(aH[0].lat,a4.lng), new L.LatLng(a4.lat,a4.lng), new L.LatLng(a4.lat,aH[0].lng), aH[0]];
                        aN = new L.Polyline(aH,{
                            color: "black",
                            weight: 2,
                            dashArray: "5, 5"
                        });
                        aE.addLayer(aN)
                    } else {
                        aH.splice(1, 3, new L.LatLng(aH[0].lat,a4.lng), new L.LatLng(a4.lat,a4.lng), new L.LatLng(a4.lat,aH[0].lng));
                        aN.setLatLngs(aH)
                    }
                } else {
                    if (aY === "polygon") {
                        if (!aN) {
                            aN = new L.Polyline([aH[bb], a4],{
                                color: "black",
                                weight: 2,
                                dashArray: "5, 5"
                            });
                            aE.addLayer(aN)
                        } else {
                            aN.spliceLatLngs(bb + 1, 1, a4)
                        }
                    } else {
                        return
                    }
                }
            }
            if (ax) {
                ao();
                aM()
            } else {
                if (q && bb >= 0) {
                    if (aY === "rectangle") {
                        bd = aH[0];
                        ba = aH[1];
                        a9 = aH[3];
                        a8 = aH[4];
                        a7 = aE.measure.options.calculateDistance(bd.lat, bd.lng, ba.lat, ba.lng);
                        a6 = aE.measure.options.calculateDistance(a9.lat, a9.lng, a8.lat, a8.lng);
                        an(aa, new L.LatLng((ba.lat + bd.lat) / 2,(ba.lng + bd.lng) / 2), aE.measure.options.labelFunction(null , null , null , a7));
                        an(Y, new L.LatLng((a8.lat + a9.lat) / 2,(a8.lng + a9.lng) / 2), aE.measure.options.labelFunction(null , null , null , a6))
                    } else {
                        if (aN._latlngs.length === 2) {
                            bb = 0
                        }
                        bd = aN._latlngs[bb];
                        ba = aN._latlngs[bb + 1];
                        a7 = aE.measure.options.calculateDistance(bd.lat, bd.lng, ba.lat, ba.lng);
                        an(aa, new L.LatLng((ba.lat + bd.lat) / 2,(ba.lng + bd.lng) / 2), aE.measure.options.labelFunction(null , null , null , a7))
                    }
                    V()
                } else {
                    V();
                    aM(aa)
                }
            }
        }
        function Z() {
            aU = true
        }
        function aB() {
            aU = false
        }
        function ak(a3) {
            if ((a3.ctrlKey || a3.metaKey) && aY === "polygon" && !aN) {
                aE.dragging.disable();
                aE.on("mousedown", aC);
                p(document).one("keyup", function a4(a5) {
                    if (!a5.ctrlKey && !a5.metaKey) {
                        aE.off("mousedown", aC);
                        p(document).one("keydown", ak)
                    } else {
                        p(document).one("keyup", a4)
                    }
                })
            } else {
                if ((a3.ctrlKey || a3.metaKey) && aY && aY !== "point") {
                    Z();
                    p(document).one("keyup", function(a5) {
                        if (!a5.ctrlKey && !a5.metaKey) {
                            aB()
                        }
                        p(document).one("keydown", ak)
                    })
                } else {
                    if (ax && a3.which === 8) {
                        a3.preventDefault();
                        aO(a3);
                        p(document).one("keydown", ak)
                    } else {
                        p(document).one("keydown", ak)
                    }
                }
            }
        }
        function aO(a3) {
            var a5, a4;
            if (!aN || !aY || aY === "point" || aY === "rectangle" || !(a3.which === 8 || a3.which === 46 || a3.which === 190 || a3.which === 44 || a3.which === 188 || a3.which === 110 || a3.which === a0.charCodeAt(0) || a3.which >= 48 && a3.which <= 57)) {
                return
            }
            ax = true;
            if (a3.which === 8) {
                if (ay.length) {
                    ay = ay.slice(0, -1)
                }
            } else {
                if (a3.which === 46 || a3.which === 44 || a3.which === a0.charCodeAt(0)) {
                    a5 = ay + a0
                } else {
                    a4 = String.fromCharCode(a3.which);
                    a5 = ay + a4
                }
            }
            if (!isNaN(parseFloat(a5))) {
                ay = a5
            }
            if (aP) {
                aX(aP)
            }
            ao(ay)
        }
        function aW(a3) {
            if (a3.which === 27) {
                if (ax) {
                    V();
                    if (aP) {
                        aX(aP)
                    }
                    ax = false
                } else {
                    S.cancel()
                }
            } else {
                if (a3.which === 13) {
                    if (ax) {
                        aQ(true);
                        ax = false;
                        V()
                    } else {
                        S.end()
                    }
                } else {
                    return true
                }
            }
            a3.preventDefault();
            a3.stopPropagation()
        }
        function ac(a4, a8, a3) {
            var a5 = Math.sin(a8), a9 = Math.cos(a8), a7, a6;
            a3.lng -= a4.lng;
            a3.lat -= a4.lat;
            a7 = a3.lng * a9 - a3.lat * a5;
            a6 = a3.lng * a5 + a3.lat * a9;
            a3.lng = a7 + a4.lng;
            a3.lat = a6 + a4.lat;
            return a3
        }
        function aV(a4, a8, a3) {
            var a5 = Math.sin(a8), a9 = Math.cos(a8), a7, a6;
            a3.x -= a4.x;
            a3.y -= a4.y;
            a7 = a3.x * a9 - a3.y * a5;
            a6 = a3.x * a5 + a3.y * a9;
            a3.x = a7 + a4.x;
            a3.y = a6 + a4.y;
            return a3
        }
        function ad() {
            if (L.Handler.PolyEdit.prototype._fnCanvasOverriden) {
                return
            }
            L.Handler.PolyEdit.prototype.addHooks = function() {
                if (this._poly._map) {
                    if (!this._markerGroup) {
                        this._initMarkers()
                    }
                    this._poly._map.addLayer(this._markerGroup);
                    this._poly.on("mousedown", this._onPolyMousedown, this);
                    p(document).one("keydown", null , "r", p.proxy(this._rKeyDown, this)).one("keydown", null , "t", p.proxy(this._tKeyDown, this)).one("keydown", null , "ctrl", p.proxy(this._ctrlKeyDown, this))
                }
            }
            ;
            L.Handler.PolyEdit.prototype._origRemoveHooks = L.Handler.PolyEdit.prototype.removeHooks;
            L.Handler.PolyEdit.prototype.removeHooks = function() {
                p(document).off("keydown", this._rKeyDown).off("keydown", this._tKeyDown).off("keydown", this._ctrlKeyDown);
                this._origRemoveHooks.apply(this, Array.prototype.slice.apply(arguments))
            }
            ;
            L.Handler.PolyEdit.prototype._hideMarkers = function() {
                this._markerGroup.eachLayer(function(a3) {
                    a3._origOpacity = a3.options.opacity;
                    a3.options.opacity = 0;
                    a3._updateOpacity()
                })
            }
            ;
            L.Handler.PolyEdit.prototype._showMarkers = function() {
                this._markerGroup.eachLayer(function(a3) {
                    if (a3._origOpacity != null ) {
                        a3.options.opacity = a3._origOpacity || 1
                    } else {
                        a3.options.opacity = 1
                    }
                    a3._updateOpacity()
                })
            }
            ;
            L.Handler.PolyEdit.prototype._showCenter = function() {
                var a4 = new L.LatLng(0,0), a6, a5, bd, bb, a3, a9 = 0, a8, bc, a7, ba;
                bc = ba = Number.MAX_VALUE;
                a8 = a7 = -1 * Number.MAX_VALUE;
                a4.x = a4.y = 0;
                a5 = this._poly._latlngs.length;
                if (this._poly._latlngs[a5 - 1].lat === this._poly._latlngs[0].lat && this._poly._latlngs[a5 - 1].lng === this._poly._latlngs[0].lng) {
                    a5--
                }
                for (a6 = 0; a6 < a5; a6++) {
                    a9 = z.fromLeafletCoords(this._poly._latlngs[a6]);
                    a4.x += a9.x;
                    a4.y += a9.y
                }
                a4.x /= a5;
                a4.y /= a5;
                this._center = z.toLeafletCoords(a4.x, a4.y);
                this._center.x = a4.x;
                this._center.y = a4.y;
                a4.lat = this._center.lat;
                a4.lng = this._center.lng;
                this._centerMarker = new L.Marker(a4,{
                    draggable: false,
                    icon: this.options.icon
                });
                this._centerMarker.addTo(this._poly._map)
            }
            ;
            L.Handler.PolyEdit.prototype._hideCenter = function() {
                if (this._centerMarker && this._centerMarker._map) {
                    this._centerMarker._map.removeLayer(this._centerMarker);
                    this._centerMarker = null 
                }
            }
            ;
            L.Handler.PolyEdit.prototype._rKeyDown = function(a3) {
                this._rotatePolys = true;
                this._hideMarkers();
                this._showCenter();
                p(document).one("keyup", null , "r", p.proxy(function() {
                    this._rotatePolys = false;
                    this._showMarkers();
                    this._hideCenter();
                    p(document).one("keydown", null , "r", p.proxy(this._rKeyDown, this))
                }, this))
            }
            ;
            L.Handler.PolyEdit.prototype._tKeyDown = function(a3) {
                this._dragWholePolys = true;
                this._hideMarkers();
                p(document).one("keyup", null , "t", p.proxy(function() {
                    this._dragWholePolys = false;
                    this._showMarkers();
                    p(document).one("keydown", null , "t", p.proxy(this._tKeyDown, this))
                }, this))
            }
            ;
            L.Handler.PolyEdit.prototype._ctrlKeyDown = function(a3) {
                this._dragPerpendicular = true;
                p(document).one("keyup", null , "r", p.proxy(function() {
                    this._dragPerpendicular = false;
                    p(document).one("keydown", null , "ctrl", p.proxy(this._ctrlKeyDown, this))
                }, this))
            }
            ;
            L.Handler.PolyEdit.prototype._onPolyMousedown = function(a4) {
                var a3 = z.fromLeafletCoords(a4.latlng);
                this._mousedownLatlng = a4.latlng;
                this._mousedownLatlng.x = a3.x;
                this._mousedownLatlng.y = a3.y;
                if (this._dragWholePolys) {
                    return this._startPolyDrag(a4)
                }
                if (this._rotatePolys) {
                    return this._startPolyRotate(a4)
                }
            }
            ;
            L.Handler.PolyEdit.prototype._saveOrigins = function() {
                var a5, a8, a9, a3, a6, a4, a7;
                a8 = this._markerGroup._layers;
                for (a5 in a8) {
                    if (a8.hasOwnProperty(a5)) {
                        a9 = a8[a5].getLatLng();
                        a8[a5]._origin = new L.LatLng(a9.lat,a9.lng);
                        a7 = z.fromLeafletCoords(a8[a5]._origin);
                        a8[a5]._origin.x = a7.x;
                        a8[a5]._origin.y = a7.y
                    }
                }
                a3 = this._poly._latlngs;
                for (a6 = 0,
                a4 = a3.length; a6 < a4; a6++) {
                    a3[a6]._origin = new L.LatLng(a3[a6].lat,a3[a6].lng);
                    a7 = z.fromLeafletCoords(a3[a6]._origin);
                    a3[a6]._origin.x = a7.x;
                    a3[a6]._origin.y = a7.y
                }
            }
            ;
            L.Handler.PolyEdit.prototype._startPolyDrag = function(a3) {
                this._poly._map.on("mousemove", this._onPolyDragging, this);
                p(document).one("mouseup", p.proxy(this._endPolyDrag, this));
                this._saveOrigins()
            }
            ;
            L.Handler.PolyEdit.prototype._startPolyRotate = function(a3) {
                this._v1 = new giscloud.geometry.Point(this._mousedownLatlng.y - this._center.y,this._mousedownLatlng.x - this._center.x);
                this._v1Atan = Math.atan2(this._v1.y, this._v1.x);
                this._poly._map.on("mousemove", this._onPolyRotate, this);
                p(document).one("mouseup", p.proxy(this._endPolyRotate, this));
                this._saveOrigins(a3)
            }
            ;
            L.Handler.PolyEdit.prototype._onPolyDragging = function(ba) {
                var bg = ba.latlng.lng - this._mousedownLatlng.lng, bf = ba.latlng.lat - this._mousedownLatlng.lat, a3 = this._poly._latlngs, a9, a6, a5, a7, a8, bc, a4, be, bd, bb;
                if (r) {
                    a7 = this._markerGroup._layers;
                    for (a8 in a7) {
                        if (a7.hasOwnProperty(a8)) {
                            a5 = a7[a8]._origin;
                            a5 = new L.LatLng(a7[a8]._origin.lat + bf,a7[a8]._origin.lng + bg);
                            bc = aD(a5);
                            if (bc && !bc.equals(a5)) {
                                bg = bc.lng - a7[a8]._origin.lng;
                                bf = bc.lat - a7[a8]._origin.lat;
                                break
                            }
                        }
                    }
                }
                this._markerGroup.eachLayer(function(bh) {
                    var bj = bh._origin.lat + bf
                      , bi = bh._origin.lng + bg;
                    bh.setLatLng(new L.LatLng(bj,bi));
                    if (bh._origLatLng) {
                        L.extend(bh._origLatLng, bh._latlng);
                        bh._origLatLng._o = null 
                    }
                });
                for (a9 = 0,
                a6 = a3.length; a9 < a6; a9++) {
                    a3[a9].lng = a3[a9]._origin.lng + bg;
                    a3[a9].lat = a3[a9]._origin.lat + bf
                }
                this._poly.redraw();
                if (q) {
                    a4 = aE.measure;
                    be = this._mousedownLatlng;
                    bd = new L.LatLng(be.lat + bf,be.lng + bg);
                    bb = a4.options.calculateDistance(be.lat, be.lng, bd.lat, bd.lng);
                    an(aa, new L.LatLng((bd.lat + be.lat) / 2,(bd.lng + be.lng) / 2), a4.options.labelFunction(null , null , null , bb));
                    if (!this._measureLine) {
                        this._measureLine = new L.Polyline([be, bd],{
                            color: "#333",
                            weight: 3,
                            dashArray: "5, 5"
                        });
                        this._poly._map.addLayer(this._measureLine)
                    } else {
                        this._measureLine.setLatLngs([be, bd])
                    }
                } else {
                    aM(aa);
                    if (this._measureLine) {
                        this._poly._map.removeLayer(this._measureLine);
                        this._measureLine = null 
                    }
                }
            }
            ;
            L.Handler.PolyEdit.prototype._onPolyRotate = function(ba) {
                var a5 = z.fromLeafletCoords(ba.latlng), bb = new giscloud.geometry.Point(a5.y - this._center.y,a5.x - this._center.x), a6 = this._v1Atan - Math.atan2(bb.y, bb.x), a3 = this._center, a4 = this._poly._latlngs, a9, a7, a8;
                this._markerGroup.eachLayer(function(bd) {
                    var bc = new giscloud.geometry.Point(bd._origin.x,bd._origin.y), be;
                    aV(a3, a6, bc);
                    be = z.toLeafletCoords(bc.x, bc.y);
                    bd.setLatLng(be);
                    if (bd._origLatLng) {
                        L.extend(bd._origLatLng, bd._latlng);
                        bd._origLatLng._o = null 
                    }
                });
                for (a9 = 0,
                a7 = a4.length; a9 < a7; a9++) {
                    a5 = new giscloud.geometry.Point(a4[a9]._origin.x,a4[a9]._origin.y);
                    a5 = aV(this._center, a6, a5);
                    a4[a9].x = a5.x;
                    a4[a9].y = a5.y;
                    a5 = z.toLeafletCoords(a5.x, a5.y);
                    a4[a9].lat = a5.lat;
                    a4[a9].lng = a5.lng
                }
                this._poly.redraw()
            }
            ;
            L.Handler.PolyEdit.prototype._endPolyDrag = function() {
                var a3 = [], a6, a5, a4;
                this._poly._map.off("mousemove", this._onPolyDragging);
                z.parent.hideTip();
                aM(aa);
                if (this._measureLine) {
                    this._poly._map.removeLayer(this._measureLine);
                    this._measureLine = null 
                }
                for (a5 = 0,
                a4 = this._markers.length; a5 < a4; a5++) {
                    a3.push(this._markers[a5]._origLatLng)
                }
                this._poly.setLatLngs(a3);
                this._poly.redraw();
                this._fireEdit()
            }
            ;
            L.Handler.PolyEdit.prototype._endPolyRotate = function() {
                var a3 = [], a6, a5, a4;
                this._poly._map.off("mousemove", this._onPolyRotate);
                z.parent.hideTip();
                aM(aa);
                if (this._measureLine) {
                    this._poly._map.removeLayer(this._measureLine);
                    this._measureLine = null 
                }
                for (a5 = 0,
                a4 = this._markers.length; a5 < a4; a5++) {
                    a3.push(this._markers[a5]._origLatLng)
                }
                this._poly.setLatLngs(a3);
                this._poly.redraw();
                this._fireEdit()
            }
            ;
            L.Handler.PolyEdit.prototype._fnCanvasOverriden = true
        }
        function a2() {
            if (!L.Handler.PolyEdit.prototype._onMarkerDragOrig) {
                L.Handler.PolyEdit.prototype._onMarkerDragOrig = L.Handler.PolyEdit.prototype._onMarkerDrag;
                L.Handler.PolyEdit.prototype._onMarkerDrag = function(a5) {
                    var a3 = a5.target, a7, a4, a6;
                    a3._origLatLng._o = null ;
                    if (r) {
                        a3.setLatLng(aD(a3._latlng))
                    }
                    if (q) {
                        if (a3._prev) {
                            a7 = a3._latlng;
                            a4 = a3._prev._latlng;
                            a6 = aE.measure.options.calculateDistance(a7.lat, a7.lng, a4.lat, a4.lng);
                            an(aa, new L.LatLng((a4.lat + a7.lat) / 2,(a4.lng + a7.lng) / 2), aE.measure.options.labelFunction(null , null , null , a6))
                        } else {
                            aM(aa)
                        }
                        if (a3._next) {
                            a7 = a3._latlng;
                            a4 = a3._next._latlng;
                            a6 = aE.measure.options.calculateDistance(a7.lat, a7.lng, a4.lat, a4.lng);
                            an(Y, new L.LatLng((a4.lat + a7.lat) / 2,(a4.lng + a7.lng) / 2), aE.measure.options.labelFunction(null , null , null , a6))
                        } else {
                            aM(Y)
                        }
                    } else {
                        aM(aa);
                        aM(Y)
                    }
                    this._onMarkerDragOrig(a5)
                }
            }
            if (!L.Handler.PolyEdit.prototype._fireEditOrig) {
                L.Handler.PolyEdit.prototype._fireEditOrig = L.Handler.PolyEdit.prototype._fireEdit;
                L.Handler.PolyEdit.prototype._fireEdit = function(a3) {
                    z.parent.hideTip();
                    aM();
                    this._fireEditOrig(a3)
                }
            }
        }
        function ah() {
            L.Handler.PolyEdit.prototype._onMarkerDrag = L.Handler.PolyEdit.prototype._onMarkerDragOrig;
            L.Handler.PolyEdit.prototype._fireEdit = L.Handler.PolyEdit.prototype._fireEditOrig;
            delete L.Handler.PolyEdit.prototype._onMarkerDragOrig;
            delete L.Handler.PolyEdit.prototype._fireEditOrig;
            aM()
        }
        var af;
        function aT() {
            clearTimeout(af);
            af = window.setTimeout(aJ, 50)
        }
        function aJ() {
            if (giscloud.ui && giscloud.ui.edit) {
                giscloud.ui.edit.enableDisableSnapping()
            }
            aI()
        }
        function aS() {
            a2();
            z.parent.scaleChange(aI);
            z.parent.dragEnd(aI);
            var a4 = z.parent.layers;
            for (var a3 in a4) {
                if (a4[a3].instance && !a4[a3].instance.isGroupLayer) {
                    a4[a3].instance.on("tileload", aT)
                }
            }
        }
        function az() {
            ah();
            z.parent.unbind("scaleChange", aI);
            z.parent.unbind("dragEnd", aI);
            z.parent.hideTip();
            var a4 = z.parent.layers;
            for (var a3 in a4) {
                if (a4[a3].instance && !a4[a3].instance.isGroupLayer) {
                    a4[a3].instance.off("tileload", aT)
                }
            }
            I = {};
            h = {}
        }
        function aw() {
            if (aR) {
                aE.removeLayer(aR)
            }
            if (aN) {
                aE.removeLayer(aN);
                aN = null 
            }
            p.map(aZ, function(a3) {
                aE.removeLayer(a3);
                a3 = null 
            });
            aZ = [];
            aH = [];
            ax = false;
            ay = "";
            aP = null ;
            p(document).off("keyup", aW);
            p(document).off("keypress", aO);
            aE.off("click", aQ);
            aE.off("mousemove", aX);
            az();
            V()
        }
        function au(a8, a9, a4, a5) {
            if (!I[a4]) {
                I[a4] = {
                    layerName: a5.layerName,
                    geom: {}
                }
            }
            var a6, a3 = I[a4].geom;
            var a7 = p.map(a8, function(ba) {
                a6 = giscloud.geometry.fromOGC(ba.geometry);
                g(a6, aj, a5.layerName);
                a3[ba.id] = a6
            })
        }
        function ap(a6) {
            var ba = I[a6]
              , a9 = h[a6];
            if (!ba) {
                return a9
            }
            var a8, a5 = a9.length, a3 = [], a7 = ba.layerName, a4 = ba.geom;
            for (a8 = 0; a8 < a5; a8++) {
                if (a4[a9[a8]]) {
                    g(a4[a9[a8]], aj, a7)
                } else {
                    a3.push(a9[a8])
                }
            }
            return a3
        }
        function av() {
            var a9 = z.parent.layers, a8 = z, a3 = z && z.epsg, ba, a7, a6 = z.parent.bounds().toString();
            if (!a8) {
                return
            }
            aj = [];
            if (!M) {
                return
            }
            for (var a5, a4 = 0; a4 < a9.length; a4++) {
                a5 = a9[a4];
                if (!N[a5.id.toString()] || !a5.visible()) {
                    continue
                }
                if (a5.type && p.inArray(a5.type, ["tile", "wms", "wfs", "wmts", "raster", "folder"]) > -1) {
                    continue
                }
                ba = {
                    geometry: "wkt",
                    epsg: a3,
                    requestByPost: true,
                    noattrib: true,
                    layerName: a5.name
                };
                if (h[a5.id]) {
                    a7 = ap(a5.id);
                    if (a7.length === 0) {
                        continue
                    }
                    ba.fids = a7.join(",")
                }
                giscloud.features.byBounds(a5.id, a6, ba).done(au)
            }
        }
        function aI() {
            window.clearTimeout(aL);
            aL = window.setTimeout(av, 500)
        }
        return {
            showMeasureMarker: an,
            hideMeasureMarker: aM,
            measureMarker1: aa,
            measureMarker2: Y,
            initSnapping: aS,
            endSnapping: az,
            checkForSnapping: aD,
            loadSnappingData: av,
            overrideLeafletPolyEdit: ad,
            currentShapeGeometry: function(a3) {
                if (aY) {
                    return o(aY, aH, a3)
                }
                return null 
            },
            start: function(a3) {
                aE.doubleClickZoom.disable();
                aY = a3;
                aE.on("click", aQ);
                aE.on("mousemove", aX);
                aE.on("dblclick", aq);
                p(document).one("keydown", ak);
                p(document).keypress(aO);
                p(document).keyup(aW);
                aS();
                av();
                a1 = new p.Deferred();
                return a1.promise()
            },
            end: function(a3) {
                if (a1) {
                    if (aH === null ) {
                        a1.reject(a3)
                    } else {
                        a1.resolve(aH, a3)
                    }
                    aw()
                }
                aY = false;
                if (a1) {
                    return a1.promise()
                }
            },
            cancel: function(a3) {
                if (a1) {
                    a1.reject(a3);
                    aw()
                }
                return a1.promise()
            },
            reloadSnappingData: function() {
                av()
            }
        }
    }(z.exposeLeaflet()));
    this.fn = z;
    this.viewer = z.exposeLeaflet();
    this.add = function(V) {
        var U = T()
          , W = m(U);
        S.start(V).always(S.hideMeasureMarker).progress(function(Y) {
            p(e).triggerHandler("draw.fnCanvas2", [Y])
        }).done(p.proxy(function(Z, Y) {
            var aa = o(V, Z, true);
            if (aa) {
                this.deserializeGeometryOpenGISSimple({
                    geom: aa
                }, W);
                if (!Y) {
                    p(e).triggerHandler("add.fnCanvas2", [{
                        id: W,
                        geom: aa,
                        gtype: V
                    }])
                }
            } else {
                if (K[U] instanceof G) {
                    d(U)
                }
            }
        }, this)).fail(function(Y) {
            d(U);
            if (!Y) {
                p(e).triggerHandler("add.fnCanvas2", [{
                    id: null ,
                    geom: null ,
                    gtype: V
                }])
            }
        });
        return W
    }
    ;
    this.endDraw = function(U) {
        if (U && U.cancel) {
            S.cancel()
        } else {
            if (U && U.noEvent) {
                S.end(true)
            } else {
                S.end()
            }
        }
    }
    ;
    this.addEventListener = function(U, V) {
        var W = function() {
            var Y = Array.prototype.slice.call(arguments, 1);
            return V.apply(this, Y)
        }
        ;
        p(e).on(U + ".fnCanvas2", W);
        e.handlers.push({
            original: V,
            wrapped: W
        })
    }
    ;
    this.removeEventListener = function(U, W) {
        var Y, V;
        p.each(e.handlers, function(Z, aa) {
            if (aa.original === W) {
                V = Z;
                Y = aa.wrapped
            }
        });
        if (V == null  || e.handlers[V] == null ) {
            return
        }
        p(e).off(U + ".fnCanvas2", Y);
        delete e.handlers[V].wrapped;
        e.handlers.splice(V, 1)
    }
    ;
    this.setAttributeGeometry = function(Z, W, Y, V) {
        var U = K[O(Z)];
        if (U) {
            if (U instanceof G) {
                U.attributes[W] = Y
            } else {
                U[W] = Y;
                if (!V) {
                    U.redraw()
                }
            }
        }
        return Z
    }
    ;
    this.getAttributeGeometry = function(W, V) {
        var U = K[O(W)];
        if (!U) {
            return null 
        }
        return U[V]
    }
    ;
    this.getGeometry = function(V) {
        var U = K[O(V)];
        if (!U) {
            return null 
        }
        return U.geom()
    }
    ;
    this.setGeometryVisible = function(Y, U) {
        var V = K[O(Y)], W;
        if (V) {
            if (V instanceof G) {
                V.attributes[attribute] = value
            } else {
                V.visibility = U;
                V.redraw()
            }
        }
        return Y
    }
    ;
    this.newShape = function(W, aa) {
        var Z, Y, V, U;
        if (aa != null ) {
            Y = O(aa);
            V = K[Y];
            if (V instanceof G) {
                U = {};
                p.extend(U, V.attributes, W);
                Z = aa;
                K[Y] = new E(aa,U);
                if (V.removed) {
                    this.remove(aa)
                }
            } else {
                throw "Invalid ID for a reserved shape slot."
            }
        } else {
            Z = m(Q);
            K.push(new E(aa,W));
            Q++
        }
        return Z
    }
    ;
    this.newLineShape = this.newShape;
    this.newPointShape = function(W, aa) {
        var Z, Y, V, U;
        if (aa != null ) {
            Y = O(aa);
            V = K[Y];
            if (V instanceof G) {
                U = {};
                p.extend(U, V.attributes, W);
                Z = aa;
                K[Y] = new a(aa,W);
                if (V.removed) {
                    this.remove(aa)
                }
            } else {
                throw "Invalid ID for a reserved shape slot."
            }
        } else {
            Z = m(Q);
            K.push(new a(aa,W));
            Q++
        }
        return Z
    }
    ;
    this.newPolygonShape = function(W, aa) {
        var Z, Y, V, U;
        if (aa != null ) {
            Y = O(aa);
            V = K[Y];
            if (V instanceof G) {
                U = {};
                p.extend(U, V.attributes, W);
                Z = aa;
                K[Y] = new J(aa,W);
                if (V.removed) {
                    this.remove(aa)
                }
            } else {
                throw "Invalid ID for a reserved shape slot."
            }
        } else {
            Z = m(Q);
            K.push(new J(aa,W));
            Q++
        }
        return Z
    }
    ;
    this.newMultiShape = function(W, aa) {
        var Z, Y, V, U;
        if (aa != null ) {
            Y = O(aa);
            V = K[Y];
            if (V instanceof G) {
                U = {};
                p.extend(U, V.attributes, W);
                Z = aa;
                K[Y] = new R(aa,W);
                if (V.removed) {
                    this.remove(aa)
                }
            } else {
                throw "Invalid ID for a reserved shape slot."
            }
        } else {
            Z = m(Q);
            K.push(new R(aa,W));
            Q++
        }
        return Z
    }
    ;
    this.moveTo = function(Z, U, Y, W) {
        var V = K[O(Z)];
        if (V) {
            W = (W != null ) ? W : (V.hasZ ? 0 : null );
            V.cursor = this.fn.toLeafletCoords(U, Y, W);
            V.addLine();
            return Z
        }
    }
    ;
    this.lineTo = function(Z, U, Y, W) {
        var V = K[O(Z)];
        if (V) {
            W = (W != null ) ? W : (V.hasZ ? 0 : null );
            V.cursor = this.fn.toLeafletCoords(U, Y, W);
            V.extendLine();
            return Z
        }
    }
    ;
    this.remove = function(W) {
        var V = O(W)
          , U = K[V];
        if (U) {
            U.clear();
            K[V] = null ;
            return W
        }
    }
    ;
    this.removeAll = function() {
        var V, U;
        for (V = 0,
        U = K.length; V < U; V++) {
            this.remove(m(V))
        }
    }
    ;
    this.clear = this.removeAll;
    this.checkForSnapping = S.checkForSnapping;
    this.editGeometry = function(V) {
        var U = K[O(V)];
        if (U) {
            S.initSnapping();
            S.loadSnappingData();
            S.overrideLeafletPolyEdit();
            if (U instanceof a) {
                U.marker.on("drag", function() {
                    if (r) {
                        U.marker.setLatLng(S.checkForSnapping(U.marker._latlng))
                    }
                }).on("dragend", function() {
                    if (r) {
                        z.parent.hideTip()
                    }
                })
            }
            U.edit();
            return V
        }
        return null 
    }
    ;
    this.editGeometryEnd = function(V) {
        var U = K[O(V)];
        if (U) {
            if (this.snapping()) {
                S.endSnapping()
            }
            U.edit(false);
            S.hideMeasureMarker();
            return V
        }
        return null 
    }
    ;
    this.redrawGeometry = function(V) {
        var U = K[O(V)];
        if (U) {
            U.redraw()
        }
    }
    ;
    this.addShape = function(V, ab, Y) {
        var W = V.geom, aa, U, Z;
        if (W instanceof giscloud.geometry.Point) {
            aa = this.newPointShape(V, ab);
            Z = O(aa);
            U = K[Z];
            U.cursor = this.fn.toLeafletCoords(W.x, W.y, W.z, Y);
            U.hasZ = W.hasZ();
            U.draw()
        } else {
            if (W instanceof giscloud.geometry.Line) {
                aa = this.newLineShape(V, ab);
                Z = O(aa);
                U = K[Z];
                U.hasZ = W.hasZ();
                F(U, W)
            } else {
                if (W instanceof giscloud.geometry.Multiline) {
                    aa = this.newMultiShape(V, ab);
                    Z = O(aa);
                    U = K[Z];
                    U.shapes = [H(W, {
                        color: U.color,
                        opacity: (U.alpha > 1) ? U.alpha / 100 : U.alpha,
                        weight: U.width
                    }, Y)];
                    U.type = "line";
                    U.hasZ = W.hasZ();
                    U.draw()
                } else {
                    if (W instanceof giscloud.geometry.Polygon) {
                        aa = this.newPolygonShape(V, ab);
                        Z = O(aa);
                        U = K[Z];
                        U.ring = p.map(W.rings[0].points, function(ac) {
                            return z.toLeafletCoords(ac.x, ac.y, ac.z, Y)
                        });
                        U.hasZ = W.hasZ();
                        U.draw()
                    } else {
                        if (W instanceof giscloud.geometry.Multipolygon) {
                            aa = this.newMultiShape(V, ab);
                            Z = O(aa);
                            U = K[Z];
                            U.shapes = [H(W, {
                                color: U.color,
                                opacity: (U.alpha > 1) ? U.alpha / 100 : U.alpha,
                                weight: U.width
                            }, Y)];
                            U.type = "polygon";
                            U.hasZ = W.hasZ();
                            U.draw()
                        } else {
                            if (W instanceof giscloud.geometry.GeometryCollection) {
                                aa = this.newMultiShape(V, ab);
                                Z = O(aa);
                                U = K[Z];
                                U.shapes = p.map(W.geometries, function(ac) {
                                    return H(ac, {
                                        color: U.color,
                                        opacity: (U.alpha > 1) ? U.alpha / 100 : U.alpha,
                                        weight: U.width
                                    }, Y)
                                });
                                U.hasZ = W.hasZ();
                                U.draw()
                            } else {
                                throw {
                                    error: "Unknown giscloud geometry type.",
                                    data: V
                                }
                            }
                        }
                    }
                }
            }
        }
        if (ab == null  && U && U.id == null  && aa != null ) {
            K[Z].id = aa
        }
        return aa
    }
    ;
    this.serializeGeometryOpenGIS = function(V) {
        var U = K[O(V)];
        if (U) {
            return U.wkt()
        }
        return null 
    }
    ;
    this.deserializeGeometryOpenGISSimple = function(U, Z, W) {
        var Y = U && U.geom
          , V = Y && giscloud.geometry.fromOGC(Y);
        if (!V) {
            throw "Cannot deserialize from OGC, unknown giscloud geometry type."
        }
        U.geom = V;
        return this.addShape(U, Z, W)
    }
    ;
    this.measureDisplay = function(U) {
        if (U == null ) {
            return q
        }
        q = !!U;
        if (!q) {
            S.hideMeasureMarker()
        }
        return this
    }
    ;
    this.snapping = function(U) {
        if (U == null ) {
            return r
        }
        r = !!U;
        if (r) {
            S.reloadSnappingData()
        } else {
            this.fn.parent.hideTip()
        }
        return this
    }
    ;
    this.snappingLayers = function(V) {
        if (V == null ) {
            return N
        }
        for (var U in V) {
            if (!V[U]) {
                I[U] = null 
            }
        }
        N = V;
        return this
    }
    ;
    this.canSnap = function(U) {
        M = U
    }
    ;
    this.setSnappingLayerFids = function(U, V) {
        h[U] = V
    }
    ;
    this.deserializeGeometryOpenGIS = this.deserializeGeometryOpenGISSimple;
    (function(Y) {
        var W, Z = navigator.userAgent.match(/chrome\/(\d+)\./i);
        function V() {
            console.log("Fixing SVG zoom.");
            Y.on("zoomend", function() {
                var aa = this._container.style.display || "block";
                this._container.style.display = "none";
                this._container.offsetHeight;
                this._container.style.display = aa
            });
            Y.addLayer = W
        }
        if (Z && Z.length === 2) {
            Z = parseInt(Z[1], 10);
            if (!Y.addLayerOverridden && Z >= 38) {
                W = Y.addLayer;
                Y.addLayer = function U() {
                    var aa = Array.prototype.slice.call(arguments)
                      , ab = aa[0];
                    if (!Y.svgFixApplied && ab._latlngs) {
                        setTimeout(V, 0);
                        Y.svgFixApplied = true
                    }
                    return W.apply(this, aa)
                }
                ;
                Y.addLayerOverridden = true
            }
        }
    }(z.exposeLeaflet()))
}
;
fnMarker2 = function(p) {
    var e = giscloud.exposeJQuery()
      , u = {}
      , r = {}
      , a = {}
      , v = []
      , o = 0;
    this.fn = p;
    this.viewer = p.exposeLeaflet();
    this.markers = [];
    function q(B, z, C) {
        var D = giscloud.md5(B);
        if (!u[D]) {
            u[D] = {
                loading: new e.Deferred(),
                Icon: null 
            };
            if (z != null  && C != null ) {
                u[D].Icon = L.Icon.Label.extend({
                    options: {
                        iconUrl: B,
                        shadowUrl: null ,
                        iconSize: new L.Point(z,C),
                        iconAnchor: new L.Point(z / 2,C / 2),
                        labelAnchor: new L.Point(Math.max(z, C) * 1.5 + 5,0),
                        wrapperAnchor: new L.Point(z,C)
                    }
                });
                u[D].loading.resolve(u[D])
            } else {
                e.loadImage(B).done(function(F) {
                    var G, E = F.width, H = F.height;
                    if (E === 1 && H === 1) {
                        if (F.naturalWidth != null ) {
                            E = F.naturalWidth;
                            H = F.naturalHeight
                        } else {
                            G = new Image();
                            G.src = F.src;
                            E = G.width || 0;
                            H = G.height || 0
                        }
                    }
                    u[D].Icon = L.Icon.Label.extend({
                        options: {
                            iconUrl: B,
                            shadowUrl: null ,
                            iconSize: new L.Point(E,H),
                            iconAnchor: new L.Point(E / 2,H / 2),
                            labelAnchor: new L.Point(Math.max(E, H) * 1.5 + 5,0),
                            wrapperAnchor: new L.Point(E,H)
                        }
                    });
                    u[D].loading.resolve(u[D])
                })
            }
        }
        return u[D]
    }
    function h(C, z, B) {
        if (z && e.isFunction(z.on) && B && B.name && e.isFunction(B.handler)) {
            if (B.name === "poi_click") {
                z.on("click", e.proxy(function() {
                    B.handler.call(this, {
                        id: C,
                        data: a[C],
                        type: "poi_click"
                    })
                }))
            } else {
                z.on(B.name, e.proxy(function() {
                    var E = [{
                        id: C,
                        data: a[C],
                        type: B.name
                    }]
                      , D = Array.prototype.slice.call(arguments);
                    B.handler.apply(this, E.concat(D))
                }))
            }
        }
    }
    function d(z) {
        return typeof z == "string" && parseInt(z.replace(/m(\d+)/, "$1"), 10)
    }
    function m(D) {
        var G = D.title
          , F = D.content
          , z = D.color
          , C = D.open
          , B = new giscloud.Color.fromHex(z)
          , E = "";
        if (G != null ) {
            E += '<p class="gc-info-popup-title" style="background-color: ' + z + "; color: " + ((B.hsl()[2] > 85) ? "black" : "white") + ';">' + G + "</p>"
        }
        if (C && F != null ) {
            E += '<div class="gc-info-popup-content">' + F + "</div>"
        }
        return E
    }
    function g(z) {}
    function f() {
        L.Popup.prototype._original_updatePosition = L.Popup.prototype._updatePosition;
        L.Popup.prototype._updatePosition = function() {
            if (!this._map) {
                return
            }
            var C = this._map.latLngToLayerPoint(this._latlng)
              , z = this._animated
              , B = this.options.offset;
            C.x = Math.round(C.x);
            C.y = Math.round(C.y);
            if (z) {
                L.DomUtil.setPosition(this._container, C)
            }
            this._containerBottom = -B.y - (z ? 0 : C.y);
            this._containerLeft = -Math.round(this._containerWidth / 2) + B.x + (z ? 0 : C.x);
            this._container.style.bottom = this._containerBottom + "px";
            this._container.style.left = this._containerLeft + "px"
        }
    }
    this.add = function(P, M, F, O, K, N, I) {
        var D, B, H, C, G, E, z, J = this;
        if (P.x && P.y) {
            N = P.icon;
            O = P.title;
            K = P.content;
            F = P.color;
            I = P.open;
            M = P.y;
            P = P.x
        }
        I = !!I;
        if (F == null ) {
            F = "#0097C6"
        } else {
            if (F instanceof giscloud.Color) {
                F = F.hex()
            } else {
                F = giscloud.Color.fromHex(F).hex()
            }
        }
        D = this.fn.toLeafletCoords(P, M);
        if (!L.Popup.prototype._original_updatePosition) {
            f()
        }
        B = new L.Popup({
            className: "gc-info-popup",
            minWidth: 180,
            closeButton: true
        });
        B._fnMarker = {
            x: P,
            y: M,
            color: F,
            title: O,
            content: K,
            icon: N,
            open: I
        };
        H = m(B._fnMarker);
        B.setLatLng(D);
        B.setContent(H);
        C = "m" + o;
        o++;
        E = v.length;
        if (E) {
            for (G = 0; G < E; G++) {
                z = v[G];
                if (z) {
                    h.call(this, C, B, z)
                }
            }
        }
        this.markers.push(B);
        this.viewer.addLayer(B);
        r[C] = new e.Deferred();
        r[C].resolve(B);
        e(B._container).on("mouseup mousedown mousemove mouseover", ".leaflet-popup-close-button", function(Q) {
            Q.stopPropagation()
        });
        e(B._wrapper).mousemove(function(Q) {
            Q.stopPropagation()
        }).on("click", ".gc-info-popup-title", function() {
            J.toggle(C)
        }).on("click", ".gc-info-edit-link", function(R) {
            R.stopPropagation();
            if (window.checkIfUserExceedsStorageLimits && window.checkIfUserExceedsStorageLimits()) {
                return window.showStorageForbiddenMsg()
            }
            var S = e(this).parent()
              , Q = S.find("[name=edit-layer-id]").val()
              , T = S.find("[name=edit-feature-id]").val();
            B.fire("gc-info-popup-edit-click", {
                layerId: Q,
                featureId: T
            })
        }).on("click", function(Q) {
            e(J.fn.parent.container()).trigger(e.Event("click.gc-info-popup", Q))
        });
        return C
    }
    ;
    this.setTitle = function(D, E) {
        var C = d(D), z = this.markers[C], B;
        if (z) {
            z._fnMarker.title = E;
            B = m(z._fnMarker);
            z.setContent(B)
        }
        return this
    }
    ;
    this.setContent = function(E, D) {
        var C = d(E), z = this.markers[C], B;
        if (z) {
            z._fnMarker.content = D;
            B = m(z._fnMarker);
            z.setContent(B)
        }
        return this
    }
    ;
    this.toggle = function(D) {
        var C = d(D), z = this.markers[C], B;
        if (z) {
            z._fnMarker.open = !z._fnMarker.open;
            B = m(z._fnMarker);
            z.setContent(B);
            e(this).triggerHandler("fnMarker.OpenClose", [D, z._fnMarker.open])
        }
        return this
    }
    ;
    this.remove = function(C) {
        var B = d(C)
          , z = this.markers[B];
        if (z) {
            if (z._popupCloseHandler) {
                e(this.viewer).off("popupClose.fnMarker", this._popupCloseHandler)
            }
            if (z._popupOpenHandler) {
                e(this.viewer).off("popupOpen.fnMarker", this._popupOpenHandler)
            }
            this.viewer.removeLayer(z);
            this.markers[B] = null ;
            delete r[C]
        }
    }
    ;
    this.removeAll = function() {
        e.each(this.markers, e.proxy(function(B, z) {
            if (z instanceof L.Marker) {
                this.removePoi("m" + B)
            } else {
                if (z instanceof L.Popup) {
                    this.remove("m" + B)
                }
            }
        }, this))
    }
    ;
    this.closeAll = function() {
        e.each(this.markers, e.proxy(function(B, z) {
            if (z instanceof L.Popup) {
                this.remove("m" + B)
            }
        }, this))
    }
    ;
    this.clear = this.closeAll;
    this.loadPoi = function(K, I, z, D, H, G, J) {
        var B, F, C, E;
        F = this;
        B = new e.Deferred();
        C = "m" + o;
        r[C] = new e.Deferred();
        a[C] = D;
        o++;
        E = q(z, G, J);
        E.loading.done(function(O) {
            var R, M, P, N, Q;
            R = F.fn.toLeafletCoords(K, I);
            if (D.hoverText) {
                M = new L.Marker(R,{
                    icon: new O.Icon(),
                    title: D.hoverText
                })
            } else {
                M = new L.Marker(R,{
                    icon: new O.Icon()
                })
            }
            if (D.popupContent) {
                M.bindPopup(D.popupContent, {
                    className: "gc-info-popup",
                    autoPan: false
                });
                M._popupCloseHandler = function(S) {
                    if (S.popup === M._popup) {
                        e(F).triggerHandler("popupClose.fnMarker", [C])
                    }
                }
                ;
                M._popupOpenHandler = function(S) {
                    if (S.popup === M._popup) {
                        e(F).triggerHandler("popupOpen.fnMarker", [C])
                    }
                }
                ;
                F.viewer.on("popupclose", M._popupCloseHandler);
                F.viewer.on("popupopen", M._popupOpenHandler)
            }
            N = v.length;
            if (N) {
                for (P = 0; P < N; P++) {
                    Q = v[P];
                    if (Q) {
                        h.call(F, C, M, Q)
                    }
                }
            }
            F.markers.push(M);
            F.viewer.addLayer(M);
            if (D.popupContent && D.popupVisible) {
                M.openPopup()
            }
            r[C].resolve(M)
        });
        return C
    }
    ;
    this.removePoi = function(C) {
        var B, z;
        z = r[C];
        if (!z) {
            console.log("Ready missing: ", C, r)
        }
        B = this;
        B.remove(C);
        delete a[C]
    }
    ;
    this.move = function(E, z, F, B) {
        var D, C;
        C = r[E];
        if (C) {
            D = this;
            C.done(function(G) {
                var H;
                if (G && G.setLatLng) {
                    H = D.fn.toLeafletCoords(z, F);
                    G.setLatLng(H);
                    if (G.setRotation && B) {
                        G.setRotation(B)
                    }
                }
            })
        }
    }
    ;
    this.move2 = this.move;
    this.attachLabel = function(B) {
        var z = r[B.marker];
        if (z) {
            z.done(function(C) {
                if (C.setLabelText) {
                    C.setLabelText(B.data)
                } else {
                    if (C.options.icon && C.options.icon.setLabelText) {
                        C.options.icon.setLabelText(B.data)
                    } else {
                        e(C._icon).find(".leaflet-marker-iconlabel").html(B.data)
                    }
                }
            })
        }
    }
    ;
    this.addEventListener = function(C, E) {
        var D, B, z, F = {
            name: C,
            handler: E
        };
        for (D = 0,
        B = this.markers.length; D < B; D++) {
            z = this.markers[D];
            if (z) {
                h.call(this, "m" + D, z, F)
            }
        }
        v.push(F)
    }
}
;
fnTooltip2 = function(q) {
    var h = giscloud.exposeJQuery(), v = true, r = false, C = false, p = new L.DivIcon({
        className: "gc-map-tip"
    }), e = q.exposeLeaflet(), m = {}, o = new L.Marker(new L.LatLng(0,0),{
        icon: p,
        clickable: false
    }), u;
    function E() {
        q.addEventListener("load", a);
        q.addEventListener("reload", a);
        q.addEventListener("object_over", d);
        q.addEventListener("object_out", B);
        e.off("mousemove", D).on("mousemove", D)
    }
    function d(K) {
        var J, I, O, M, N;
        if (!v || C) {
            return
        }
        J = K.id.split("||");
        I = J[0].substr(5);
        O = m[I];
        M = K.object.attributes || K.object.data;
        if (!O || !M) {
            return g
        }
        N = O.split(",");
        u = h.map(N, function(P) {
            return giscloud.xssSafe(M[P])
        });
        return G(u.join("<br/>"), true)
    }
    function B() {
        if (C) {
            return
        }
        u = null ;
        g()
    }
    function g() {
        if (r) {
            e.removeLayer(o);
            r = false
        }
    }
    function a() {
        var M, J, K, I;
        for (M = 0,
        J = q.getLayerCount(); M < J; M++) {
            K = q.getLayer(M);
            I = parseInt(K.id.substr(5), 10);
            if (K && K.options && K.options.tooltip) {
                m[I] = K.options.tooltip;
                if (window.gcdatagrid) {
                    gcdatagrid.addField(I, K.options.tooltip)
                }
            }
        }
    }
    function F(J, I) {
        if (!J) {
            g()
        }
        if (o && o._icon) {
            if (I) {
                h(o._icon).html(J)
            } else {
                h(o._icon).text(J)
            }
        }
    }
    function G(J, I) {
        if (!v) {
            return
        }
        if (!r) {
            e.addLayer(o);
            r = true
        }
        F(J, I)
    }
    function D(I) {
        if (o) {
            o.setLatLng(I.latlng)
        }
    }
    this.show = function H(J, I) {
        G(J, I);
        C = true
    }
    ;
    this.hide = function H() {
        g();
        C = false
    }
    ;
    this.enable = function z() {
        v = true
    }
    ;
    this.disable = function f() {
        v = false;
        g()
    }
    ;
    E()
}
;
fnAgent2 = function(a) {
    this.setData = function(d) {}
    ;
    this.setZoom = function(d) {}
}
;
(function(u, h, B, p) {
    var m, f, r, q, o, z, E, e, D, C, F;
    var d;
    var g;
    d = 0;
    f = 0;
    F = false;
    C = 1;
    var H = B.tileSite();
    function G() {
        if (f) {
            return
        }
        r = u.L || giscloud.exposeLeaflet();
        f = 1;
        fnLayerBasic = {
            getId: function() {
                return this.id
            },
            disable: function() {
                this.visible = false;
                this.setVisible(false)
            },
            enable: function() {
                this.visible = true;
                this.setVisible(true)
            },
            getAlpha: function() {
                return Math.round(this.options.opacity * 100)
            },
            setAlpha: function(U) {
                if (flashnavigator.hasCanvas) {
                    this.setOpacity(U / 100)
                }
            },
            getCurrentLevel: function() {
                return m.map._zoom
            },
            setSelectable: function(U) {
                this._selectable = U;
                return 0
            },
            getSelectable: function() {
                return this._selectable
            },
            getVisibility: function() {
                return this.visible
            },
            getBound: function(U) {
                return {
                    xMin: this.source.xmin,
                    xMax: this.source.xmax,
                    yMin: this.source.ymin,
                    yMax: this.source.ymax
                }
            },
            getData: function(U) {
                return this.source
            },
            _loadTile: function(V, U) {
                V._layer = this;
                V.onload = this._tileOnLoad;
                V.onerror = this._tileOnError;
                this._processTile(V, U, this._getZoomForUrl())
            },
            _processTile: function(V, U) {
                V.src = this.getTileUrl(U)
            },
            redraw: function() {
                if (this.gcmap) {
                    this.gcmap.redraw()
                }
            },
            getRules: function() {
                return this.features
            },
            setRule: function(U, V) {
                this.features[U] = V
            },
            resetRules: function() {
                this.features = [];
                for (var V = 0; V < this.features_original.length; V++) {
                    var W = {};
                    for (var U in this.features_original[V]) {
                        W[U] = this.features_original[V][U]
                    }
                    this.features[V] = W
                }
            },
            setDynamicMode: function(U) {
                if (this.gcmap) {
                    this.gcmap.url = this.gcmap.url_prefix + "/dyn," + U + "/"
                }
            },
            reload: function() {
                if (this.gcmap) {
                    this.gcmap.reload()
                }
            },
            setVisible: function(U) {
                if (this._container) {
                    this._container.style.display = U ? "block" : "none"
                }
                this._updateLayerCount(U);
                this.options.visible = U;
                if (this instanceof r.TileLayer) {
                    this._update()
                }
                return this
            },
            getVisible: function(U) {
                return this.options.visible
            },
            getFeatureCount: function() {
                if (this.gcmap) {
                    return this.gcmap.getFeatureCount()
                }
                return 0
            },
            getFeatureIds: function() {
                if (this.gcmap) {
                    return this.gcmap.getFeatureIds()
                }
                return 0
            },
            _updateLayerCount: function(U) {
                if (this.options.visible != U && m.map.options.zoomAnimation && r.TileLayer && (this instanceof r.TileLayer)) {
                    if (U) {
                        m.map._tileLayersNum++
                    } else {
                        m.map._tileLayersNum--
                    }
                }
            }
        };
        fnLayer2 = r.TileLayer.extend(fnLayerBasic);
        fnLayer2.prototype._tileShouldBeVisible = function(U) {
            if (!this._map) {
                return false
            }
            var W = this._map.getPixelBounds()
              , Y = this.options.tileSize;
            var V = new r.Point(Math.floor(W.min.x / Y),Math.floor(W.min.y / Y))
              , aa = new r.Point(Math.floor(W.max.x / Y),Math.floor(W.max.y / Y))
              , Z = new r.Bounds(V,aa);
            if (U.x < Z.min.x || U.x > Z.max.x || U.y < Z.min.y || U.y > Z.max.y) {
                return false
            }
            return true
        }
        ;
        fnLayer2.prototype.options.visible = true;
        fnLayer2.prototype._tileShouldBeLoadedOriginal = fnLayer2.prototype._tileShouldBeLoaded;
        fnLayer2.prototype._tileShouldBeLoaded = function(Z, ab, Y) {
            var W = ab || this;
            if (!W.options.visible || (!Y && !ab && !this._tileShouldBeLoadedOriginal(Z))) {
                return false
            }
            if (W.group) {
                for (var V = 0; V < W.group.length; V++) {
                    if (this._tileShouldBeLoaded(Z, W.group[V], true)) {
                        return true
                    }
                }
                return false
            }
            var aa = this._getZoomForUrl();
            var U = (1 << aa);
            W.nxmin = (W.source.xmin - q.xmin) / q.max * U;
            W.tnxmin = Math.floor(W.nxmin);
            W.nxmax = (W.source.xmax - q.xmin) / q.max * U;
            W.tnxmax = Math.floor(W.nxmax);
            W.nymin = (q.ymax - W.source.ymax) / q.max * U;
            W.tnymin = Math.floor(W.nymin);
            W.nymax = (q.ymax - W.source.ymin) / q.max * U;
            W.tnymax = Math.floor(W.nymax);
            if (Z.x >= W.tnxmin && Z.x <= W.tnxmax && Z.y >= W.tnymin && Z.y <= W.tnymax) {
                return true
            }
            return false
        }
        ;
        fnLayer2.prototype._updateOriginalTileLayer = fnLayer2.prototype._update;
        fnLayer2.prototype._update = function() {
            this._updateOriginalTileLayer();
            if (this._tilesToLoad === 0) {
                this.fire("load")
            }
        }
        ;
        fnLayer2.prototype.clipTile = function(Z, W) {
            var Y = false;
            var ab, V, U, aa;
            ab = aa = "0px";
            U = V = "256px";
            if (W.x == this.tnxmin) {
                ab = Math.round((this.nxmin - this.tnxmin) * 256) + "px";
                Y = true
            }
            if (W.y == this.tnymin) {
                aa = Math.round((this.nymin - this.tnymin) * 256) + "px";
                Y = true
            }
            if (W.x == this.tnxmax) {
                V = Math.round((this.nxmax - this.tnxmax) * 256) + "px";
                Y = true
            }
            if (W.y == this.tnymax) {
                U = Math.round((this.nymax - this.tnymax) * 256) + "px";
                Y = true
            }
            if (Y) {
                Z.style.clip = "rect(" + aa + "," + V + "," + U + "," + ab + ")"
            }
        }
        ;
        var O = 0;
        fnTileLayerGroup = function(U) {
            this.options = U;
            this.id = U.id;
            this.visible = U.visible;
            this.id = U.id;
            this.source = U.source;
            this.isGroupLayer = true;
            var V = U.group || "g0";
            this.groupId = V;
            this.groupIdIndex = 0;
            fnTileLayerGroup.theTileLayer = fnTileLayerGroup.theTileLayer || {};
            this.setUniqueId = function() {
                this.uniqueId = O++
            }
            ;
            this.newTileLayer = function() {
                var Z;
                var Y = this.options;
                Z = fnTileLayerGroup.theTileLayer[this.groupId] = this.tileLayer = new fnTileLayer(Y);
                Z.source = {};
                Z.options.visible = true;
                Z.visible = true;
                Z.options.opacity = 1;
                Z.id = Z.options.id = this.groupId;
                Z.isTileLayer = true;
                this.isRootLayer = true;
                Z.gcmap.tileLayer = Z;
                Z.gcmap.processTiles = function(ad, al, ak, am, ah, ab) {
                    var an = al.tiles[am], ao, ac = an.obj.tileLayer, af, aa, aj, ag = ab ? [ak] : ak, ae = [], ai = al.layers[am].split(",");
                    if (!an) {
                        return 0
                    }
                    for (aj = 0; aj < ai.length; aj++) {
                        ae[ai[aj]] = ag[ah + aj]
                    }
                    aa = an._drawn;
                    an._drawn = false;
                    var ah = 0;
                    for (aj = 0; aj < ac.group.length; aj++) {
                        af = ae[ac.group[aj].id];
                        if (af && af.tile) {
                            if (af.tile.type == "text") {
                                ah = 100
                            } else {
                                if (af.tile.type == "point") {
                                    ah = 100
                                }
                            }
                        }
                    }
                    for (aj = 0; aj < ac.group.length; aj++) {
                        af = ae[ac.group[aj].id];
                        if (af) {
                            an.layer = ac.group[aj].id;
                            an.curLayerObj = ac.group[aj];
                            ad(an, af, ac.group[aj], aa, ah);
                            an._drawn = false
                        }
                    }
                    an._drawn = true;
                    if (aa) {
                        ac.gcmap.activeLayer = null ;
                        ac.gcmap.redrawSingleTile(an)
                    }
                    return ai.length
                }
                ;
                Z.group = [];
                return Z
            }
            ;
            this.cleanUpOnRemove = function(aa, ab) {
                var Z = [], ac;
                if (!ab) {
                    this.disable()
                }
                for (var Y = 0; Y < this.tileLayer.group.length; Y++) {
                    if (this.tileLayer.group[Y] !== this) {
                        Z.push(this.tileLayer.group[Y])
                    }
                }
                this.tileLayer.group = Z;
                this.tileLayer._resetGroup();
                if (Z.length == 0) {
                    delete fnTileLayerGroup.theTileLayer[this.tileLayer.id];
                    if (this.tileLayer._map) {
                        this.tileLayer._map.removeLayer(this.tileLayer)
                    } else {
                        console.warn("this should not happen")
                    }
                }
            }
            ;
            this.setSelectable = function(Y) {
                this._selectable = Y;
                return 0
            }
            ;
            this.getSelectable = function(Y) {
                return this._selectable
            }
            ;
            this.disable = function() {
                if (this.visible) {
                    this.visible = false;
                    this.options.visible = false;
                    this.tileLayer._resetGroup();
                    this.redraw()
                }
            }
            ;
            this.enable = function() {
                if (!this.visible) {
                    this.visible = true;
                    this.options.visible = true;
                    this.setUniqueId();
                    this.tileLayer.gcmap.activeLayer = null ;
                    this.tileLayer._partialGroup = [this];
                    this.tileLayer._reloadGroupPartialy();
                    giscloud.Html5SendRequests()
                }
            }
            ;
            this.getAlpha = function(Y) {
                return Math.round(this.options.opacity * 100)
            }
            ;
            this.setAlpha = function(Y) {
                if (Y / 100 == this.options.opacity) {
                    return
                }
                this.options.opacity = Y / 100;
                this.redraw()
            }
            ;
            this.redraw = function() {
                this.tileLayer.gcmap.activeLayer = this;
                this.tileLayer.redraw()
            }
            ;
            this.setZIndex = function(Y) {
                if (this.tileLayer._zIndexOffset == null ) {
                    this.tileLayer.setZIndex(Y);
                    this.tileLayer._zIndexOffset = Y - this.tileLayer.group.length
                }
                var Z = Y - 1 - this.tileLayer._zIndexOffset;
                this.tileLayer._shouldRedrawDueSort = this.tileLayer.group[Z] != this;
                this.tileLayer.group[Z] = this
            }
            ;
            var W = fnTileLayerGroup.theTileLayer[V];
            if (!W) {
                W = this.newTileLayer()
            } else {
                W._partialGroup = W._partialGroup || [];
                W._partialGroup.push(this);
                this.tileLayer = W
            }
            W.group.push(this);
            W._resetGroup();
            this.setUniqueId()
        }
        ;
        for (var P in fnLayerBasic) {
            fnTileLayerGroup.prototype[P] = fnLayerBasic[P]
        }
        fnTileLayer = fnLayer2.extend({
            initialize: function(U) {
                this.visible = U.visible;
                this.id = U.id;
                this.source = U.source;
                this.dontLoad = U.dontLoad;
                this.gcmap = new giscloud.Html5Map(U,this);
                this.gcmap.setBounds(q);
                this.gcmap.selectablePoly(0);
                this.gcmap.feature_filter = null ;
                var V = this;
                this.gcmap.getCanvases = function() {
                    return V._tiles
                }
                ;
                this.on("stoploadingtiles", function() {
                    V.gcmap.resetLoader()
                });
                this.on("tileunload", function(W) {
                    W.tile.data = null ;
                    W.tile.lista = null ;
                    W.tile.styles = null ;
                    W.tile.fields = null ;
                    W._original = null ;
                    W.canvasCachePre = null ;
                    W.canvasCachePost = null 
                });
                if (this.dontLoad) {
                    this._addTile = function() {}
                }
                U.noWrap = true;
                r.Util.setOptions(this, U)
            },
            _createTileProto: function() {
                if (flashnavigator.hasCanvas) {
                    this._canvasProto = r.DomUtil.create("canvas", "leaflet-tile leaflet-tile-loaded")
                } else {
                    this._canvasProto = r.DomUtil.create("div", "leaflet-tile leaflet-tile-loaded")
                }
                var U = this.options.tileSize;
                this._canvasProto.width = U;
                this._canvasProto.height = U
            },
            _createTile: function() {
                return this._canvasProto.cloneNode(false)
            },
            _processTile: function(W, U, V) {
                W._layer = this;
                W.ontileload = function() {
                    this._layer._tileOnLoad.call(this);
                    if (this._layer._oldContainer) {
                        I(this)
                    }
                    this.ontileload = null 
                }
                ;
                if (this.visible) {
                    this.gcmap.loadTile(W, U, V)
                }
            },
            redraw: function() {
                this.gcmap.redraw()
            },
            setFeatureFilter: function(U) {
                this.gcmap.feature_filter = U
            },
            getFeature: function(U) {
                return this.gcmap.getFeature(U)
            },
            _resetGroup: function() {
                if (!this.group) {
                    return
                }
                var ad = this.group, ae = [], ab = [], aa = {}, V, ac, Z, W, Y, U;
                if (ad.length > 0) {
                    V = ad[0].source.xmin;
                    ac = ad[0].source.ymin;
                    Z = ad[0].source.xmax;
                    W = ad[0].source.ymax;
                    for (Y = 0; Y < ad.length; Y++) {
                        U = ad[Y].source;
                        if (!(U.xmin == 0 && U.xmax == 0 && U.ymin == 0 && U.ymax == 0)) {
                            V = (U.xmin < V) ? U.xmin : V;
                            ac = (U.ymin < ac) ? U.ymin : ac;
                            Z = (U.xmax > Z) ? U.xmax : Z;
                            W = (U.ymax > W) ? U.ymax : W;
                            if (ad[Y].visible) {
                                ae.push(ad[Y].options.modified);
                                ab.push(ad[Y].options.id)
                            }
                            aa[ad[Y].options.id] = 1
                        }
                    }
                    this.source.xmin = V;
                    this.source.ymin = ac;
                    this.source.xmax = Z;
                    this.source.ymax = W
                }
                this.gcmap.modified = ae.join(",");
                this.gcmap.lid = ab.join(",");
                this.gcmap.lid_map = aa;
                this.gcmap.activeLayer = null 
            },
            _reloadGroupPartialy: function() {
                if (this._toBeLoaded) {
                    this._partialGroup = null ;
                    this._toBeLoaded = false;
                    return
                }
                var U = this.group;
                this.group = this._partialGroup;
                this._partialGroup = null ;
                this._resetGroup();
                this.reload();
                this.group = U;
                this._resetGroup()
            }
        });
        fnTileLayer.prototype._updateOriginalFnLayer = fnTileLayer.prototype._update;
        fnTileLayer.prototype._update = function() {
            this._updateOriginalFnLayer();
            this.viewer._layersForUpdateCount--;
            if (this.viewer._layersForUpdateCount <= 0) {
                giscloud.Html5SendRequests();
                this.viewer._layersForUpdateCount = 0
            }
        }
        ;
        fnTileLayerGroup.theTileLayer = null ;
        function I(af) {
            var ai = af._leaflet_pos.x;
            var ah = af._leaflet_pos.y;
            var ab = m.map._animateScale;
            if (!ab) {
                return
            }
            var Y = Math.round(m.map._animateOrigin.x);
            var V = Math.round(m.map._animateOrigin.y);
            var ag = af._layer._oldContainer.childNodes;
            for (var ad = 0, ae = ag.length; ad < ae; ad++) {
                if (!ag[ad]._drawn) {
                    continue
                }
                var ac = (ag[ad]._leaflet_pos.x - Y - ag[ad]._offset) * ab + Y;
                var aa = (ag[ad]._leaflet_pos.y - V - ag[ad]._offset) * ab + V;
                var aj = ag[ad].width * ab;
                var Z = {
                    xmin: ai,
                    ymin: ah,
                    xmax: ai + af.width - af._offset * 2,
                    ymax: ah + af.height - af._offset * 2
                };
                var W = {
                    xmin: ac,
                    ymin: aa,
                    xmax: ac + aj,
                    ymax: aa + aj
                };
                if (S(Z, W)) {
                    rect = {
                        xmin: N(Z.xmin, W.xmin),
                        ymin: N(Z.ymin, W.ymin),
                        xmax: T(Z.xmax, W.xmax),
                        ymax: T(Z.ymax, W.ymax)
                    };
                    var U = {
                        x: Math.floor((rect.xmin - ac) / ab),
                        y: Math.floor((rect.ymin - aa) / ab),
                        w: Math.ceil((rect.xmax - rect.xmin) / ab),
                        h: Math.ceil((rect.ymax - rect.ymin) / ab),
                        c: ag[ad]
                    };
                    var ak = U.c.getContext("2d");
                    ak.clearRect(U.x, U.y, U.w, U.h)
                }
            }
        }
        function S(V, U) {
            if (V.xmax < U.xmin || V.xmin > U.xmax || V.ymax < U.ymin || V.ymin > U.ymax) {
                return false
            }
            return true
        }
        function N(V, U) {
            if (V > U) {
                return V
            }
            return U
        }
        function T(V, U) {
            if (V < U) {
                return V
            }
            return U
        }
        function J(W, Y) {
            var V, U = [];
            for (V = 0; V < W.length; V += 2) {
                U.push(Math.round(((W[V] - q.xmin) / q.max * Math.pow(2, Y.zoom) - Y.coord.x) * 256));
                U.push(Math.round(((q.ymax - W[V + 1]) / q.max * Math.pow(2, Y.zoom) - Y.coord.y) * 256))
            }
            return U
        }
        function M(W, Y) {
            var V, U = [];
            for (V = 0; V < W.length; V += 2) {
                U.push(Math.round((W[V] / 256 + Y.coord.x) * (q.max / Math.pow(2, Y.zoom)) + q.xmin));
                U.push(Math.round(q.ymax - (W[V + 1] / 256 + Y.coord.y) * (q.max / Math.pow(2, Y.zoom))))
            }
            return U
        }
        LabelLayer = fnLayer2.extend({
            initialize: function(U) {
                this.id = U.id;
                this.source = {};
                this.should_add = true;
                r.Util.setOptions(this, U);
                this.labels = {};
                this.layer_info = {
                    id: U.id
                };
                this.layerDescriptor = {}
            },
            _createTileProto: function() {
                if (flashnavigator.hasCanvas) {
                    this._canvasProto = r.DomUtil.create("canvas", "leaflet-tile leaflet-tile-loaded")
                } else {
                    this._canvasProto = r.DomUtil.create("div", "leaflet-tile leaflet-tile-loaded")
                }
                var U = this.options.tileSize;
                this._canvasProto.width = U;
                this._canvasProto.height = U
            },
            _createTile: function() {
                var U = this._canvasProto.cloneNode(false);
                U.labelData = {
                    point: {},
                    line: {},
                    polygon: {}
                };
                U.qtree = new giscloud.math.QuadTree(new giscloud.math.Rect(0,0,256,256),3,3);
                U.grid = new giscloud.math.Grid(4,8);
                return U
            },
            _loadTile: function(V, U) {
                V._layer = this;
                V.onload = this._tileOnLoad;
                V.onerror = this._tileOnError;
                V.coord = U;
                this._tilesToLoad--
            },
        });
        LabelLayer.prototype.onRemove = function(U) {
            this._container.parentNode.removeChild(this._container);
            U.off({
                viewreset: this._resetCallback,
                moveend: this._update
            }, this);
            if (!this.options.updateWhenIdle) {
                U.off("move", this._limitedUpdate, this)
            }
            this._container = null ;
            this._map = null 
        }
        ;
        LabelLayer.prototype._update = function() {
            if (!this._map) {
                return
            }
            var W = this._map.getPixelBounds(), V = this._map.getZoom(), Y = this.options.tileSize, U, aa, Z;
            U = new r.Point(Math.floor(W.min.x / Y),Math.floor(W.min.y / Y));
            aa = new r.Point(Math.floor(W.max.x / Y),Math.floor(W.max.y / Y));
            Z = new r.Bounds(U,aa);
            this._addTilesFromCenterOut(Z);
            if (this.options.unloadInvisibleTiles || this.options.reuseTiles) {
                this._removeOtherTiles(Z)
            }
            if (this._tilesToLoad === 0) {
                this.fire("load")
            }
        }
        ;
        LabelLayer.prototype._addTilesFromCenterOut = function(ab) {
            var W = []
              , V = ab.getCenter();
            var Z, aa, U;
            for (Z = ab.min.y - 1; Z <= ab.max.y + 1; Z++) {
                for (aa = ab.min.x - 1; aa <= ab.max.x + 1; aa++) {
                    U = new r.Point(aa,Z);
                    if (this._tileShouldBeLoaded(U)) {
                        W.push(U)
                    }
                }
            }
            var ac = W.length;
            if (ac === 0) {
                return
            }
            W.sort(function(ae, ad) {
                return ae.distanceTo(V) - ad.distanceTo(V)
            });
            var Y = document.createDocumentFragment();
            if (!this._tilesToLoad) {
                this.layers = {};
                this.tiles = {};
                this.fire("loading")
            }
            this._tilesToLoad += ac;
            for (aa = 0; aa < ac; aa++) {
                this._addTile(W[aa], Y)
            }
            this._container.appendChild(Y)
        }
        ,
        LabelLayer.prototype._tileShouldBeLoaded = function(U) {
            return !this.getTile(U)
        }
        ;
        LabelLayer.prototype.getTile = function(U) {
            var V = this._tiles[U.x + ":" + U.y];
            if (V) {
                return V
            }
            return this.addTileAtPoint(U)
        }
        ;
        LabelLayer.prototype.onTileLoaded = function(W, Y, U, V) {
            if (Y.tile && Y.tile.type === "point") {
                this.onPointLayerTileLoaded(W, Y, U, V)
            } else {
                if (Y.geom && U.features && U.features[0] && U.features[0].type === "polygon") {
                    this.onPolygonLayerTileLoaded(W, Y, U, V)
                } else {
                    if (Y.geom && U.features && U.features[0] && U.features[0].type === "line") {
                        this.onLineLayerTileLoaded(W, Y, U, V)
                    }
                }
            }
        }
        ;
        LabelLayer.prototype.addTileAtPoint = function(U) {
            var W = this._tiles[U.x + ":" + U.y], V;
            if (W) {
                return W
            }
            this._tilesToLoad++;
            V = document.createDocumentFragment();
            this._addTile(U, V);
            this._container.appendChild(V);
            return this.getTile(U)
        }
        ;
        LabelLayer.prototype.clear = function(U) {
            var W, V;
            if (!this._tiles) {
                return
            }
            W = Object.keys(this._tiles);
            W.forEach(function(Y) {
                V = this._tiles[Y];
                if (U) {
                    if (V.labelData.polygon && V.labelData.polygon[U]) {
                        V.labelData.polygon[U] = {
                            hidden: V.labelData.polygon[U].hidden,
                            features: V.labelData.polygon[U].features,
                            geometry: {}
                        }
                    } else {
                        if (V.labelData.line && V.labelData.line[U]) {
                            V.labelData.line[U] = {
                                hidden: V.labelData.line[U].hidden,
                                features: V.labelData.line[U].features,
                                geometry: {}
                            }
                        } else {
                            if (V.labelData.point && V.labelData.point[U]) {
                                V.labelData.point[U] = {
                                    hidden: V.labelData.point[U].hidden,
                                    features: V.labelData.point[U].features,
                                    geometry: {}
                                }
                            }
                        }
                    }
                }
                giscloud.util.mediator.publish("renderer/clearTile", this, V)
            }
            .bind(this))
        }
        ;
        LabelLayer.prototype.rerender = function() {
            var U;
            if (!this._tiles) {
                return
            }
            U = Object.keys(this._tiles);
            U.forEach(function(V) {
                giscloud.util.mediator.publish("renderer/clearTile", this, this._tiles[V])
            }
            .bind(this));
            U.forEach(function(V) {
                giscloud.util.mediator.publish("renderer/drawTile", this, this._tiles[V])
            }
            .bind(this))
        }
        ;
        LabelLayer.prototype.hideLabels = function(U) {
            var W, Y, V;
            V = "layer" + U;
            Y = Object.keys(this._tiles);
            Y.forEach(function(Z) {
                W = this._tiles[Z].labelData;
                if (W.point[V]) {
                    W.point[V].hidden = true
                }
                if (W.line[V]) {
                    W.line[V].hidden = true
                }
                if (W.polygon[V]) {
                    W.polygon[V].hidden = true
                }
            }
            .bind(this));
            this.rerender()
        }
        ;
        LabelLayer.prototype.showLabels = function(U) {
            var W, Y, V;
            V = "layer" + U;
            Y = Object.keys(this._tiles);
            Y.forEach(function(Z) {
                W = this._tiles[Z].labelData;
                if (W.point[V]) {
                    W.point[V].hidden = false
                }
                if (W.line[V]) {
                    W.line[V].hidden = false
                }
                if (W.polygon[V]) {
                    W.polygon[V].hidden = false
                }
            }
            .bind(this));
            this.rerender()
        }
        ;
        LabelLayer.prototype.updateLayerDescriptor = function(U, V) {
            this.layerDescriptor[U] = V
        }
        ;
        LabelLayer.prototype.getLayerDescriptor = function(U) {
            return this.layerDescriptor[U]
        }
        ;
        LabelLayer.prototype.parsePoints = function(aa, W, Z) {
            var ad, ae, ab, Y, V, U, ac;
            ac = this.getTile(aa.coord).labelData;
            if (!ac.point[Z.id]) {
                ac.point[Z.id] = {
                    hidden: false,
                    features: {},
                    geometry: {}
                }
            }
            if (W.fields) {
                ae = Object.keys(W.fields);
                for (Y = 0; Y < ae.length; ++Y) {
                    ac.point[Z.id].features[ae[Y]] = W.fields[ae[Y]]
                }
            }
            if (Z.labelData) {
                ac.point[Z.id].styles = Z.labelData.styles;
                ac.point[Z.id].attribute = Z.labelData.attribute
            }
            V = ac.point[Z.id];
            for (Y = 0; Y < W.tile.data.length; ++Y) {
                ad = W.tile.data[Y];
                ab = ad.i;
                if (ab !== p) {
                    U = ad.id.replace("||", "_");
                    ad = {
                        id: U,
                        position: J([ad.x, ad.y], aa),
                        label: {
                            text: null ,
                            style: null 
                        },
                        layerId: Z.id
                    };
                    if (V.styles) {
                        ad.label.style = ab
                    }
                    ac.point[Z.id].geometry[U] = ad
                }
            }
        }
        ;
        LabelLayer.prototype.onPointLayerTileLoaded = function(Y, Z, V, W) {
            var U = this.getTile(Y.coord);
            if (!U) {
                console.debug("[LabelLayer#onPointLayerTileLoaded] Adding missing labelTile");
                this._addTile(Y.coord)
            }
            this.parsePoints(Y, Z, V);
            W(this, U)
        }
        ;
        function R(W, V) {
            var Z, ab, aa, U, Y = [];
            for (Z = 0; Z < Math.floor(W.length / 2) - 1; ++Z) {
                U = [[W[(Z + 0) * 2 + 0], W[(Z + 0) * 2 + 1]], [W[(Z + 1) * 2 + 0], W[(Z + 1) * 2 + 1]]];
                if (new giscloud.math.Vector2(U[0]).distanceToSquared(U[1]) > 0) {
                    aa = giscloud.math.Vector2.lerp(U[0], U[1], 0.5).scale(1 / V);
                    if (aa.x >= 0 && aa.x < 256 && aa.y >= 0 && aa.y < 256) {
                        ab = Math.atan((U[1][1] - U[0][1]) / (U[1][0] - U[0][0]));
                        Y.push({
                            x: aa.x,
                            y: aa.y,
                            angle: ab
                        })
                    }
                }
            }
            return Y
        }
        LabelLayer.prototype.parseLines = function(ac, Z, ab) {
            var ai, ag, ad, af, U, ah, V, Y, W, ae, aa = 1;
            if (ab.options && ab.options.precision) {
                aa = ab.options.precision
            }
            ae = this.getTile(ac.coord).labelData;
            if (!ae.line[ab.id]) {
                ae.line[ab.id] = {
                    hidden: false,
                    features: {},
                    geometry: {}
                }
            }
            if (Z.fields) {
                ah = Object.keys(Z.fields);
                for (Y = 0; Y < ah.length; ++Y) {
                    ae.line[ab.id].features[ah[Y]] = Z.fields[ah[Y]]
                }
            }
            if (ab.labelData) {
                ae.line[ab.id].styles = ab.labelData.styles;
                ae.line[ab.id].attribute = ab.labelData.attribute
            }
            W = ae.line[ab.id];
            for (Y = 0; Y < Z.geom.length; ++Y) {
                ai = Z.geom[Y];
                styleIndex = ai.s;
                ag = ai.p;
                U = R(ag, aa);
                if (U.length > 0) {
                    V = ai.c.replace("||", "_");
                    if (!ae.line[ab.id].geometry[V]) {
                        ai = {
                            id: V,
                            positions: U,
                            label: {
                                text: null ,
                                style: null 
                            },
                            layerId: ab.id
                        }
                    } else {
                        ai = ae.line[ab.id].geometry[V];
                        ai.positions = ai.positions.concat(U)
                    }
                    if (W.styles && styleIndex !== p) {
                        ai.label.style = styleIndex
                    }
                    ae.line[ab.id].geometry[ai.id] = ai
                }
            }
        }
        ;
        LabelLayer.prototype.onLineLayerTileLoaded = function(Y, Z, V, W) {
            var U = this.getTile(Y.coord);
            if (!U) {
                console.debug("[LabelLayer#onLineLayerTileLoaded] Adding missing labelTile");
                this._addTile(Y.coord)
            }
            this.parseLines(Y, Z, V);
            W(this, U)
        }
        ;
        function K(ae) {
            var ab, V = 0, Y = Math.floor(ae.length * 0.5), aa = 0, Z = 0, W, af, U, ad, ac;
            if (q) {
                for (ab = 0; ab < Y - 1; ++ab) {
                    W = Math.min(Math.max(ae[ab * 2 + 0], 0), 256);
                    af = Math.min(Math.max(ae[ab * 2 + 1], 0), 256);
                    U = Math.min(Math.max(ae[ab * 2 + 2], 0), 256);
                    ad = Math.min(Math.max(ae[ab * 2 + 3], 0), 256);
                    ac = (W * ad - U * af);
                    aa += (W + U) * ac;
                    Z += (af + ad) * ac;
                    V += ac
                }
            } else {
                for (ab = 0; ab < Y - 1; ++ab) {
                    W = poly[ab * 2 + 0];
                    af = poly[ab * 2 + 1];
                    U = poly[ab * 2 + 2];
                    ad = poly[ab * 2 + 3];
                    ac = (W * ad - U * af);
                    aa += (W + U) * ac;
                    Z += (af + ad) * ac;
                    V += ac
                }
            }
            V *= 0.5;
            if (!V) {
                return null 
            }
            ac = 1 / (6 * V);
            return {
                centroid: {
                    x: ac * aa,
                    y: ac * Z
                },
                area: V
            }
        }
        LabelLayer.prototype.parsePolygons = function(ac, Y, ab) {
            var af, ag, V, ad, Z, W, U, ae, aa = 1;
            if (ab.options && ab.options.precision) {
                aa = ab.options.precision
            }
            ae = this.getTile(ac.coord).labelData;
            if (!ae.polygon[ab.id]) {
                ae.polygon[ab.id] = {
                    hidden: false,
                    features: {},
                    geometry: {}
                }
            }
            if (Y.fields) {
                ag = Object.keys(Y.fields);
                for (Z = 0; Z < ag.length; ++Z) {
                    ae.polygon[ab.id].features[ag[Z]] = Y.fields[ag[Z]]
                }
            }
            if (ab.labelData) {
                ae.polygon[ab.id].styles = ab.labelData.styles;
                ae.polygon[ab.id].attribute = ab.labelData.attribute
            }
            W = ae.polygon[ab.id];
            for (Z = 0; Z < Y.geom.length; ++Z) {
                af = Y.geom[Z];
                V = af.centroid;
                if (V) {
                    ad = af.s;
                    if (ad !== p) {
                        U = af.c;
                        af = {
                            id: U,
                            position: [V[0] / aa, V[1] / aa],
                            label: {
                                text: null ,
                                style: null 
                            },
                            layerId: ab.id
                        };
                        if (W.styles) {
                            af.label.style = ad
                        }
                        ae.polygon[ab.id].geometry[U] = af
                    }
                }
            }
        }
        ;
        LabelLayer.prototype.onPolygonLayerTileLoaded = function(Y, Z, V, W) {
            var U = this.getTile(Y.coord);
            if (!U) {
                console.debug("[LabelLayer#onPolygonLayerTileLoaded] Adding missing labelTile");
                this._addTile(Y.coord)
            }
            this.parsePolygons(Y, Z, V);
            W(this, U)
        }
        ;
        fnBasemapLayer = fnLayer2.extend({
            initialize: function(V, U) {
                this.zoomThreshold = U.maxZoom;
                U.maxZoom = Infinity;
                if (!this.getBasemapTileUrl) {
                    this.getBasemapTileUrl = this.getTileUrl
                }
                this.options.tileScaleFactor = 1;
                this.initialize2(V, U)
            },
            _createTileProto: function() {
                this._tileImg = r.DomUtil.create("canvas", "leaflet-tile");
                this._tileImg.width = this._tileImg.height = this.options.tileSize * this.options.tileScaleFactor;
                if (this.options.tileScaleFactor !== 1) {
                    this._tileImg.style.width = "256px";
                    this._tileImg.style.height = "256px"
                }
            },
            _processTile: function(ae, ab, ac, aa, ad) {
                var U, Y, V, ah, Z = 0, W = 0, af = tileSize = 256 * this.options.tileScaleFactor, ai = ab.x, ag = ab.y;
                if (!ad) {
                    ad = this;
                    aa = ac
                }
                ah = ad._map._zoom;
                ae._layer = ad;
                if (ac > ad.zoomThreshold) {
                    do {
                        ab.x = Math.floor(ab.x / 2);
                        ab.y = Math.floor(ab.y / 2);
                        af /= 2
                    } while (--ac > ad.zoomThreshold);Z = ai * af - ab.x * tileSize;
                    W = ag * af - ab.y * tileSize;
                    ad._map._zoom = ac
                }
                U = ad.getBasemapTileUrl(ab, ac);
                ad._map._zoom = ah;
                Y = new Image();
                Y.onload = function() {
                    var aj = ae.getContext("2d");
                    aj.drawImage(this, Z, W, af, af, 0, 0, tileSize, tileSize);
                    r.DomUtil.addClass(ae, "leaflet-tile-loaded");
                    ad.fire("tileload", {
                        tile: ae,
                        url: this.src
                    });
                    ad._tileLoaded()
                }
                ;
                Y.onerror = function() {
                    var ak, aj;
                    if (ac > 0) {
                        aj = ad.zoomThreshold;
                        ad.zoomThreshold = ac - 1;
                        ad._processTile(ae, {
                            x: ai,
                            y: ag
                        }, aa, aa, ad);
                        ad.zoomThreshold = aj;
                        return
                    }
                    ad.fire("tileerror", {
                        tile: ae,
                        url: this.src
                    });
                    ak = ad.options.errorTileUrl;
                    if (ak && ak != this.src) {
                        this.src = ak
                    }
                    ad._tileLoaded()
                }
                ;
                if (giscloud.offlineMode()) {
                    V = ad.options.src + "/" + U.split("/").slice(3).join("/");
                    U = "file://" + giscloudOffline.documentDirectory + "basemaps/" + V
                }
                Y.src = U
            }
        });
        fnBasemapLayer.prototype.initialize2 = fnLayer2.prototype.initialize;
        fnRasterLayer = fnLayer2.extend({
            _processTile: function(W, U, V) {
                this.clipTile(W, U);
                W.src = this.getTileUrl(U, V)
            }
        });
        function Q(aa, Z, V) {
            var W = "";
            for (var Y = V; Y > 0; Y--) {
                var ab = "0";
                var U = 1 << (Y - 1);
                if ((aa & U) != 0) {
                    ab++
                }
                if ((Z & U) != 0) {
                    ab++;
                    ab++
                }
                W += ab
            }
            return W
        }
        fnQuadLayer = fnBasemapLayer.extend({
            getBasemapTileUrl: function(W, Y) {
                var U = this.options.subdomains
                  , V = this.options.subdomains[(W.x + W.y) % U.length];
                return this._url[(W.x + W.y) % this._url.length].replace("{s}", V).replace("{q}", Q(W.x, W.y, Y))
            }
        });
        fnWmsLayer = fnLayer2.extend({
            _processTile: function(aa, W, Z) {
                var U, V, Y, ab;
                if (this.options.gctms) {
                    W.y = this._getWrapTileNum() - W.y - 1
                }
                if (q.zoomOffset) {
                    Z += q.zoomOffset
                }
                U = q.max / (1 << Z);
                V = q.xmin + U * W.x;
                Y = q.ymax - U * W.y;
                ab = this._url[(W.x + W.y) % this._url.length].replace("$x1", V).replace("$y1", Y - U).replace("$x2", V + U).replace("$y2", Y).replace("{z}", Z).replace("{x}", W.x).replace("{y}", W.y).replace("$id", Z).replace("$nx", W.x).replace("$ny", W.y);
                if (u.chrome && ab.match(/:\/\/(.*):(.*)@/)) {
                    ab = giscloud_config.tileSite() + "tms/image_proxy?url=" + encodeURIComponent(ab) + "&mid=" + this.viewer._mid.replace("map", "")
                }
                this.clipTile(aa, W);
                aa.src = ab
            }
        });
        fnGoogleLayer = fnLayer2.extend({
            includes: r.Mixin.Events,
            key: "",
            initialize: function(U) {
                U.zoomAnimation = false;
                r.Util.setOptions(this, U);
                this._googleMapsApiLoaded = giscloud.Viewer.__googleMapsApiLoaded
            },
            onAdd: function(W, U) {
                this._map = W;
                this._noScale = true;
                this._insertAtTheBottom = U;
                var V = this;
                this._initContainer();
                this._map.on({
                    viewreset: this._resetCallback,
                    moveend: this._update,
                    move: this._update
                }, this);
                if (!this.options.updateWhenIdle) {
                    this._limitedUpdate = r.Util.limitExecByInterval(this._update, 150, this);
                    W.on("move", this._limitedUpdate, this)
                }
                if (!u.google) {
                    if (!giscloud.fnGoogleLayerLoadCallback) {
                        giscloud.fnGoogleLayers = [];
                        giscloud.fnGoogleLayerLoadCallback = function() {
                            V._googleMapsApiLoaded.resolve();
                            V._map.invalidateSize();
                            for (var Y = 0; Y < giscloud.fnGoogleLayers.length; Y++) {
                                giscloud.fnGoogleLayers[Y]._initMapObject()
                            }
                            u.setTimeout(function() {
                                delete giscloud.fnGoogleLayerLoadCallback;
                                delete giscloud.fnGoogleLayers;
                                V._map.invalidateSize()
                            }, 1)
                        }
                    }
                    giscloud.fnGoogleLayers.push(this)
                } else {
                    setTimeout(function() {
                        V._googleMapsApiLoaded.resolve()
                    }, 500)
                }
            },
            onRemove: function(U) {
                U._panes.tilePane.removeChild(this._container);
                U.off({
                    viewreset: this._resetCallback,
                    moveend: this._update,
                    move: this._update
                }, this);
                if (!this.options.updateWhenIdle) {
                    U.off("move", this._limitedUpdate, this)
                }
                this._container = null ;
                this._map = null 
            },
            _initContainer: function() {
                var U = this._map._panes.tilePane;
                if (!this._container || U.empty) {
                    if (this._container && U === this.lastTilePane && this._container.parentNode === U) {
                        U.removeChild(this._container)
                    }
                    this.lastTilePane = U;
                    this._container = r.DomUtil.create("div", "leaflet-google-layer leaflet-top leaflet-left");
                    this._updateZIndex();
                    U.appendChild(this._container);
                    var V = this._map.getSize();
                    this._container.style.width = V.x + "px";
                    this._container.style.height = V.y + "px";
                    if (this.options.opacity < 1) {
                        this._updateOpacity()
                    }
                }
                this.setVisible(this.options.visible)
            },
            setVisible: function(U) {
                if (this._container) {
                    this._container.style.display = U ? "block" : "none";
                    if (u.google && !this._container.initMap && U) {
                        this._container.initMap = true;
                        this._initMapObject()
                    }
                }
                this._updateLayerCount(U);
                this.options.visible = U;
                if (!U) {
                    if (this._google) {
                        delete this._google;
                        this._google = null ;
                        this._container.initMap = false
                    }
                }
                this._update();
                m.map._controlCorners.bottomright.style.bottom = U ? "15px" : 0;
                if (m.map.scaleControl) {
                    m.map.scaleControl.setPosition(U ? "bottomright" : "bottomleft")
                }
                return this
            },
            _initMapObject: function() {
                this._googleMapsApiLoaded.done(h.proxy(function() {
                    var U, W, Z, Y, V = this;
                    if (this._map) {
                        this._lastzoom = this._map.getZoom();
                        if (this._lastzoom > this.options.maxZoom) {
                            return
                        }
                        U = this._map.getCenter();
                        _center = new google.maps.LatLng(U.lat,U.lng)
                    }
                    W = {
                        gray: [{
                            featureType: "landscape",
                            stylers: [{
                                saturation: -100
                            }, {
                                lightness: 65
                            }, {
                                visibility: "on"
                            }]
                        }, {
                            featureType: "poi",
                            stylers: [{
                                saturation: -100
                            }, {
                                lightness: 51
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road.highway",
                            stylers: [{
                                saturation: -100
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road.arterial",
                            stylers: [{
                                saturation: -100
                            }, {
                                lightness: 30
                            }, {
                                visibility: "on"
                            }]
                        }, {
                            featureType: "road.local",
                            stylers: [{
                                saturation: -100
                            }, {
                                lightness: 40
                            }, {
                                visibility: "on"
                            }]
                        }, {
                            featureType: "transit",
                            stylers: [{
                                saturation: -100
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "administrative.province",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "water",
                            elementType: "labels",
                            stylers: [{
                                visibility: "on"
                            }, {
                                lightness: -25
                            }, {
                                saturation: -100
                            }]
                        }, {
                            featureType: "water",
                            elementType: "geometry",
                            stylers: [{
                                hue: "#ffff00"
                            }, {
                                lightness: -25
                            }, {
                                saturation: -97
                            }]
                        }]
                    };
                    Z = {
                        center: _center,
                        zoom: this._lastzoom,
                        mapTypeId: google.maps.MapTypeId[this.options.google_map_type],
                        disableDefaultUI: true,
                        keyboardShortcuts: false,
                        draggable: false,
                        disableDoubleClickZoom: true,
                        scrollwheel: false,
                        streetViewControl: false
                    };
                    if (this.options.google_style) {
                        Z.styles = W[this.options.google_style]
                    }
                    if (flashnavigator.hasCanvas) {
                        Z.backgroundColor = "rgba(0,0,0,0)"
                    }
                    var Y = new google.maps.Map(this._container,Z);
                    Y.setTilt(0);
                    if (this.options.google_map_overlay_type === "TRAFFIC") {
                        (new google.maps.TrafficLayer).setMap(Y)
                    }
                    this._google = Y;
                    var V = this;
                    google.maps.event.addListenerOnce(Y, "idle", function() {
                        V.fire("load")
                    });
                    google.maps.event.addListenerOnce(Y, "zoom_changed", function(ab) {
                        var aa = Y.getZoom();
                        if (aa != V._lastzoom) {
                            V._container.innerHTML = ""
                        }
                    })
                }, this))
            },
            _reset: function(U) {
                this._initContainer()
            },
            _update: function() {
                if (!this || !this._map) {
                    return
                }
                var W = this._map.getZoom();
                if (!this._google || !this.options.visible || W > this.options.maxZoom) {
                    return
                }
                this._resize();
                var U = this._map.getCenter();
                var V = new google.maps.LatLng(U.lat,U.lng);
                var Y = {
                    x: -this._map.getPanes().mapPane._leaflet_pos.x,
                    y: -this._map.getPanes().mapPane._leaflet_pos.y
                };
                r.DomUtil.setPosition(this._container, Y);
                this._google.setCenter(V);
                if (W != this._lastzoom) {
                    this._google.setZoom(W);
                    this._lastzoom = W
                }
            },
            _resize: function() {
                var U = this._map.getSize();
                if (this._container.style.width == U.x && this._container.style.height == U.y) {
                    return
                }
                this._container.style.width = U.x + "px";
                this._container.style.height = U.y + "px";
                google.maps.event.trigger(this._google, "resize")
            },
            _addTile: function() {},
            _addTilesFromCenterOut: function() {}
        });
        r.Control.Toolbar = r.Control.extend({
            options: {
                viewer: null ,
                position: "topleft",
                title: "Toolbar",
                mobile: u.fno && fno.mobilebrowser
            },
            onAdd: function(U) {
                this.container = r.DomUtil.create("div", "leaflet-control-toolbar");
                this._map = U;
                this.ul = r.DomUtil.create("ul", "gc-toolbar-menu", this.container);
                return this.container
            },
            empty: function() {
                h(this.ul).empty()
            },
            _createMenu: function(U) {
                var W = [{
                    tool: "Layer list",
                    className: "fa-list-ul"
                }, {
                    tool: "Info",
                    className: "fa-info"
                }, {
                    tool: "more"
                }, {
                    tool: "Zoom in",
                    className: "fa-plus",
                    position: "extended"
                }, {
                    tool: "Zoom out",
                    className: "fa-minus",
                    position: "extended"
                }, {
                    tool: "Zoom area",
                    className: "fa-search-plus",
                    position: "extended"
                }, {
                    tool: "Show all",
                    className: "fa-globe",
                    position: "extended"
                }, {
                    tool: "Current location",
                    className: "fa-crosshairs",
                    position: "extended"
                }, {
                    tool: "Select",
                    className: "fa-hand-o-up",
                    position: "extended"
                }, {
                    tool: "Print",
                    className: "fa-print",
                    position: "extended"
                }, {
                    tool: "Coordinates reprojection",
                    className: "fa-bullseye",
                    position: "extended"
                }, {
                    tool: "Area Measure",
                    className: "fa-crop",
                    position: "extended"
                }, {
                    tool: "Measure",
                    className: "fa-expand",
                    position: "extended"
                }, {
                    tool: "Refresh",
                    className: "fa-refresh",
                    position: "extended"
                }, {
                    tool: "Azimuth",
                    className: "fa-compass",
                    position: "extended"
                }, {
                    tool: "scale",
                    position: "extended"
                }, {
                    tool: "coordinates",
                    position: "extended"
                }, {
                    tool: "Setting",
                    className: "fa-cog",
                    position: "extended"
                }, ];
                for (var V = 0; V < W.length; V++) {
                    this.add(W[V])
                }
            },
            add: function(W) {
                var U = r.DomUtil.create("li", "gc-toolbar-item"), Z, ab, Y = r.DomEvent.stopPropagation;
                if (W.position == "first") {
                    this.ul.insertBefore(U, this.ul.firstChild)
                } else {
                    this.ul.appendChild(U)
                }
                if (W.tool == "Info") {
                    U.className += " gc-tool-active"
                }
                if (W.id) {
                    U.id = W.id
                }
                if (W.tool == "scale") {
                    U.className += " gc-toolbar-scale";
                    var ac = r.DomUtil.create("div", "", U)
                } else {
                    if (W.tool == "numofselected") {
                        U.className += " gc-toolbar-numofselected";
                        var ac = r.DomUtil.create("div", "numselfeatures", U)
                    } else {
                        if (W.tool == "more") {
                            Z = r.DomUtil.create("i", "fa fa-angle-double-left", U);
                            U.title = W.title;
                            var aa = U
                              , V = function(ad) {
                                h(".gc-toolbar-item.gc-tool-extended").toggle();
                                h(ad.currentTarget).find("i").toggleClass("fa-angle-double-right");
                                h(ad.currentTarget).find("i").toggleClass("fa-angle-double-left")
                            }
                        } else {
                            if (W.tool == "coordinates") {
                                U.className += " gc-toolbar-coordinates";
                                Z = r.DomUtil.create("i", "fa fa-ellipsis-v", U);
                                var ac = r.DomUtil.create("div", "", U)
                            } else {
                                W.className += W.className.indexOf("fa-") >= 0 ? " fa" : "";
                                Z = r.DomUtil.create("i", W.className, U);
                                U.title = W.title
                            }
                        }
                    }
                }
                if (W.position == "extended") {
                    U.className += " gc-tool-extended"
                }
                if (W.text) {
                    if (W.textOnlyResponsive && !this.options.mobile) {
                        return U
                    }
                    ab = r.DomUtil.create("span", "", U);
                    ab.innerHTML = W.text;
                    U.className += " gc-toolbar-text";
                    if (h(u).width() > 800) {
                        ab.parentNode.style.display = "inline-flex";
                        ab.parentNode.style.whiteSpace = "nowrap";
                        ab.parentNode.style.width = "auto";
                        ab.style.marginTop = "6px"
                    }
                }
                r.DomEvent.on(U, "click", Y).on(U, "mousedown", Y).on(U, "dblclick", Y).on(U, "click", r.DomEvent.preventDefault);
                return U
            },
            _createButton: function(U) {
                var W = r.DomEvent.stopPropagation
                  , Y = r.DomUtil.create("a", "", U)
                  , V = function() {
                    if (this.options.viewer) {}
                }
                ;
                Y.innerHTML = "&nbsp;";
                Y.href = "#";
                Y.title = this.options.title;
                r.DomEvent.on(Y, "click", W).on(Y, "mousedown", W).on(Y, "dblclick", W).on(Y, "click", r.DomEvent.preventDefault).on(Y, "click", V, this);
                return Y
            }
        });
        r.control.giscloudToolbar = function(U) {
            return new r.Control.Toolbar(U)
        }
        ;
        if (flashnavigator.ready) {
            flashnavigator.ready()
        }
    }
    fnViewer2 = function(az, Q, Y) {
        var ar, W, Z, al;
        ar = [];
        layers_feature_filter = [];
        al = true;
        this.disableAnimation = function() {}
        ;
        this.setQuality = function() {}
        ;
        this.demodifyObjectsColor = function() {}
        ;
        this.modifyObject = function(aB, aA, aG, aE, aD, aC) {
            for (var aF in m.map._layers) {
                if (m.map._layers[aF].gcmap) {
                    m.map._layers[aF].gcmap.modifyObject(aB, aA, aG, aE, aD, aC)
                }
            }
        }
        ;
        var ao = this;
        m.map.on("move", function() {
            ao._layersForUpdateCount = d
        });
        m.map.on("moveend", function() {
            ao._layersForUpdateCount = d
        });
        m.map.on("viewreset", function() {
            ao._layersForUpdateCount = d
        });
        m.map.on("zoomanim", function() {
            giscloud.html5ResetLoaders()
        });
        this.disablePanWithMiddleButton = function() {}
        ;
        this.enablePanWithMiddleButton = function() {}
        ;
        this.enableSelection = function() {
            giscloud.Html5MapSetSelection(true);
            this.selectionEnabled = al = true
        }
        ;
        this.disableSelection = function() {
            giscloud.Html5MapSetSelection(false);
            this.selectionEnabled = al = false
        }
        ;
        this.fireSelectAreaEvent = function(aC, aK, aF) {
            var aD = (1 << m.map._zoom) * 256;
            var aI = m.map.getPixelBounds();
            var aJ = Math.abs(aK.x - aC.x);
            var aE = Math.abs(aK.y - aC.y);
            if (aJ > 10 && aE > 10) {
                var aB = q.xmin + q.max * (aC.x + m.map._mapPane._leaflet_pos.x + aI.min.x) / aD;
                var aH = q.ymax - q.max * (aC.y + m.map._mapPane._leaflet_pos.y + aI.min.y) / aD;
                var aA = q.xmin + q.max * (aK.x + m.map._mapPane._leaflet_pos.x + aI.min.x) / aD;
                var aG = q.ymax - q.max * (aK.y + m.map._mapPane._leaflet_pos.y + aI.min.y) / aD;
                au("areaselection", {
                    originalEvent: aF,
                    xMin: aB,
                    yMin: aH,
                    xMax: aA,
                    yMax: aG
                })
            }
        }
        ;
        this.getDataFromAreaSelection = function(aD, aC, aH) {
            var aA = (1 << m.map._zoom) * 256;
            var aE = m.map.getPixelBounds();
            var aB = Math.abs(aC.x - aD.x);
            var aF = Math.abs(aC.y - aD.y);
            var aG = {
                width: aB,
                height: aF
            };
            if (aB > 10 && aF > 10) {
                aG.x1 = q.xmin + q.max * (aD.x + m.map._mapPane._leaflet_pos.x + aE.min.x) / aA;
                aG.y1 = q.ymax - q.max * (aD.y + m.map._mapPane._leaflet_pos.y + aE.min.y) / aA;
                aG.x2 = q.xmin + q.max * (aC.x + m.map._mapPane._leaflet_pos.x + aE.min.x) / aA;
                aG.y2 = q.ymax - q.max * (aC.y + m.map._mapPane._leaflet_pos.y + aE.min.y) / aA
            }
            return aG
        }
        ;
        this.fireSelectAreaToolEvent = function(aC, aB, aF) {
            var aA = Math.abs(aB.x - aC.x);
            var aD = Math.abs(aB.y - aC.y);
            if (aA > 10 && aD > 10) {
                var aE = new r.LatLngBounds(m.map.layerPointToLatLng(aC),m.map.layerPointToLatLng(aB));
                m.map.fitBounds(aE)
            }
        }
        ;
        this.setTool = function(aA) {
            h("#flashcontent").removeClass("gc-edit-cursor");
            if (this._currentTool === "MeasureTool") {
                if (m.map.measure.enabled()) {
                    m.map.measure.disable()
                }
            }
            if (this._currentTool == aA && aA !== "MeasureTool") {
                return
            }
            m.map.boxZoom._onDone = null ;
            m.map.boxZoom.force(false);
            if (aA == "SelectAreaTool" || aA == "AreaSelection") {
                m.map.dragging.disable();
                if (aA == "AreaSelection") {
                    m.map.boxZoom._onDone = this.fireSelectAreaEvent
                } else {
                    m.map.boxZoom._onDone = this.fireSelectAreaToolEvent
                }
                m.map.boxZoom.force(true);
                h("#flashcontent").addClass("gc-edit-cursor")
            } else {
                m.map.dragging.enable()
            }
            if (aA == "MeasureTool") {
                m.map.measure.enable();
                h("#flashcontent").addClass("gc-edit-cursor")
            }
            var aB = {
                tool: aA,
                previous_tool: this._currentTool
            };
            this._currentTool = aA;
            au("toolchange", aB)
        }
        ;
        this.src = function() {}
        ;
        this.enableAnimation = function() {}
        ;
        this.convertScale = function(aA) {
            return o / aA
        }
        ;
        this.unload = function() {
            this._reloadBound = null ;
            while (l = ar.pop()) {
                if (l._updateLayerCount) {
                    l._updateLayerCount(true)
                }
                if (l.cleanUpOnRemove) {
                    l.cleanUpOnRemove(m.map, true)
                } else {
                    m.map.removeLayer(l)
                }
            }
            if (this.cleanUpLabelRendering) {
                this.cleanUpLabelRendering()
            }
            d = 0;
            m.map.setView(new r.LatLng(0,0), 0, true)
        }
        ;
        this.reload = function(aB, aC, aA) {
            if (ar.length > 0) {
                this._reloadBound = this.getViewBound()
            }
            this.load(aB || W, true, aC, aA)
        }
        ;
        this.setLayerFeatureFilter = function(aB, aC) {
            layers_feature_filter[aB] = aC;
            var aA = this.getLayerByName(aB);
            if (aA && aA.setFeatureFilter) {
                aA.setFeatureFilter(aC)
            }
        }
        ;
        this.getLayerByName = function(aB) {
            for (var aA = 0; aA < ar.length; aA++) {
                if (ar[aA].id === aB) {
                    return ar[aA]
                }
            }
            return 0
        }
        ;
        this.getLayerById = this.getLayerByName;
        this.getLayerCount = function() {
            return ar.length
        }
        ;
        this.getLayer = function(aA) {
            return ar[aA]
        }
        ;
        this.setLayersOrder = function(aA) {
            ax(aA);
            if (giscloud.Html5SendRequests) {
                giscloud.Html5SendRequests()
            }
        }
        ;
        this.removeLayer = function(aA) {
            var aC = [], aB;
            ar = ar.filter(function(aD) {
                if (aD.id.indexOf(aA) !== -1) {
                    aC.push(aD);
                    return false
                }
                return true
            });
            aC.forEach(function(aD) {
                if (aD.isTileLayer) {
                    d--
                }
                if (aD._updateLayerCount) {
                    aD._updateLayerCount(true)
                }
                if (aD.cleanUpOnRemove) {
                    aD.cleanUpOnRemove(m.map);
                    d--
                } else {
                    m.map.removeLayer(aD)
                }
            });
            aB = aC.reduce(function(aD, aE) {
                if (aD) {
                    return aD
                }
                if (aE.id.indexOf("llayer") === -1) {
                    aD = aE
                }
                return aD
            }, null );
            au("layerRemoved", aB)
        }
        ;
        this.getViewBound = function() {
            var aA = m.map.getPixelBounds();
            var aB = q.max / (Math.pow(2, m.map._zoom) * 256);
            var aC = new Object();
            aC.xMin = q.xmin + aB * aA.min.x;
            aC.yMin = q.ymax - aB * aA.max.y;
            aC.xMax = q.xmin + aB * aA.max.x;
            aC.yMax = q.ymax - aB * aA.min.y;
            return aC
        }
        ;
        this.setViewBound = function(aH, aM, aK, aO, aF, aC) {
            if (!ar[0]) {
                return
            }
            aH *= 1;
            aK *= 1;
            aM *= 1;
            aO *= 1;
            if (!aF) {
                aF = 1
            }
            if (isNaN(aH) || isNaN(aM) || isNaN(aK) || isNaN(aO)) {
                if (this._startBound && !isNaN(this._startBound.xMin) && !isNaN(this._startBound.xMax) && !isNaN(this._startBound.yMin) && !isNaN(this._startBound.yMax)) {
                    aH = this._startBound.xMin;
                    aM = this._startBound.yMin;
                    aK = this._startBound.xMax;
                    aO = this._startBound.yMax
                } else {
                    aH = q.xmin;
                    aM = q.ymin;
                    aK = q.xmax;
                    aO = q.ymax
                }
            }
            var aS = q.max * 2.5e-8;
            if (Math.abs(aH - aK) < aS) {
                var aE = q.max * 0.000025;
                aH -= aE;
                aK += aE
            }
            if (Math.abs(aM - aO) < aS) {
                var aE = q.max * 0.000025;
                aM -= aE;
                aO += aE
            }
            if (m.map._loaded && !aC) {
                var aL = (1 << m.map._zoom) * 256;
                var aB = m.map.getPixelBounds();
                var aR = new r.LatLngBounds(this.toLeafletCoords(aH, aM),this.toLeafletCoords(aK, aO));
                var aA = m.map.getBoundsZoom(aR);
                if (aA > av) {
                    aA = av
                }
                if (this.mapViewPadding) {
                    if (this.mapViewPadding.left) {
                        aH -= q.max / Math.pow(2, aA) / 256 * this.mapViewPadding.left
                    }
                    aR = new r.LatLngBounds(this.toLeafletCoords(aH, aM),this.toLeafletCoords(aK, aO));
                    aA = m.map.getBoundsZoom(aR);
                    if (aA > av) {
                        aA = av
                    }
                }
                m.map.setView(r.latLngBounds(aR).getCenter(), aA)
            } else {
                var aL = (aK - aH > aO - aM) ? aK - aH : aO - aM;
                var aG = m.map.getSize();
                var aI = m.map.getSize(), aA = m.map.getMinZoom(), aJ = m.map.getMaxZoom(), aP, aN, aD;
                if (!aJ || aJ > av) {
                    aJ = av
                }
                do {
                    aA++;
                    var aQ = Math.pow(2, aA) * 256;
                    aN = {
                        x: aK / q.max * aQ,
                        y: aM / q.max * aQ
                    };
                    aD = {
                        x: aH / q.max * aQ,
                        y: aO / q.max * aQ
                    };
                    aP = new r.Point(aN.x - aD.x,aD.y - aN.y)
                } while ((aP.x - aI.x < 0.0001) && (aP.y - aI.y < 0.0001) && (aA <= aJ));aA -= aF;
                M((aK + aH) / 2, (aO + aM) / 2, aA)
            }
        }
        ;
        this.setViewBoundAnim = this.setViewBound;
        this.setScale = function(aB) {
            var aA = this.getViewBound();
            this.setLocation((aA.xMin + aA.xMax) / 2, (aA.yMin + aA.yMax) / 2, aB)
        }
        ;
        this.getScale = function() {
            return m.map._zoom
        }
        ;
        this.toLeafletCoords = function(aH, aF, aE, aA) {
            var aB = (1 << m.map._zoom) * 256
              , aG = m.map.getPixelBounds()
              , aC = (aH - q.xmin) / q.max * aB - m.map._mapPane._leaflet_pos.x - aG.min.x
              , aI = (q.ymax - aF) / q.max * aB - m.map._mapPane._leaflet_pos.y - aG.min.y
              , aD = m.map.layerPointToLatLng(new r.Point(aC,aI));
            if (aE != null ) {
                aD.z = aE
            }
            if (aA) {
                aD._o = {
                    x: aH,
                    y: aF
                }
            }
            return aD
        }
        ;
        this.fromLeafletCoords = function(aF) {
            var aB, aE;
            if (aF._o) {
                aB = aF._o.x;
                aE = aF._o.y
            } else {
                var aD = m.map.latLngToLayerPoint(aF)
                  , aA = (1 << m.map._zoom) * 256
                  , aC = m.map.getPixelBounds();
                aB = q.xmin + (aD.x + m.map._mapPane._leaflet_pos.x + aC.min.x) / aA * q.max,
                aE = q.ymax - (aD.y + m.map._mapPane._leaflet_pos.y + aC.min.y) / aA * q.max
            }
            if (aF.z != null ) {
                return new giscloud.geometry.Point(aB,aE,aF.z)
            }
            return new giscloud.geometry.Point(aB,aE)
        }
        ;
        this.setLocation = function(aA, aC, aB) {
            if (m.map._loaded) {
                if (!(aB >= 0)) {
                    aB = m.map._zoom
                }
                m.map.setView(this.toLeafletCoords(aA, aC), aB)
            } else {
                if (aB) {
                    aB = Math.floor(Math.log(o / aB * q.max / 256) / Math.log(2))
                } else {
                    aB = m.map._zoom
                }
                M(aA, aC, aB)
            }
        }
        ;
        this.exposeLeaflet = function() {
            return m.map
        }
        ;
        this.invalidateSize = function() {
            m.map.invalidateSize()
        }
        ;
        function M(aA, aE, aD) {
            var aC = m.map.getSize();
            m.map._zoom = aD;
            var aB = q.max / (Math.pow(2, aD) * 256);
            aA = (aA - q.xmin) / aB - aC.x / 2;
            aE = (q.ymax - aE) / aB - aC.y / 2;
            m.map._initialTopLeftPoint = new r.Point(aA,aE);
            r.DomUtil.setPosition(m.map._mapPane, new r.Point(0,0));
            m.map._tileLayersToLoad = m.map._tileLayersNum;
            if (m.map._tileBg) {
                m.map._tileBg.innerHTML = ""
            }
            m.map.fire("viewreset", {
                hard: true
            });
            m.map.fire("move");
            m.map.fire("zoomend");
            m.map.fire("moveend");
            if (!m.map._loaded) {
                m.map._loaded = true;
                m.map.fire("load")
            }
        }
        m.map.on("zoomstart", function(aA) {
            giscloud.util.mediator.publish("zoomstart", aA)
        });
        m.map.on("zoomend", function(aA) {
            giscloud.util.mediator.publish("zoomend", aA)
        });
        function af(aC) {
            var aB, aA;
            if (typeof aC === "string") {
                aC = h.parseXML(aC).childNodes || []
            } else {
                aC = aC.childNodes
            }
            for (aB = 0,
            aA = aC.length; aB < aA; aB++) {
                if (aC[aB].nodeType == 1) {
                    return aC[aB]
                }
            }
            return null 
        }
        var ac = [];
        var K = [];
        var U = 0;
        function ab(aB, aA) {
            if (giscloud.offlineMode() && giscloudOffline.documentDirectory) {
                return "file://" + giscloudOffline.documentDirectory + "assets/" + aA
            }
            return aA
        }
        function ag(aB) {
            U = K.length;
            if (U == 0) {
                ai(aB);
                return
            }
            var aA;
            while (aA = K.pop()) {
                aA.img.onerror = aA.img.onload = function() {
                    this.feature.predominantColor = this.feature.fillcolor;
                    this.feature.iready = true;
                    U--;
                    if (U == 0) {
                        ai(aB)
                    }
                }
                ;
                aA.img.src = ab(aB, aA.url)
            }
        }
        this.load = function(aB, aE, aF, aA) {
            if (!aE && this.cleanUpLabelRendering) {
                this.cleanUpLabelRendering()
            }
            var aD, aC = this;
            W = aB;
            this._is_reload = aE;
            this.reloadCallback = aF;
            this.overrideStartBound = aA;
            if (giscloud.offlineMode()) {
                aD = function(aG) {
                    giscloudOffline.getMapXml([aG.url], function(aH) {
                        aG.success.bind(aG.context)(aH)
                    })
                }
            } else {
                aD = h.ajax
            }
            aD({
                url: aB + (aB.indexOf("?") > -1 ? "&" : "?") + "t=" + (new Date()).getTime() + (aE ? "&reload=1" : ""),
                context: this,
                success: function(aR) {
                    var a3 = "";
                    var aS = "";
                    var aM = "";
                    var a7 = null ;
                    var aX = af(aR);
                    var aU = aX.childNodes.length;
                    var aN = 100;
                    var a6;
                    if (aX.attributes) {
                        for (a6 = 0; a6 < aX.attributes.length; a6++) {
                            if (aX.attributes[a6].name == "id") {
                                a3 = aX.attributes[a6].value
                            } else {
                                if (aX.attributes[a6].name == "unit") {
                                    this.unit = aS = aX.attributes[a6].value;
                                    o = E[aS]
                                } else {
                                    if (aX.attributes[a6].name == "measure_unit") {
                                        this.measureUnit = aM = aX.attributes[a6].value
                                    } else {
                                        if (aX.attributes[a6].name == "maxzoom") {
                                            aN = parseInt(aX.attributes[a6].value, 10)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    this._mid = a3;
                    var aK = [];
                    sourcesMap = [];
                    var aZ = this.parent.options = {};
                    var aJ = false;
                    var aL = null ;
                    m.map.attributionControl.removeAttribution(m.map._active_copyright);
                    m.map._controlCorners.bottomright.style.bottom = 0;
                    this.copyright = "";
                    this.backgroundcolor = null ;
                    for (var a0 = 0; a0 < aU; a0++) {
                        if (aX.childNodes[a0].tagName == "copyright") {
                            this.copyright = giscloud.xssSafe(aX.childNodes[a0].text || aX.childNodes[a0].childNodes[1].textContent);
                            m.map._active_copyright = "&copy; " + this.copyright;
                            m.map.attributionControl.addAttribution(m.map._active_copyright)
                        } else {
                            if (aX.childNodes[a0].tagName == "sources") {
                                ay(aX.childNodes[a0].childNodes, sourcesMap, aK)
                            } else {
                                if (aX.childNodes[a0].tagName == "options") {
                                    an(aX.childNodes[a0].childNodes, aZ)
                                } else {
                                    if (aX.childNodes[a0].tagName == "bound") {
                                        var aH = aX.childNodes[a0].attributes;
                                        a7 = {};
                                        for (a6 = 0; a6 < aH.length; a6++) {
                                            if (aH[a6].name == "xmin") {
                                                a7.xMin = parseFloat(aH[a6].value)
                                            } else {
                                                if (aH[a6].name == "ymin") {
                                                    a7.yMin = parseFloat(aH[a6].value)
                                                } else {
                                                    if (aH[a6].name == "xmax") {
                                                        a7.xMax = parseFloat(aH[a6].value)
                                                    } else {
                                                        if (aH[a6].name == "ymax") {
                                                            a7.yMax = parseFloat(aH[a6].value)
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        aJ = true
                                    } else {
                                        if (aX.childNodes[a0].tagName == "tile0") {
                                            aL = {};
                                            var aP = aX.childNodes[a0].attributes;
                                            for (a6 = 0; a6 < aP.length; a6++) {
                                                if (aP[a6].name == "originx") {
                                                    aL.originx = parseFloat(aP[a6].value)
                                                } else {
                                                    if (aP[a6].name == "originy") {
                                                        aL.originy = parseFloat(aP[a6].value)
                                                    } else {
                                                        if (aP[a6].name == "resolution") {
                                                            aL.resolution = parseFloat(aP[a6].value)
                                                        } else {
                                                            if (aP[a6].name == "wmts") {
                                                                aL.wmts = aP[a6].value == "true"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        } else {
                                            if (aX.childNodes[a0].tagName == "projection") {
                                                this.projection = aX.childNodes[a0].getAttribute("value")
                                            } else {
                                                if (aX.childNodes[a0].tagName == "epsg") {
                                                    this.epsg = aX.childNodes[a0].getAttribute("value")
                                                } else {
                                                    if (aX.childNodes[a0].tagName == "background") {
                                                        this.backgroundcolor = aX.childNodes[a0].getAttribute("value") + "";
                                                        if (this.backgroundcolor) {
                                                            this.backgroundcolor = this.backgroundcolor.replace("0x", "#")
                                                        }
                                                    } else {
                                                        if (aX.childNodes[a0].tagName == "token") {
                                                            giscloud.tile_token = aX.childNodes[a0].getAttribute("value")
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    flashnavigator.newLabelingMode = giscloud.offlineMode() || (this.parent && this.parent.options && this.parent.options.LABEL_ENGINE_MODE == "2");
                    aa.call(this, aS, aM);
                    aq.call(this, aS, aM);
                    if (this.backgroundcolor) {
                        m.map._container.style.backgroundColor = this.backgroundcolor
                    } else {
                        m.map._container.style.backgroundColor = "#ffffff"
                    }
                    if (!aJ) {
                        a7 = {}
                    }
                    var a4 = {};
                    var aQ;
                    if (aL && !isNaN(aL.originx) && !isNaN(aL.originy) && !isNaN(aL.resolution)) {
                        aQ = aL.resolution * 256 * (o / 3779.527559055);
                        if (aL.wmts) {
                            if (aL.originx == -180 && aL.originy == 90) {
                                aQ = 180 * 2;
                                a4.zoomOffset = -1
                            } else {
                                aQ *= 1.14687998 / 4096
                            }
                            a4.ymin = aL.originy - aQ;
                            a4.ymax = aL.originy
                        } else {
                            a4.ymin = aL.originy;
                            a4.ymax = aL.originy + aQ
                        }
                        a4.xmin = aL.originx;
                        a4.xmax = aL.originx + aQ;
                        a4.max = aQ
                    } else {
                        if (Math.abs(o - 420735083.313146) < 0.00001) {
                            aQ = 180
                        } else {
                            aQ = 20037508.3427892 * (o / 3779.527559055)
                        }
                        a4.xmin = -aQ;
                        a4.ymin = -aQ;
                        a4.xmax = aQ;
                        a4.ymax = aQ;
                        var aI = a4.xmax - a4.xmin;
                        var aG = a4.ymax - a4.ymin;
                        if (aG > aI) {
                            aI = aG
                        }
                        a4.max = aI
                    }
                    var a5 = false;
                    var aW = ["osm", "bing", "bing_sat", "bing_hyb", "gmaps", "gmaps_traffic", "gmaps_sat", "gmaps_terr", "gmaps_hybrid", "mapquest-osm", "mapquest-oarial", "cloudmade_gray", "maps_for_free_relief", "mapbox.streets", "mapbox.light", "mapbox.dark", "mapbox.satellite", "mapbox.satellite-streets", "cloudmade_night", "tilejson", "croatianq", "mapbox.streets"];
                    for (var a0 = 0; a0 < aK.length; a0++) {
                        if (h.inArray(aK[a0].src, aW) == -1) {
                            a5 = true
                        }
                    }
                    var aO = Math.floor(Math.log(o / (256 / a4.max) / aN) / Math.log(2));
                    if (!this._is_reload || !q || q.xmin != a4.xmin || q.ymin != a4.ymin || q.xmax != a4.xmax || q.ymax != a4.ymax) {
                        this._reloadBound = null 
                    }
                    q = a4;
                    for (var a0 = 0; a0 < aU; a0++) {
                        if (aX.childNodes[a0].tagName == "layers") {
                            O(aX.childNodes[a0].childNodes, sourcesMap, a3, ar, aO)
                        }
                    }
                    V(aC, a3, ar, aO);
                    for (var a0 = 0; a0 < ar.length; a0++) {
                        if (ar[a0].has_icon && ar[a0].features) {
                            for (var a2 = 0; a2 < ar[a0].features.length; a2++) {
                                if (ar[a0].features[a2].icon) {
                                    ar[a0].features[a2].icon_image = new Image();
                                    ar[a0].features[a2].icon_image.feature = ar[a0].features[a2];
                                    K.push({
                                        img: ar[a0].features[a2].icon_image,
                                        url: ar[a0].features[a2].icon
                                    })
                                }
                            }
                        }
                    }
                    for (var a0 = 0; a0 < aK.length; a0++) {
                        if (!aK[a0].visible || (h.inArray(aK[a0].src, aW) > -1 && a5) || aJ) {
                            continue
                        }
                        var aT = parseFloat(aK[a0].xmin);
                        var aY = parseFloat(aK[a0].ymin);
                        var aV = parseFloat(aK[a0].xmax);
                        var a1 = parseFloat(aK[a0].ymax);
                        if (aT == 0 && aY == 0 && aV == 0 && a1 == 0) {
                            continue
                        }
                        if (a7.xMin == p || aT < a7.xMin) {
                            a7.xMin = aT
                        }
                        if (a7.yMin == p || aY < a7.yMin) {
                            a7.yMin = aY
                        }
                        if (a7.xMax == p || aV > a7.xMax) {
                            a7.xMax = aV
                        }
                        if (a7.yMax == p || a1 > a7.yMax) {
                            a7.yMax = a1
                        }
                    }
                    this._startBound = a7;
                    ag(this);
                    giscloud.util.mediator.publish("labels/rerender")
                }
            })
        }
        ;
        function N(aA) {
            if (typeof aA !== "string") {
                return null 
            }
            if (!giscloud.toMeterRatios[aA]) {
                return null 
            }
            return aA
        }
        this.MeasureUnit = function(aA) {
            if (aA !== p && N(aA)) {
                this.measureUnit = aA;
                aa.call(this, aA, this.measureUnit)
            }
            return this.measureUnit
        }
        ;
        function ax(aL) {
            var aQ = [], aK, aC = null , aM = 0, aN, aA, aR;
            if (flashnavigator.newLabelingMode) {
                aL = aL.filter(function(aU) {
                    return aU
                });
                aN = [g]
            } else {
                aN = aL.map(function(aU) {
                    return ar.reduce(function(aV, aW) {
                        if (aV) {
                            return aV
                        } else {
                            if (aW.id === "llayer" + aU) {
                                return [aU, aW]
                            }
                        }
                    }, null )
                }).reduce(function(aU, aV) {
                    if (aV) {
                        aU[aV[0]] = aV[1]
                    }
                    return aU
                }, {})
            }
            aA = aL.map(function(aU) {
                return ar.reduce(function(aW, aX) {
                    var aV;
                    if (aW) {
                        return aW
                    } else {
                        aV = u.parseInt(aX.id.replace("layer", "").replace("_group_", ""), 10);
                        if (aV === aU) {
                            return [aU, aX]
                        }
                    }
                    return aW
                }, null )
            }).reduce(function(aU, aV) {
                if (aV) {
                    aU[aV[0]] = aV[1]
                }
                return aU
            }, {});
            aN = Object.keys(aN).reduce(function(aU, aV) {
                aU.push(aN[aV]);
                return aU
            }, []);
            aA = aL.reduce(function(aU, aV) {
                aU.push(aA[aV]);
                return aU
            }, []);
            aR = Array.prototype.concat.apply(aN, aA);
            if (fnTileLayerGroup.theTileLayer) {
                var aI = false, aB = null , aH = null , aK = null , aP, aD = 0, aJ = 0, aE, aT, aO = 1, aS = 2, aG = 3, aF = 4;
                if (g) {
                    aR.shift()
                }
                Object.keys(fnTileLayerGroup.theTileLayer).forEach(function(aU) {
                    fnTileLayerGroup.theTileLayer[aU]._zIndexOffset = null 
                });
                aR.forEach(function(aU) {
                    if ((aU.isGroupLayer || aU.isRootLayer) && aU.tileLayer._map) {
                        aU.cleanUpOnRemove(null , true)
                    }
                });
                d = 0;
                aP = aR.map(function(aU) {
                    aE = aO;
                    if (aU.features && aU.features[0]) {
                        switch (aU.features[0].type) {
                        case "text":
                        case "label":
                            aE = aS;
                            break;
                        case "point":
                            aE = aF;
                            break;
                        case "line":
                        case "polygon":
                            aE = aG;
                            break;
                        default:
                            aE = aO
                        }
                    }
                    if (!aT) {
                        aT = aE
                    }
                    if (aU.isGroupLayer) {
                        if (aT !== aE) {
                            aD++
                        }
                        aT = aE;
                        return {
                            group: "g" + aD,
                            layer: aU,
                            type: aE
                        }
                    } else {
                        if (aT !== aO) {
                            aJ++
                        }
                        aT = aE;
                        return {
                            group: "break" + aJ,
                            layer: aU,
                            type: aE
                        }
                    }
                }).filter(function(aU) {
                    return aU.group.indexOf("break") === -1
                }).reduce(function(aU, aV) {
                    if (!aU.some(function(aW) {
                        return aW[0] === aV.group
                    })) {
                        aU.push([aV.group, []])
                    }
                    aU[aU.length - 1][1].push(aV.layer);
                    return aU
                }, []).map(function(aV) {
                    var aU = {
                        id: aV[0],
                        group: null ,
                        layers: aV[1]
                    };
                    aU.group = aV[1].reduce(function(aW, aX) {
                        if (aW) {
                            return aW
                        }
                        aX.groupId = aV[0];
                        aX.options.group = aV[0];
                        aX.newTileLayer();
                        aX.tileLayer._partialGroup = aU.layers;
                        aX.tileLayer.group = aU.layers.map(function(aY) {
                            aY.tileLayer = aX.tileLayer;
                            return aY
                        });
                        aX.visible = aX.options.visible;
                        aX.tileLayer._resetGroup();
                        aX.setUniqueId();
                        aW = aX;
                        return aW
                    }, null );
                    d++;
                    return aU
                });
                if (g) {
                    aR.unshift(g)
                }
            } else {
                d = ar.filter(function(aU) {
                    return aU instanceof fnTileLayer
                }).length
            }
            aR.forEach(function(aV, aU) {
                aV.orderIndex = ar.length - aU;
                if (aV._container || aV.isGroupLayer) {
                    aV.setZIndex(ar.length - aU)
                }
            });
            ar = aR;
            if (fnTileLayerGroup.theTileLayer) {
                Object.keys(fnTileLayerGroup.theTileLayer).forEach(function(aU) {
                    var aV;
                    aV = fnTileLayerGroup.theTileLayer[aU];
                    if (!aV.viewer) {
                        aV.viewer = aV.group[0].viewer;
                        aV._toBeLoaded = true;
                        aV.addTo(m.map)
                    }
                    aV._resetGroup();
                    aV.redraw();
                    aV._reloadGroupPartialy()
                })
            }
            if (flashnavigator.newLabelingMode) {
                aL.unshift(0)
            }
            u.giscloud.util.mediator.publish("labels/rerender");
            ac = aL.map(function(aU) {
                return aU
            })
        }
        function ai(aF) {
            var aH = []
              , aD = [];
            if (aF.parent && aF.parent.options && aF.parent.options.MAP_ENGINE_MODE == "3") {
                flashnavigator.hasCanvas = false
            } else {
                flashnavigator.hasCanvas = flashnavigator.hasCanvasInitialValue
            }
            aF._layersForUpdateCount = 0;
            m.map.invalidateSize();
            if (!aF._reloadBound) {
                var aA = aF.overrideStartBound || aF._startBound;
                aF.setViewBound(aA.xMin, aA.yMin, aA.xMax, aA.yMax)
            }
            for (var aE = 0; aE < ar.length; aE++) {
                if (ar[aE].should_add) {
                    ar[aE].should_add = false;
                    ar[aE].viewer = aF;
                    if (!ar[aE].isGroupLayer) {
                        ar[aE].addTo(m.map)
                    }
                    if (ar[aE].features) {
                        ar[aE].features_original = [];
                        for (var aC = 0; aC < ar[aE].features.length; aC++) {
                            var aG = {};
                            for (var aB in ar[aE].features[aC]) {
                                aG[aB] = ar[aE].features[aC][aB]
                            }
                            ar[aE].features_original[aC] = aG
                        }
                    }
                    if (m.map.options.zoomAnimation && r.TileLayer && (ar[aE] instanceof r.TileLayer)) {
                        if (!ar[aE].options.visible) {
                            m.map._tileLayersNum--
                        }
                    }
                }
            }
            aH = ar.reduce(function(aI, aJ) {
                if (aJ.id.indexOf("llayer") === -1) {
                    aI.push(u.parseInt(aJ.id.replace("layer", "").replace("_group_", ""), 10))
                }
                return aI
            }, []).reverse();
            if (m.map._loaded) {
                ax(aH)
            }
            if (giscloud.Html5SendRequests) {
                giscloud.Html5SendRequests()
            }
            F = true;
            if (aF._is_reload) {
                au("reload", {
                    id: aF._mid
                })
            } else {
                au("load", {
                    id: aF._mid
                })
            }
            if (aF.reloadCallback) {
                aF.reloadCallback();
                aF.reloadCallback = null 
            }
        }
        function aa(aA, aB) {
            if (aA === "degree" && this.epsg === "4326") {
                m.map.measure.options.calculateDistance = function(aH, aD, aF, aC) {
                    var aG = ao.fromLeafletCoords(new r.LatLng(aH,aD))
                      , aE = ao.fromLeafletCoords(new r.LatLng(aF,aC));
                    return m.map.measure._haversine(aG.y, aG.x, aE.y, aE.x) * 1000
                }
            } else {
                if (this.epsg === "900913" || this.epsg === "3857") {
                    m.map.measure.options.calculateDistance = function(aF, aD, aE, aC) {
                        return m.map.measure._haversine(aF, aD, aE, aC) * 1000
                    }
                } else {
                    m.map.measure.options.calculateDistance = function(aH, aD, aF, aC) {
                        var aG = ao.fromLeafletCoords(new r.LatLng(aH,aD))
                          , aE = ao.fromLeafletCoords(new r.LatLng(aF,aC));
                        return Math.sqrt((aG.x - aE.x) * (aG.x - aE.x) + (aG.y - aE.y) * (aG.y - aE.y))
                    }
                }
            }
            if (!aB || aB.indexOf("degree") === 0) {
                aB = "meter"
            }
            if (aB === "meter") {
                m.map.measure.options.labelFunction = function(aG, aF, aC, aE) {
                    var aD = aE / 1000;
                    if (aD > 1000) {
                        return Math.round(aD) + "km"
                    } else {
                        if (aD > 100) {
                            return (Math.round(aD * 10) / 10).toFixed(1) + "km"
                        } else {
                            if (aD > 10) {
                                return (Math.round(aD * 100) / 100).toFixed(2) + "km"
                            } else {
                                if (aD > 1) {
                                    return (Math.round(aD * 2000) / 2).toFixed(1) + "m"
                                } else {
                                    if (aD > 0.1) {
                                        return (Math.round(aD * 20000) / 20).toFixed(2) + "m"
                                    } else {
                                        return (Math.round(aD * 100000) / 100).toFixed(2) + "m"
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                m.map.measure.options.labelFunction = function(aG, aE, aC, aD) {
                    var aF;
                    aF = giscloud.fromMeters(aB, aD);
                    if (aF === null ) {
                        aF = 0
                    }
                    if (aF > 1000) {
                        aF = Math.round(aF)
                    } else {
                        if (aF > 100) {
                            aF = (Math.round(aF * 10) / 10).toFixed(1)
                        } else {
                            if (aF > 10) {
                                aF = (Math.round(aF * 100) / 100).toFixed(2)
                            } else {
                                aF = (Math.round(aF * 1000) / 1000).toFixed(3)
                            }
                        }
                    }
                    switch (aB) {
                    case "foot":
                    case "us survey foot":
                    case "foot_us":
                        return aF + " ft";
                    case "mile":
                        return aF + " mi";
                    case "inch":
                        return aF + " in";
                    case "yard":
                        return aF + " yd";
                    default:
                        return aF + " " + aB
                    }
                }
            }
            m.map.measure.options.tipLabelFunction = function() {
                return this.options.labelFunction(null , null , null , this._current)
            }
        }
        function aq(aD, aF) {
            var aA = m.map, aG = aA.measure.options.calculateDistance, aC = aA.scaleControl, aB = this, aE;
            if (!aC) {
                return
            }
            aC.setPosition("bottomleft");
            if (aD === "degree") {
                aC._update = aC.original_update;
                aC._updateScales = aC.original_updateScales;
                aC.options.metric = aF === "meter";
                aC.options.imperial = aF !== "meter"
            } else {
                aC.options.metric = true;
                aC.options.imperial = false;
                aC._update = function() {
                    var aO = aA.getPixelBounds()
                      , aN = (aO.max.x - aO.min.x) || 1
                      , aJ = aA.getBounds()
                      , aM = aJ._southWest.lat
                      , aL = aJ._northEast.lng
                      , aK = aJ._southWest.lng
                      , aI = aG(aM, aL, aM, aK)
                      , aH = aI / aN * this.options.maxWidth;
                    this._updateScales(aH)
                }
                ;
                if (!aF || aF.indexOf("degree") === 0) {
                    aF = "meter"
                }
                if (aF === aD) {
                    if (aF === "meter") {
                        aC._updateScales = function(aI) {
                            var aH = this._getRoundNum(aI);
                            this._mScale.style.width = this._getScaleWidth(aH / aI) + "px";
                            this._mScale.innerHTML = aH < 1000 ? aH + " m" : (aH / 1000) + " km"
                        }
                    } else {
                        switch (aF) {
                        case "foot":
                        case "us survey foot":
                        case "foot_us":
                            aE = " ft";
                            break;
                        case "mile":
                            aE = " mi";
                            break;
                        case "inch":
                            aE = " in";
                            break;
                        case "yard":
                            aE = " yd";
                            break;
                        default:
                            aE = " " + aF
                        }
                        aC._updateScales = function(aI) {
                            var aH = this._getRoundNum(aI);
                            this._mScale.style.width = this._getScaleWidth(aH / aI) + "px";
                            this._mScale.innerHTML = aH + aE
                        }
                    }
                } else {
                    if (aF === "meter") {
                        aC._updateScales = function(aI) {
                            var aJ = giscloud.toMeters(aD, aI)
                              , aH = this._getRoundNum(aJ);
                            this._mScale.style.width = this._getScaleWidth(aH / aJ) + "px";
                            this._mScale.innerHTML = aH < 1000 ? aH + " m" : (aH / 1000) + " km"
                        }
                    } else {
                        switch (aF) {
                        case "foot":
                        case "us survey foot":
                        case "foot_us":
                            aE = " ft";
                            break;
                        case "mile":
                            aE = " mi";
                            break;
                        case "inch":
                            aE = " in";
                            break;
                        case "yard":
                            aE = " yd";
                            break;
                        default:
                            aE = " " + aF
                        }
                        aC._updateScales = function(aJ) {
                            var aK = giscloud.toMeters(aD, aJ)
                              , aH = giscloud.fromMeters(aF, aK)
                              , aI = this._getRoundNum(aH);
                            this._mScale.style.width = this._getScaleWidth(aI / aH) + "px";
                            this._mScale.innerHTML = aI + aE
                        }
                    }
                }
            }
            aB.parent.loading.done(function() {
                try {
                    aA.removeControl(aC)
                } catch (aH) {}
            })
        }
        function ay(aB, aK, aD) {
            for (var aF = aB.length - 1; aF >= 0; aF--) {
                var aA = aB[aF];
                if (aA.tagName == "source") {
                    var aC = "";
                    var aI = new Array();
                    for (var aJ = 0; aJ < aA.attributes.length; aJ++) {
                        var aL = aA.attributes[aJ].name;
                        if (aL == "id") {
                            aC = aA.attributes[aJ].value
                        }
                        if (aL == "xmin" || aL == "xmax" || aL == "ymin" || aL == "ymax") {
                            aI[aL] = parseFloat(aA.attributes[aJ].value)
                        } else {
                            aI[aL] = aA.attributes[aJ].value
                        }
                    }
                    aK[aC] = aI;
                    aK[aC].tileservers = [];
                    for (var aG = aA.childNodes.length - 1; aG >= 0; aG--) {
                        if (aA.childNodes[aG].tagName == "tileservers") {
                            var aE = aA.childNodes[aG];
                            if (aE.attributes) {
                                for (var aJ = 0; aJ < aE.attributes.length; aJ++) {
                                    if (aE.attributes[aJ].name == "maxzoom") {
                                        aK[aC].maxzoom = parseInt(aE.attributes[aJ].value)
                                    }
                                    if (aE.attributes[aJ].name == "minzoom") {
                                        aK[aC].minzoom = parseInt(aE.attributes[aJ].value)
                                    }
                                    if (aE.attributes[aJ].name == "attribution") {
                                        aK[aC].attribution = aE.attributes[aJ].value
                                    }
                                }
                            }
                            for (var aH = aA.childNodes[aG].childNodes.length - 1; aH >= 0; aH--) {
                                var aE = aA.childNodes[aG].childNodes[aH];
                                if (aE.attributes) {
                                    for (var aJ = 0; aJ < aE.attributes.length; aJ++) {
                                        if (aE.attributes[aJ].name == "value") {
                                            aK[aC].tileservers.push(aE.attributes[aJ].value)
                                        }
                                    }
                                }
                            }
                        }
                        if (aA.childNodes[aG].tagName == "tilepath") {
                            var aE = aA.childNodes[aG];
                            if (aE.attributes) {
                                for (var aJ = 0; aJ < aE.attributes.length; aJ++) {
                                    if (aE.attributes[aJ].name == "value") {
                                        aK[aC].tilepath = aE.attributes[aJ].value
                                    }
                                }
                            }
                        }
                    }
                    aD.push(aK[aC])
                }
            }
        }
        function an(aE, aD) {
            for (var aB = aE.length - 1; aB >= 0; aB--) {
                var aG = aE[aB];
                if (aG.tagName == "option") {
                    var aC = "";
                    for (var aA = 0; aA < aG.attributes.length; aA++) {
                        var aF = aG.attributes[aA].name;
                        if (aF == "name") {
                            aC = aG.attributes[aA].value
                        }
                        if (aF == "value") {
                            aD[aC] = aG.attributes[aA].value
                        }
                    }
                }
            }
        }
        var ak;
        var av = 1;
        function O(aF, aI, aH, aB, aG) {
            var aJ, aC, aA, aD, aE;
            ak = [];
            for (aC = aF.length - 1; aC >= 0; aC--) {
                aD = aF[aC];
                if (aD.tagName == "layer") {
                    aE = {
                        id: "",
                        alpha: 1,
                        visible: true
                    };
                    if (aD.attributes) {
                        for (aA = 0; aA < aD.attributes.length; aA++) {
                            if (aD.attributes[aA].name === "id") {
                                aE.id = aD.attributes[aA].value
                            } else {
                                if (aD.attributes[aA].name === "src") {
                                    aE.src = aD.attributes[aA].value
                                } else {
                                    if (aD.attributes[aA].name === "timestamp") {
                                        aE.timestamp = aD.attributes[aA].value
                                    } else {
                                        if (aD.attributes[aA].name === "offset") {
                                            aE.offset = aD.attributes[aA].value
                                        } else {
                                            if (aD.attributes[aA].name === "precision") {
                                                aE.precision = aD.attributes[aA].value * 1
                                            } else {
                                                if (aD.attributes[aA].name === "dynamic") {
                                                    aE.dynamic = aD.attributes[aA].value * 1
                                                } else {
                                                    if (aD.attributes[aA].name === "visible") {
                                                        aE.visible = aD.attributes[aA].value === "true"
                                                    } else {
                                                        if (aD.attributes[aA].name === "alpha") {
                                                            aE.alpha = parseInt(aD.attributes[aA].value) / 100
                                                        } else {
                                                            if (aD.attributes[aA].name === "type") {
                                                                aE.type = aD.attributes[aA].value
                                                            } else {
                                                                if (aD.attributes[aA].name === "format") {
                                                                    aE.format = aD.attributes[aA].value
                                                                } else {
                                                                    if (aD.attributes[aA].name === "map") {
                                                                        aE.map = aD.attributes[aA].value
                                                                    } else {
                                                                        if (aD.attributes[aA].name === "level") {
                                                                            aE.level = parseInt(aD.attributes[aA].value)
                                                                        } else {
                                                                            if (aD.attributes[aA].name === "fromlevel") {
                                                                                aE.fromlevel = parseInt(aD.attributes[aA].value)
                                                                            } else {
                                                                                if (aD.attributes[aA].name === "tolevel") {
                                                                                    aE.tolevel = parseInt(aD.attributes[aA].value)
                                                                                } else {
                                                                                    if (aD.attributes[aA].name === "tooltip") {
                                                                                        aE.tooltip = aD.attributes[aA].value
                                                                                    } else {
                                                                                        if (aD.attributes[aA].name === "hidegeometry") {
                                                                                            aE.hiddenGeometry = true
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    aE.features = [];
                    for (aA = 0; aA < aD.childNodes.length; aA++) {
                        if (aD.childNodes[aA].tagName == "features") {
                            S(aD.childNodes[aA].childNodes, aE)
                        }
                    }
                    aE.xmin = aI[aE.src].xmin;
                    aE.ymin = aI[aE.src].ymin;
                    aE.xmax = aI[aE.src].xmax;
                    aE.ymax = aI[aE.src].ymax;
                    ak.push(aE)
                }
            }
            if (flashnavigator.newLabelingMode) {
                aJ = {};
                ak = ak.filter(function(aK) {
                    if (aK.id.indexOf("ll") !== -1) {
                        aJ[aK.id.replace("ll", "l")] = aK;
                        return false
                    }
                    return true
                })
            }
            if (aJ) {
                labelLayerKeys = Object.keys(aJ);
                for (aC = 0; aC < labelLayerKeys.length; ++aC) {
                    for (aA = 0; aA < ak.length; ++aA) {
                        if (labelLayerKeys[aC] !== ak[aA].id) {
                            continue
                        } else {
                            ak[aA].labelLayerData = aJ[labelLayerKeys[aC]];
                            ak[aA].styles = aJ[labelLayerKeys[aC]].features;
                            ak[aA].attribute = aJ[labelLayerKeys[aC]].labels;
                            ak[aA].timestamp = aJ[labelLayerKeys[aC]].timestamp;
                            break
                        }
                    }
                }
            }
        }
        function am(aB, aA) {
            if (aA.id === "layer0" && aB.id === aA.id) {
                return true
            }
            if (aA.id === aB.id) {
                if (aA.timestamp !== aB.timestamp || aA.xmin !== aB.xmin || aA.xmax !== aB.xmax || aA.ymin !== aB.ymin || aA.ymax !== aB.ymax || aA.hiddenGeometry !== aB.hiddenGeometry || aA.features.length !== aB.features.length) {
                    giscloud.util.mediator.publish("renderer/dropCache");
                    giscloud.util.mediator.publish("labels/clear", aA.id)
                }
            }
            if (aA.id !== aB.id || aA.timestamp !== aB.timestamp || aA.xmin !== aB.xmin || aA.xmax !== aB.xmax || aA.ymin !== aB.ymin || aA.ymax !== aB.ymax || aA.hiddenGeometry !== aB.hiddenGeometry || aA.features.length !== aB.features.length) {
                return false
            }
            return true
        }
        function V(aL, aX, aK, aN) {
            var aS, aR, aZ, aV, aH, aB, aT, aJ, aO, aC, aA, aY, aE, aD, aW;
            if (!aK.length) {
                g = null 
            }
            for (aS = 0; aS < ak.length; aS++) {
                ak[aS].oldLayer = null 
            }
            if (flashnavigator.newLabelingMode && g && aK.length) {
                ak.push(g)
            }
            for (aS = 0; aS < aK.length; aS++) {
                aB = aK[aS];
                aT = true;
                for (aR = 0; aR < ak.length; aR++) {
                    aZ = ak[aR];
                    if (am(aZ, aB.layer_info)) {
                        aT = false;
                        aZ.oldLayer = aB;
                        aB.options.tooltip = aZ.tooltip;
                        break
                    }
                }
                if (aT) {
                    if (aB.isTileLayer) {
                        d--
                    }
                    if (aB._updateLayerCount) {
                        aB._updateLayerCount(true)
                    }
                    if (aB.cleanUpOnRemove) {
                        if (aB.cleanUpOnRemove(m.map)) {
                            d--
                        }
                    } else {
                        m.map.removeLayer(aB)
                    }
                }
            }
            aK.length = 0;
            aJ = 0;
            for (aS = 0; aS < ak.length; aS++) {
                aZ = ak[aS];
                if (!aZ.dontLoad) {
                    if (aZ.oldLayer) {
                        aK[aJ] = aZ.oldLayer;
                        aJ++
                    } else {
                        aK[aJ++] = null 
                    }
                }
            }
            aJ = 0;
            if (flashnavigator.newLabelingMode) {
                if (!g) {
                    g = new LabelLayer({
                        id: "layer0"
                    });
                    giscloud.util.mediator.deleteChannel("tile/loaded");
                    giscloud.util.mediator.makeChannel("tile/loaded", true);
                    giscloud.util.mediator.subscribe("tile/loaded", g.onTileLoaded.bind(g));
                    giscloud.util.mediator.deleteChannel("labels/hide");
                    giscloud.util.mediator.makeChannel("labels/hide", true);
                    giscloud.util.mediator.subscribe("labels/hide", g.hideLabels.bind(g));
                    giscloud.util.mediator.deleteChannel("labels/show");
                    giscloud.util.mediator.makeChannel("labels/show", true);
                    giscloud.util.mediator.subscribe("labels/show", g.showLabels.bind(g));
                    giscloud.util.mediator.deleteChannel("labels/rerender");
                    giscloud.util.mediator.makeChannel("labels/rerender", true);
                    giscloud.util.mediator.subscribe("labels/rerender", g.rerender.bind(g));
                    giscloud.util.mediator.deleteChannel("labels/clear");
                    giscloud.util.mediator.makeChannel("labels/clear", true);
                    giscloud.util.mediator.subscribe("labels/clear", g.clear.bind(g));
                    aK.push(g)
                }
            }
            aO = false;
            aC = false;
            aA = 0;
            aY = {};
            aJ = 0;
            var aP = (u.location.protocol === "https:") ? "https:" : "http:";
            for (aS = 0; aS < ak.length; aS++) {
                aV = ak[aS];
                if (aV.id === "layer0") {
                    continue
                }
                if (aV.visible) {
                    sourcesMap[aV.src].visible = true
                }
                if (!flashnavigator.hasCanvas) {
                    aV.alpha = 100
                }
                aH = sourcesMap[aV.src].src;
                if (aH == "osm" || aH == "croatianq" || aH == "gmaps" || aH == "gmaps_traffic" || aH == "mapbox.streets" || aH == "mapbox.light" || aH == "mapbox.dark" || aH == "mapbox.satellite" || aH == "mapbox.satellite-streets" || aH == "gmaps_sat" || aH == "gmaps_terr" || aH == "gmaps_hybrid" || aH == "bing" || aH == "bing_sat" || aH == "bing_hyb" || aH == "grajs" || aH == "maps_for_free_relief" || aH == "mapquest-osm" || aH == "mapquest-oarial" || aH == "cloudmade_gray" || aH == "cloudmade_night" || aH == "tilejson" || aH == "here.satellite" || aH == "here.streets") {
                    aO = true
                }
                if (aK[aJ]) {
                    aC = aK[aJ].isGroupLayer;
                    aJ++;
                    continue
                }
                var aG = "bMXIdiBbYTCR4O14WSlN";
                var aU = "PRnjzWuHGMCagCLGWURjAQ";
                if (aV.type == "raster") {
                    aE = {
                        noWrap: true,
                        visible: aV.visible,
                        opacity: aV.alpha,
                        maxZoom: aN
                    };
                    if (!aV.format) {
                        aV.format = "jpg"
                    }
                    if (aV.level) {
                        aE.minZoom = aE.maxZoom = aV.level
                    }
                    if (aV.fromlevel) {
                        aE.minZoom = aV.fromlevel
                    }
                    if (aV.tolevel && aV.tolevel < aN) {
                        aE.maxZoom = aV.tolevel
                    }
                    var aI = giscloud.tile_token + ":";
                    aI = "";
                    aD = new fnRasterLayer(H + "r/" + aI + aV.timestamp + "/" + aX + "/" + aV.id + "/{z}/{x}/{y}." + aV.format,aE);
                    aD.id = aV.id;
                    aD.source = sourcesMap[aV.src]
                } else {
                    if (aH == "osm") {
                        aD = new fnBasemapLayer((u.location.protocol === "https:" ? "https:" : "http:") + "//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{
                            maxZoom: 18,
                            src: aH,
                            noWrap: true,
                            visible: aV.visible,
                            opacity: aV.alpha,
                            attribution: (aV.visible ? "<a href='http://www.openstreetmap.org/' target='_blank'>OpenStreetMap</a>" : "")
                        });
                        aD.id = aV.id;
                        aD.source = sourcesMap[aV.src]
                    } else {
                        if (aH == "cloudmade_night") {
                            aD = new fnBasemapLayer("http://{s}.tile.cloudmade.com/{key}/65053/256/{z}/{x}/{y}.png",{
                                maxZoom: 18,
                                noWrap: true,
                                visible: aV.visible,
                                opacity: aV.alpha,
                                attribution: (aV.visible ? "Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2011 CloudMade" : ""),
                                key: "d962ac9332ae40b29b77f41aa3b67ca9"
                            });
                            aD.id = aV.id;
                            aD.source = sourcesMap[aV.src]
                        } else {
                            if (aH == "mapbox.streets" || aH == "mapquest-osm") {
                                aD = new fnBasemapLayer(aP + "//api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}[scale]?access_token=pk.eyJ1IjoiZ2lzLWNsb3VkIiwiYSI6ImNpcWF4enZwdjAwOHZpNm0yZGwzNDl2eTkifQ.2nnP_6MoDn0Ig-H4Ovrgug",{
                                    maxZoom: 20,
                                    noWrap: true,
                                    visible: aV.visible,
                                    opacity: aV.alpha,
                                    attribution: (aV.visible ? "&copy; <a href='https://www.mapbox.com/about/maps/' target='_blank'>Mapbox</a> &copy; <a href='http://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a>" : "")
                                });
                                aD.id = aV.id;
                                if (u.devicePixelRatio === 1) {
                                    aD._url[0] = aD._url[0].replace("[scale]", "")
                                } else {
                                    aD._url[0] = aD._url[0].replace("[scale]", "@2x");
                                    aD.options.tileScaleFactor = 2
                                }
                                aD.source = sourcesMap[aV.src]
                            } else {
                                if (aH == "mapbox.light") {
                                    aD = new fnBasemapLayer(aP + "//api.mapbox.com/styles/v1/mapbox/light-v9/tiles/256/{z}/{x}/{y}[scale]?access_token=pk.eyJ1IjoiZ2lzLWNsb3VkIiwiYSI6ImNpcWF4emwxeDAwODNoeG5zcXV6MmRudXUifQ.HVmcXtwpFADw_8GV9vRdhA",{
                                        maxZoom: 20,
                                        noWrap: true,
                                        visible: aV.visible,
                                        opacity: aV.alpha,
                                        attribution: (aV.visible ? "&copy; <a href='https://www.mapbox.com/about/maps/' target='_blank'>Mapbox</a> &copy; <a href='http://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a>" : "")
                                    });
                                    aD.id = aV.id;
                                    if (u.devicePixelRatio === 1) {
                                        aD._url[0] = aD._url[0].replace("[scale]", "")
                                    } else {
                                        aD._url[0] = aD._url[0].replace("[scale]", "@2x");
                                        aD.options.tileScaleFactor = 2
                                    }
                                    aD.source = sourcesMap[aV.src]
                                } else {
                                    if (aH == "mapbox.dark") {
                                        aD = new fnBasemapLayer(aP + "//api.mapbox.com/styles/v1/mapbox/dark-v9/tiles/256/{z}/{x}/{y}[scale]?access_token=pk.eyJ1IjoiZ2lzLWNsb3VkIiwiYSI6ImNpcjJtZm1ycTAwMDRpNG05M2EzNHlkNHYifQ.F2Ewzr375JuR0qKVtgTXYQ",{
                                            maxZoom: 20,
                                            noWrap: true,
                                            visible: aV.visible,
                                            opacity: aV.alpha,
                                            attribution: (aV.visible ? "&copy; <a href='https://www.mapbox.com/about/maps/' target='_blank'>Mapbox</a> &copy; <a href='http://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a>" : "")
                                        });
                                        aD.id = aV.id;
                                        if (u.devicePixelRatio === 1) {
                                            aD._url[0] = aD._url[0].replace("[scale]", "")
                                        } else {
                                            aD._url[0] = aD._url[0].replace("[scale]", "@2x");
                                            aD.options.tileScaleFactor = 2
                                        }
                                        aD.source = sourcesMap[aV.src]
                                    } else {
                                        if (aH == "mapbox.satellite" || aH == "mapquest-oarial") {
                                            aD = new fnBasemapLayer(aP + "//api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/256/{z}/{x}/{y}[scale]?access_token=pk.eyJ1IjoiZ2lzLWNsb3VkIiwiYSI6ImNpcWNhcmxhZjAwNXdpMm5odjN2Y2xjd3oifQ.Xkm-8IqET75Nbv6pJdcCyg",{
                                                maxZoom: 20,
                                                noWrap: true,
                                                visible: aV.visible,
                                                opacity: aV.alpha,
                                                attribution: (aV.visible ? "&copy; <a href='https://www.mapbox.com/about/maps/' target='_blank'>Mapbox</a> &copy; <a href='http://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a>" : "")
                                            });
                                            aD.id = aV.id;
                                            if (u.devicePixelRatio === 1) {
                                                aD._url[0] = aD._url[0].replace("[scale]", "")
                                            } else {
                                                aD._url[0] = aD._url[0].replace("[scale]", "@2x");
                                                aD.options.tileScaleFactor = 2
                                            }
                                            aD.source = sourcesMap[aV.src]
                                        } else {
                                            if (aH == "mapbox.satellite-streets") {
                                                aD = new fnBasemapLayer(aP + "//api.mapbox.com/styles/v1/mapbox/satellite-streets-v9/tiles/256/{z}/{x}/{y}[scale]?access_token=pk.eyJ1IjoiZ2lzLWNsb3VkIiwiYSI6ImNpcWNhczBhNDAwNXhpMm5oYW9sNWNkM2sifQ.PgE89DHu-8GqOvQyOMg3oQ",{
                                                    maxZoom: 20,
                                                    noWrap: true,
                                                    visible: aV.visible,
                                                    opacity: aV.alpha,
                                                    attribution: (aV.visible ? "&copy; <a href='https://www.mapbox.com/about/maps/' target='_blank'>Mapbox</a> &copy; <a href='http://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a>" : "")
                                                });
                                                aD.id = aV.id;
                                                if (u.devicePixelRatio === 1) {
                                                    aD._url[0] = aD._url[0].replace("[scale]", "")
                                                } else {
                                                    aD._url[0] = aD._url[0].replace("[scale]", "@2x");
                                                    aD.options.tileScaleFactor = 2
                                                }
                                                aD.source = sourcesMap[aV.src]
                                            } else {
                                                if (aH == "here.satellite") {
                                                    aD = new fnBasemapLayer(aP + "//2.aerial.maps.cit.api.here.com/maptile/2.1/maptile/newest/satellite.day/{z}/{x}/{y}/256/png8?app_id=" + aG + "&app_code=" + aU,{
                                                        maxZoom: 20,
                                                        noWrap: true,
                                                        visible: aV.visible,
                                                        opacity: aV.alpha,
                                                        attribution: (aV.visible ? "&copy; <a href='https://developer.here.com/' target='_blank'>HERE</a> " : "")
                                                    });
                                                    aD.id = aV.id;
                                                    aD.source = sourcesMap[aV.src]
                                                } else {
                                                    if (aH == "here.streets") {
                                                        aD = new fnBasemapLayer(aP + "//1.base.maps.cit.api.here.com/maptile/2.1/maptile/newest/normal.day/{z}/{x}/{y}/256/png8?app_id=" + aG + "&app_code=" + aU,{
                                                            maxZoom: 20,
                                                            noWrap: true,
                                                            visible: aV.visible,
                                                            opacity: aV.alpha,
                                                            attribution: (aV.visible ? "&copy; <a href='https://developer.here.com/' target='_blank'>HERE</a> " : "")
                                                        });
                                                        aD.id = aV.id;
                                                        aD.source = sourcesMap[aV.src]
                                                    } else {
                                                        if (aH == "croatianq") {
                                                            aD = new fnBasemapLayer("http://dhwov6czq254q.cloudfront.net/gettile.php?t=tilestache88/{z}/{x}/{y}.png?v=1",{
                                                                maxZoom: 18,
                                                                noWrap: true,
                                                                visible: aV.visible,
                                                                opacity: aV.alpha,
                                                                attribution: (aV.visible ? " &copy; <a href='http://www.navteq.com' target='_blank'>NAVTEQ</a>" : "")
                                                            });
                                                            aD.id = aV.id;
                                                            aD.source = sourcesMap[aV.src]
                                                        } else {
                                                            if (aH == "italia") {
                                                                aD = new fnBasemapLayer("http://webgis.regione.sardegna.it/tms/ortofoto2006_EPSG3003/{z}/{x}/{y}.jpg",{
                                                                    maxZoom: 18,
                                                                    noWrap: true,
                                                                    visible: aV.visible,
                                                                    opacity: aV.alpha,
                                                                    continuousWorld: true,
                                                                    attribution: (aV.visible ? " &copy; <a href='http://www.italia' target='_blank'>NAVTEQ</a>" : "")
                                                                });
                                                                aD.id = aV.id;
                                                                aD.source = sourcesMap[aV.src]
                                                            } else {
                                                                if (aH == "grajs") {
                                                                    aD = new fnBasemapLayer("http://dhwov6czq254q.cloudfront.net/gettile.php?t=tilestache17403/{z}/{x}/{y}.png",{
                                                                        maxZoom: 18,
                                                                        noWrap: true,
                                                                        visible: aV.visible,
                                                                        opacity: aV.alpha,
                                                                        attribution: (aV.visible ? " &copy; <a href='http://www.grajsmape.com' target='_blank'>Grajs Mape</a>" : "")
                                                                    });
                                                                    aD.id = aV.id;
                                                                    aD.source = sourcesMap[aV.src]
                                                                } else {
                                                                    if (aH == "maps_for_free_relief") {
                                                                        aD = new fnBasemapLayer("http://maps-for-free.com/layer/relief/z{z}/row{y}/{z}_{x}-{y}.jpg",{
                                                                            maxZoom: 11,
                                                                            noWrap: true,
                                                                            visible: aV.visible,
                                                                            opacity: aV.alpha,
                                                                            attribution: (aV.visible ? " <a href='http://www.maps-for-free.com/html/about.html' target='_blank'>Maps-For-Free Relief</a>" : "")
                                                                        });
                                                                        aD.id = aV.id;
                                                                        aD.source = sourcesMap[aV.src]
                                                                    } else {
                                                                        if (aH == "gmaps") {
                                                                            aD = new fnGoogleLayer({
                                                                                maxZoom: 22,
                                                                                noWrap: true,
                                                                                visible: aV.visible,
                                                                                opacity: aV.alpha,
                                                                                google_map_type: "ROADMAP"
                                                                            });
                                                                            aD.id = aV.id;
                                                                            aD.source = sourcesMap[aV.src]
                                                                        } else {
                                                                            if (aH == "gmaps_traffic") {
                                                                                aD = new fnGoogleLayer({
                                                                                    maxZoom: 22,
                                                                                    noWrap: true,
                                                                                    visible: aV.visible,
                                                                                    opacity: aV.alpha,
                                                                                    google_map_type: "ROADMAP",
                                                                                    google_map_overlay_type: "TRAFFIC"
                                                                                });
                                                                                aD.id = aV.id;
                                                                                aD.source = sourcesMap[aV.src]
                                                                            } else {
                                                                                if (aH == "cloudmade_gray") {
                                                                                    aD = new fnGoogleLayer({
                                                                                        maxZoom: 22,
                                                                                        noWrap: true,
                                                                                        visible: aV.visible,
                                                                                        opacity: aV.alpha,
                                                                                        google_map_type: "ROADMAP",
                                                                                        google_style: "gray"
                                                                                    });
                                                                                    aD.id = aV.id;
                                                                                    aD.source = sourcesMap[aV.src]
                                                                                } else {
                                                                                    if (aH == "gmaps_sat") {
                                                                                        aD = new fnGoogleLayer({
                                                                                            maxZoom: 22,
                                                                                            noWrap: true,
                                                                                            visible: aV.visible,
                                                                                            opacity: aV.alpha,
                                                                                            google_map_type: "SATELLITE"
                                                                                        });
                                                                                        aD.id = aV.id;
                                                                                        aD.source = sourcesMap[aV.src]
                                                                                    } else {
                                                                                        if (aH == "gmaps_terr") {
                                                                                            aD = new fnGoogleLayer({
                                                                                                maxZoom: 15,
                                                                                                noWrap: true,
                                                                                                visible: aV.visible,
                                                                                                opacity: aV.alpha,
                                                                                                google_map_type: "TERRAIN"
                                                                                            });
                                                                                            aD.id = aV.id;
                                                                                            aD.source = sourcesMap[aV.src]
                                                                                        } else {
                                                                                            if (aH == "gmaps_hybrid") {
                                                                                                aD = new fnGoogleLayer({
                                                                                                    maxZoom: 20,
                                                                                                    noWrap: true,
                                                                                                    visible: aV.visible,
                                                                                                    opacity: aV.alpha,
                                                                                                    google_map_type: "HYBRID"
                                                                                                });
                                                                                                aD.id = aV.id;
                                                                                                aD.source = sourcesMap[aV.src]
                                                                                            } else {
                                                                                                if (aH == "bing") {
                                                                                                    aD = new fnQuadLayer((u.location.protocol == "https:" ? "https://t{s}.ssl.ak.dynamic.tiles.virtualearth.net/comp/ch/{q}?mkt=en-us&it=G,VE,BX,L,LA&shading=hill&n=z" : "http://ecn.t{s}.tiles.virtualearth.net/tiles/r{q}?g=811&mkt=en-us&lbl=l1&stl=h&shading=hill&n=z"),{
                                                                                                        minZoom: 1,
                                                                                                        maxZoom: 19,
                                                                                                        noWrap: true,
                                                                                                        visible: aV.visible,
                                                                                                        subdomains: "0123",
                                                                                                        opacity: aV.alpha,
                                                                                                        attribution: (aV.visible ? "<a href='http://maps.bing.com/' target='_blank'>Bing Maps</a>&nbsp;&copy; NAVTEQ, &copy; Microsoft Corporation" : "")
                                                                                                    });
                                                                                                    aD.id = aV.id;
                                                                                                    aD.source = sourcesMap[aV.src];
                                                                                                    m.map.options.minZoom = 1
                                                                                                } else {
                                                                                                    if (aH == "bing_sat") {
                                                                                                        aD = new fnQuadLayer((u.location.protocol == "https:" ? "https://t{s}.ssl.ak.dynamic.tiles.virtualearth.net/comp/ch/{q}?mkt=en-us&it=A&shading=hill&n=z" : "http://ak.t{s}.tiles.virtualearth.net/tiles/a{q}?g=1457&n=z"),{
                                                                                                            minZoom: 1,
                                                                                                            maxZoom: 19,
                                                                                                            noWrap: true,
                                                                                                            visible: aV.visible,
                                                                                                            subdomains: "0123",
                                                                                                            opacity: aV.alpha,
                                                                                                            attribution: (aV.visible ? "<a href='http://maps.bing.com/' target='_blank'>Bing Maps Satellite</a>&nbsp;&copy; Microsoft Corporation" : "")
                                                                                                        });
                                                                                                        aD.id = aV.id;
                                                                                                        aD.source = sourcesMap[aV.src];
                                                                                                        m.map.options.minZoom = 1
                                                                                                    } else {
                                                                                                        if (aH == "bing_hyb") {
                                                                                                            aD = new fnQuadLayer((u.location.protocol == "https:" ? "https://ecn.t{s}.tiles.virtualearth.net/tiles/h{q}?g=1457&n=z" : "http://ak.t{s}.tiles.virtualearth.net/tiles/h{q}?g=1457&n=z"),{
                                                                                                                minZoom: 1,
                                                                                                                maxZoom: 19,
                                                                                                                noWrap: true,
                                                                                                                visible: aV.visible,
                                                                                                                subdomains: "0123",
                                                                                                                opacity: aV.alpha,
                                                                                                                attribution: (aV.visible ? "<a href='http://maps.bing.com/' target='_blank'>Bing Maps Hybrid</a>&nbsp;&copy; Microsoft Corporation" : "")
                                                                                                            });
                                                                                                            aD.id = aV.id;
                                                                                                            aD.source = sourcesMap[aV.src];
                                                                                                            m.map.options.minZoom = 1
                                                                                                        } else {
                                                                                                            if (aH == "wms" || (sourcesMap[aV.src].tilepath || sourcesMap[aV.src].tilepath == "")) {
                                                                                                                aD = new fnWmsLayer((sourcesMap[aV.src].tilepath == "" ? sourcesMap[aV.src].tileservers : sourcesMap[aV.src].tileservers[0] + sourcesMap[aV.src].tilepath),{
                                                                                                                    maxZoom: aN,
                                                                                                                    noWrap: true,
                                                                                                                    visible: aV.visible,
                                                                                                                    subdomains: "0123",
                                                                                                                    opacity: aV.alpha,
                                                                                                                    gctms: sourcesMap[aV.src].src === "tms"
                                                                                                                });
                                                                                                                aD.id = aV.id;
                                                                                                                aD.source = sourcesMap[aV.src]
                                                                                                            } else {
                                                                                                                if (aH == "tilejson") {
                                                                                                                    var aQ = sourcesMap[aV.src];
                                                                                                                    aD = new fnLayer(aQ.tileservers,{
                                                                                                                        maxZoom: aQ.maxzoom,
                                                                                                                        noWrap: true,
                                                                                                                        visible: aV.visible,
                                                                                                                        opacity: aV.alpha,
                                                                                                                        attribution: aQ.attribution
                                                                                                                    });
                                                                                                                    aD.id = aV.id;
                                                                                                                    aD.source = aQ
                                                                                                                } else {
                                                                                                                    var aF, aM = flashnavigator.hasCanvas && (aL && aL.parent && aL.parent.options && aL.parent.options.MAP_ENGINE_MODE == "2");
                                                                                                                    aL.isUsingMapEngineGroupedLayers = aM;
                                                                                                                    if (flashnavigator.newLabelingMode && aV.labels && aV.dontLoad && aV.id.substr(0, 2) == "ll") {
                                                                                                                        aY[aV.id.substr(1)] = {
                                                                                                                            attribute: aV.labels,
                                                                                                                            type: aV.labelsType,
                                                                                                                            features: aV.features
                                                                                                                        };
                                                                                                                        continue
                                                                                                                    }
                                                                                                                    aF = {
                                                                                                                        mid: aV.map || aX,
                                                                                                                        id: aV.id,
                                                                                                                        modified: aV.timestamp,
                                                                                                                        lmap: m.map,
                                                                                                                        maxZoom: aN,
                                                                                                                        offset: aV.offset,
                                                                                                                        visible: aV.visible,
                                                                                                                        precision: aV.precision,
                                                                                                                        cluster: aV.cluster,
                                                                                                                        dynamic: aV.dynamic,
                                                                                                                        opacity: aV.alpha,
                                                                                                                        tooltip: aV.tooltip,
                                                                                                                        dontLoad: aV.dontLoad,
                                                                                                                        source: sourcesMap[aV.src]
                                                                                                                    };
                                                                                                                    if (aM) {
                                                                                                                        aD = new fnTileLayerGroup(aF)
                                                                                                                    } else {
                                                                                                                        aD = new fnTileLayer(aF)
                                                                                                                    }
                                                                                                                    aD.labelData = aV;
                                                                                                                    if (g) {
                                                                                                                        g.updateLayerDescriptor(aD.id, aV)
                                                                                                                    }
                                                                                                                    if (layers_feature_filter[aV.id] && aD.setFeatureFilter) {
                                                                                                                        aD.setFeatureFilter(layers_feature_filter[aV.id])
                                                                                                                    }
                                                                                                                    if (!aD.tileLayer) {
                                                                                                                        aD.isTileLayer = true
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                aD.features = aV.features;
                aD.has_icon = aV.has_icon;
                aD.layer_info = aV;
                aD.should_add = true;
                aK[aJ++] = aD;
                aC = aD.isRootLayer
            }
            if (aO) {
                m.map.options.crs = r.CRS.EPSG3857
            } else {
                m.map.options.crs = r.CRS.EPSG4326
            }
            for (aS = 0; aS < aK.length; aS++) {
                if (aY[aK[aS].id]) {
                    aK[aS].labels = aY[aK[aS].id]
                }
                if (aK[aS].options.maxZoom > aN) {
                    aK[aS].options.maxZoom = aN
                }
            }
            if (g) {
                g.layers = aK.filter(function(a0) {
                    return a0.id !== "layer0"
                }).reduce(function(a0, a1) {
                    a0[a1.id] = a1;
                    return a0
                }, {});
                giscloud.util.mediator.publish("labelRenderer/dropCache");
                giscloud.util.mediator.publish("labels/rerender")
            }
            av = aN
        }
        function S(aE, aB) {
            aB.features = [];
            for (var aF = 0; aF < aE.length; aF++) {
                var aD = aE[aF];
                if (aD.tagName != "feature") {
                    continue
                }
                var aH = {};
                if (aD.attributes) {
                    for (var aA = 0; aA < aD.attributes.length; aA++) {
                        if (aD.attributes[aA].name == "icon" || aD.attributes[aA].name == "hatchurl" || aD.attributes[aA].name == "hatchgalleryurl") {
                            aH.icon = aD.attributes[aA].value;
                            aB.has_icon = true
                        } else {
                            if (aD.attributes[aA].name == "outline") {
                                aH.outline = aD.attributes[aA].value
                            } else {
                                if (aD.attributes[aA].name == "color") {
                                    aH.color = aD.attributes[aA].value
                                } else {
                                    if (aD.attributes[aA].name == "strokecolor") {
                                        aH.strokecolor = aD.attributes[aA].value
                                    } else {
                                        if (aD.attributes[aA].name == "innerstrokecolor") {
                                            aH.innerstrokecolor = aD.attributes[aA].value
                                        } else {
                                            if (aD.attributes[aA].name == "fillcolor") {
                                                aH.fillcolor = aD.attributes[aA].value
                                            } else {
                                                if (aD.attributes[aA].name == "linewidth") {
                                                    aH.linewidth = aD.attributes[aA].value * 1
                                                } else {
                                                    if (aD.attributes[aA].name == "innerlinewidth") {
                                                        aH.innerlinewidth = aD.attributes[aA].value * 1
                                                    } else {
                                                        if (aD.attributes[aA].name == "width") {
                                                            aH.width = aD.attributes[aA].value * 1
                                                        } else {
                                                            if (aD.attributes[aA].name == "anchor") {
                                                                aH.anchor = aD.attributes[aA].value
                                                            } else {
                                                                if (aD.attributes[aA].name == "dx") {
                                                                    aH.dx = aD.attributes[aA].value * 1
                                                                } else {
                                                                    if (aD.attributes[aA].name == "dy") {
                                                                        aH.dy = aD.attributes[aA].value * 1
                                                                    } else {
                                                                        if (aD.attributes[aA].name == "type") {
                                                                            aH.type = aD.attributes[aA].value
                                                                        } else {
                                                                            if (aD.attributes[aA].name == "text" || aD.attributes[aA].name == "label") {
                                                                                if (flashnavigator.newLabelingMode) {
                                                                                    aH.label = aD.attributes[aA].value.toLowerCase();
                                                                                    aB.labels = aB.labels || {};
                                                                                    aB.labels[aH.label] = 1;
                                                                                    aB.labelsType = aD.attributes[aA].name;
                                                                                    aB.dontLoad = true
                                                                                }
                                                                            } else {
                                                                                if (aD.attributes[aA].name == "clustering") {
                                                                                    aH.clustering = parseInt(aD.attributes[aA].value)
                                                                                } else {
                                                                                    if (aD.attributes[aA].name == "fontname") {
                                                                                        aH.fontname = aD.attributes[aA].value
                                                                                    } else {
                                                                                        if (aD.attributes[aA].name == "query") {
                                                                                            aH.expression = aD.attributes[aA].value
                                                                                        } else {
                                                                                            if (aD.attributes[aA].name == "querylabel") {
                                                                                                aH.expressionLabel = aD.attributes[aA].value
                                                                                            } else {
                                                                                                if (aD.attributes[aA].name == "fontsize") {
                                                                                                    aH.fontsize = parseInt(aD.attributes[aA].value)
                                                                                                } else {
                                                                                                    if (aD.attributes[aA].name == "dashed") {
                                                                                                        aH.dashed = aD.attributes[aA].value;
                                                                                                        if (aH.dashed) {
                                                                                                            aH.dashed = aH.dashed.split(",");
                                                                                                            for (var aC = 0; aC < aH.dashed.length; aC++) {
                                                                                                                aH.dashed[aC] *= 1
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        if (aD.attributes[aA].name === "style") {
                                                                                                            aH.styleName = aD.attributes[aA].value
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (aH.label) {
                    aB.labelsType = aH.type
                }
                aB.features.unshift(aH)
            }
            if (aB.labels) {
                var aG = [];
                for (var aC in aB.labels) {
                    aG.push(aC)
                }
                aB.labels = aG.join(",")
            }
        }
        Z = [];
        function au(aC, aB) {
            if (!Z[aC]) {
                return
            }
            for (var aA = 0; aA < Z[aC].length; aA++) {
                Z[aC][aA](aB)
            }
        }
        var P = 0;
        m.map.on("dragstart", function() {
            P = 1
        });
        m.map.on("dragend", function() {
            P = 0
        });
        function ae(aB) {
            var aA = m.map.getPixelBounds();
            return {
                x: (aA.min.x + aB.layerPoint.x + m.map._mapPane._leaflet_pos.x) / 256,
                y: (aA.min.y + aB.layerPoint.y + m.map._mapPane._leaflet_pos.y) / 256,
                containerPoint: aB.containerPoint
            }
        }
        var ap;
        function T(aJ, aB, aF) {
            if (!F || !m.map._layers || m.map._layers.length == 0) {
                return 0
            }
            aJ.mp = ae(aJ);
            ap = aJ.mp;
            var aI = Math.floor(aJ.mp.x);
            var aG = Math.floor(aJ.mp.y);
            aJ.offsetX = 256 * (aJ.mp.x - aI);
            aJ.offsetY = 256 * (aJ.mp.y - aG);
            aJ.showMousePointer = 0;
            I = R;
            R = null ;
            var aE = false;
            var aK;
            for (var aA = 0; aA < ar.length; ++aA) {
                var aC = ar[aA].tileLayer || ar[aA];
                if (aC._tilesToLoad && aC._tilesToLoad > 0) {
                    aE = true
                }
                if (aC._tiles && ar[aA].options.visible && aC._tiles[aI + ":" + aG] && aC._tiles[aI + ":" + aG].obj) {
                    aK = aC._tiles[aI + ":" + aG];
                    aJ.currentTile = aK;
                    var aH = aK.obj.parent;
                    aK.layer = ar[aA].id;
                    aK.curLayerObj = ar[aA];
                    var aD = aK.obj.onMouseMove(aJ, aB, aF, ar[aA]);
                    aK.obj.parent = aH;
                    if (aD) {
                        aD._offset = aJ.currentTile._offset[aK.layer];
                        aD.coord = aJ.currentTile.coord;
                        R = aD;
                        aJ.showMousePointer = 1;
                        return !(I && aD.c == I.c)
                    }
                }
            }
            return !aE
        }
        function aw(aB, aC, aD) {
            aD = aD || R;
            if (aD && Z[aC]) {
                var aA = (1 << m.map._zoom);
                var aE = {
                    id: aD.c ? aD.c.replace("_", "||") : "",
                    object: aD
                };
                if (ap) {
                    aE.x = q.xmin + q.max * ap.x / aA;
                    aE.y = q.ymax - q.max * ap.y / aA;
                    if (aD.coord) {
                        aE.bounds = {
                            xmin: q.xmin + ((aE.object.b.xmin - aD._offset) / 256 + aD.coord.x) * q.max / aA,
                            xmax: q.xmin + ((aE.object.b.xmax - aD._offset) / 256 + aD.coord.x) * q.max / aA,
                            ymin: q.ymax - ((aE.object.b.ymax - aD._offset) / 256 + aD.coord.y) * q.max / aA,
                            ymax: q.ymax - ((aE.object.b.ymin - aD._offset) / 256 + aD.coord.y) * q.max / aA
                        }
                    }
                }
                if (aB && (aB.ctrlKey || (aB.originalEvent && aB.originalEvent.ctrlKey) || (aB.originalEvent && aB.originalEvent.metaKey))) {
                    aE.key = 17
                }
                au(aC, aE);
                return
            }
        }
        var R = null ;
        var I = null ;
        var at;
        var ad;
        var ah;
        function aj() {
            if (!T(ah, true, 10)) {
                return
            }
            aw(ah, "object_click")
        }
        h(m.map._mapPane).on("touchstart", function(aB) {
            if (aB.originalEvent.targetTouches.length != 1) {
                return
            }
            ah = aB.originalEvent.targetTouches[0];
            ad = {
                x: ah.pageX,
                y: ah.pageY
            };
            ah.layerPoint = m.map.mouseEventToLayerPoint(ah);
            u.clearTimeout(at);
            at = u.setTimeout(aj, 200);
            if (ah.layerPoint) {
                ah.mp = ae(ah);
                if (Z.mousemove) {
                    var aA = (1 << m.map._zoom);
                    au("mousemove", {
                        x: q.xmin + q.max * ah.mp.x / aA,
                        y: q.ymax - q.max * ah.mp.y / aA
                    })
                }
            }
        });
        h(m.map._mapPane).on("touchend", function(aA) {
            u.clearTimeout(at);
            if (ah) {
                aj()
            }
        });
        h(m.map._mapPane).on("touchmove", function(aD) {
            var aB = aD.originalEvent.targetTouches[0];
            var aC = Math.abs(aB.pageX - ad.x);
            var aA = Math.abs(aB.pageY - ad.y);
            if (aC > 2 || aA > 2) {
                ah = null ;
                u.clearTimeout(at)
            }
        });
        if (!B.isMobileBrowser) {
            var J = null ;
            m.map.on("mousemove", function(aC) {
                if (!q || P) {
                    return 0
                }
                if (T(aC) && al) {
                    if (aC.showMousePointer) {
                        m.map._container.style.cursor = "pointer";
                        aw(aC, "object_over");
                        J = aC
                    } else {
                        if (!flashnavigator.hasCanvas && (ao._currentTool == "InfoTool" || ao._currentTool == "SelectTool")) {
                            m.map._container.style.cursor = "default"
                        } else {
                            m.map._container.style.cursor = ""
                        }
                        if (J) {
                            aw(J, "object_out", I);
                            J = null 
                        }
                    }
                }
                if (aC.mp && Z.mousemove) {
                    var aA = (1 << m.map._zoom);
                    var aB = {
                        x: q.xmin + q.max * aC.mp.x / aA,
                        y: q.ymax - q.max * aC.mp.y / aA
                    };
                    au("mousemove", aB)
                }
            });
            m.map.on("dblclick", function(aA) {
                aw(aA, "object_dblclick")
            });
            m.map.on("click", function(aA) {
                aw(aA, "object_click")
            })
        }
        m.map.on("mousedown", function(aC) {
            if (!T(aC)) {
                return 0
            }
            if (Z.mousedown) {
                var aA = (1 << m.map._zoom);
                var aB = {
                    x: q.xmin + q.max * aC.mp.x / aA,
                    y: q.ymax - q.max * aC.mp.y / aA,
                    containerX: aC.mp.containerPoint.x,
                    containerY: aC.mp.containerPoint.y
                };
                au("mousedown", aB)
            }
        });
        m.map.on("dblclick", function(aC) {
            if (!T(aC)) {
                return 0
            }
            if (Z.doubleClick) {
                var aA = (1 << m.map._zoom);
                var aB = {
                    x: q.xmin + q.max * aC.mp.x / aA,
                    y: q.ymax - q.max * aC.mp.y / aA,
                    containerX: aC.mp.containerPoint.x,
                    containerY: aC.mp.containerPoint.y
                };
                au("doubleClick", aB)
            }
        });
        m.map.on("mouseup", function(aC) {
            if (!T(aC)) {
                return 0
            }
            if (Z.mouseup) {
                var aA = (1 << m.map._zoom);
                var aB = {
                    x: q.xmin + q.max * aC.mp.x / aA,
                    y: q.ymax - q.max * aC.mp.y / aA,
                    containerX: aC.mp.containerPoint.x,
                    containerY: aC.mp.containerPoint.y
                };
                au("mouseup", aB)
            }
        });
        m.map.on("dragend", function(aA) {
            if (Z.dragend) {
                au("dragend", {})
            }
        });
        this.calculateScaleZoom = function(aA) {
            if (q && q.max) {
                return Math.pow(2, aA) * 256 / q.max
            } else {
                return 0
            }
        }
        ;
        this.addEventListener = function(aA, aB) {
            if (aA == "scalechange") {
                if (!Z.scalechange) {
                    Z.scalechange = new Array();
                    m.map.on("zoomend", function(aD) {
                        var aC = new Object();
                        if (q && q.max) {
                            aC.zoom = ao.calculateScaleZoom(m.map._zoom)
                        }
                        au("scalechange", aC)
                    })
                }
            } else {
                if (aA == "boundschange") {
                    if (!Z.boundschange) {
                        Z.boundschange = new Array();
                        m.map.on("move", function(aD) {
                            var aC = {
                                bounds: ao.getViewBound()
                            };
                            au("boundschange", aC)
                        })
                    }
                } else {
                    if (!Z[aA]) {
                        Z[aA] = new Array()
                    }
                }
            }
            Z[aA].push(aB)
        }
        ;
        this.removeEventListener = function(aB, aE) {
            var aD, aA, aC = Z[aB];
            if (aC) {
                for (aD = 0,
                aA = aC.length; aD < aA; aD++) {
                    if (aC[aD] === aE) {
                        aC.splice(aD, 1);
                        aD--;
                        aA--
                    }
                }
            }
        }
    }
    ;
    fnPrinter2 = function(I) {}
    ;
    fnBitmap2 = function(I) {}
    ;
    fnSlider2 = function(I) {}
    ;
    flashnavigator2 = {};
    flashnavigator2.html5 = true;
    flashnavigator2.include = function() {}
    ;
    flashnavigator2.setOptions = function(I) {
        flashnavigator2.extraOptions = I
    }
    ;
    flashnavigator2.container = function(J, I) {
        var K = {
            maxZoom: 25,
            zoom: 0,
            latloncrs: true,
            center: new giscloud.LonLat(0,0),
            host: H,
            background: "#fff",
            attribution: {
                prefix: "Powered by <a href='http://www.giscloud.com/' target='_blank'>GIS Cloud</a>"
            }
        };
        if (flashnavigator2.extraOptions && flashnavigator2.extraOptions.lockZoom) {
            K.lockZoom = true
        }
        m = new giscloud.Viewer.Leaflet(J,null ,K);
        m.onViewerLoad = I;
        m.init.done(function() {
            G();
            m.onViewerLoad.onLoad()
        })
    }
    ;
    E = new Array();
    units_label = new Array();
    var v = 3779.527559055;
    E.meter = v;
    units_label.meter = "m";
    E.kilometer = v * 1000;
    units_label.kilometer = "km";
    E.centimeter = v * 0.01;
    units_label.centimeter = "cm";
    E.degree = v * 111319.49079327357;
    units_label.degree = "°";
    E.foot = v * 0.3048;
    units_label.foot = "ft";
    E.foot_us = v * 0.30480061;
    units_label.foot_us = "ft";
    E.mile = v * 1609.344;
    units_label.mile = "m";
    E.inch = v * 0.0254;
    units_label.mile = '"';
    E.yard = v * 0.9144;
    E.link_ben = v * 0.201167651;
    E.link_srs = v * 0.201167651;
    E.ind_yard = v * 0.914398554;
    E.srs_yard = v * 0.914398415;
    E.fathom = v * 1.8288;
    o = E.meter;
    z = "meter";
    function a(O) {
        try {
            var N = O.icon_image;
            var S = document.createElement("canvas");
            S.width = N.width;
            S.height = N.height;
            var V = S.getContext("2d");
            V.drawImage(N, 0, 0);
            var J = V.getImageData(0, 0, S.width, S.height);
            var R = J.data;
            var I = 0
              , P = 0
              , T = 0;
            var Q = 0;
            for (var M = 0, K = R.length; M < K; M += 4) {
                if (R[M + 3] > 0) {
                    I += R[M];
                    P += R[M + 1];
                    T += R[M + 2];
                    Q++
                }
            }
            return giscloud.Color.rgbToHex(Math.floor(I / Q), Math.floor(P / Q), Math.floor(T / Q))
        } catch (U) {
            return giscloud.Color.rgbToHex(255, 255, 255)
        }
    }
    flashnavigator = flashnavigator2;
    flashnavigator.html5Compatible = true;
    flashnavigator.hasCanvas = !!document.createElement("canvas").getContext;
    flashnavigator.hasCanvasInitialValue = flashnavigator.hasCanvas;
    if (!flashnavigator.hasCanvas) {
        giscloud.includeJs("/libs/raphael/raphael-min.js")
    }
    flashnavigator.ready = function() {
        fnLayer = fnLayer2;
        fnMarker = fnMarker2;
        fnAgent = fnAgent2;
        fnCanvas = fnCanvas2;
        fnPrinter = fnPrinter2;
        fnBitmap = fnBitmap2;
        fnTooltip = fnTooltip2;
        fnSlider = fnSlider2;
        fnKartehr = function() {
            this.liveSite = function() {}
        }
    }
    ;
    fnViewer = fnViewer2;
    flashnavigator.html5Enabled = true
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(d, a) {
    giscloud.rest = {
        get: d.proxy(a.rest.get, a.rest)
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(q, g, z, h) {
    var C, p, f, v, u, B, D, a, E, d, F, G = false, o = false, r = false;
    try {
        r = (q !== q.parent && q.parent.giscloud && q.parent.giscloud.oauth2 && q.name === q.parent.giscloud.oauth2.frameId())
    } catch (H) {}
    if (r) {
        if (document.location.search.indexOf("error=redirect_uri_mismatch") > -1) {
            q.parent.giscloud.oauth2.uriMismatch(document.location)
        } else {
            C = document.location.href.match(/access_token=(\w+)/);
            p = C && C[1];
            q.parent.giscloud.oauth2.setToken(p, document.location)
        }
    } else {
        if (document.location.search.indexOf("error=redirect_uri_mismatch") > -1) {
            q.parent.giscloud.oauth2.uriMismatch(document.location)
        } else {
            f = z.authHost();
            giscloud.oauth2 = {
                token: function(e) {
                    if (e) {
                        p = e;
                        return this
                    } else {
                        return p
                    }
                },
                frameId: function() {
                    return d
                },
                authorize: function(J, M, K) {
                    var I, m, e = z.oid();
                    v = M;
                    if (!G) {
                        giscloud.includeCss(z.apiHost() + "/assets/api/1/auth.css");
                        G = true
                    }
                    if (p === h || p === null ) {
                        u = "win_" + e;
                        d = "frame_" + u;
                        m = (q.location.protocol == "https:" ? "https:" : "http:") + "//" + q.location.hostname + q.location.pathname;
                        B = f + "/oauth/authorize?client_id=" + J + "&redirect_uri=" + m + "?nch=" + Math.random() + "&response_type=token&fr=" + d;
                        I = g('<iframe name="' + d + '" id="' + d + '" style="position:absolute;visibility:hidden;width:1px;height:1px;"></iframe>');
                        if (K !== h) {
                            I.one("load", K)
                        }
                        g("body").append(I);
                        I.attr("src", B + "&authorize=true")
                    }
                    return this
                },
                signIn: function(I) {
                    var e, m;
                    I = I || {};
                    if (typeof I.template === "string") {
                        m = B + "&template=" + I.template
                    } else {
                        m = B
                    }
                    if (typeof I.iframeContainer === "string" && g("#" + I.iframeContainer).length > 0) {
                        E = new g.Deferred();
                        E.then(I.onSuccess, I.onCancel);
                        if (a) {
                            a.destroy()
                        }
                        a = new easyXDM.Rpc({
                            remote: m,
                            container: g("#" + I.iframeContainer)[0],
                            props: I.frameProperties,
                            onReady: I.onReady,
                            channel: d
                        },{
                            remote: {
                                invalidCredentials: {}
                            },
                            local: {
                                onCancel: function() {
                                    E.reject()
                                },
                                onAuthStart: function() {
                                    g("#" + d).one("load", function() {
                                        if (!p) {
                                            a.invalidCredentials()
                                        } else {
                                            E.resolve()
                                        }
                                    })
                                }
                            }
                        })
                    } else {
                        e = "status=1, toolbar=1,  width=450, height=400";
                        D = q.open(m, u, e)
                    }
                },
                signOut: function(I) {
                    var m, e;
                    m = g("#" + d);
                    e = new g.Deferred();
                    if (typeof I == "function") {
                        e.done(I)
                    }
                    p = null ;
                    m.one("load", function() {
                        e.resolve()
                    });
                    m.attr("src", f + "/oauth/sign_out?redirect_uri=" + q.location.href);
                    return e.promise()
                },
                setToken: function(e, m) {
                    p = e;
                    if (D) {
                        D.close();
                        D = null 
                    }
                    if (typeof v == "function") {
                        v(p)
                    }
                    if (m) {
                        m.href = f + "/oauth/blank"
                    }
                    this.button(F)
                },
                uriMismatch: function(e) {
                    o = true;
                    if (e) {
                        e.href = f + "/oauth/blank"
                    }
                    if (typeof v == "function") {
                        v()
                    }
                },
                thisIsOauthFrame: function() {
                    return r
                },
                button: function(m, I) {
                    var e, J;
                    F = m;
                    e = g("<div/>", {
                        "class": "gc-auth-button"
                    });
                    if (o) {
                        e.addClass("gc-redirect-uri-mismatch");
                        e.append("This is not a registered<br/>GIS Cloud app.")
                    } else {
                        if (p) {
                            e.addClass("gc-authorized");
                            e.append("You are signed in. <a href='#'>Sign out.</a>");
                            e.click(function(K) {
                                giscloud.oauth2.signOut();
                                K.preventDefault()
                            })
                        } else {
                            e.click(function(K) {
                                giscloud.oauth2.signIn(I);
                                K.preventDefault()
                            })
                        }
                    }
                    if (m) {
                        J = g("#" + m);
                        if (J.length) {
                            J.html("");
                            J.append(e)
                        }
                        return this
                    } else {
                        return e
                    }
                }
            }
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(a) {
    giscloud.LonLat = function(e, d) {
        if (e instanceof giscloud.LonLat) {
            this.lon = e.lon;
            this.lat = e.lat
        } else {
            this.lon = isNaN(e) ? null  : e;
            this.lat = isNaN(d) ? null  : d
        }
    }
    ;
    giscloud.LonLat.prototype = {
        toArray: function() {
            return [this.lon, this.lat]
        },
        toString: function(e) {
            var d;
            if (e !== undefined) {
                d = Math.pow(10, e);
                return (Math.round(this.lon * d) / d) + ", " + (Math.round(this.lat * d) / d)
            } else {
                return this.lon + ", " + this.lat
            }
        },
        clone: function() {
            return new giscloud.LonLat(this)
        },
        transform: function(h, d) {
            var g, e, f;
            if (!window.Proj4js) {
                console.warn("Proj4js library is missing.");
                return this
            }
            if (h instanceof Proj4js.Proj) {
                e = h
            } else {
                if (typeof h === "number") {
                    e = new Proj4js.Proj("EPSG:" + h)
                } else {
                    e = new Proj4js.Proj(h)
                }
            }
            if (!e || !e.readyToUse) {
                console.warn("Source projection is not ready to use.", e);
                return this
            }
            if (d instanceof Proj4js.Proj) {
                f = d
            } else {
                if (typeof d === "number") {
                    f = new Proj4js.Proj("EPSG:" + d)
                } else {
                    f = new Proj4js.Proj(d)
                }
            }
            if (!f || !f.readyToUse) {
                console.warn("Destination projection is not ready to use.", f);
                return this
            }
            g = new Proj4js.Point(this.lon,this.lat),
            Proj4js.transform(e, f, g);
            this.lon = g.x;
            this.lat = g.y;
            return this
        },
        toBounds: function(d) {
            d = (isNaN(d) || d === null ) ? 0 : d;
            return new giscloud.Bounds(this.lon - d,this.lat - d,this.lon + d,this.lat + d)
        },
        equals: function(d) {
            return d instanceof giscloud.LonLat && this.lon === d.lon && this.lat === d.lat
        },
        valid: function() {
            return !(isNaN(this.lon) || isNaN(this.lat))
        }
    };
    giscloud.LonLat.parse = function(e) {
        var d;
        if (typeof e === "string") {
            d = e.split(",");
            if (d.length === 2) {
                return new giscloud.LonLat(parseFloat(d[0]),parseFloat(d[1]))
            }
        }
        return null 
    }
    ;
    giscloud.Bounds = function(h, d, e, g) {
        var f;
        if (h instanceof giscloud.Bounds) {
            this.left = h.left;
            this.bottom = h.bottom;
            this.right = h.right;
            this.top = h.top
        } else {
            if (a.isArray(h) && h.length) {
                f = giscloud.Bounds.fromBounds(h);
                if (!f.valid()) {
                    return
                }
                this.left = f.left;
                this.bottom = f.bottom;
                this.right = f.right;
                this.top = f.top
            } else {
                this.left = (typeof h === "number") ? h : (parseFloat(h));
                this.bottom = (typeof d === "number") ? d : (parseFloat(d));
                this.right = (typeof e === "number") ? e : (parseFloat(e));
                this.top = (typeof g === "number") ? g : (parseFloat(g))
            }
        }
    }
    ;
    giscloud.Bounds.prototype = {
        width: function(e, m) {
            var d, f, g;
            if (e == null ) {
                if (isFinite(this.left) && isFinite(this.right)) {
                    return Math.abs(this.right - this.left)
                } else {
                    return null 
                }
            }
            if (isFinite(this.left) && isFinite(this.right)) {
                d = Math.abs(this.right - this.left);
                f = (e - d) / 2;
                this.left = this.left - f;
                this.right = this.right + f;
                if (m) {
                    g = this.height();
                    this.height(g * e / d)
                }
            }
            return this
        },
        height: function(g, m) {
            var e, f, d;
            if (g == null ) {
                if (isFinite(this.top) && isFinite(this.bottom)) {
                    return Math.abs(this.top - this.bottom)
                } else {
                    return null 
                }
            }
            if (isFinite(this.top) && isFinite(this.bottom)) {
                e = Math.abs(this.top - this.bottom);
                f = (g - e) / 2;
                this.bottom = this.bottom - f;
                this.top = this.top + f;
                if (m) {
                    d = this.width();
                    this.width(d * g / e)
                }
            }
            return this
        },
        center: function(e) {
            var d, g, o, m, f;
            if (this.isPoint()) {
                if (e == null ) {
                    return new giscloud.LonLat(this.left,this.bottom)
                } else {
                    this.left = this.right = e.lon;
                    this.top = this.bottom = e.lat;
                    return this
                }
            } else {
                d = this.width();
                g = this.height();
                o = new giscloud.LonLat((this.left + d / 2),(this.bottom + g / 2));
                if (e == null ) {
                    return o
                } else {
                    m = e.lon - o.lon;
                    f = e.lat - o.lat;
                    this.left += m;
                    this.right += m;
                    this.top += f;
                    this.bottom += f;
                    return this
                }
            }
        },
        isPoint: function() {
            return this.left === this.right && this.top === this.bottom
        },
        valid: function() {
            return !(isNaN(this.left) || isNaN(this.bottom) || isNaN(this.right) || isNaN(this.top))
        },
        include: function(e, d) {
            d = (isNaN(d) || d === null ) ? 0 : d;
            if (e instanceof giscloud.LonLat) {
                this.left = Math.min(e.lon - d, this.left);
                this.bottom = Math.min(e.lat - d, this.bottom);
                this.right = Math.max(e.lon + d, this.right);
                this.top = Math.max(e.lat + d, this.top)
            } else {
                if (e instanceof giscloud.Bounds) {
                    this.left = Math.min(e.left - d, this.left);
                    this.bottom = Math.min(e.bottom - d, this.bottom);
                    this.right = Math.max(e.right + d, this.right);
                    this.top = Math.max(e.top + d, this.top)
                }
            }
            return this
        },
        clone: function() {
            return new giscloud.Bounds(this)
        },
        toArray: function() {
            return [this.left, this.bottom, this.right, this.top]
        },
        toString: function(e) {
            var d;
            if (e !== undefined) {
                d = Math.pow(10, e);
                return (Math.round(this.left * d) / d) + ", " + (Math.round(this.bottom * d) / d) + (Math.round(this.right * d) / d) + ", " + (Math.round(this.top * d) / d)
            } else {
                return this.left + ", " + this.bottom + ", " + this.right + ", " + this.top
            }
        }
    };
    giscloud.Bounds.parse = function(e) {
        var d;
        if (typeof e === "string") {
            d = e.split(",");
            if (d.length === 4) {
                return new giscloud.Bounds(parseFloat(d[0]),parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3]))
            }
        }
        return null 
    }
    ;
    giscloud.Bounds.fromBounds = function(g) {
        var f, e, d;
        if (!g) {
            return new giscloud.Bounds()
        }
        if (g instanceof giscloud.Bounds) {
            return new giscloud.Bounds(g)
        }
        if (a.isArray(g)) {
            d = new giscloud.Bounds();
            for (f = 0,
            e = g.length; f < e; f++) {
                if (!d.valid()) {
                    d = new giscloud.Bounds(g[f])
                } else {
                    d.left = Math.min(d.left, g[f].left);
                    d.bottom = Math.min(d.bottom, g[f].bottom);
                    d.right = Math.max(d.right, g[f].right);
                    d.top = Math.max(d.top, g[f].top)
                }
            }
            return d
        }
        return new giscloud.Bounds(g.left,g.bottom,g.right,g.top)
    }
}(giscloud.exposeJQuery()));
(function() {
    var a;
    giscloud.geometry = {
        Point: function(d, f, e) {
            this.x = d;
            this.y = f;
            if (e != null ) {
                this.z = e
            }
        },
        Multipoint: function(d) {
            this.points = d
        },
        Line: function(d) {
            this.points = d
        },
        Multiline: function(d) {
            this.lines = d
        },
        Polygon: function(d) {
            this.rings = d
        },
        Multipolygon: function(d) {
            this.polygons = d
        },
        GeometryCollection: function(d) {
            this.geometries = d
        },
        hasZ: function(f) {
            var e, d;
            if (f instanceof giscloud.geometry.Point && f.x != null  && f.y != null ) {
                return f.z != null 
            } else {
                if (f instanceof giscloud.geometry.Multipoint && f.points != null ) {
                    for (e = 0,
                    d = f.points.length; e < d; e++) {
                        if (f.points[e].hasZ()) {
                            return true
                        }
                    }
                    return false
                } else {
                    if (f instanceof giscloud.geometry.Line && f.points != null ) {
                        for (e = 0,
                        d = f.points.length; e < d; e++) {
                            if (f.points[e].hasZ()) {
                                return true
                            }
                        }
                        return false
                    } else {
                        if (f instanceof giscloud.geometry.Multiline && f.lines != null ) {
                            for (e = 0,
                            d = f.lines.length; e < d; e++) {
                                if (f.lines[e].hasZ()) {
                                    return true
                                }
                            }
                            return false
                        } else {
                            if (f instanceof giscloud.geometry.Polygon && f.rings != null ) {
                                for (e = 0,
                                d = f.rings.length; e < d; e++) {
                                    if (f.rings[e].hasZ()) {
                                        return true
                                    }
                                }
                                return false
                            } else {
                                if (f instanceof giscloud.geometry.Multipolygon && f.polygons != null ) {
                                    for (e = 0,
                                    d = f.polygons.length; e < d; e++) {
                                        if (f.polygons[e].hasZ()) {
                                            return true
                                        }
                                    }
                                    return false
                                } else {
                                    if (f instanceof giscloud.geometry.GeometryCollection && f.geometries != null ) {
                                        for (e = 0,
                                        d = f.geometries.length; e < d; e++) {
                                            if (f.geometries[e].hasZ()) {
                                                return true
                                            }
                                        }
                                        return false
                                    } else {
                                        return null 
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        toOGC: function(v, u) {
            var d, r, e, D, C, z, q, p, o, h, g, f;
            d = function(m) {
                return (u || m.z == null ) ? m.x + " " + m.y : m.x + " " + m.y + " " + m.z
            }
            ;
            r = function(m) {
                return m.join()
            }
            ;
            e = function(m) {
                return m.join()
            }
            ;
            try {
                if (v instanceof giscloud.geometry.Point && v.x != null  && v.y != null ) {
                    return "POINT (" + d(v) + ")"
                } else {
                    if (v instanceof giscloud.geometry.Multipoint && v.points != null ) {
                        D = [];
                        for (q = 0,
                        o = v.points.length; q < o; q++) {
                            D.push("(" + d(v.points[q]) + ")")
                        }
                        return "MULTIPOINT (" + D.join() + ")"
                    } else {
                        if (v instanceof giscloud.geometry.Line && v.points != null ) {
                            D = [];
                            for (q = 0,
                            o = v.points.length; q < o; q++) {
                                D.push(d(v.points[q]))
                            }
                            return "LINESTRING (" + r(D) + ")"
                        } else {
                            if (v instanceof giscloud.geometry.Multiline && v.lines != null ) {
                                D = [];
                                for (q = 0,
                                o = v.lines.length; q < o; q++) {
                                    C = [];
                                    for (p = 0,
                                    h = v.lines[q].points.length; p < h; p++) {
                                        C.push(d(v.lines[q].points[p]))
                                    }
                                    D.push("(" + r(C) + ")")
                                }
                                return "MULTILINESTRING (" + r(D) + ")"
                            } else {
                                if (v instanceof giscloud.geometry.Polygon && v.rings != null ) {
                                    D = [];
                                    for (q = 0,
                                    o = v.rings.length; q < o; q++) {
                                        C = [];
                                        for (p = 0,
                                        h = v.rings[q].points.length; p < h; p++) {
                                            C.push(d(v.rings[q].points[p]))
                                        }
                                        C.push(d(v.rings[q].points[0]));
                                        D.push("(" + r(C) + ")")
                                    }
                                    return "POLYGON (" + e(D) + ")"
                                } else {
                                    if (v instanceof giscloud.geometry.Multipolygon && v.polygons != null ) {
                                        D = [];
                                        for (q = 0,
                                        h = v.polygons.length; q < h; q++) {
                                            C = [];
                                            for (p = 0,
                                            g = v.polygons[q].rings.length; p < g; p++) {
                                                z = [];
                                                for (o = 0,
                                                f = v.polygons[q].rings[p].points.length; o < f; o++) {
                                                    z.push(d(v.polygons[q].rings[p].points[o]))
                                                }
                                                z.push(d(v.polygons[q].rings[p].points[0]));
                                                C.push("(" + r(z) + ")")
                                            }
                                            D.push("(" + e(C) + ")")
                                        }
                                        return "MULTIPOLYGON (" + D.join() + ")"
                                    } else {
                                        if (v instanceof giscloud.geometry.GeometryCollection && v.geometries != null ) {
                                            D = [];
                                            for (q = 0,
                                            h = v.geometries.length; q < h; q++) {
                                                D.push(v.geometries[q].toOGC())
                                            }
                                            return "GEOMETRYCOLLECTION (" + D.join() + ")"
                                        } else {
                                            return null 
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } catch (B) {
                return null 
            }
        },
        fromOGC: function(D) {
            var C, u, d, G, r, o, v, e, p, q, z, f, g, F, B, h, H, E;
            G = /^([A-Z]+(?:\s*Z\s*)?)\s?(\([A-Ze\d.,()\s\-]*\))$/;
            r = D && D.match && D.match(G);
            o = r && r[1];
            if (/Z\s*$/.test(o)) {
                o = o.replace(/\s*Z\s*$/, "");
                d = true
            }
            v = r && r[2] && r[2].replace(/\s+/g, " ").replace(/, /g, ",");
            if (o == null  || v == null ) {
                return null 
            }
            if (o === "GEOMETRYCOLLECTION") {
                r = v.match(/([A-Z]+\s?\([\-\d.e,( )]*\))(?=\s?,|\s?\)\s?$)/g);
                if (r === null ) {
                    return []
                }
                e = [];
                for (C = 0,
                u = r.length; C < u; C++) {
                    e.push(giscloud.geometry.fromOGC(r[C]))
                }
                return new giscloud.geometry.GeometryCollection(e)
            }
            v = v.replace(/([\d.e\-]+ [\d.e\-]+( [\d.e\-]+)?)/g, "[$1]");
            e = [];
            C = 0;
            B = function() {
                var I, m = [""], J = 0;
                while (true) {
                    C++;
                    I = v[C];
                    if (I === "]") {
                        break
                    } else {
                        if (I === " ") {
                            m.push("");
                            J++;
                            if (J > 2) {
                                throw "Error parsing wkt: invalid value"
                            }
                        } else {
                            m[J] += I
                        }
                    }
                }
                return (m.length === 3) ? [parseFloat(m[0]), parseFloat(m[1]), parseFloat(m[2])] : [parseFloat(m[0]), parseFloat(m[1])]
            }
            ;
            F = function() {
                var I, m = [];
                while (C < v.length) {
                    C++;
                    I = v[C];
                    switch (I) {
                    case "(":
                        m.push(F());
                        break;
                    case ",":
                        break;
                    case ")":
                        return m;
                    case "[":
                        m.push(B());
                        break;
                    default:
                        throw "Error parsing wkt: invalid structure"
                    }
                }
                return m
            }
            ;
            p = r && F();
            if (p.length < 1) {
                throw "Error parsing wkt: invalid geometry"
            }
            h = function(m) {
                if (d && m.length !== 3) {
                    throw "Error parsing wkt: invalid geometry"
                }
                if (m.length !== 2 && m.length !== 3) {
                    throw "Error parsing wkt: invalid geometry"
                }
                return new giscloud.geometry.Point(m[0],m[1],m[2])
            }
            ;
            H = function(m, M) {
                var K, J, I;
                if (m.length === 0) {
                    throw "Error parsing wkt: invalid geometry"
                }
                K = [];
                for (J = 0,
                I = m.length - (M ? 1 : 0); J < I; J++) {
                    K.push(h(m[J]))
                }
                return new giscloud.geometry.Line(K)
            }
            ;
            E = function(m) {
                var K, J, I;
                if (m.length === 0) {
                    throw "Error parsing wkt: invalid geometry"
                }
                K = [];
                for (J = 0,
                I = m.length; J < I; J++) {
                    K.push(H(m[J], true))
                }
                return new giscloud.geometry.Polygon(K)
            }
            ;
            switch (o) {
            case "POINT":
                if (p.length > 1) {
                    throw "Error parsing wkt: invalid point geometry"
                }
                return h(p[0]);
            case "MULTIPOINT":
                z = [];
                for (C = 0,
                u = p.length; C < u; C++) {
                    if (p[C].length === 2) {
                        z.push(h(p[C]))
                    } else {
                        if (p[C].length === 1) {
                            z.push(h(p[C][0]))
                        } else {
                            throw "Error parsing wkt: invalid geometry"
                        }
                    }
                }
                return new giscloud.geometry.Multipoint(z);
            case "LINESTRING":
                return H(p);
            case "MULTILINESTRING":
                f = [];
                for (C = 0,
                u = p.length; C < u; C++) {
                    f.push(H(p[C]))
                }
                return new giscloud.geometry.Multiline(f);
            case "POLYGON":
                return E(p);
            case "MULTIPOLYGON":
                g = [];
                for (C = 0,
                u = p.length; C < u; C++) {
                    g.push(E(p[C]))
                }
                return new giscloud.geometry.Multipolygon(g);
            default:
                throw "Error parsing wkt: unknown geometry type"
            }
            return q
        },
        fromGeoJSON: function(d) {
            if (typeof d == "string") {
                d = JSON.parse(d)
            }
            switch (d.type) {
            case "Point":
                return d.coordinates.length === 3 ? new giscloud.geometry.Point(d.coordinates[0],d.coordinates[1],d.coordinates[2]) : new giscloud.geometry.Point(d.coordinates[0],d.coordinates[1]);
            case "LineString":
                return new giscloud.geometry.Line($.map(d.coordinates, function(e) {
                    return e.length === 3 ? new giscloud.geometry.Point(e[0],e[1],e[2]) : new giscloud.geometry.Point(e[0],e[1])
                }));
            case "Polygon":
                return new giscloud.geometry.Polygon($.map(d.coordinates, function(e) {
                    return new giscloud.geometry.Line($.map(e, function(f) {
                        return f.length === 3 ? new giscloud.geometry.Point(f[0],f[1],f[2]) : new giscloud.geometry.Point(f[0],f[1])
                    }))
                }));
            default:
                return null 
            }
        }
    };
    giscloud.Geometry = a = function() {}
    ;
    a.prototype = {
        bounds: function(e) {
            var f, d, h, g;
            e = e || 0;
            if (this.x && this.y) {
                return new giscloud.Bounds(this.x - e,this.y - e,this.x + e,this.y + e)
            }
            h = this.points || this.lines || this.rings || this.polygons || this.geometries;
            if (!h || !h.length) {
                return null 
            }
            g = h[0].bounds();
            for (f = 1,
            d = h.length; f < d; f++) {
                g.include(h[f].bounds())
            }
            return g
        },
        toOGC: function() {
            return giscloud.geometry.toOGC(this)
        },
        hasZ: function() {
            return giscloud.geometry.hasZ(this)
        },
    };
    giscloud.geometry.Point.prototype = new a();
    giscloud.geometry.Multipoint.prototype = new a();
    giscloud.geometry.Line.prototype = new a();
    giscloud.geometry.Multiline.prototype = new a();
    giscloud.geometry.Polygon.prototype = new a();
    giscloud.geometry.Multipolygon.prototype = new a();
    giscloud.geometry.GeometryCollection.prototype = new a()
})();
(function(h, f, m, e) {
    giscloud.Color = function(C, E, q, z) {
        var I, O, Q, R, N, P, J, K, G, F, S, B, M, H, D, u;
        if (C !== e && typeof C == "number") {
            if (C > 255) {
                I = 255
            } else {
                if (C < 0) {
                    I = 0
                } else {
                    I = Math.round(C)
                }
            }
            M = true;
            H = true;
            u = true
        } else {
            D = true
        }
        if (E !== e && typeof E == "number") {
            if (E > 255) {
                O = 255
            } else {
                if (E < 0) {
                    O = 0
                } else {
                    O = Math.round(E)
                }
            }
            M = true;
            H = true;
            u = true
        } else {
            D = true
        }
        if (q !== e && typeof q == "number") {
            if (q > 255) {
                Q = 255
            } else {
                if (q < 0) {
                    Q = 0
                } else {
                    Q = Math.round(q)
                }
            }
            M = true;
            H = true;
            u = true
        } else {
            D = true
        }
        if (z !== e && typeof z == "number") {
            if (z > 100) {
                R = 100
            } else {
                if (z < 0) {
                    R = 0
                } else {
                    R = Math.round(z)
                }
            }
        } else {
            R = 100
        }
        M = true;
        H = true;
        u = true;
        this.hex = function() {
            var T = arguments[0], v = /^((#)|(0x))?([a-f0-9]{3}$)|([a-f0-9]{6}$)/i, r;
            if (T && typeof T == "string") {
                if (T.match(v)) {
                    r = giscloud.Color.hexToRgb(T);
                    I = r[0];
                    O = r[1];
                    Q = r[2];
                    M = true;
                    H = true;
                    u = true;
                    return this
                } else {
                    return giscloud.Color.rgbToHex(this.rgb(), T)
                }
            } else {
                return giscloud.Color.rgbToHex(this.rgb(), T)
            }
        }
        ;
        this.rgb = function() {
            var r, v;
            if (arguments.length > 0) {
                for (r = 0; r < 3; r++) {
                    v = arguments[r];
                    if (v !== e && v !== null  && typeof v == "number") {
                        if (v > 255) {
                            v = 255
                        } else {
                            if (v < 0) {
                                v = 0
                            } else {
                                v = Math.round(v)
                            }
                        }
                        switch (r) {
                        case 0:
                            I = v;
                            break;
                        case 1:
                            O = v;
                            break;
                        case 2:
                            Q = v;
                            break
                        }
                        M = true;
                        H = true;
                        u = true
                    }
                }
                return this
            } else {
                if (D) {
                    if (!M) {
                        v = giscloud.Color.hslToRgb(N, P, K)
                    } else {
                        if (!H) {
                            v = giscloud.Color.hsvToRgb(N, J, G)
                        } else {
                            if (!u) {
                                v = giscloud.Color.labToRgb(F, S, B)
                            }
                        }
                    }
                    I = v[0];
                    O = v[1];
                    Q = v[2];
                    D = false
                }
                return [I, O, Q]
            }
        }
        ;
        this.rgba = function() {
            if (arguments.length > 0) {
                this.rgb.apply(this, Array.prototype.slice(arguments));
                if (arguments[3] != null ) {
                    this.alpha(arguments[3])
                }
                return this
            }
            if (D) {
                if (!M) {
                    c = giscloud.Color.hslToRgb(N, P, K)
                } else {
                    if (!H) {
                        c = giscloud.Color.hsvToRgb(N, J, G)
                    } else {
                        if (!u) {
                            c = giscloud.Color.labToRgb(F, S, B)
                        }
                    }
                }
                I = c[0];
                O = c[1];
                Q = c[2];
                D = false
            }
            return [I, O, Q, R]
        }
        ;
        this.hsl = function(r) {
            var v, T;
            if (arguments.length === 3) {
                for (v = 0; v < 3; v++) {
                    T = arguments[v];
                    if (T !== e && T !== null  && typeof T == "number") {
                        if (v === 0) {
                            if (T >= 360) {
                                T -= 360
                            } else {
                                if (T < 0) {
                                    T += 360
                                } else {
                                    T = Math.round(T)
                                }
                            }
                            N = T
                        } else {
                            if (T > 100) {
                                T = 100
                            } else {
                                if (T < 0) {
                                    T = 0
                                }
                            }
                            if (v === 1) {
                                P = T
                            } else {
                                K = T
                            }
                        }
                        D = true;
                        H = true;
                        u = true
                    }
                }
                M = false;
                return this
            } else {
                if (M) {
                    if (!D) {
                        T = giscloud.Color.rgbToHsl(I, O, Q)
                    } else {
                        if (!H) {
                            T = giscloud.Color.hsvToHsl(N, J, G)
                        } else {
                            if (!u) {
                                T = giscloud.Color.labToHsl(F, S, B)
                            }
                        }
                    }
                    N = T[0];
                    P = T[1];
                    K = T[2];
                    M = false
                }
                if (r) {
                    return [Math.round(N), Math.round(P), Math.round(K)]
                } else {
                    return [N, P, K]
                }
            }
        }
        ;
        this.hsv = function(r) {
            var v, T;
            if (arguments.length === 3) {
                for (v = 0; v < 3; v++) {
                    T = arguments[v];
                    if (T !== e && T !== null  && typeof T == "number") {
                        if (v === 0) {
                            if (T >= 360) {
                                T -= 360
                            } else {
                                if (T < 0) {
                                    T += 360
                                } else {
                                    T = Math.round(T)
                                }
                            }
                            N = T
                        } else {
                            if (T > 100) {
                                T = 100
                            } else {
                                if (T < 0) {
                                    T = 0
                                }
                            }
                            if (v === 1) {
                                J = T
                            } else {
                                G = T
                            }
                        }
                        D = true;
                        M = true;
                        u = true
                    }
                }
                H = false;
                return this
            } else {
                if (H) {
                    if (!D) {
                        T = giscloud.Color.rgbToHsv(I, O, Q)
                    } else {
                        if (!M) {
                            T = giscloud.Color.hslToHsv(N, P, K)
                        } else {
                            if (!u) {
                                T = giscloud.Color.labToRgb(F, S, B)
                            }
                        }
                    }
                    N = T[0];
                    J = T[1];
                    G = T[2];
                    H = false
                }
                if (r) {
                    return [Math.round(N), Math.round(J), Math.round(G)]
                } else {
                    return [N, J, G]
                }
            }
        }
        ;
        this.lab = function(r) {
            var v, T;
            if (arguments.length === 3) {
                for (v = 0; v < 3; v++) {
                    T = arguments[v];
                    if (T !== e && T !== null  && typeof T == "number") {
                        if (v === 0) {
                            F = T
                        } else {
                            if (v === 1) {
                                S = T
                            } else {
                                B = T
                            }
                        }
                        D = true;
                        M = true;
                        H = true
                    }
                }
                u = false;
                return this
            } else {
                if (u) {
                    if (!D) {
                        T = giscloud.Color.rgbToLab(I, O, Q)
                    } else {
                        if (!M) {
                            T = giscloud.Color.hslToLab(N, P, K)
                        } else {
                            if (!H) {
                                T.giscloud.Color.hsvToLab(N, J, G)
                            }
                        }
                    }
                    F = T[0];
                    S = T[1];
                    B = T[2];
                    u = false
                }
                if (r) {
                    return [Math.round(F), Math.round(S), Math.round(B)]
                } else {
                    return [F, S, B]
                }
            }
        }
        ;
        this.alpha = function(r) {
            if (r !== e && typeof r == "number") {
                if (r > 100) {
                    R = 100
                } else {
                    if (r < 0) {
                        R = 0
                    } else {
                        R = Math.round(r)
                    }
                }
            } else {
                return R
            }
        }
        ;
        this.clone = function() {
            var r = this.rgba();
            return new giscloud.Color(r[0],r[1],r[2],r[3])
        }
    }
    ;
    giscloud.Color.prototype = {
        brighter: function o(r) {
            var q = this.hsl();
            r = r || 20;
            return giscloud.Color.fromHsl(q[0], q[1], q[2] + r)
        },
        darker: function p(r) {
            var q = this.hsl();
            r = r || 20;
            return giscloud.Color.fromHsl(q[0], q[1], q[2] - r)
        },
        equals: function a(u) {
            var r, q;
            if (u instanceof giscloud.Color) {
                q = u.rgb();
                r = this.rgb();
                return r[0] === q[0] && r[1] === q[1] && r[2] === q[2] && this.alpha() === u.alpha()
            } else {
                return false
            }
        },
        toRgbaString: function g() {
            return "rgba(" + this.rgba().join(", ") + ")"
        },
        toRgbString: function d() {
            return "rgb(" + this.rgb().join(", ") + ")"
        }
    };
    giscloud.Color.fromRgb = function(v, u, q) {
        return new giscloud.Color(v,u,q)
    }
    ;
    giscloud.Color.fromRgb = function(z, v, q, u) {
        return new giscloud.Color(z,v,q,u)
    }
    ;
    giscloud.Color.fromHsl = function(v, u, q) {
        var r = new giscloud.Color();
        r.hsl(v, u, q);
        return r
    }
    ;
    giscloud.Color.fromHsv = function(z, u, q) {
        var r = new giscloud.Color();
        r.hsv(z, u, q);
        return r
    }
    ;
    giscloud.Color.fromLab = function(u, r, q) {
        var v = new giscloud.Color();
        v.lab(u, r, q);
        return v
    }
    ;
    giscloud.Color.fromHex = function(r) {
        var q = giscloud.Color.hexToRgb(r);
        return q && new giscloud.Color(q[0],q[1],q[2])
    }
    ;
    giscloud.Color.fromRgbString = function(r) {
        var u = /^rgb\((\d+)[,\s]*(\d+)[,\s]*(\d+)\)$/i
          , q = r && r.match && r.match(u);
        if (q && q.length === 4) {
            return new giscloud.Color(parseInt(q[1]),parseInt(q[2]),parseInt(q[3]))
        } else {
            return null 
        }
    }
    ;
    giscloud.Color.fromRgbaString = function(v) {
        var u = /^rgba\((\d+)[,\s]*(\d+)[,\s]*(\d+)[,\s]*(\d+)\)$/i, q = v && v.match && v.match(u), r;
        if (q && q.length === 5) {
            r = parseInt(q[4]) < 1 ? parseInt(q[4]) * 100 : parseInt(q[4]);
            return new giscloud.Color(parseInt(q[1]),parseInt(q[2]),parseInt(q[3]),r)
        } else {
            return null 
        }
    }
    ;
    giscloud.Color.fromString = function(q) {
        return null  || giscloud.Color.fromRgbaString(q) || giscloud.Color.fromRgbString(q) || giscloud.Color.fromHex(q)
    }
    ;
    giscloud.Color.hexToRgb = function(B) {
        var z, v, u, q;
        if (typeof B == "string") {
            q = B.match(/^(?:#|0x)?(?:([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2}))$/i);
            if (q && q.length === 4) {
                z = parseInt(q[1], 16);
                v = parseInt(q[2], 16);
                u = parseInt(q[3], 16);
                return [z, v, u]
            } else {
                return null 
            }
        } else {
            if (typeof B == "number") {
                z = (B & 16711680) >> 16;
                v = (B & 65280) >> 8;
                u = (B & 255);
                return (!isNaN(z + v + u) && [z, v, u]) || null 
            }
        }
    }
    ;
    giscloud.Color.rgbToHex = function(C, B, q, D) {
        var v, u, z;
        if (C.length && C.length === 3) {
            if (typeof B == "string") {
                D = B
            }
            B = C[1];
            q = C[2];
            C = C[0]
        }
        v = (C > 15) ? C.toString(16) : "0" + C.toString(16);
        u = (B > 15) ? B.toString(16) : "0" + B.toString(16);
        z = (q > 15) ? q.toString(16) : "0" + q.toString(16);
        if (D === e || D === null ) {
            D = "#"
        }
        return D + v + u + z
    }
    ;
    giscloud.Color.rgbToHsl = function(v, z, I) {
        var q, D, F, B, G, E, H, C, J, u;
        if (v.length && v.length === 3) {
            q = v[0] / 255;
            D = v[1] / 255;
            F = v[2] / 255
        } else {
            q = v / 255;
            D = z / 255;
            F = I / 255
        }
        B = Math.min(q, D, F);
        G = Math.max(q, D, F);
        E = G - B;
        H = G + B;
        u = H / 2;
        if (E === 0) {
            C = 0;
            J = 0
        } else {
            switch (G) {
            case q:
                C = (D - F) / E;
                break;
            case D:
                C = 2 + (F - q) / E;
                break;
            case F:
                C = 4 + (q - D) / E;
                break
            }
            C = Math.min(Math.round(C * 60), 360);
            C = (C < 0) ? C + 360 : C;
            if (u <= 0.5) {
                J = E / H
            } else {
                J = E / (2 - H)
            }
        }
        return [C, J * 100, u * 100]
    }
    ;
    giscloud.Color.hslToRgb = function(F, B, H) {
        var q, D, G, E, C, u, z, I, v;
        if (F.length && F.length === 3) {
            z = F[0] / 360;
            I = F[1] / 100;
            v = F[2] / 100
        } else {
            z = F / 360;
            I = B / 100;
            v = H / 100
        }
        if (I === 0) {
            q = D = G = Math.round(v * 255);
            return [q, D, G]
        } else {
            C = (v < 0.5) ? v * (1 + I) : v + I - v * I;
            E = 2 * v - C;
            u = function(K, J, r) {
                var M;
                if (r < 0) {
                    r = r + 1
                } else {
                    if (r > 1) {
                        r = r - 1
                    }
                }
                if (6 * r < 1) {
                    M = K + (J - K) * 6 * r
                } else {
                    if (2 * r < 1) {
                        M = J
                    } else {
                        if (3 * r < 2) {
                            M = K + (J - K) * (2 / 3 - r) * 6
                        } else {
                            M = K
                        }
                    }
                }
                return M
            }
            ;
            q = u(E, C, z + 1 / 3);
            D = u(E, C, z);
            G = u(E, C, z - 1 / 3);
            return [Math.round(q * 255), Math.round(D * 255), Math.round(G * 255)]
        }
    }
    ;
    giscloud.Color.rgbToHsv = function(u, z, H) {
        var q, D, F, B, G, E, C, J, I;
        if (u.length && u.length === 3) {
            q = u[0];
            D = u[1];
            F = u[2]
        } else {
            q = u;
            D = z;
            F = H
        }
        B = Math.min(q, D, F);
        G = Math.max(q, D, F);
        E = G - B;
        if (G === 0) {
            J = 0
        } else {
            J = E / G * 100
        }
        if (E === 0) {
            C = 0
        } else {
            switch (G) {
            case q:
                C = (D - F) / E;
                break;
            case D:
                C = 2 + (F - q) / E;
                break;
            case F:
                C = 4 + (q - D) / E;
                break
            }
            C = Math.min(Math.round(C * 60), 360);
            C = (C < 0) ? C + 360 : C
        }
        I = G / 255 * 100;
        return [C, J, I]
    }
    ;
    giscloud.Color.hsvToRgb = function(D, C, F) {
        var E, z, r, I, H, B, J, G;
        if (D.length && D.length === 3) {
            B = D[0];
            J = D[1] / 100;
            G = D[2] / 100
        } else {
            B = D;
            J = C / 100;
            G = F / 100
        }
        H = Math.floor(B / 60) % 6;
        E = B / 60 - Math.floor(B / 60);
        z = Math.round(255 * G * (1 - J));
        r = Math.round(255 * G * (1 - (J * E)));
        I = Math.round(255 * G * (1 - (J * (1 - E))));
        G = Math.round(255 * G);
        switch (H) {
        case 0:
            return [G, I, z];
        case 1:
            return [r, G, z];
        case 2:
            return [z, G, I];
        case 3:
            return [z, r, G];
        case 4:
            return [I, z, G];
        case 5:
            return [G, z, r]
        }
    }
    ;
    giscloud.Color.hslToHsv = function(r, z, B) {
        var v, u, q;
        if (r.length && r.length === 3) {
            v = r[0];
            u = r[1];
            q = r[2]
        } else {
            v = r;
            u = z;
            q = B
        }
        return giscloud.Color.rgbToHsv(giscloud.Color.hslToRgb(v, u, q))
    }
    ;
    giscloud.Color.hsvToHsl = function(r, B, C) {
        var z, u, q;
        if (r.length && r.length === 3) {
            z = r[0];
            u = r[1];
            q = r[2]
        } else {
            z = r;
            u = B;
            q = C
        }
        return giscloud.Color.rgbToHsl(giscloud.Color.hsvToRgb(z, u, q))
    }
    ;
    giscloud.Color.hsvToLab = function(r, B, C) {
        var z, u, q;
        if (r.length && r.length === 3) {
            z = r[0];
            u = r[1];
            q = r[2]
        } else {
            z = r;
            u = B;
            q = C
        }
        return giscloud.Color.rgbToLab(giscloud.Color.hsvToRgb(z, u, q))
    }
    ;
    giscloud.Color.hslToLab = function(r, z, B) {
        var v, u, q;
        if (r.length && r.length === 3) {
            v = r[0];
            u = r[1];
            q = r[2]
        } else {
            v = r;
            u = z;
            q = B
        }
        return giscloud.Color.rgbToLab(giscloud.Color.hslToRgb(v, u, q))
    }
    ;
    giscloud.Color.rgbToXyz = function(u, v, G) {
        var q, B, E, F, D, C;
        if (u.length && u.length === 3) {
            q = u[0] / 255;
            B = u[1] / 255;
            E = u[2] / 255
        } else {
            q = u / 255;
            B = v / 255;
            E = G / 255
        }
        if (q > 0.04045) {
            q = Math.pow((q + 0.055) / 1.055, 2.4)
        } else {
            q = q / 12.92
        }
        if (B > 0.04045) {
            B = Math.pow((B + 0.055) / 1.055, 2.4)
        } else {
            B = B / 12.92
        }
        if (E > 0.04045) {
            E = Math.pow((E + 0.055) / 1.055, 2.4)
        } else {
            E = E / 12.92
        }
        q = q * 100;
        B = B * 100;
        E = E * 100;
        F = q * 0.4124 + B * 0.3576 + E * 0.1805;
        D = q * 0.2126 + B * 0.7152 + E * 0.0722;
        C = q * 0.0193 + B * 0.1192 + E * 0.9505;
        return [F, D, C]
    }
    ;
    giscloud.Color.xyzToRgb = function(u, D, C) {
        var B, v, q;
        if (u.length && u.length === 3) {
            D = u[1] / 100;
            C = u[2] / 100;
            u = u[0] / 100
        } else {
            u = u / 100;
            D = D / 100;
            C = C / 100
        }
        B = u * 3.2406 + D * -1.5372 + C * -0.4986;
        v = u * -0.9689 + D * 1.8758 + C * 0.0415;
        q = u * 0.0557 + D * -0.204 + C * 1.057;
        if (B > 0.0031308) {
            B = 1.055 * Math.pow(B, 1 / 2.4) - 0.055
        } else {
            B = 12.92 * B
        }
        if (v > 0.0031308) {
            v = 1.055 * Math.pow(v, 1 / 2.4) - 0.055
        } else {
            v = 12.92 * v
        }
        if (q > 0.0031308) {
            q = 1.055 * Math.pow(q, 1 / 2.4) - 0.055
        } else {
            q = 12.92 * q
        }
        B = B * 255;
        v = v * 255;
        q = q * 255;
        return [B, v, q]
    }
    ;
    giscloud.Color.labToXyz = function(v, u, r) {
        var q, C, B;
        if (v.length && v.length === 3) {
            u = v[1];
            r = v[2];
            v = v[0]
        }
        C = (v + 16) / 116;
        q = u / 500 + C;
        B = C - r / 200;
        if (C * C * C > 0.008856) {
            C = C * C * C
        } else {
            C = (C - 16 / 116) / 7.787
        }
        if (q * q * q > 0.008856) {
            q = q * q * q
        } else {
            q = (q - 16 / 116) / 7.787
        }
        if (B * B * B > 0.008856) {
            B = B * B * B
        } else {
            B = (B - 16 / 116) / 7.787
        }
        q = 95.047 * q;
        C = 100 * C;
        B = 108.883 * B;
        return [q, C, B]
    }
    ;
    giscloud.Color.xyzToLab = function(r, C, B) {
        var v, u, q;
        if (r.length && r.length === 3) {
            C = r[1];
            B = r[2];
            r = r[0]
        }
        r = r / 95.047;
        C = C / 100;
        B = B / 108.883;
        if (r > 0.008856) {
            r = Math.pow(r, 1 / 3)
        } else {
            r = (7.787 * r) + (16 / 116)
        }
        if (C > 0.008856) {
            C = Math.pow(C, 1 / 3)
        } else {
            C = (7.787 * C) + (16 / 116)
        }
        if (B > 0.008856) {
            B = Math.pow(B, 1 / 3)
        } else {
            B = (7.787 * B) + (16 / 116)
        }
        v = (116 * C) - 16;
        u = 500 * (r - C);
        q = 200 * (C - B);
        return [v, u, q]
    }
    ;
    giscloud.Color.rgbToLab = function(z, v, q) {
        var u = giscloud.Color.rgbToXyz(z, v, q);
        return giscloud.Color.xyzToLab(u)
    }
    ;
    giscloud.Color.labToRgb = function(u, r, q) {
        var v = giscloud.Color.labToXyz(u, r, q);
        return giscloud.Color.xyzToRgb(v)
    }
    ;
    giscloud.Color.labToHsl = function(u, r, q) {
        var v = giscloud.Color.labToXyz(u, r, q);
        return giscloud.Color.rgbToHsl(giscloud.Color.xyzToRgb(v))
    }
    ;
    giscloud.Color.labToHsl = function(u, r, q) {
        var v = giscloud.Color.labToXyz(u, r, q);
        return giscloud.Color.rgbToHsv(giscloud.Color.xyzToRgb(v))
    }
    ;
    giscloud.Color.randomHue = function(q, r) {
        return giscloud.Color.fromHsv(Math.round(Math.random() * 360), q, r)
    }
    ;
    giscloud.Color.range = function(F, E, I, D) {
        var B, q, z, H, J, u, G, r, C = [];
        if (F instanceof giscloud.Color && E instanceof giscloud.Color && I >= 2) {
            if (I === 2) {
                return [F.clone(), E.clone()]
            } else {
                G = [];
                u = (D || "hsl cw").match(/^((\w+)?\s)?(ccw$|cw$)/);
                if (u) {
                    D = u[2] || "hsl";
                    r = u[3]
                } else {
                    r = "cw"
                }
                if (D === "rgb") {
                    q = F.rgba();
                    z = E.rgba();
                    G = [(z[0] - q[0]) / (I - 1), (z[1] - q[1]) / (I - 1), (z[2] - q[2]) / (I - 1), (z[3] - q[3]) / (I - 1)]
                } else {
                    if (D === "hsv") {
                        q = F.hsv();
                        z = E.hsv()
                    } else {
                        q = F.hsl();
                        z = E.hsl()
                    }
                    q.push(F.alpha());
                    z.push(E.alpha());
                    if (r === "cw") {
                        G = [(z[0] >= q[0]) ? (z[0] - q[0]) / (I - 1) : (360 - q[0] + z[0]) / (I - 1), (z[1] - q[1]) / (I - 1), (z[2] - q[2]) / (I - 1), (z[3] - q[3]) / (I - 1)]
                    } else {
                        G = [(z[0] < q[0]) ? (z[0] - q[0]) / (I - 1) : (z[0] - q[0] - 360) / (I - 1), (z[1] - q[1]) / (I - 1), (z[2] - q[2]) / (I - 1), (z[3] - q[3]) / (I - 1)]
                    }
                }
                J = [q[0], q[1], q[2], q[3]];
                for (B = 0; B < I; B++) {
                    if (D === "rgb") {
                        C.push(new giscloud.Color(J[0],J[1],J[2],J[3]))
                    } else {
                        if (D === "hsv") {
                            H = new giscloud.Color.fromHsv(J[0],J[1],J[2]);
                            H.alpha(J[3]);
                            C.push(H.clone())
                        } else {
                            H = new giscloud.Color.fromHsl(J[0],J[1],J[2]);
                            H.alpha(J[3]);
                            C.push(H.clone())
                        }
                    }
                    J[0] += G[0];
                    J[1] += G[1];
                    J[2] += G[2];
                    J[3] += G[3]
                }
                return C
            }
        } else {
            return null 
        }
    }
    ;
    giscloud.Color.hexNrToString = function(q, r) {
        if (typeof q == "number") {
            return (r || "") + (16777216 | q).toString(16).substr(1)
        } else {
            return null 
        }
    }
    ;
    giscloud.Color.hexStringToNr = function(u, r) {
        var q;
        if (typeof u == "string" && u) {
            r = r || "#";
            q = new RegExp("^(?:" + r + "|0x)?([a-f0-9]{3})([a-f0-9]{3})?$","i");
            return parseInt(u.replace(q, "$1$2"), 16)
        } else {
            return NaN
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(e, g, d, h) {
    var a, f = new giscloud.Color(255,180,0);
    giscloud.FlagMarker = function(q, B, r, p) {
        var v = B || ""
          , C = r || ""
          , o = (p && p instanceof giscloud.Color) ? p : f
          , z = (q && q instanceof giscloud.LonLat) ? q : null 
          , m = true
          , u = function() {
            var F, E = this.sig, D;
            D = d.markers && d.markers[E];
            if (E && D) {
                F = D.id;
                if (F !== h && F !== null ) {
                    D.m.remove(F)
                }
                if (m && z) {
                    D.id = D.m.add(z.lon, z.lat, o.hex("0x"), v, C, null , D.open)
                } else {
                    D.id = null 
                }
            }
        }
        ;
        this.title = function() {
            var D;
            if (arguments.length > 0) {
                v = arguments[0];
                if (this.sig) {
                    D = d.markers[this.sig].id;
                    if (D) {
                        d.markers[this.sig].m.setTitle(D, v)
                    }
                }
                return this
            } else {
                return v
            }
        }
        ;
        this.content = function() {
            var D;
            if (arguments.length > 0) {
                C = arguments[0];
                if (this.sig) {
                    D = d.markers[this.sig].id;
                    if (D) {
                        d.markers[this.sig].m.setContent(D, C)
                    }
                }
                return this
            } else {
                return C
            }
        }
        ;
        this.color = function() {
            var D = arguments[0];
            if (arguments.length > 0) {
                if (D && D instanceof giscloud.Color && !D.equals(o)) {
                    o = (D) ? D : f;
                    u.call(this)
                }
                return this
            } else {
                return o
            }
        }
        ;
        this.visible = function(D) {
            if (arguments.length > 0) {
                if (D !== m) {
                    m = !!D;
                    u.call(this)
                }
                return this
            } else {
                return m
            }
        }
        ;
        this.position = function() {
            var D = arguments[0];
            if (arguments.length > 0) {
                if (D && !D.equals(z)) {
                    z = (D instanceof giscloud.LonLat) ? D : null ;
                    u.call(this)
                }
                return this
            } else {
                return z
            }
        }
    }
    ;
    giscloud.Marker = function(m, o) {
        var p;
        o = o || {};
        p = {
            location: m || null ,
            title: o.title == null  ? null  : o.title,
            content: o.content == null  ? null  : o.content,
            visible: o.visible === false ? false : true,
            icon: o.icon || null ,
            label: o.label || null ,
            rotation: o.rotation || 0,
            popup: o.popup === true ? true : false,
            color: o.color || f.clone(),
            marker: this
        };
        this.title = a.call(this, p, "title");
        this.content = a.call(this, p, "content");
        this.location = a.call(this, p, "location");
        this.visible = a.call(this, p, "visible");
        this.popup = a.call(this, p, "popup");
        this.icon = a.call(this, p, "icon");
        this.rotation = a.call(this, p, "rotation");
        this.label = a.call(this, p, "label")
    }
    ;
    giscloud.LabelMarker = function(m, o) {
        var p;
        o = o || {};
        p = {
            location: m || null ,
            content: o.content == null  ? null  : o.content,
            visible: o.visible === false ? false : true,
            marker: this
        };
        this.content = a.call(this, p, "content");
        this.location = a.call(this, p, "location");
        this.visible = a.call(this, p, "visible")
    }
    ;
    a = function(p, q, m) {
        var o = this;
        return function(v, u) {
            var r;
            if (v === h) {
                return p[q]
            } else {
                if (m && !m(v)) {
                    throw {
                        msg: "Invalid value for " + (q || "???"),
                        target: o
                    }
                } else {
                    r = p[q];
                    p[q] = v;
                    if (!u) {
                        g(o).triggerHandler("stateChanged", [{
                            property: q,
                            oldValue: r,
                            newValue: v,
                            state: p
                        }])
                    }
                    return o
                }
            }
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(e, f, d, m) {
    giscloud.Resource = function h(p) {
        p = p || {};
        this.id = p.id;
        this.type = (p.type != null ) && parseInt(p.type, 10);
        this.targetId = p.target_resource_id,
        this.created = (p.created != null ) && new Date(p.created * 1000) || null ;
        this.modified = (p.modified != null ) && new Date(p.modified * 1000) || null ;
        this.accessed = (p.access_time != null ) && new Date(p.access_time * 1000) || null ;
        this.owner = p.owner_id
    }
    ;
    giscloud.Resource.prototype = {
        update: function o(p) {
            var q = this
              , r = {
                type: parseInt(this.type),
                target_resource_id: this.targetId
            };
            if (this.id != null ) {
                return giscloud.resources.update(this.id, r, p)
            }
            return giscloud.resources.create(r, p).done(function(u) {
                q.id = u
            })
        },
        remove: function a(p) {
            return giscloud.resources.remove(this.id, p)
        },
        target: function g(q) {
            var r = this, p;
            if (q != null  && q !== true) {
                if (q.id != null ) {
                    this.targetResourceId = q.id;
                    this.targetResource = q
                }
                return this
            }
            if (this.targetResource && q !== true) {
                return this.targetResource
            }
            if (this.type === giscloud.resourceTypes.DATASOURCE) {
                p = giscloud.datasources.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.FEATURE_TABLE) {
                p = giscloud.tables.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.USER) {
                p = giscloud.users.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.LAYER) {
                p = giscloud.layers.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.MAP) {
                p = giscloud.maps.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.NOTIFICATION) {
                p = giscloud.notifications.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.STREAM) {
                p = giscloud.streams.byId(this.targetId)
            }
            if (this.type === giscloud.resourceTypes.GRAPHIC) {
                p = giscloud.graphicFeatures.byId(this.targetId)
            }
            if (p) {
                p.done(function(u) {
                    r.targetResource = u
                })
            }
            return p || f.Deferred().fail("Bad resource type")
        }
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(d, a) {
    giscloud.resourceTypes = {
        DATASOURCE: 1,
        FEATURE_TABLE: 2,
        USER: 3,
        LAYER: 4,
        MAP: 5,
        PAYMENT: 6,
        ORGANIZATION: 7,
        APP: 8,
        APP_INSTANCE: 9,
        HOOK: 10,
        ROLE: 11,
        NOTIFICATION: 12,
        STREAM: 13,
        GRAPHIC: 14,
        FILE: 15
    };
    giscloud.resources = {
        permissions: function(h, f) {
            var e = "resources/" + h + "/permission"
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(m) {
                g.resolve(m)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        addPermission: function(h, g) {
            var e = new d.Deferred()
              , f = this;
            a.rest.call("post", "resources/" + h + "/permission", JSON.stringify(g), "application/json").done(function(q, p) {
                var o = p && p.match(/sharing\/(\w+)/);
                e.resolveWith(f, [o && o[1]])
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        },
        removePermission: function(g, h) {
            var e = new d.Deferred()
              , f = this;
            a.rest.call("DELETE", "resources/" + g + "/permission/" + h).done(function() {
                e.resolve()
            }).fail(function() {
                e.reject()
            });
            return e.promise()
        },
        byId: function(m, f, h) {
            var e = "resources/" + m
              , g = new d.Deferred();
            f = f || {};
            if (typeof f === "function") {
                h = f;
                f = null 
            } else {
                h = h || f.callback
            }
            a.rest.get(e, f).done(function() {
                var q = arguments[0], p;
                try {
                    p = q;
                    if (typeof h == "function") {
                        h(p)
                    }
                    g.resolve(p)
                } catch (o) {
                    g.reject()
                }
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        update: function(h, g) {
            var e = new d.Deferred()
              , f = this;
            if (h == null ) {
                return this.create(g)
            }
            a.rest.call("PUT", "resources/" + h, JSON.stringify(g), "application/json").done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.addressmodels = {
        list: function(f) {
            var e = "addressmodels.json"
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(h) {
                if (h && h.data && h.data.length > 0) {
                    var m = 0;
                    for (m; m < h.data.length; m++) {
                        h.data[m].definition = d.parseJSON(h.data[m].definition)
                    }
                }
                g.resolve(h)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        create: function(g, h) {
            var f = "addressmodels.json"
              , e = new d.Deferred()
              , m = {
                name: g,
                definition: (typeof h === "string") ? h : JSON.stringify(h)
            };
            a.rest.call("post", f, m, "application/json").done(function(o, p) {
                e.resolve(p && p.match && p.match(/addressmodels\/(\d+)/)[1])
            }).fail(function() {
                e.reject()
            });
            return e.promise()
        },
        update: function(f, h, m) {
            var g = "addressmodels/" + f + ".json"
              , e = new d.Deferred()
              , o = {
                name: h,
                definition: (typeof m === "string") ? m : JSON.stringify(m)
            };
            a.rest.call("put", g, o, "application/json").then(e.resolve, e.reject);
            return e.promise()
        },
        remove: function(g) {
            var e = new d.Deferred()
              , f = this;
            a.rest.call("DELETE", "addressmodels/" + g).done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(a) {
    giscloud.Queue = function(e) {
        var r = false
          , E = 0
          , z = e.slice()
          , q = (this === giscloud) ? {} : this
          , F = new a.Deferred()
          , v = []
          , C = []
          , D = []
          , u = null 
          , g = {}
          , h = function() {
            return g
        }
          , G = Array.prototype.slice;
        function B() {
            F.resolveWith(q, [D, C])
        }
        function o() {
            F.rejectWith(q, [D])
        }
        function p() {
            C.push(G.apply(arguments));
            D = C[C.length - 1]
        }
        function d() {
            F.notifyWith(q, (u != null ) ? [u].concat(C[E - 1]) : C[E - 1])
        }
        function m() {
            var M, I, H, K, J;
            if (r) {
                return
            }
            M = a.isArray(z[E].params) ? D.concat(z[E].params) : D,
            I = a.isFunction(z[E]) ? z[E] : z[E].func,
            H = a.isFunction(z[E]) ? q : z[E].context,
            K = a.isFunction(z[E]) ? null  : z[E].msg,
            J = I.apply(H, M);
            if (J === g) {
                B()
            } else {
                v.push(J);
                E++;
                u = K;
                J.always(p, d).done(m).fail(o)
            }
        }
        z.push(h);
        m();
        q.abort = function f() {
            o();
            r = true
        }
        ;
        q.results = function C() {
            return C
        }
        ;
        q.promises = function v() {
            return v
        }
        ;
        return F.promise(q)
    }
}(giscloud.exposeJQuery()));
(function(d) {
    function a(f) {
        var g, e, h;
        this.options = f;
        if (f.init) {
            f.init.call(this)
        }
        for (g = 0,
        e = f.triggers.length; g < e; g++) {
            h = f.triggers[g];
            d(h.element).on(h.eventName, d.proxy(this.check, this))
        }
    }
    a.prototype = {
        state: null ,
        activate: function() {
            var e;
            this.state = "active";
            if (this.options.onActivation) {
                e = Array.prototype.slice.apply(arguments);
                this.options.onActivation.apply(this, e)
            }
        },
        deactivate: function() {
            var e;
            this.state = "inactive";
            if (this.options.onDeactivation) {
                e = Array.prototype.slice.apply(arguments);
                this.options.onDeactivation.apply(this, e)
            }
        },
        check: function() {
            var f, e = Array.prototype.slice.apply(arguments);
            if (this.options.check) {
                f = this.options.check.apply(this, e);
                if (this.options.toggle && this.state) {
                    if (f && this.state !== "active") {
                        this.activate()
                    } else {
                        if (!f && this.state !== "inactive") {
                            this.deactivate()
                        }
                    }
                } else {
                    if (f) {
                        this.activate()
                    } else {
                        this.deactivate()
                    }
                }
            } else {
                this.activate()
            }
            return f
        }
    };
    if (window.giscloud) {
        giscloud.Relay = a
    }
}(window.giscloud && giscloud.exposeJQuery() || $ || jQuery));
(function(f) {
    var d = (1.2).toLocaleString().match(/^[\d١٢۱۲]+(.+)[\d١٢۱۲]+$/)[1] || ".";
    function g(F) {
        if (!F || !F.replace) {
            return F
        }
        return F.replace(/[٠١٢٣٤٥٦٧٨٩]/g, function(G) {
            return G.charCodeAt(0) - 1632
        }).replace(/[۰۱۲۳۴۵۶۷۸۹]/g, function(G) {
            return G.charCodeAt(0) - 1776
        }).replace(d, ".")
    }
    function p(G, F) {
        if (F == null ) {
            return G == null 
        }
        if (G == null ) {
            return F == null  || F === "null"
        }
        if (f.isArray(F) || f.isPlainObject(F)) {
            return JSON.stringify(F) === JSON.stringify(G)
        }
        if (typeof F === "number") {
            return F === parseFloat(G)
        }
        if (F.toString && G.toString) {
            return F.toString() === G.toString()
        }
        return F === G
    }
    function B(G, F) {
        if (typeof F === "number") {
            return parseFloat(G) > F
        }
        return G > F
    }
    function D(G, F) {
        if (typeof F === "number") {
            return parseFloat(G) >= F
        }
        return G >= F
    }
    function z(G, F) {
        if (typeof F === "number") {
            return parseFloat(G) < F
        }
        return G < F
    }
    function m(G, F) {
        if (typeof F === "number") {
            return parseFloat(G) <= F
        }
        return G <= F
    }
    function e(F) {
        return F !== null  && F !== undefined && F !== "" && (f.isArray(F) ? !!F.length : true)
    }
    function h(F) {
        return ( window[F.name] != null ) 
    }
    function a(G) {
        var H, F = this.itemByUuid(G.name);
        if (!F) {
            return false
        }
        if (!F.visible || (F.visible.state === "inactive")) {
            return false
        }
        if (G.hasValue) {
            return e(F.value)
        }
        if (!G.value) {
            return false
        }
        if (F.type === "numeric") {
            H = g(F.value)
        } else {
            H = F.value
        }
        if (G.value.hasOwnProperty("lessThan")) {
            return z(H, G.value.lessThan)
        }
        if (G.value.hasOwnProperty("lessThanOrEqual")) {
            return m(H, G.value.lessThanOrEqual)
        }
        if (G.value.hasOwnProperty("equals")) {
            return p(H, G.value.equals)
        }
        if (G.value.hasOwnProperty("moreThanOrEqual")) {
            return D(H, G.value.moreThanOrEqual)
        }
        if (G.value.hasOwnProperty("moreThan")) {
            return B(H, G.value.moreThan)
        }
        return false
    }
    function v(H, I) {
        var G, F;
        for (G = 0,
        F = I.length; G < F; G++) {
            if (C.call(this, H, I[G])) {
                return true
            }
        }
        return false
    }
    function q(H, I) {
        var G, F;
        for (G = 0,
        F = I.length; G < F; G++) {
            if (!C.call(this, H, I[G])) {
                return false
            }
        }
        return true
    }
    function r(I, J) {
        var H, F, G = 0;
        for (H = 0,
        F = J.length; H < F; H++) {
            if (C.call(this, I, J[H])) {
                G++;
                if (G > 1) {
                    return false
                }
            }
        }
        return G === 1
    }
    function C(G, F) {
        if (!F) {
            return false
        }
        if (F.env) {
            return h.call(this, F.env)
        }
        if (F.item) {
            return a.call(this, F.item)
        }
        if (F.all) {
            return q.call(this, G, F.all)
        }
        if (F.any) {
            return v.call(this, G, F.any)
        }
        if (F.one) {
            return r.call(this, G, F.one)
        }
        if (F.none) {
            return !v.call(this, G, F.none)
        }
        return false
    }
    function o(H, G) {
        var F;
        if (H == null  || typeof H !== "object") {
            return false
        }
        if (H.hasOwnProperty(G)) {
            return true
        }
        for (F in H) {
            if (H.hasOwnProperty(F) && o(H[F], G)) {
                return true
            }
        }
        return false
    }
    function u(F) {
        this.formHasDependencies = false;
        this.formHasItemDependencies = false;
        this.formHasEnvDependencies = false;
        this.items = [];
        this.itemIndex = {};
        this.triggArray = F.triggers || [];
        this.items = f.map(F.formItems || {}, f.proxy(function G(I, H) {
            if (!I.uuid) {
                I.uuid = giscloud.uuid()
            }
            this.itemIndex[I.uuid] = H;
            if (typeof I.active === "object") {
                this.formHasEnvDependencies = this.formHasEnvDependencies || o(I.active, "env");
                this.formHasItemDependencies = this.formHasItemDependencies || o(I.active, "item")
            }
            return I
        }, this));
        this.formHasDependencies = this.formHasEnvDependencies || this.formHasItemDependencies
    }
    u.prototype.itemByUuid = function(F) {
        return this.items[this.itemIndex[F]]
    }
    ;
    u.prototype.resolveDependency = function E(G, F) {
        if (F == null ) {
            return true
        }
        if (!f.isPlainObject(F)) {
            return !!F
        }
        return new giscloud.Relay({
            init: function() {
                this.item = G
            },
            onActivation: function() {
                this.item.show && this.item.show()
            },
            onDeactivation: function() {
                this.item.hide && this.item.hide()
            },
            check: f.proxy(function() {
                return C.call(this, G, F)
            }, this),
            triggers: this.triggArray,
            toggle: false
        })
    }
    ;
    if (window.giscloud) {
        giscloud.DependencyResolver = u
    }
}(window.giscloud && giscloud.exposeJQuery() || $ || jQuery));
(function(d, e, a, f) {
    giscloud.maps = {
        list: function(h, o) {
            var g = "maps"
              , m = new e.Deferred();
            if (typeof h === "function") {
                o = h;
                h = null 
            } else {
                o = o || (h && h.callback)
            }
            if (h && !h.perpage) {
                h.nototal = 1
            }
            a.rest.get(g, h).done(function() {
                var p = arguments[0]
                  , r = [];
                try {
                    e.each(p.data, function() {
                        r.push(new giscloud.Map(this))
                    });
                    if (!h || h.nototal) {
                        p.total = r.length
                    }
                    if (typeof o == "function") {
                        o(r, p.total)
                    }
                    m.resolve(r, p.total)
                } catch (q) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(q, h, p, o) {
            var g = "maps/" + q
              , m = new e.Deferred();
            if (typeof h === "function") {
                p = h;
                h = null 
            } else {
                p = p || (h && h.callback)
            }
            a.rest.get(g, h).done(function() {
                var u = arguments[0], v;
                try {
                    v = o ? u : new giscloud.Map(u);
                    if (typeof p == "function") {
                        p(v)
                    }
                    m.resolve(v)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        remove: function(g) {
            return a.rest.call("DELETE", "maps/" + g)
        },
        update: function(h, g) {
            return a.rest.call("PUT", "maps/" + h, a.toXml("map", g), "text/xml")
        },
        create: function(h) {
            var g = new e.Deferred();
            a.rest.call("post", "maps/", a.toXml("map", h), "text/xml").fail(g.reject).done(function(q, p) {
                var o = p && p.match(/maps\/(\d+)/);
                if (o && o[1] != null ) {
                    g.resolve(o[1])
                } else {
                    g.reject()
                }
            });
            return g.promise()
        },
        users: function(p) {
            var h, g, m, o = {
                owner: null ,
                editors: [],
                viewers: []
            };
            g = a.rest.get("maps/" + p, {
                expand: "owner"
            }).done(function(q) {
                o.owner = {
                    id: q.owner.id,
                    username: q.owner.username
                }
            });
            m = a.rest.get("maps/" + p + "/sharing").done(function(q) {
                if (q && q.data && q.data.length) {
                    e.each(q.data, function(r, u) {
                        if (u.view === "t") {
                            o.viewers.push({
                                id: u.user_id,
                                username: u.username
                            })
                        }
                        if (u.edit === "t") {
                            o.editors.push({
                                id: u.user_id,
                                username: u.username
                            })
                        }
                    })
                }
            });
            h = e.when(g, m);
            return h.pipe(function() {
                return o
            }).promise()
        },
        reset: function(q, o, h) {
            var g = new e.Deferred()
              , m = this
              , p = {};
            if (e.isArray(o)) {
                p.layers = o.join()
            } else {
                if (o == null ) {
                    p.layers = o
                }
            }
            if (h && h.cascade) {
                p.cascade = true
            }
            a.rest.call("DELETE", "map_cache/" + q + "/2/", p).done(function() {
                g.resolveWith(m)
            }).fail(function() {
                g.rejectWith(m, arguments)
            });
            return g.promise()
        }
    }
})(window, window.giscloud.exposeJQuery(), window.giscloud.common());
(function(d, e, a, f) {
    giscloud.layers = {
        list: function(h, o) {
            var g = "layers"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = null 
            } else {
                o = o || h.callback
            }
            if (h && !h.perpage) {
                h.nototal = 1
            }
            a.rest.get(g, h).done(function() {
                var p = arguments[0]
                  , r = [];
                try {
                    e.each(p.data, function() {
                        r.push(new giscloud.Layer(this))
                    });
                    if (!h || h.nototal) {
                        p.total = r.length
                    }
                    if (typeof o == "function") {
                        o(r, p.total)
                    }
                    m.resolve(r, p.total)
                } catch (q) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(p, h, o) {
            var g = "layers/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = null 
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function() {
                var u = arguments[0], q;
                try {
                    q = new giscloud.Layer(u);
                    if (typeof o == "function") {
                        o(q)
                    }
                    m.resolve(q)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byMapId: function(m, h, p) {
            var g = "maps/" + m + "/layers"
              , o = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                p = h;
                h = null 
            } else {
                p = p || h.callback
            }
            if (h && !h.perpage) {
                h.nototal = 1
            }
            a.rest.get(g, h).done(function() {
                var q = arguments[0]
                  , u = [];
                try {
                    e.each(q.data, function() {
                        u.push(new giscloud.Layer(this))
                    });
                    if (!h || h.nototal) {
                        q.total = u.length
                    }
                    if (typeof p == "function") {
                        p(u, q.total)
                    }
                    o.resolve(u, q.total)
                } catch (r) {
                    o.reject()
                }
            }).fail(function() {
                o.reject()
            });
            return o.promise()
        },
        remove: function(m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("DELETE", "layers/" + m).done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        update: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            if (o == null ) {
                return this.create(m)
            }
            a.rest.call("PUT", "layers/" + o, JSON.stringify(m), "application/json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        create: function(m) {
            var g = new e.Deferred()
              , h = this;
            delete m.id;
            delete m.modified;
            delete m.created;
            delete m.accessed;
            if (m.datasourceId) {
                m.datasource_id = m.datasourceId;
                delete m.datasourceId
            }
            if (m.mapId) {
                m.map_id = m.mapId;
                delete m.mapId
            }
            a.rest.call("POST", "layers/", JSON.stringify(m), "application/json").done(function(q, p) {
                var o = p && p.match(/layers\/(\d+)/);
                g.resolveWith(h, [o && o[1]])
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        reset: function(h, m) {
            var g = new e.Deferred()
              , o = this;
            a.rest.call("DELETE", "map_cache/" + h + "/2?layers=" + m.join()).done(function() {
                g.resolveWith(o)
            }).fail(function() {
                g.rejectWith(o, arguments)
            });
            return g.promise()
        },
        render: function(p, o, m, g) {
            var h = a.rest.url() + "layers/" + p + "/render." + o + "?invalidate=true";
            if (m && g) {
                h += "&width=" + m + "&height=" + g
            }
            return h
        },
        "export": function(o, m, h) {
            var g = a.rest.url() + "layers/" + o + "/export." + m;
            if (h) {
                g += ".zip"
            }
            return g
        },
        refreshColumns: function(m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("PUT", "layers/" + m + "/refresh_columns.json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        attributeOps: {
            distinct: function(g, o, m) {
                var h = "layers/" + g + "/attributeops/distinct.json";
                m = m || {
                    perpage: 10,
                    page: 1
                };
                m.attribute = o;
                return a.rest.get(h, m).pipe(function(p) {
                    return p
                }, function(p) {
                    return p
                }).promise()
            },
            info: function(g, m) {
                var h = "layers/" + g + "/attributeops/info.json";
                return a.rest.get(h, m).pipe(function(o) {
                    return o
                }, function(o) {
                    return o
                }).promise()
            },
        }
    }
})(window, window.giscloud.exposeJQuery(), window.giscloud.common());
(function(e, f, d, g) {
    function a(p) {
        var m, o, h = {};
        for (o in p) {
            if (p.hasOwnProperty(o)) {
                m = o.replace(".", "\\.");
                h[m] = p[o]
            }
        }
        return h
    }
    giscloud.features = {
        byLayer: function(h, o, q) {
            var m = "layers/" + h + "/features"
              , p = new f.Deferred();
            o = o || {};
            if (typeof o === "function") {
                q = o;
                o = null 
            } else {
                q = q || o.callback
            }
            d.rest.get(m, o).done(function(v) {
                var r = v
                  , u = [];
                f.each(r.data, function() {
                    this.layerId = h;
                    this.meta = r.meta;
                    u.push(new giscloud.Feature(this))
                });
                if (typeof q == "function") {
                    q(u, r.total)
                }
                p.resolve(u, r.total)
            }).fail(function() {
                p.reject()
            });
            return p.promise()
        },
        byId: function(h, q, o, r) {
            var m = "layers/" + h + "/features/" + q
              , p = new f.Deferred();
            o = o || {};
            if (typeof o === "function") {
                r = o;
                o = null 
            } else {
                r = r || o.callback
            }
            d.rest.get(m, o).done(function(z) {
                var v = z, u;
                v.layerId = h;
                u = new giscloud.Feature(v);
                if (typeof r == "function") {
                    r(u)
                }
                p.resolve(u)
            }).fail(function() {
                p.reject()
            });
            return p.promise()
        },
        byBounds: function(h, p, o, u) {
            var m = "layers/" + h + "/features", q = new f.Deferred(), r;
            o = o || {};
            if (typeof o === "function") {
                u = o;
                o = {}
            } else {
                u = u || o.callback
            }
            o.bounds = p.toString();
            if (o.requestByPost) {
                o.requestByPost = g;
                r = d.rest.call("post", m + "?_method=GET", o)
            } else {
                r = d.rest.get(m, o)
            }
            r.done(function(B) {
                var v = B
                  , z = [];
                f.each(v.data, function() {
                    this.layerId = h;
                    z.push(new giscloud.Feature(this))
                });
                if (typeof u == "function") {
                    u(z, v.total, h, o)
                }
                q.resolve(z, v.total, h, o)
            }).fail(function() {
                q.reject()
            });
            return q.promise()
        },
        remove: function(h, p) {
            var m = new f.Deferred()
              , o = this;
            d.rest.call("DELETE", "layers/" + h + "/features/" + p).done(function() {
                m.resolveWith(o)
            }).fail(function() {
                m.rejectWith(o, arguments)
            });
            return m.promise()
        },
        update: function(h, u, r, p) {
            var m = new f.Deferred(), q = this, o;
            if (r && r.geometry) {
                if (r.geometry.toOGC) {
                    r.geometry = r.geometry.toOGC()
                }
            }
            if (u == null ) {
                return this.create(h, r, p)
            }
            o = "layers/" + h + "/features/" + u;
            if (p) {
                o += "?" + f.map(p, function(z, v) {
                    return v + "=" + z
                }).join("&")
            }
            d.rest.call("PUT", o, JSON.stringify(r), "application/json").done(function() {
                m.resolveWith(q, [u])
            }).fail(function() {
                m.rejectWith(q, arguments)
            });
            return m.promise()
        },
        create: function(h, r, p) {
            var m = new f.Deferred()
              , q = this
              , o = "layers/" + h + "/features/";
            if (p) {
                o += "?" + f.map(p, function(v, u) {
                    return u + "=" + v
                }).join("&")
            }
            d.rest.call("post", o, JSON.stringify(r), "application/json").done(function(B, v, z) {
                var C = v || z.getResponseHeader("Location")
                  , u = C && C.match(/features\/(\d+)/);
                m.resolveWith(q, [u && u[1]])
            }).fail(function() {
                m.rejectWith(q, arguments)
            });
            return m.promise()
        },
        email: function(m) {
            var h = "layers/" + m.layer_id + "/features/email"
              , p = new f.Deferred()
              , o = this;
            if (!m || !m.layer_id || !m.feature_ids || (!m.usernames && !m.emails)) {
                return p.reject()
            }
            m.feature_ids = (jQuery.type(m.feature_ids) == "array") ? m.feature_ids.join() : m.feature_ids;
            m.usernames = (jQuery.type(m.usernames) == "array") ? m.usernames.join() : m.usernames;
            m.emails = (jQuery.type(m.emails) == "array") ? m.emails.join() : m.emails;
            d.rest.get(h, m).done(function() {
                p.resolve()
            }).fail(function(q) {
                var r = f.parseJSON(q.responseText);
                p.rejectWith(o, [q, r])
            });
            return p.promise()
        },
        emailCSV: function(m) {
            var h = "layers/" + m.layer_id + "/features.csv"
              , p = new f.Deferred()
              , o = this;
            if (!m || !m.layer_id) {
                return p.reject()
            }
            m.format = 1;
            m.emails = (jQuery.type(m.emails) == "array") ? m.emails.join() : m.emails;
            d.rest.get(h, m).done(function() {
                p.resolve()
            }).fail(function(q) {
                var r = f.parseJSON(q.responseText);
                p.rejectWith(o, [q, r])
            });
            return p.promise()
        }
    }
}(window, window.giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.graphicFeatures = {
        list: function(h, o) {
            var g = "graphicfeatures"
              , m = new e.Deferred();
            if (typeof h === "function") {
                o = h;
                h = null 
            } else {
                o = o || (h && h.callback)
            }
            if (h && !h.perpage) {
                h.nototal = 1
            }
            a.rest.get(g, h).done(function() {
                var p = arguments[0]
                  , q = [];
                try {
                    e.each(p.data, function(u, v) {
                        q.push(new giscloud.GraphicFeature({
                            id: v.id,
                            resourceId: v.resource_id,
                            geometry: giscloud.geometry.fromOGC(v.geometry),
                            style: giscloud.GraphicStyle.parse(v.style)
                        }))
                    });
                    if (!h || h.nototal) {
                        p.total = q.length
                    }
                    if (typeof o == "function") {
                        o(q, p.total)
                    }
                    m.resolve(q, p.total)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(q, h, p) {
            var m = q && q.match ? parseInt(q.match(/^(?:graphic_orig)?(\d+)$/)[1], 10) : q
              , g = "graphicfeatures/" + m
              , o = new e.Deferred();
            if (h && h.context && h.contextId) {
                g = h.context + "/" + h.contextId + "/" + g
            }
            if (typeof h === "function") {
                p = h;
                h = null 
            } else {
                p = p || (h && h.callback)
            }
            a.rest.get(g, h).done(function(u) {
                var v;
                try {
                    v = new giscloud.GraphicFeature({
                        id: u.id,
                        resourceId: u.resource_id,
                        geometry: giscloud.geometry.fromOGC(u.geometry),
                        style: giscloud.GraphicStyle.parse(u.style)
                    });
                    if (typeof p == "function") {
                        p(v)
                    }
                    o.resolve(v)
                } catch (r) {
                    o.reject()
                }
            }).fail(function() {
                o.reject()
            });
            return o.promise()
        },
        remove: function(h) {
            var g = h && h.match ? parseInt(h.match(/^(?:graphic_orig)?(\d+)$/)[1], 10) : h;
            return a.rest.call("DELETE", "graphicfeatures/" + g)
        },
        update: function(m, h) {
            var g = m && m.match ? parseInt(m.match(/^(?:graphic_orig)?(\d+)$/)[1], 10) : m;
            return a.rest.call("PUT", "graphicfeatures/" + g, a.toXml("graphicfeature", h), "text/xml")
        },
        create: function(h) {
            var g = new e.Deferred();
            a.rest.call("POST", "graphicfeatures/", a.toXml("graphicfeature", h), "text/xml").fail(g.reject).done(function(q, p) {
                var o = p && p.match(/graphicfeatures\/(\d+)/);
                if (o && o[1] != null ) {
                    g.resolve(o[1])
                } else {
                    g.reject()
                }
            });
            return g.promise()
        }
    }
})(window, window.giscloud.exposeJQuery(), window.giscloud.common());
(function(d, a, e) {
    giscloud.search = {
        features: function(o, f, g, h, p) {
            var m;
            h = h || {};
            if (typeof h === "function") {
                p = h;
                h = null 
            } else {
                p = p || h.callback
            }
            h.query = o;
            h.fields = f && f.toString();
            if (g) {
                if (g instanceof giscloud.LonLat) {
                    h.x = g.lon;
                    h.y = g.lat
                } else {
                    if (g.x != null  && g.y != null ) {
                        h.x = g.x;
                        h.y = g.y
                    }
                }
            } else {
                h.x = h.y = 0
            }
            m = new d.Deferred();
            a.rest.get("search", h).done(function(q) {
                var r = [];
                try {
                    d.each(q.data, function() {
                        r.push(new giscloud.Feature(this))
                    });
                    m.resolve(r, q.total)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            if (p) {
                m.done(p)
            }
            return m.promise()
        }
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(g, m) {
    var a, f, e, h = ["id", "created", "lastlog", "modified", "username", "email", {
        field: "email_md5",
        alias: "emailMd5"
    }, "file_feature_count", "db_feature_count", "feature_count_limit", "storage_raster", "storage_raster_limit", "subscriptions", "resource", "options", "active", "roles"], d = ["created", "lastlog", "modified"], o = ["language", {
        field: "firstname",
        alias: "firstName"
    }, {
        field: "lastname",
        alias: "lastName"
    }, "info", "phone", "mobile", "company", {
        field: "web",
        alias: "website"
    }];
    giscloud.User = function(q) {
        var r, p, u;
        for (r = 0,
        p = h.length; r < p; r++) {
            u = h[r];
            this[u.alias || u] = a(u.field || u, q)
        }
        for (r = 0,
        p = o.length; r < p; r++) {
            u = o[r];
            this[u.alias || u] = f(u.field || u, q)
        }
        for (r = 0,
        p = d.length; r < p; r++) {
            u = d[r];
            q[u.field || u] = e(q[u.field || u])
        }
    }
    ;
    giscloud.User.prototype = {
        update: function() {
            var q, p, u, r;
            r = {};
            for (q = 0,
            p = o.length; q < p; q++) {
                u = o[q];
                r[u.field || u] = this[u.alias || u]()
            }
            return giscloud.users.update(this.id(), r)
        },
        remove: function() {
            return giscloud.users.remove(this.id())
        },
        unsubscribe: function(p) {
            return giscloud.users.unsubscribe(this.id(), p)
        },
        optionByName: function(p, q) {
            return giscloud.options.byName(this.id(), p, {}, q)
        },
        gravatarElement: function(q, u, p) {
            var r = this.emailMd5() || this.email();
            if (!r || !giscloud.gravatar) {
                return null 
            }
            return giscloud.gravatar.element(this, r, q, u, p)
        },
        gravatarImage: function(q, p, v, u) {
            var r = this.emailMd5() || this.email();
            if (!r || !giscloud.gravatar) {
                return null 
            }
            return giscloud.gravatar.image(r, q, p, v, u)
        },
        gravatarUrl: function(p, u, r) {
            var q = this.emailMd5() || this.email();
            if (!q || !giscloud.gravatar) {
                return null 
            }
            return giscloud.gravatar.url(q, p, u, r)
        },
        gravatarProfile: function() {
            var p = this.emailMd5() || this.email();
            if (!p || !giscloud.gravatar) {
                return g.Deferred().fail(null )
            }
            return giscloud.gravatar.profile(p)
        }
    };
    e = function(q) {
        var p = new Date(q * 1000);
        if (p && !isNaN(p.getTime())) {
            return p
        } else {
            return q
        }
    }
    ;
    a = function(q, p) {
        return function() {
            return p[q]
        }
    }
    ;
    f = function(r, p, q) {
        return function(u) {
            if (u !== m) {
                p[r] = u;
                return q
            } else {
                return p[r]
            }
        }
    }
}(giscloud.exposeJQuery()));
(function(d, e, a, f) {
    giscloud.users = {
        list: function(h, o) {
            var g = "users"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            h.expand = "roles, options";
            a.rest.get(g, h).done(function(q) {
                var r, p, v = [];
                try {
                    for (r = 0,
                    p = q.data.length; r < p; r++) {
                        if (q.data[r].options && q.data[r].options.length) {
                            q.data[r]._options = {};
                            e.each(q.data[r].options, function(B, z) {
                                q.data[r]._options[z.name] = z.value
                            });
                            q.data[r].options = q.data[r]._options;
                            delete q.data[r]._options
                        } else {
                            q.data[r].options = null 
                        }
                        v.push(new giscloud.User(q.data[r]))
                    }
                    if (typeof o == "function") {
                        o(v)
                    }
                    m.resolve(v)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(p, h, o) {
            var g = "users/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            h.expand = "roles,options,subscriptions,resource";
            a.rest.get(g, h).done(function(r) {
                var q;
                try {
                    if (r.options && r.options.length) {
                        r._options = {};
                        e.each(r.options, function(z, v) {
                            r._options[v.name] = v.value
                        });
                        r.options = r._options;
                        delete r._options
                    } else {
                        r.options = null 
                    }
                    q = new giscloud.User(r);
                    if (typeof o == "function") {
                        o(q)
                    }
                    m.resolve(q)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        current: function(h, o) {
            var g = "users/current"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            h.expand = "roles,options";
            a.rest.get(g, h).done(function(q) {
                var p;
                try {
                    if (q.options && q.options.length) {
                        q._options = {};
                        e.each(q.options, function(v, u) {
                            q._options[u.name] = u.value
                        });
                        q.options = q._options;
                        delete q._options
                    } else {
                        q.options = null 
                    }
                    p = new giscloud.User(q);
                    if (typeof o == "function") {
                        o(p)
                    }
                    m.resolve(p)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        remove: function(m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("DELETE", "users/" + m).done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        unsubscribe: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("DELETE", "users/" + o + "/subscriptions/" + m).done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        update: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("PUT", "users/" + o, JSON.stringify(m), "application/json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        create: function(m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("post", "users/", JSON.stringify(m), "application/json").done(function(q, p) {
                var o = p && p.match(/users\/(\d+)/);
                g.resolveWith(h, [o && o[1]])
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.userOptions = {
        userId: function() {
            return "current"
        },
        list: function() {
            var e = "users/" + this.userId() + "/options.json";
            return a.rest.get(e).pipe(function(f) {
                return f.data
            })
        },
        byId: function(f) {
            var e = "users/" + this.userId() + "/options/" + f + ".json";
            return a.rest.get(e).promise()
        },
        byName: function(e) {
            return this.byId(e)
        },
        create: function(f, h) {
            var e = "users/" + this.userId() + "/options.json"
              , g = {
                name: f,
                value: h || null 
            };
            return a.rest.call("post", e, g, "application/json").pipe(function(m, o) {
                return o && o.match && o.match(/options\/(\d+)/)[1]
            })
        },
        update: function(e, g, m) {
            var f = "users/" + this.userId() + "/options/" + e + ".json"
              , h = {
                name: (typeof m === "undefined") ? e : g,
                value: (typeof m === "undefined") ? g : m
            };
            return a.rest.call("put", f, h, "application/json").promise()
        },
        remove: function(f) {
            var e = "users/" + this.userId() + "/options/" + f + ".json";
            return a.rest.call("DELETE", e).promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(e, d) {
    function a(f) {
        return {
            id: f.id,
            description: f.key_desc,
            created: new Date(f.created),
            accessed: new Date(f.accessed),
            trunc: f.key_trunc,
            scope: f.scope && (f.scope.split ? f.scope.split(",") : [f.scope]),
            active: f.active === "t"
        }
    }
    giscloud.keys = {
        list: function() {
            return d.rest.get("keys.json").then(function(f) {
                var g = f && e.map(f.data || [], a);
                if (!g) {
                    return e.Deferred().reject(f)
                }
                return e.Deferred().resolve(g, f.total)
            })
        },
        byId: function(f) {
            return d.rest.get("keys/" + f + ".json").then(a)
        },
        add: function(h) {
            var g = "keys.json", f = new e.Deferred(), m;
            if (typeof h === "string") {
                m = {
                    key_desc: h
                }
            } else {
                if (e.isPlainObject(h)) {
                    m = h;
                    if (m.description) {
                        m.key_desc = m.description;
                        delete m.description
                    }
                } else {
                    m = {}
                }
            }
            if (m.scope && e.isArray(m.scope)) {
                m.scope = m.scope.join(",")
            }
            d.rest.call("post", g, JSON.stringify(m), "application/json", true).done(function(o, p) {
                f.resolve({
                    id: p && p.match && p.match(/keys\/(\d+)/)[1],
                    key: o.value
                })
            }).fail(function() {
                f.reject()
            });
            return f.promise()
        },
        remove: function(h) {
            var f = new e.Deferred()
              , g = this;
            d.rest.call("DELETE", "keys/" + h).done(function() {
                f.resolveWith(g)
            }).fail(function() {
                f.rejectWith(g, arguments)
            });
            return f.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.payment = giscloud.payment || {};
    giscloud.payment.plans = {
        list: function(h, o) {
            var g = "payment/plans"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var r, p, v = [];
                try {
                    for (r = 0,
                    p = q.data.length; r < p; r++) {
                        if (q.data[r].options && q.data[r].options.length) {
                            q.data[r]._options = {};
                            e.each(q.data[r].options, function(B, z) {
                                q.data[B]._options[z.name] = z.value
                            });
                            q.data[r].options = q.data[r]._options;
                            delete q.data[r]._options
                        } else {
                            q.data[r].options = null 
                        }
                        v.push(q.data[r])
                    }
                    if (typeof o == "function") {
                        o(v)
                    }
                    m.resolve(v)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        create: function(h) {
            var g = new e.Deferred();
            a.rest.call("post", "payment/plans", h, "application/json").done(function(q, p) {
                var o = p && p.match(/plans\/(\w+)/);
                g.resolve([o && o[1]])
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
        remove: function(h) {
            var g = new e.Deferred();
            a.rest.call("DELETE", "payment/plans/" + h).done(function() {
                g.resolve()
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        update: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("PUT", "payment/plans/" + o, JSON.stringify(m), "application/json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        byId: function(p, h, o) {
            var g = "payment/plans/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var u;
                try {
                    if (q.options && q.options.length) {
                        q._options = {};
                        e.each(q.options, function(z, v) {
                            q._options[v.name] = v.value
                        });
                        q.options = q._options;
                        delete q._options
                    } else {
                        q.options = null 
                    }
                    u = q;
                    if (typeof o == "function") {
                        o(u)
                    }
                    m.resolve(u)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.payment = giscloud.payment || {};
    giscloud.payment.coupons = {
        list: function(h, o) {
            var g = "payment/coupons"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var r, p, v = [];
                try {
                    for (r = 0,
                    p = q.data.length; r < p; r++) {
                        v.push(q.data[r])
                    }
                    if (typeof o == "function") {
                        o(v)
                    }
                    m.resolve(v)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(p, h, o) {
            var g = "payment/coupons/" + p
              , m = new e.Deferred();
            if (!p || !(p.length > 0)) {
                console.warn("Coupon id is not specified.")
            }
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(r) {
                var q;
                try {
                    q = r;
                    if (typeof o == "function") {
                        o(q)
                    }
                    m.resolve(q)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.payment = giscloud.payment || {};
    giscloud.payment.cards = {
        add: function(p, m) {
            var g = new e.Deferred();
            if (!p || !m) {
                return
            }
            var h = "payment/customers/" + p + "/cards"
              , o = {
                token: m
            };
            a.rest.call("post", h, a.toXml("card", o), "text/xml").done(function(r, q) {
                g.resolve()
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
        makeDefault: function(p, g) {
            var h = new e.Deferred(), o = this, m;
            var m = "payment/customers/" + p + "/cards/" + g + "/makedefault";
            a.rest.call("PUT", m, null , "application/json").done(function() {
                h.resolveWith(o, [])
            }).fail(function() {
                h.rejectWith(o, arguments)
            });
            return h.promise()
        },
        remove: function(o, g) {
            var h = new e.Deferred();
            var m = "payment/customers/" + o + "/cards/" + g;
            a.rest.call("DELETE", m).done(function() {
                h.resolve()
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        list: function(o, h, p) {
            var g = "payment/customers/" + o + "/cards"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                p = h;
                h = {}
            } else {
                p = p || h.callback
            }
            a.rest.get(g, h).done(function(r) {
                var u, q, z = [];
                try {
                    for (u = 0,
                    q = r.data.length; u < q; u++) {
                        z.push(r.data[u])
                    }
                    if (typeof p == "function") {
                        p(z)
                    }
                    m.resolve(z)
                } catch (v) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.payment = giscloud.payment || {};
    giscloud.payment.customers = {
        create: function(o) {
            var h = "payment/customers"
              , g = new e.Deferred()
              , m = this;
            a.rest.call("post", h, JSON.stringify(o), "application/json").done(function(r, q) {
                var p = q && q.match(/payment\/customers\/(\d+)/);
                g.resolveWith(m, [p && p[1]])
            }).fail(function() {
                g.rejectWith(m, arguments)
            });
            return g.promise()
        },
        remove: function(o) {
            var h = "payment/customers/" + o
              , g = new e.Deferred()
              , m = this;
            a.rest.call("DELETE", h).done(function() {
                g.resolveWith(m)
            }).fail(function() {
                g.rejectWith(m, arguments)
            });
            return g.promise()
        },
        list: function(h, o) {
            var g = "payment/customers"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            if (h && h.userId) {
                g = "users/" + h.userId + "/payment/customers"
            }
            a.rest.get(g, h).done(function(q) {
                var u, p, r = [];
                try {
                    for (u = 0,
                    p = q.data.length; u < p; u++) {
                        r.push(q.data[u])
                    }
                    if (typeof o == "function") {
                        o(r)
                    }
                    m.resolve(r)
                } catch (v) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.payment = giscloud.payment || {};
    giscloud.payment.subscriptions = {
        list: function(o, h, p) {
            var g = "payment/customers/" + o + "/subscriptions"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                p = h;
                h = {}
            } else {
                p = p || h.callback
            }
            a.rest.get(g, h).done(function(r) {
                var u, q, z = [];
                try {
                    for (u = 0,
                    q = r.data.length; u < q; u++) {
                        z.push(r.data[u])
                    }
                    if (typeof p == "function") {
                        p(z)
                    }
                    m.resolve(z)
                } catch (v) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        remove: function(o) {
            var h = "payment/subscriptions/" + o
              , g = new e.Deferred()
              , m = this;
            a.rest.call("DELETE", h).done(function() {
                g.resolveWith(m)
            }).fail(function() {
                g.rejectWith(m, arguments)
            });
            return g.promise()
        },
        create: function(p, o) {
            var h = "payment/customers/" + p + "/subscriptions"
              , g = new e.Deferred()
              , m = this;
            a.rest.call("post", h, JSON.stringify(o), "application/json").done(function(u, r) {
                var q = r && r.match(/payment\/subscriptions\/(\d+)/);
                g.resolveWith(m, [q && q[1]])
            }).fail(function() {
                g.rejectWith(m, arguments)
            });
            return g.promise()
        },
        update: function(p, o) {
            var h = "payment/subscriptions/" + p
              , g = new e.Deferred()
              , m = this;
            a.rest.call("PUT", h, JSON.stringify(o), "application/json").done(function() {
                g.resolveWith(m)
            }).fail(function() {
                g.rejectWith(m, arguments)
            });
            return g.promise()
        },
        byId: function(p, h, o) {
            var g = "payment/subscriptions/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var u;
                try {
                    u = q;
                    if (typeof o == "function") {
                        o(u)
                    }
                    m.resolve(u)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.apps = {
        list: function(h, o) {
            var g = "apps"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var r, p, v = [];
                try {
                    for (r = 0,
                    p = q.data.length; r < p; r++) {
                        v.push(q.data[r])
                    }
                    if (typeof o == "function") {
                        o(v)
                    }
                    m.resolve(v)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(p, h, o) {
            var g = "apps/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var u;
                try {
                    u = q;
                    if (typeof o == "function") {
                        o(u)
                    }
                    m.resolve(u)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.appinstances = {
        list: function(h, o) {
            var g = "appinstances"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(r) {
                var u, q, p = [];
                try {
                    for (u = 0,
                    q = r.data.length; u < q; u++) {
                        p.push(r.data[u])
                    }
                    if (typeof o == "function") {
                        o(p)
                    }
                    m.resolve(p)
                } catch (v) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        create: function(h) {
            var g = new e.Deferred();
            a.rest.call("post", "appinstances", h, "application/json").done(function(q, p) {
                var o = p && p.match(/appinstances\/(\w+)/);
                g.resolve([o && o[1]])
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
        remove: function(h) {
            var g = new e.Deferred();
            a.rest.call("DELETE", "appinstances/" + h).done(function() {
                g.resolve()
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        update: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("PUT", "appinstances/" + o, JSON.stringify(m), "application/json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        byId: function(p, h, o) {
            var g = "appinstances/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var u;
                try {
                    u = q;
                    if (typeof o == "function") {
                        o(u)
                    }
                    m.resolve(u)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.announcements = {
        list: function(h, o) {
            var g = "announcements"
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var r, p, v = [];
                try {
                    if (typeof o == "function") {
                        o(v)
                    }
                    m.resolve(q)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        create: function(h) {
            var g = new e.Deferred();
            a.rest.call("post", "announcements", h, "application/json").done(function(q, p) {
                var o = p && p.match(/announcements\/(\w+)/);
                g.resolve([o && o[1]])
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
        remove: function(h) {
            var g = new e.Deferred();
            a.rest.call("DELETE", "announcements/" + h).done(function() {
                g.resolve()
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        update: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            a.rest.call("PUT", "announcements/" + o, JSON.stringify(m), "application/json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        byId: function(p, h, o) {
            var g = "announcements/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = {}
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function(q) {
                var r;
                try {
                    r = q;
                    if (typeof o == "function") {
                        o(r)
                    }
                    m.resolve(r)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.forms = {
        byId: function(f, e) {
            return a.rest.get("forms/" + f + ".json", e || {}).then(function(g) {
                return g
            })
        },
        byLayerAndId: function(e, g, f) {
            return a.rest.get("layers/" + e + "/forms/" + g + ".json", f || {}).then(function(h) {
                return h
            })
        },
        create: function(g, h) {
            var f = "forms.json"
              , e = new d.Deferred()
              , m = {
                name: g,
                definition: (typeof h === "string") ? h : JSON.stringify(h)
            };
            a.rest.call("post", f, m, "application/json").done(function(o, p) {
                e.resolve(p && p.match && p.match(/forms\/(\d+)/)[1])
            }).fail(function() {
                e.reject()
            });
            return e.promise()
        },
        update: function(o, g, h) {
            var f = "forms/" + o + ".json"
              , e = new d.Deferred()
              , m = {
                name: g,
                definition: (typeof h === "string") ? h : JSON.stringify(h)
            };
            a.rest.call("put", f, m, "application/json").then(e.resolve, e.reject);
            return e.promise()
        },
        setLayerMappings: function(e, m, o) {
            var g = "layers/" + e + "/forms/" + m + ".json"
              , f = new d.Deferred()
              , h = {};
            if (o != null ) {
                h.mappings = o
            }
            a.rest.call("put", g, h, "application/json").done(function() {
                f.resolve()
            }).fail(function() {
                f.reject()
            });
            return f.promise()
        },
        remove: function(g) {
            var e = new d.Deferred()
              , f = this;
            a.rest.call("DELETE", "forms/" + g).done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(e, d) {
    function a(f) {
        return "?" + e.map(f, function(h, g) {
            if (g == "connectionId") {
                g = "connection_id"
            }
            if (g == "noGeometryField") {
                g = "no_geometry_field"
            }
            if (g == "perPage") {
                g = "perpage"
            }
            return g + "=" + h
        }).join("&")
    }
    giscloud.tables = {
        list: function(g) {
            var f = "tables"
              , h = new e.Deferred();
            if (g) {
                f += "?" + e.map(g, function(o, m) {
                    if (m == "connectionId") {
                        m = "connection_id"
                    }
                    if (m == "meta") {
                        m = "expand";
                        o = "meta"
                    }
                    return m + "=" + o
                }).join("&")
            }
            d.rest.get(f).done(function(m) {
                h.resolve(m)
            }).fail(function() {
                h.reject(arguments)
            });
            return h.promise()
        },
        "export": function(f, h) {
            var g = d.rest.url() + "tables/" + f + "/rows.csv";
            if (h) {
                g += a(h)
            }
            return g
        },
        byName: function(h, g) {
            var f = "tables/" + h
              , m = new e.Deferred();
            if (g) {
                e.each(g, function(o, p) {
                    if (o == "connectionId") {
                        g.connection_id = p;
                        delete g[o]
                    }
                    if (o == "count") {
                        g.expand = "count";
                        delete g[o]
                    }
                })
            }
            d.rest.get(f, g).done(function(o) {
                m.resolve(o)
            }).fail(function() {
                m.reject(arguments)
            });
            return m.promise()
        },
        rows: {
            list: function(h, g) {
                var f = "tables/" + h + "/rows"
                  , m = new e.Deferred();
                if (g) {
                    f += a(g)
                }
                d.rest.get(f).done(function(o) {
                    m.resolve(o)
                }).fail(function() {
                    m.reject(arguments)
                });
                return m.promise()
            },
            add: function(m, o, h) {
                var g = "tables/" + m + "/rows"
                  , f = new e.Deferred();
                if (!o) {
                    return
                }
                if (h) {
                    g += "?" + e.map(h, function(q, p) {
                        if (p == "connectionId") {
                            p = "connection_id"
                        }
                        return p + "=" + q
                    }).join("&")
                }
                d.rest.call("post", g, d.toXml("table", o), "text/xml").done(function(r, q) {
                    var p = q && q.match(/tables\/rows\/(\w+)/);
                    f.resolve(p && p[1])
                }).fail(function() {
                    f.reject(arguments)
                });
                return f.promise()
            },
            remove: function(m, o, h) {
                var g = "tables/" + m + "/rows/" + o
                  , f = new e.Deferred();
                if (h) {
                    g += "?" + e.map(h, function(q, p) {
                        if (p == "connectionId") {
                            p = "connection_id"
                        }
                        return p + "=" + q
                    }).join("&")
                }
                d.rest.call("DELETE", g).done(function() {
                    f.resolve()
                }).fail(function() {
                    f.reject(arguments)
                });
                return f.promise()
            },
            update: function(m, p, o, h) {
                var g = "tables/" + m + "/rows/" + p
                  , f = new e.Deferred();
                if (!o) {
                    return
                }
                if (h) {
                    g += "?" + e.map(h, function(r, q) {
                        if (q == "connectionId") {
                            q = "connection_id"
                        }
                        return q + "=" + r
                    }).join("&")
                }
                d.rest.call("put", g, JSON.stringify(o), "application/json").done(function(r, q) {
                    f.resolve([p])
                }).fail(function() {
                    f.reject(arguments)
                });
                return f.promise()
            }
        },
        reset: function(m, h) {
            var f = new e.Deferred()
              , g = "tables/" + m + "/reset";
            if (h) {
                g += "?" + e.map(h, function(p, o) {
                    if (o == "connectionId") {
                        o = "connection_id"
                    }
                    return o + "=" + p
                }).join("&")
            }
            d.rest.call("DELETE", g).done(function() {
                f.resolve()
            }).fail(function() {
                f.reject(arguments)
            });
            return f.promise()
        },
        remove: function(m, h) {
            var f = new e.Deferred()
              , g = "tables/" + m;
            if (h) {
                g += "?" + e.map(h, function(p, o) {
                    if (o == "connectionId") {
                        o = "connection_id"
                    }
                    return o + "=" + p
                }).join("&")
            }
            d.rest.call("DELETE", g).done(function() {
                f.resolve()
            }).fail(function() {
                f.reject(arguments)
            });
            return f.promise()
        },
        create: function(m, h) {
            var f = new e.Deferred()
              , g = "tables";
            if (!m) {
                return
            }
            if (m.geometry === "line" || m.geometry === "LINE") {
                m.geometry = "LINESTRING"
            }
            if (h) {
                g += "?" + e.map(h, function(p, o) {
                    if (o == "connectionId") {
                        o = "connection_id"
                    }
                    return o + "=" + p
                }).join("&")
            }
            d.rest.call("post", g, d.toXml("table", m), "text/xml").done(function(q, p) {
                var o = p && p.match(/tables\/(\w+)/);
                f.resolve([o && o[1]])
            }).fail(function() {
                f.reject(arguments)
            });
            return f.promise()
        },
        join: function(g, r, B, u, f, p, C) {
            var m = new e.Deferred()
              , D = g.table || g
              , q = r.table || r
              , v = !!g.readOnly
              , z = !!r.readOnly
              , h = "tables/" + D + "/join.json"
              , o = {
                connection_id: r.connection_id || -1,
                schema: r.schema || null ,
                table: q,
                name: B,
                on: u,
                id_fields: f,
                source_read_only: v,
                target_read_only: z
            };
            if (p && e.isArray(p.source) && e.isArray(p.target)) {
                o.fields = p
            }
            if (typeof C === "string") {
                o.join_type = C
            }
            d.rest.call("get", h, o, "application/json").done(function(H, G, I) {
                var F = I.getResponseHeader("Location")
                  , E = F && F.match(/tables\/(\w+)/);
                m.resolve([E && E[1]])
            }).fail(function() {
                m.reject(arguments)
            });
            return m.promise()
        },
        query: function(h, o, g) {
            var f = "tables/" + h + "/query.json?orm=" + o.toString()
              , m = new e.Deferred();
            if (o.options) {
                g = e.extend({}, o.options, g || {})
            }
            if (g) {
                f += "&" + e.map(g, function(q, p) {
                    if (p == "connectionId") {
                        p = "connection_id"
                    }
                    return p + "=" + q
                }).join("&")
            }
            d.rest.get(f).done(function(p) {
                m.resolve(p)
            }).fail(function() {
                m.reject(arguments)
            });
            return m.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.bookmarks = {
        list: function(f) {
            var e = "bookmarks"
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(h) {
                g.resolve(h)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        byMapId: function(g, f, m) {
            var e = "maps/" + g + "/bookmarks"
              , h = new d.Deferred();
            a.rest.get(e, f).done(function(o) {
                h.resolve(o)
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        remove: function(f) {
            var e = new d.Deferred();
            a.rest.call("DELETE", "bookmarks/" + f).done(function() {
                e.resolve()
            }).fail(function() {
                e.reject()
            });
            return e.promise()
        },
        create: function(f) {
            var e = new d.Deferred();
            if (!f) {
                return
            }
            a.rest.call("post", "bookmarks", a.toXml("bookmark", f), "text/xml").done(function(o, h) {
                var g = h && h.match(/bookmarks\/(\w+)/);
                e.resolve([g && g[1]])
            }).fail(function() {
                e.reject(arguments)
            });
            return e.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(e, g, d, h) {
    giscloud.Role = function f(o) {
        o = o || {};
        this.id = o.id;
        this.name = o.name;
        this.app_role = o.app_role || false;
        this.owner_id = o.owner_id || null ;
        this.parent_id = o.parent_id || null ;
        this.app_instance_id = o.app_instance_id || null 
    }
    ;
    giscloud.Role.prototype = {
        update: function m(o) {
            var p = this
              , q = {
                name: this.name,
            };
            if (this.id != null ) {
                return giscloud.roles.update(this.id, q, o)
            }
            return giscloud.roles.create(q, o).done(function(r) {
                p.id = r
            })
        },
        remove: function a(o) {
            return giscloud.roles.remove(this.id, o)
        },
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(d, a) {
    giscloud.roles = {
        byId: function(m, f, h) {
            var e = "roles/" + m
              , g = new d.Deferred();
            f = f || {};
            if (typeof f === "function") {
                h = f;
                f = null 
            } else {
                h = h || f.callback
            }
            a.rest.get(e, f).done(function() {
                var p = arguments[0], q;
                try {
                    q = p;
                    if (typeof h == "function") {
                        h(q)
                    }
                    g.resolve(q)
                } catch (o) {
                    g.reject()
                }
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        list: function(f, h) {
            var e = "roles"
              , g = new d.Deferred();
            f = f || {};
            if (typeof f === "function") {
                h = f;
                f = null 
            } else {
                h = h || f.callback
            }
            if (f && !f.perpage) {
                f.nototal = 1
            }
            a.rest.get(e, f).done(function() {
                var m = arguments[0]
                  , o = [];
                try {
                    d.each(m.data, function() {
                        o.push(new giscloud.Role(this))
                    });
                    if (!f || f.nototal) {
                        m.total = o.length
                    }
                    if (typeof h == "function") {
                        h(o, m.total)
                    }
                    g.resolve(o, m.total)
                } catch (p) {
                    g.reject()
                }
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        create: function(g) {
            var e = new d.Deferred()
              , f = this;
            if (g.id != null ) {
                return this.update(g.id, g)
            }
            a.rest.call("POST", "roles/", JSON.stringify(g), "application/json").done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        },
        update: function(h, g) {
            var e = new d.Deferred()
              , f = this;
            if (h == null ) {
                return this.create(g)
            }
            a.rest.call("PUT", "roles/" + h, JSON.stringify(g), "application/json").done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        },
        remove: function(g) {
            var e = new d.Deferred()
              , f = this;
            a.rest.call("DELETE", "roles/" + g).done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        },
        permissions: {
            list: function(h, f, g) {
                var e = new d.Deferred();
                a.rest.get("roles/" + h + "/permissions/list", f).done(function() {
                    var o = arguments[0], p;
                    try {
                        p = o;
                        if (typeof g == "function") {
                            g(p)
                        }
                        e.resolve(p)
                    } catch (m) {
                        e.reject()
                    }
                }).fail(function() {
                    e.reject()
                });
                return e.promise()
            },
            add: function(h, g) {
                var e = new d.Deferred()
                  , f = this;
                a.rest.call("POST", "roles/" + h + "/permissions/add", JSON.stringify(g), "application/json").done(function() {
                    e.resolveWith(f)
                }).fail(function() {
                    e.rejectWith(f, arguments)
                });
                return e.promise()
            },
            remove: function(h, g) {
                var e = new d.Deferred()
                  , f = this;
                a.rest.call("DELETE", "roles/" + h + "/permissions/remove", JSON.stringify(g), "application/json").done(function() {
                    e.resolveWith(f)
                }).fail(function() {
                    e.rejectWith(f, arguments)
                });
                return e.promise()
            },
        },
        users: {
            list: function(g, f) {
                var e = new d.Deferred();
                a.rest.get("roles/" + g + "/users/list").done(function() {
                    var m = arguments[0], o;
                    try {
                        o = m;
                        if (typeof f == "function") {
                            f(o)
                        }
                        e.resolve(o)
                    } catch (h) {
                        e.reject()
                    }
                }).fail(function() {
                    e.reject()
                });
                return e.promise()
            },
            add: function(h, g) {
                var e = new d.Deferred()
                  , f = this;
                a.rest.call("POST", "roles/" + h + "/users/add", JSON.stringify(g), "application/json").done(function() {
                    e.resolveWith(f)
                }).fail(function() {
                    e.rejectWith(f, arguments)
                });
                return e.promise()
            },
            remove: function(h, g) {
                var e = new d.Deferred()
                  , f = this;
                a.rest.call("DELETE", "roles/" + h + "/users/remove", JSON.stringify(g), "application/json").done(function() {
                    e.resolveWith(f)
                }).fail(function() {
                    e.rejectWith(f, arguments)
                });
                return e.promise()
            },
        },
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(e, f, d, g) {
    giscloud.File = function a(h) {
        h = h || {};
        this.id = h.id;
        this.resourceId = h.resourceId || h.resource_id;
        this.created = h.created && new Date(h.created * 1000);
        this.modified = h.modified && new Date(h.modified * 1000);
        this.owner = h.owner ? new giscloud.User(h.owner) : h.owner_id;
        this.pathname = h.pathname;
        this.path = h.path;
        this.filename = h.filename;
        this.extension = h.extension;
        this.size = h.size;
        if (h.details) {
            this.details = h.details
        }
        if (h.exif) {
            this.exif = {};
            if (h.exif.gps && h.exif.gps.lon && h.exif.gps.lat) {
                this.exif.gps = new giscloud.LonLat(h.exif.gps.lon,h.exif.gps.lat)
            }
            this.exif.date = h.exif.date
        }
        if (h.xmp) {
            this.xmp = {};
            this.xmp.panorama = h.xmp.panorama ? true : false
        }
        this.isDir = (h.isDir == null ) ? (h.is_dir === "t") : h.isDir
    }
    ;
    giscloud.File.prototype = {
        listContents: function(h) {
            var m;
            if (!this.isDir) {
                throw "giscloud.File: this is not a directory."
            }
            if (h) {
                m = f.extend(true, {}, h);
                if (m.expand) {
                    if (f.isArray(m.expand) && f.inArray("dir") === -1) {
                        m.expand.push("dir");
                        m.expand = m.expand.join(",")
                    } else {
                        m.expand = [m.expand, "dir"].join(",")
                    }
                }
                m.expand = "dir"
            } else {
                m = {
                    expand: "dir"
                }
            }
            return giscloud.files.byPath(this.pathname, m)
        },
        getDetails: function() {
            var h = this;
            return giscloud.files.byPath(this.pathname, {
                expand: "details"
            }).then(function(m) {
                if (m.details) {
                    h.details = f.extend(true, {}, m.details)
                }
                return h
            })
        },
        update: function() {
            var h = this
              , m = {
                path: this.path,
                filename: this.filename,
                size: this.size
            };
            if (this.id == null ) {
                return giscloud.files.create(m).done(function(o) {
                    h.id = o
                })
            }
            return giscloud.files.update(this.id, m)
        },
        remove: function() {
            return giscloud.files.remove(this.id)
        }
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(f, d) {
    function e(g) {
        return encodeURIComponent(g).replace(/%2F/g, "/")
    }
    function a(g) {
        var m;
        try {
            if (g.type === "files") {
                m = f.map(g.data || [], function(o) {
                    return new giscloud.File(o)
                });
                return f.Deferred().resolve(m, g.total)
            }
            return f.Deferred().resolve(new giscloud.File(g))
        } catch (h) {
            console.log("Error creating giscloud.File", h);
            return f.Deferred().reject("Error creating giscloud.File", h)
        }
    }
    giscloud.files = {
        list: function(h) {
            var g = "files"
              , m = new f.Deferred();
            d.rest.get(g, h).then(function(o) {
                if (!o.data) {
                    return f.Deferred().reject()
                }
                return a(o)
            }).done(function(p, o) {
                m.resolve(p, o)
            }).fail(function(p, o) {
                m.reject(p, o)
            });
            return m.promise()
        },
        byId: function(o, h) {
            var g = "files/" + o
              , m = new f.Deferred();
            if (h && h.context && h.contextId) {
                g = h.context + "/" + h.contextId + "/" + g
            }
            d.rest.get(g, h).then(function(p) {
                return a(p)
            }).done(function(q, p) {
                m.resolve(q, p)
            }).fail(function(q, p) {
                m.reject(q, p)
            });
            return m.promise()
        },
        byPath: function(h, g) {
            return this.byId(e(h) + "/bypath.json", g)
        },
        create: function(h) {
            var m = (h.path == null  || h.path === "" || h.path === "/") ? "" : (h.path + "/")
              , g = "files/" + e(m) + h.filename;
            return d.rest.call("POST", g, {}, "application/json").then(function(q, p) {
                var o = p && p.match(/files\/(\w+)/);
                dfrd.resolve(o && o[1])
            })
        },
        update: function(m, h) {
            var g = "files/" + m;
            return d.rest.call("PUT", g, JSON.stringify(h), "application/json")
        },
        remove: function(g) {
            return d.rest.call("DELETE", "files/" + g)
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(e, a) {
    function d(g) {
        try {
            return new giscloud.Stream(g)
        } catch (f) {
            console.log("Error creating stream object", err);
            return null 
        }
    }
    giscloud.streams = {
        list: function(f, h) {
            var g = "resources/" + f + "/streams"
              , m = new e.Deferred();
            a.rest.get(g, h).done(function(o) {
                m.resolve(e.map(o.data, d))
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(m, g) {
            var f = "streams/" + m
              , h = new e.Deferred();
            a.rest.get(f, g).done(function(o) {
                h.resolve(d(o))
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        update: function(m, h) {
            var f = new e.Deferred()
              , g = this;
            a.rest.call("PUT", "streams/" + m, JSON.stringify(h), "application/json").done(function() {
                f.resolveWith(g)
            }).fail(function() {
                f.rejectWith(g, arguments)
            });
            return f.promise()
        },
        remove: function(g) {
            var f = new e.Deferred();
            a.rest.call("DELETE", "streams/" + g).done(function() {
                f.resolve()
            }).fail(function() {
                f.reject()
            });
            return f.promise()
        },
        create: function(m) {
            var g = new e.Deferred()
              , f = m.context_id || m.contextId
              , h = "resources/" + f + "/streams";
            if (!m) {
                return
            }
            a.rest.call("post", h, m, "application/json").done(function(q, p) {
                var o = p && p.match(/streams\/(\w+)/);
                g.resolve(o && o[1])
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    function e(g) {
        try {
            return new giscloud.Post(g)
        } catch (f) {
            console.log("Error creating post", err);
            return null 
        }
    }
    giscloud.postTypes = {
        COMMENT: 1,
        DOCUMENT: 2,
        DOODLE: 3,
        LINK: 4
    };
    giscloud.posts = {
        list: function(m, g) {
            var f = "streams/" + m + "/posts"
              , h = new d.Deferred();
            a.rest.get(f, g).done(function(o) {
                h.resolve(d.map(o.data || [], e))
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        byId: function(m, g) {
            var f = "posts/" + m
              , h = new d.Deferred();
            a.rest.get(f, g).done(function(o) {
                h.resolve(e(o))
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        update: function(m, h) {
            var f = new d.Deferred()
              , g = this;
            a.rest.call("PUT", "posts/" + m, JSON.stringify(h), "application/json").done(function() {
                f.resolveWith(g)
            }).fail(function() {
                f.rejectWith(g, arguments)
            });
            return f.promise()
        },
        remove: function(g) {
            var f = new d.Deferred();
            a.rest.call("DELETE", "posts/" + g).done(function() {
                f.resolve()
            }).fail(function() {
                f.reject()
            });
            return f.promise()
        },
        create: function(h, g) {
            var f = new d.Deferred();
            if (!g) {
                return
            }
            a.rest.call("post", "streams/" + h + "/posts", g, "application/json").done(function(q, p) {
                var o = p && p.match(/posts\/(\w+)/);
                f.resolve(o && o[1])
            }).fail(function() {
                f.reject(arguments)
            });
            return f.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(o, m, p, e) {
    function r(v) {
        return m.map(v || [], function(z) {
            return new giscloud.Resource(z)
        })
    }
    function f(v) {
        if (v == null ) {
            return null 
        }
        if (parseInt(v, 10).toString() === v) {
            return new Date(v * 1000)
        }
        return new Date(v)
    }
    giscloud.Stream = function d(v) {
        v = v || {};
        this.id = v.id;
        this.created = f(v.created);
        this.modified = f(v.modified);
        this.owner = v.owner;
        this.title = v.title;
        this.description = v.description;
        this.contextId = v.context_id || v.contextId;
        this.resources = r(v.resources);
        this.resourceId = v.resource_id || v.resourceId
    }
    ;
    giscloud.Stream.prototype = {
        listPosts: function q(v) {
            return giscloud.posts.list(this.id, v)
        },
        addPost: function u(v) {
            if (!v || !(v instanceof giscloud.Post)) {
                throw "Invalid post"
            }
            if (v.id != null ) {
                return this.updatePost(v)
            }
            v.streamId = this.id;
            return v.update()
        },
        updatePost: function a(v) {
            if (!v || !(v instanceof giscloud.Post)) {
                throw "Invalid post"
            }
            if (v.id == null ) {
                return this.addPost(v)
            }
            if (v.streamId !== this.streamId) {
                throw "Post is not from this stream"
            }
            return v.update()
        },
        update: function g(v) {
            var z = this
              , B = {
                title: this.title,
                description: this.description,
                resources: m.map(this.resources || [], function(C) {
                    return C.id
                }),
                resource_id: this.resourceId,
                context_id: this.contextId
            };
            if (this.id != null ) {
                return giscloud.streams.update(this.id, B, v)
            }
            return giscloud.streams.create(B, v).done(function(C) {
                z.id = C
            })
        },
        remove: function h(v) {
            return giscloud.streams.remove(this.id, v)
        }
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(g, h, f, m) {
    function e(p) {
        if (p.id) {
            return new giscloud.Resource(p)
        }
        return p
    }
    giscloud.Post = function d(p) {
        p = p || {};
        this.id = p.id;
        this.streamId = p.stream_id || p.streamId;
        this.created = p.created && new Date(p.created * 1000);
        this.modified = p.modified && new Date(p.modified * 1000);
        this.owner = p.owner ? new giscloud.User(p.owner) : p.owner_id;
        this.type = (p.type != null ) && giscloud.postTypes[p.type] || p.type;
        this.content = p.content;
        this.resourceId = p.resourceId != null  ? p.resourceId : p.resource_id;
        this.attachments = h.isArray(p.attachments) ? h.map(p.attachments, e) : []
    }
    ;
    giscloud.Post.prototype = {
        update: function o(p) {
            var q = this
              , r = {
                content: this.content,
                type: parseInt(this.type),
                stream_id: this.streamId,
                attachments: this.attachments
            };
            if (this.id == null ) {
                return giscloud.posts.create(this.streamId, r).done(function(u) {
                    q.id = u
                })
            }
            return giscloud.posts.update(this.id, r, p)
        },
        remove: function a(p) {
            return giscloud.posts.remove(this.id, p)
        }
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(e, f, a, g) {
    function d(h) {
        return encodeURIComponent(h).replace(/%2F/g, "/")
    }
    giscloud.storage = {
        db: {
            "import": function(h) {
                if (h == null ) {
                    h = {}
                }
                if (h.geometryColumns) {
                    h.geometry_column_x = h.geometryColumns.x || h.geometryColumns.lon || h.geometryColumns.easting;
                    h.geometry_column_y = h.geometryColumns.y || h.geometryColumns.lat || h.geometryColumns.northing;
                    delete h.geometryColumns
                } else {
                    if (h.geometryColumn) {
                        h.geometry_column = h.geometryColumn;
                        delete h.geometryColumn;
                        if (h.geometryFormat) {
                            h.geometry_format = h.geometryFormat;
                            delete h.geometryFormat
                        }
                        if (h.geometryType) {
                            h.geometry_type = h.geometryType;
                            delete h.geometryType
                        }
                    } else {
                        if (h.geometryColumnX) {
                            h.geometry_column_x = h.geometryColumnX;
                            delete h.geometryColumnX
                        }
                        if (h.geometryColumnY) {
                            h.geometry_column_y = h.geometryColumnY;
                            delete h.geometryColumnY
                        }
                    }
                }
                if (h.geometrySRS != null ) {
                    h.geometry_srs = h.geometrySRS;
                    delete h.geometrySRS
                }
                if (h.ifExists != null ) {
                    h.if_exists = h.ifExists || "fail";
                    delete h.ifExists
                } else {
                    h.if_exists = h.if_exists || "fail"
                }
                return a.rest.call("post", "storage/db", h, "application/json").promise()
            }
        },
        fs: {
            list: function(o, m) {
                var h = "storage/fs/" + d(o) + "/info"
                  , p = new f.Deferred();
                m = m || {};
                a.rest.get(h, m).done(function(q) {
                    p.resolve(q)
                }).fail(function() {
                    p.reject()
                });
                return p.promise()
            },
            get: function(o, m) {
                var h = "storage/fs/" + d(o) + "/get"
                  , p = new f.Deferred();
                m = m || {};
                a.rest.get(h, m).done(function(q) {
                    p.resolve(q)
                }).fail(function() {
                    p.reject()
                });
                return p.promise()
            },
            update: function(p, r, o) {
                var h = new f.Deferred(), q = this, m;
                m = "storage/fs/" + d(p);
                if (o) {
                    m += "?" + f.map(o, function(v, u) {
                        return u + "=" + v
                    }).join("&")
                }
                a.rest.call("PUT", m, JSON.stringify(r), "application/json").done(function() {
                    h.resolveWith(q, [])
                }).fail(function() {
                    h.rejectWith(q, arguments)
                });
                return h.promise()
            },
            mkdir: function(o) {
                var h = new f.Deferred()
                  , p = this
                  , m = "storage/fs/" + d(o) + "/mkdir";
                a.rest.call("post", m, null , "application/json").done(function(u, q, r) {
                    h.resolveWith(p)
                }).fail(function() {
                    h.rejectWith(p, arguments)
                });
                return h.promise()
            },
            create: function(m, q) {
                var h = new f.Deferred()
                  , p = this
                  , o = "storage/fs/" + d(m);
                a.rest.call("post", o, JSON.stringify(q), "application/json").done(function(v, r, u) {
                    h.resolveWith(p)
                }).fail(function() {
                    h.rejectWith(p, arguments)
                });
                return h.promise()
            },
            remove: function(m) {
                var h = new f.Deferred()
                  , p = this
                  , o = "storage/fs/" + d(m);
                a.rest.call("delete", o).done(function() {
                    h.resolveWith(p)
                }).fail(function() {
                    h.rejectWith(p, arguments)
                });
                return h.promise()
            }
        }
    }
}(window, window.giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.logs = {
        list: function(f) {
            var e = "logs"
              , g = new d.Deferred();
            f = f || {};
            f.expand = "user,custom";
            a.rest.get(e, f).done(function(h) {
                g.resolve(h)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        byUserId: function(g, f, m) {
            var e = "users/" + g + "/logs"
              , h = new d.Deferred();
            a.rest.get(e, f).done(function(o) {
                h.resolve(o)
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        create: function(f) {
            var e = new d.Deferred();
            if (!f) {
                return
            }
            a.rest.call("post", "logs", a.toXml("log", f), "text/xml").done(function(o, h) {
                var g = h && h.match(/logs\/(\w+)/);
                e.resolve([g && g[1]])
            }).fail(function() {
                e.reject(arguments)
            });
            return e.promise()
        },
        analytics: {
            get: function(f) {
                var e = "logs/analytics"
                  , g = new d.Deferred();
                f = f || {};
                f.expand = "";
                a.rest.get(e, f).done(function(h) {
                    g.resolve(h)
                }).fail(function() {
                    g.reject()
                });
                return g.promise()
            }
        }
    };
    giscloud.log = {
        actions: {
            sign_in: {
                code: 1,
                desc: "signed in"
            },
            sign_out: {
                code: 2,
                desc: "signed out"
            },
            map_create: {
                code: 1001,
                desc: "created '${map.name}' map",
                intercom: {
                    alias: "created-map"
                }
            },
            map_update: {
                code: 1002,
                desc: "updated '${map.name}' map",
                intercom: {
                    alias: "updated-map"
                }
            },
            layer_new: {
                code: 1003,
                desc: "added '${layer.name}' layer"
            },
            layer_update: {
                code: 1004,
                desc: "updated '${layer.name}' layer"
            },
            share_map_to_user: {
                code: 1005,
                desc: "shared map",
                intercom: {
                    alias: "shared-map"
                }
            },
            share_map_remove_user: {
                code: 1006,
                desc: "unshared map",
                intercom: {
                    alias: "unshared-map"
                }
            },
            share_map_change_user_access: {
                code: 1007,
                desc: "changed map access",
                intercom: {
                    alias: "shared-map"
                }
            },
            share_map_public: {
                code: 1008,
                desc: "made map public",
                intercom: {
                    alias: "shared-map"
                }
            },
            layer_export: {
                code: 1009,
                desc: "exported '${layer.name}' layer "
            },
            map_delete: {
                code: 1010,
                desc: "deleted '${mid}' map"
            },
            layer_delete: {
                code: 1011,
                desc: "deleted '${lid}' layer(s)"
            },
            layer_create: {
                code: 1012,
                desc: "created new '${layer.name}' layer"
            },
            csv_import: {
                code: 1013,
                desc: "imported '${source}' CSV file to '${output}' table"
            },
            feature_edit: {
                code: 1014,
                desc: "updated feature in the '${layer.name}' layer"
            },
            feature_add: {
                code: 1015,
                desc: "added feature in the '${layer.name}' layer"
            },
            feature_delete: {
                code: 1016,
                desc: "deleted feature in the '${layer.name}' layer"
            },
            resource_share: {
                code: 1017,
                desc: "shared resource",
                intercom: {
                    alias: [{
                        condition: "type",
                        value: 100,
                        alias: "shared-map"
                    }]
                }
            },
            resource_unshare: {
                code: 1018,
                desc: "unshared resource",
                intercom: {
                    alias: [{
                        condition: "type",
                        value: 100,
                        alias: "unshared-map"
                    }]
                }
            },
            tool_set: {
                code: 1019,
                desc: "Switch tool to '${tool}'"
            },
            ui_click: {
                code: 1020,
                skipWoopra: true,
                desc: ""
            },
            gt_user_add: {
                code: 12100,
                desc: "added user (username '${username})'"
            },
            gt_device_add: {
                code: 12100,
                desc: "added device with ID '${gps_device_id}'"
            },
            gt_device_edit: {
                code: 12101,
                desc: "edit device with ID '${gps_device_id}'"
            },
            gt_requested_report: {
                code: 12120,
                desc: "requested a report (report type id = ${report_type})"
            },
            oauth_sign_in: {
                code: 10000,
                desc: "(OAuth) signed in"
            },
            oauth_sign_out: {
                code: 10001,
                desc: "(OAuth) signed out"
            },
            "mdc proj create": {
                code: 20001,
                desc: "mdc proj create"
            },
            "mdc proj option update": {
                code: 20011,
                desc: "mdc proj option update"
            },
            "mdc proj option update failed": {
                code: 20012,
                desc: "mdc proj option update failed"
            },
            "mdc proj name update": {
                code: 20021,
                desc: "mdc proj name update"
            },
            "mdc proj name update failed": {
                code: 20022,
                desc: "mdc proj name update failed"
            },
            "mdc proj item add": {
                code: 20031,
                desc: "mdc proj item add"
            },
            "mdc proj item add failed": {
                code: 20032,
                desc: "mdc proj item add failed"
            },
            "mdc proj item reorder": {
                code: 20041,
                desc: "mdc proj item reorder"
            },
            "mdc proj item reorder failed": {
                code: 20042,
                desc: "mdc proj item reorder failed"
            },
            "mdc proj item rename": {
                code: 20051,
                desc: "mdc proj item rename"
            },
            "mdc proj item rename failed": {
                code: 20052,
                desc: "mdc proj item rename failed"
            },
            "mdc proj item type change": {
                code: 20061,
                desc: "mdc proj item type change"
            },
            "mdc proj item type change failed": {
                code: 20062,
                desc: "mdc proj item type change failed"
            },
            "mdc proj item remove": {
                code: 20071,
                desc: "mdc proj item remove"
            },
            "mdc proj item remove failed": {
                code: 20072,
                desc: "mdc proj item remove failed"
            },
            "mdc proj form definition change": {
                code: 20081,
                desc: "mdc proj form definition change"
            },
            "mdc proj form definition change failed": {
                code: 20082,
                desc: "mdc proj form definition change failed"
            },
            mdc_sign_up: {
                code: 25000,
                desc: "signed up to MDC"
            },
            mdc_sign_in: {
                code: 25001,
                desc: "signed in to MDC"
            },
            mdc_sign_out: {
                code: 25002,
                desc: "signed out to MDC"
            },
            mdc_insert: {
                code: 25003,
                desc: "sent new submission"
            },
            mdc_update: {
                code: 25004,
                desc: "updated submission"
            },
            mdc_delete: {
                code: 25005,
                desc: "deleted submission"
            },
            mdc_error: {
                code: 25999,
                desc: "error occured"
            },
            _: {}
        },
        push: function(m, e, q, p) {
            e = e || {};
            var g = giscloud.log.actions[m];
            if (g && g.code >= 1000) {
                var h = d.extend(true, null , e);
                delete h.module;
                delete h.task;
                delete h.msg;
                delete h.result;
                if (!p) {
                    giscloud.logs.create({
                        event: g.code,
                        custom: h
                    })
                }
            }
            if (!g || (g && !g.skipWoopra)) {
                (function o() {
                    if (!window.woopra) {
                        if (window.dfdWoopra) {
                            window.dfdWoopra.done(function() {
                                giscloud.log.push(m, e, q, true)
                            })
                        }
                        return
                    }
                    window.woopra.track(m, e, q)
                })()
            }
            (function f() {
                var u = {}, v;
                if (!window.intercomSettings || !window.intercomWrapper) {
                    return
                } else {
                    if (g && g.intercom) {
                        v = g.intercom.alias;
                        if (v !== undefined) {
                            for (var r in v) {
                                if (v[r].condition !== undefined) {
                                    if (e[v[r].condition] == v[r].value) {
                                        v = v[r].alias;
                                        break
                                    }
                                }
                            }
                        }
                        u.mid = e.mid;
                        window.intercomWrapper.sendEvent(v, u)
                    }
                }
            })()
        },
        getActionByCode: function(g, f) {
            var e = null ;
            if (f) {
                g = g * 1 + 100000
            }
            d.each(giscloud.log.actions, function(h, m) {
                if (m.code == g) {
                    e = m;
                    return true
                }
            });
            return e
        },
        formatLogDetails: function(e) {
            var f = "";
            f += moment.utc(e.time * 1000).local().format("DD/MM/YYYY hh:mm");
            if (e.log == "log") {
                f += " App: " + e.domain
            }
            f += " Device: ";
            if (e.log == "log") {
                switch (e.device_type * 1) {
                case 1:
                    f += "Computer";
                    break;
                case 2:
                    f += "Tablet";
                    break;
                case 3:
                    f += "Mobile";
                    break;
                default:
                }
            } else {
                f += e.custom.device_model + " v" + e.custom.device_version
            }
            return f
        },
        formatLogMsg: function(e) {
            var h, g = giscloud.log.getActionByCode(e.event, e.log == "mdc");
            h = "User '" + e.user.username + "' ";
            if (g) {
                try {
                    h += d.tmpl(g.desc, e.custom).text()
                } catch (f) {
                    h += g.desc
                }
            } else {
                h += "did '" + e.event + "' event"
            }
            h += " " + moment.utc(e.time * 1000).local().fromNow();
            h += ".";
            return h
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.organizations = {
        list: function(f) {
            var e = "organizations"
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(h) {
                g.resolve(h)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        byId: function(m, f, h) {
            var e = "/organizations/" + m
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(o) {
                g.resolve(o)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        remove: function(f) {
            var e = new d.Deferred();
            a.rest.call("DELETE", "organizations/" + f).done(function() {
                e.resolve()
            }).fail(function() {
                e.reject()
            });
            return e.promise()
        },
        create: function(f) {
            var e = new d.Deferred();
            if (!f) {
                return
            }
            a.rest.call("post", "organizations", a.toXml("organization", f), "text/xml").done(function(o, h) {
                var g = h && h.match(/organizations\/(\w+)/);
                e.resolve([g && g[1]])
            }).fail(function() {
                e.reject(arguments)
            });
            return e.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.HookType = {
        CREATE: 1,
        READ: 2,
        UPDATE: 3,
        DELETE: 4
    };
    giscloud.hooks = {
        list: function(f) {
            var e = "hooks"
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(h) {
                g.resolve(h)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        byId: function(m, f, h) {
            var e = "/hooks/" + m
              , g = new d.Deferred();
            a.rest.get(e, f).done(function(o) {
                g.resolve(o)
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        remove: function(f) {
            var e = new d.Deferred();
            a.rest.call("DELETE", "hooks/" + f).done(function() {
                e.resolve()
            }).fail(function() {
                e.reject()
            });
            return e.promise()
        },
        update: function(h, g) {
            var e = new d.Deferred()
              , f = this;
            a.rest.call("PUT", "hooks/" + h, JSON.stringify(g), "application/json").done(function() {
                e.resolveWith(f)
            }).fail(function() {
                e.rejectWith(f, arguments)
            });
            return e.promise()
        },
        create: function(f) {
            var e = new d.Deferred();
            if (!f) {
                return
            }
            a.rest.call("post", "hooks", a.toXml("hook", f), "text/xml").done(function(o, h) {
                var g = h && h.match(/hooks\/(\w+)/);
                e.resolve([g && g[1]])
            }).fail(function() {
                e.reject(arguments)
            });
            return e.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, a, f) {
    giscloud.tasks = {
        list: function(g) {
            g = g || {};
            return a.rest.get("tasks", g).pipe(function(h) {
                if (h && h.data) {
                    if (h.data.length === 0) {
                        return []
                    }
                    return e.map(h.data, function(m) {
                        return new giscloud.Task(m)
                    })
                }
                return null 
            }, function() {
                return null 
            }).promise()
        },
        byType: function(h, g) {
            g = g || {};
            g.type = h;
            return this.list(g)
        },
        byId: function(m, h) {
            var g = "tasks/" + m;
            h = h || {};
            return a.rest.get(g, h).pipe(function(p) {
                try {
                    return new giscloud.Task(p)
                } catch (o) {
                    return null 
                }
            }, function() {
                return null 
            }).promise()
        },
        remove: function(g) {
            return a.rest.call("DELETE", "tasks/" + g).pipe(function() {
                return null 
            }, function() {
                return null 
            }).promise()
        },
        create: function(m, h) {
            var g = "tasks/";
            if (h) {
                g += "?" + e.map(h, function(p, o) {
                    return o + "=" + p
                }).join("&")
            }
            if (m.id != null ) {
                delete m.id
            }
            return a.rest.call("post", g, JSON.stringify(m), "application/json").pipe(function(r, p, q) {
                var u = p || q.getResponseHeader("Location")
                  , o = u && u.match(/tasks\/(\d+)/);
                return o && o[1]
            }, function() {
                return null 
            }).promise()
        }
    }
}(window, window.giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.permissions = {
        OWNER: "OWNER",
        READ: "READ",
        EDIT: "EDIT",
        EXPORT: "EXPORT",
        EDIT_MOBILE: "EDIT_MOBILE",
        EDIT_WITH_SHARE: "EDIT_WITH_SHARE",
        INSERT: "INSERT",
        INSERT_MDC: "INSERT_MDC",
        UPDATE: "UPDATE",
        UPDATE_MDC: "UPDATE_MDC",
        DELETE: "DELETE",
        DELETE_MDC: "DELETE_MDC",
        SHARE: "SHARE"
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a, f) {
    function e(m, p, h) {
        var o = m.promise
          , g = Array.prototype.slice.apply(h);
        return o[p].apply(o, g)
    }
    giscloud.Query = function(h, g) {
        this.table = h;
        this.options = g;
        this.actions = []
    }
    ;
    giscloud.Query.prototype = {
        select: function(g) {
            this.actions.push(["select", [g]]);
            return this
        },
        selectFunction: function(g, h) {
            this.actions.push(["select_function", [g, h]]);
            return this
        },
        where: function(h, g, m) {
            this.actions.push(["where", [h, g, m]]);
            return this
        },
        whereOpen: function() {
            this.actions.push(["where_open"]);
            return this
        },
        whereClose: function() {
            this.actions.push(["where_close"]);
            return this
        },
        andWhere: function(h, g, m) {
            this.actions.push(["and_where", [h, g, m]]);
            return this
        },
        andWhereOpen: function() {
            this.actions.push(["and_where_open"]);
            return this
        },
        andWhereClose: function() {
            this.actions.push(["and_where_close"]);
            return this
        },
        orWhere: function(h, g, m) {
            this.actions.push(["or_where", [h, g, m]]);
            return this
        },
        orWhereOpen: function() {
            this.actions.push(["or_where_open"]);
            return this
        },
        orWhereClose: function() {
            this.actions.push(["or_where_close"]);
            return this
        },
        equalTo: function(g, h) {
            return this.where(g, "=", h)
        },
        notEqualTo: function(g, h) {
            return this.where(g, "<>", h)
        },
        greaterThan: function(g, h) {
            return this.where(g, ">", h)
        },
        greaterThanOrEqualTo: function(g, h) {
            return this.where(g, ">=", h)
        },
        lessThan: function(g, h) {
            return this.where(g, "<", h)
        },
        lessThanOrEqualTo: function(g, h) {
            return this.where(g, "<=", h)
        },
        limit: function(g) {
            this.actions.push(["limit", [g]]);
            return this
        },
        offset: function(g) {
            this.actions.push(["offset", [g]]);
            return this
        },
        ascending: function(g) {
            this.actions.push(["order_by", [g, "ASC"]]);
            return this
        },
        descending: function(g) {
            this.actions.push(["order_by", [g, "DESC"]]);
            return this
        },
        find: function() {
            this.actions.push(["find_all"]);
            this.promise = giscloud.tables.query(this.table, this.toString(), this.options);
            return this
        },
        first: function() {
            this.actions.push(["find"]);
            this.promise = giscloud.tables.query(this.table, this.toString(), this.options);
            return this
        },
        count: function() {
            this.actions.push(["count_all"]);
            this.promise = giscloud.tables.query(this.table, this.toString(), this.options);
            return this
        },
        join: function(h, g) {
            this.actions.push(["join", [h, g]]);
            return this
        },
        on: function(h, g, m) {
            this.actions.push(["on", [h, g, m]]);
            return this
        },
        "delete": function() {
            this.actions.push(["delete"]);
            this.promise = giscloud.tables.query(this.table, this.toString(), this.options);
            return this
        },
        set: function(g, h) {
            this.actions.push(["__set", [g, h]]);
            return this
        },
        save: function() {
            this.actions.push(["save"]);
            this.promise = giscloud.tables.query(this.table, this.toString(), this.options);
            return this
        },
        saveAll: function() {
            this.actions.push(["save_all"]);
            this.promise = giscloud.tables.query(this.table, this.toString(), this.options);
            return this
        },
        groupBy: function(g) {
            this.actions.push(["group_by", [g]]);
            return this
        },
        fail: function() {
            return e(this, "fail", arguments)
        },
        done: function() {
            return e(this, "done", arguments)
        },
        always: function() {
            return e(this, "always", arguments)
        },
        progress: function() {
            return e(this, "progress", arguments)
        },
        then: function() {
            return e(this, "then", arguments)
        },
        each: function(g) {
            return this.promise.done(function(h) {
                d.each(h.data, g)
            })
        },
        toString: function() {
            return JSON.stringify(this.actions)
        }
    };
    giscloud.Query.or = function(g) {
        var p, h, m, o = new giscloud.Query();
        if (d.isArray(g)) {
            h = g
        } else {
            h = Array.prototype.slice.apply(arguments)
        }
        for (m = 0; m < h.length; m++) {
            p = h[m];
            if (p.table && !o.table) {
                o.table = p.table
            }
            if (p.options && !o.options) {
                o.options = p.options
            }
            o.orWhereOpen();
            o.actions = o.actions.concat(p.actions);
            o.orWhereClose()
        }
        return o
    }
})(giscloud.exposeJQuery(), giscloud.common());
(function(d, a) {
    giscloud.options = {
        list: function(f) {
            var e;
            f = f || {};
            if (d.isNumeric(f)) {
                e = "resources/" + f + "/options"
            } else {
                if (f.resource && f.id) {
                    e = f.resource + "/" + f.id + "/options";
                    delete f.resource;
                    delete f.id
                } else {
                    e = "options"
                }
            }
            return a.rest.get(e, f).promise()
        },
        byId: function(m, f, h) {
            var e = "options/" + m
              , g = new d.Deferred();
            f = f || {};
            if (typeof f === "function") {
                h = f;
                f = null 
            } else {
                h = h || f.callback
            }
            a.rest.get(e, f).done(function() {
                var q = arguments[0], o;
                try {
                    o = q;
                    if (typeof h == "function") {
                        h(o)
                    }
                    g.resolve(o)
                } catch (p) {
                    g.reject()
                }
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        byName: function(e, m, g, o) {
            var f = "users/" + e + "/options"
              , h = new d.Deferred();
            g = g || {};
            m = m || g.name;
            g.expand = g.expand || [];
            if (!d.isArray(g.expand)) {
                g.expand = [g.expand]
            }
            if (d.inArray("dependency", g.expand)) {
                g.expand.push("dependency")
            }
            a.rest.get(f, g).done(function() {
                var r = arguments[0]
                  , p = [];
                try {
                    d.each(r.data, function(u, v) {
                        if (v.name == m) {
                            p.push(v)
                        }
                    });
                    if (typeof o == "function") {
                        o(p)
                    }
                    h.resolve(p)
                } catch (q) {
                    h.reject()
                }
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        update: function(h, f, g) {
            var e = f.resource + "/" + f.id + "/options/" + h;
            if (h == null ) {
                return this.create(f, g)
            }
            return a.rest.call("PUT", e, JSON.stringify(g), "application/json").promise()
        },
        remove: function(e) {
            return a.rest.call("DELETE", "options/" + e).promise()
        },
        create: function(g, f) {
            var e;
            if (!f) {
                throw "No option data supplied."
            }
            if (d.isNumeric(g)) {
                e = "resources/" + g + "/options"
            } else {
                if (g && g.resource && g.id) {
                    e = g.resource + "/" + g.id + "/options"
                } else {
                    throw "Bad target definition."
                }
            }
            return a.rest.call("post", e, f, "application/json").then(function(p, o) {
                var h = o && o.match(/options\/(\w+)/);
                return ( h && h[1]) 
            })
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(e, a) {
    giscloud.datasources = {
        types: {
            FOLDER: 5,
            DATABASE: 10,
            DATABASE_ANY: 15,
            TABLE: 15,
            FILE: 20,
            WMS_ANY: 40,
            WMS: 50,
            TMS: 60,
            WFS: 70,
            WMTS: 80
        },
        typeCodeToTypeName: function d(g) {
            var h = parseInt(g, 10);
            switch (h) {
            case 5:
                return a.__("Folder");
            case 15:
            case 10:
                return a.__("Table");
            case 20:
                return a.__("File");
            case 40:
            case 50:
                return a.__("WMS");
            case 60:
                return a.__("TMS");
            case 70:
                return a.__("WFS");
            case 80:
                return a.__("WMTS");
            default:
                return ""
            }
        },
        typeNameToTypeCode: function f(g) {
            var h = g.toLocaleLowerCase && g.toLocaleLowerCase();
            switch (h) {
            case "folder":
                return 5;
            case "database":
                return 10;
            case "database_any":
                return 15;
            case "table":
                return 15;
            case "file":
                return 20;
            case "wmts":
                return 80;
            case "wms_any":
                return 40;
            case "wms":
                return 50;
            case "tms":
                return 60;
            case "wfs":
                return 70;
            case a.__("Folder").toLocaleLowerCase():
                return 5;
            case a.__("Table").toLocaleLowerCase():
                return [10, 15];
            case a.__("File").toLocaleLowerCase():
                return 20;
            case a.__("WMTS").toLocaleLowerCase():
                return 80;
            case a.__("WMS").toLocaleLowerCase():
                return [40, 50];
            case a.__("TMS").toLocaleLowerCase():
                return 60;
            case a.__("WFS").toLocaleLowerCase():
                return 70;
            default:
                return null 
            }
        },
        list: function(h) {
            var g = "datasources"
              , m = new e.Deferred();
            a.rest.get(g, h).done(function(o) {
                m.resolve(o)
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        byId: function(p, h, o) {
            var g = "datasources/" + p
              , m = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                o = h;
                h = null 
            } else {
                o = o || h.callback
            }
            a.rest.get(g, h).done(function() {
                var u = arguments[0], q;
                try {
                    q = new giscloud.datasources.Datasource(u);
                    if (typeof o == "function") {
                        o(q)
                    }
                    m.resolve(q)
                } catch (r) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            return m.promise()
        },
        update: function(o, m) {
            var g = new e.Deferred()
              , h = this;
            if (o == null ) {
                return this.create(m)
            }
            a.rest.call("PUT", "datasources/" + o, JSON.stringify(m), "application/json").done(function() {
                g.resolveWith(h)
            }).fail(function() {
                g.rejectWith(h, arguments)
            });
            return g.promise()
        },
        remove: function(h) {
            var g = new e.Deferred();
            a.rest.call("DELETE", "datasources/" + h).done(function() {
                g.resolve()
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        create: function(h) {
            var g = new e.Deferred();
            if (!h) {
                return
            }
            a.rest.call("post", "datasources", h, "application/json").done(function(q, p) {
                var o = p && p.match(/datasources\/(\w+)/);
                g.resolve([o && o[1]])
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
        columns: function(m, h, p) {
            var g, o = new e.Deferred();
            if (e.isNumeric(m)) {
                g = "datasources/" + m + "/columns"
            } else {
                g = "datasources/columns?source=" + m
            }
            h = h || {};
            if (typeof h === "function") {
                p = h;
                h = {}
            } else {
                p = p || h.callback
            }
            a.rest.get(g, h).done(function() {
                var r = arguments[0];
                try {
                    if (typeof p == "function") {
                        p(r)
                    }
                    o.resolve(r)
                } catch (q) {
                    o.reject(q)
                }
            }).fail(function(q) {
                o.reject(q)
            });
            return o.promise()
        },
        addColumn: function(o, p, m) {
            var h, g = new e.Deferred();
            if (!p) {
                return
            }
            if (e.isNumeric(o)) {
                h = "datasources/" + o + "/columns?"
            } else {
                h = "datasources/columns?source=" + o
            }
            if (m) {
                if (m.connid) {
                    h += "&connid=" + m.connid
                }
                if (m.schema) {
                    h += "&schema=" + m.schema
                }
                if (m.type) {
                    h += "&type=" + m.type
                }
            }
            a.rest.call("post", h, a.toXml("column", p), "text/xml").done(function(u, r) {
                var q = r && r.match(/datasources\/(\w+)/);
                g.resolve([q && q[1]])
            }).fail(function() {
                g.reject.apply(g, arguments)
            });
            return g.promise()
        },
        dropColumn: function(o, q, m) {
            var h, g = new e.Deferred(), p = this;
            if (!q) {
                return
            }
            if (e.isNumeric(o)) {
                h = "datasources/" + o + "/columns?"
            } else {
                h = "datasources/columns?source=" + o
            }
            if (m) {
                if (m.connid) {
                    h += "&connid=" + m.connid
                }
                if (m.schema) {
                    h += "&schema=" + m.schema
                }
                if (m.type) {
                    h += "&type=" + m.type
                }
            }
            a.rest.call("DELETE", h, a.toXml("column", q), "text/xml").done(function() {
                g.resolveWith(p)
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        },
        updateColumn: function(o, q, m) {
            var h, g = new e.Deferred(), p = this;
            if (!q) {
                return
            }
            if (e.isNumeric(o)) {
                h = "datasources/" + o + "/columns?"
            } else {
                h = "datasources/columns?source=" + o
            }
            if (m) {
                if (m.connid) {
                    h += "&connid=" + m.connid
                }
                if (m.schema) {
                    h += "&schema=" + m.schema
                }
                if (m.type) {
                    h += "&type=" + m.type
                }
            }
            a.rest.call("PUT", h, a.toXml("column", q), "text/xml").done(function() {
                g.resolveWith(p)
            }).fail(function() {
                g.reject(arguments)
            });
            return g.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(a, e, f) {
    var d;
    giscloud.datasources.Datasource = function(g) {
        d = g;
        if (d) {
            this.id = d.id;
            this.resource_id = d.resource_id;
            this.name = d.name;
            this.owner = d.owner_id;
            this.type = d.type;
            this.epsg = d.epsg && parseInt(d.epsg, 10);
            this.proj4 = d.proj4;
            this.description = d.description;
            this.copyright = d.copyright;
            if (d.type != 15 && d.type != 20) {
                this.params = e.parseJSON(d.params)
            } else {
                this.params = d.params
            }
            if (d.x_min && d.x_max && d.y_min && d.y_max) {
                this.bounds = new giscloud.Bounds(d.x_min,d.y_min,d.x_max,d.y_max)
            }
        } else {
            d = {}
        }
        this.share = function(m, h) {
            return giscloud.datasources.share(this.id, m, h)
        }
        ;
        this.remove = function() {
            return giscloud.datasources.remove(this.id)
        }
        ;
        this.update = function(m) {
            return;
            var h;
            d.data = this.data;
            h = this.bounds;
            that = this;
            if (h) {
                d.__x_min = (h && h.left);
                d.__y_min = (h && h.bottom);
                d.__x_max = (h && h.right);
                d.__y_max = (h && h.top)
            }
            if (this.id != null ) {
                return giscloud.datasources.update(this.id, d)
            } else {
                return giscloud.datasources.update(d.id, d).done(function(o) {
                    that.id = o
                })
            }
        }
        ;
        this.clone = function() {
            return giscloud.datasources.create(d.data)
        }
    }
})(window, window.giscloud.exposeJQuery());
(function(e, a) {
    var d = null ;
    giscloud.datasources.apollo = {
        browse: function(h, g) {
            var f;
            if (typeof h === "string") {
                if (d != null ) {
                    f = "datasources/" + d + "/apollo/" + h
                } else {
                    f = "apollo/" + h
                }
            } else {
                if (h.datasource != null ) {
                    f = "datasources/" + h.datasource + "/apollo/" + h.resource
                } else {
                    if (d != null ) {
                        f = "datasources/" + d + "/apollo/" + h.resource
                    } else {
                        f = "apollo/" + h.resource
                    }
                }
            }
            return a.rest.get(f, g).promise()
        },
        thumbnailUrl: function(g) {
            var f;
            if (typeof g === "string") {
                if (d != null ) {
                    f = "datasources/" + d + "/apollo/" + g
                } else {
                    f = "apollo/" + g
                }
            } else {
                if (g.datasource != null ) {
                    f = "datasources/" + g.datasource + "/apollo/" + g.resource
                } else {
                    if (d != null ) {
                        f = "datasources/" + d + "/apollo/" + g.resource
                    } else {
                        f = "apollo/" + g.resource
                    }
                }
            }
            return a.rest.url(f + "/thumbnail")
        },
        datasource: function(f) {
            if (f === undefined) {
                return d
            }
            d = f;
            return this
        },
        processes: {
            list: function(g) {
                var f = "datasources/" + d + "/apollo/processes";
                return a.rest.get(f, g).pipe(function(h) {
                    if (h && h.data) {
                        return e.map(h.data, function(m) {
                            return new giscloud.datasources.apollo.ApolloProcess(m)
                        })
                    }
                    return null 
                }, function() {
                    return null 
                }).promise()
            },
            getDescription: function(h, g) {
                var f = "datasources/" + d + "/apollo/processes/" + h;
                return a.rest.get(f, g).pipe(function(m) {
                    return m
                }, function() {
                    return null 
                }).promise()
            },
            execute: function(m, h, g) {
                var f = "datasources/" + d + "/apollo/processes/" + m + "/execute.json";
                return a.rest.call("post", f, JSON.stringify(h), "application/json", g).pipe(function(q, p) {
                    var o = p && p.match(/tasks\/(\w+)/);
                    return o && o[1]
                }, function() {
                    return null 
                })
            }
        }
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(a) {
    giscloud.datasources.apollo.ApolloProcess = function(d) {
        this.id = d.Identifier;
        this.title = d.Title;
        this["abstract"] = d.Abstract;
        this.description = null 
    }
    ;
    giscloud.datasources.apollo.ApolloProcess.prototype = {
        getDescription: function(e) {
            var f = this
              , d = new a.Deferred();
            giscloud.datasources.apollo.processes.getDescription(this.id, e).then(function(g) {
                if (g) {
                    f.description = g
                } else {
                    f.description = null 
                }
                d.resolveWith(f, f.description)
            }, function() {
                d.rejectWith(f)
            });
            return d.promise()
        },
        execute: function(e, d) {
            return giscloud.datasources.apollo.processes.execute(this.id, e, d)
        },
        status: function() {}
    }
})(giscloud.exposeJQuery());
(function(e, a) {
    var d = null ;
    giscloud.datasources.sfdc = {
        checkAuth: function(f) {
            var h, g;
            if (f != null ) {
                h = "datasources/" + f + "/sfdc/oauth.json"
            } else {
                if (d != null ) {
                    h = "datasources/" + d + "/sfdc/oauth.json"
                } else {
                    throw "No datasource id"
                }
            }
            g = new e.Deferred();
            a.rest.get(h, options).fail(g.reject).done(function(m) {
                if (m.access_token) {
                    g.resolve(m)
                } else {
                    g.reject(m)
                }
            });
            return g.promise()
        },
        get: function(h, g) {
            var f;
            if (typeof h === "string") {
                if (d != null ) {
                    f = "datasources/" + d + "/sfdc/" + h
                } else {
                    throw "No datasource id"
                }
            } else {
                if (h.datasource != null ) {
                    f = "datasources/" + h.datasource + "/sfdc/" + h.resource
                } else {
                    if (d != null ) {
                        f = "datasources/" + d + "/sfdc/" + h.resource
                    } else {
                        throw "No datasource id"
                    }
                }
            }
            return a.rest.get(f, g).promise()
        },
        create: function(m, o, h) {
            var f = new e.Deferred(), g;
            if (m.datasource != null ) {
                g = "datasources/" + m.datasource + "/sfdc/" + m.resource
            } else {
                if (d != null ) {
                    g = "datasources/" + d + "/sfdc/" + m.resource
                } else {
                    throw "No datasource id"
                }
            }
            return a.rest.call("post", g, JSON.stringify(o), "application/json", h).pipe(function(q, p) {
                if (q.success) {
                    return q.id
                }
            }, function() {
                return null 
            })
        },
        remove: function(m, o, h) {
            var f = new e.Deferred(), g;
            if (m.datasource != null ) {
                g = "datasources/" + m.datasource + "/sfdc/" + m.resource
            } else {
                if (d != null ) {
                    g = "datasources/" + d + "/sfdc/" + m.resource
                } else {
                    throw "No datasource id"
                }
            }
            return a.rest.call("DELETE", g + "/" + o)
        },
        datasource: function(f) {
            if (f === undefined) {
                return d
            }
            d = f;
            return this
        }
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(d, a) {
    giscloud.datasources.wms = {
        getFeatureInfo: function(h, g) {
            var f = new d.Deferred()
              , e = "layers/" + h + "/getfeatureinfo";
            a.rest.call("get", e, g, "text/html").done(function() {
                var o = arguments[0];
                try {
                    f.resolve(o.responseText)
                } catch (m) {
                    f.reject()
                }
            }).fail(function() {
                var m = arguments[0];
                f.reject(m.responseText)
            });
            return f.promise()
        },
        getCapabilities: function(e, f) {
            var m = new d.Deferred(), g, h;
            g = "/modules_gc/layer/cwms.php";
            h = {
                task: "getcapabilities",
                module: "wms",
                wms: e,
                version: f ? f : "1.1"
            };
            d.ajax({
                url: g,
                type: "GET",
                cache: false,
                dataType: "json",
                data: h
            }).done(function() {
                var o = Array.prototype.slice.apply(arguments);
                m.resolve.apply(m, o)
            }).fail(function() {
                var o = Array.prototype.slice.apply(arguments);
                m.reject.apply(m, o)
            });
            return m.promise()
        }
    };
    giscloud.datasources.wmts = {
        getCapabilities: function(e, f) {
            var m = new d.Deferred(), g, h;
            g = "/datasource/wmts_info";
            h = {
                url: e,
                version: f ? f : "1.1"
            };
            d.ajax({
                url: g,
                type: "GET",
                cache: false,
                dataType: "json",
                data: h
            }).done(function() {
                var o = Array.prototype.slice.apply(arguments);
                m.resolve.apply(m, o)
            }).fail(function() {
                var o = Array.prototype.slice.apply(arguments);
                m.reject.apply(m, o)
            });
            return m.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.spatialrelationship = {
        within: function(o, m, f, e, h) {
            var g = "geometry/within"
              , p = new d.Deferred();
            h = h || {};
            h.layer1_id = o;
            h.layer2_id = f;
            h.feature1_id = m;
            h.feature2_id = e;
            a.rest.get(g, h).done(function(u, v, q) {
                p.resolve(q.status == 201)
            }).fail(function() {
                p.reject()
            });
            return p.promise()
        },
        intersects: function(o, m, f, e, h) {
            var g = "geometry/intersects"
              , p = new d.Deferred();
            h = h || {};
            h.layer1_id = o;
            h.layer2_id = f;
            h.feature1_id = m;
            h.feature2_id = e;
            a.rest.get(g, h).done(function(u, v, q) {
                p.resolve(q.status == 201)
            }).fail(function() {
                p.reject()
            });
            return p.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, e, f) {
    function a(g) {
        if (g == null ) {
            return null 
        }
        if (typeof g === "string") {
            try {
                return JSON.parse(g)
            } catch (h) {
                return null 
            }
        } else {
            return g
        }
    }
    giscloud.Layer = function(g) {
        var h = [];
        if (g.sublayers) {
            e.each(g.sublayers, function() {
                h.push(new giscloud.Layer(this))
            })
        }
        e.extend(this, {
            id: g.id,
            resourceId: g.resource_id,
            name: g.name || null ,
            owner: g.owner,
            source: a(g.source),
            datasourceId: g.datasource_id,
            columns: g.columns || null ,
            onscale: g.onscale || null ,
            offscale: g.offscale || null ,
            label: g.label || null ,
            textfield: g.textfield || null ,
            styles: a(g.styles),
            alpha: g.alpha || null ,
            encoding: g.encoding || null ,
            margin: g.margin || null ,
            created: (g.created && new Date(g.created * 1000)) || null ,
            visible: g.visible || null ,
            lock: g.lock || null ,
            raster: g.raster || null ,
            grp: g.grp || null ,
            exportable: g.exportable != "f",
            parent: g.parent || null ,
            epsg: g.epsg || null ,
            tooltip: g.tooltip || null ,
            label_placement: a(g.label_placement),
            mapId: g.map_id || null ,
            type: g.type || null ,
            opened: g.opened,
            order: g.order,
            sublayers: h,
            useInfoWindow: (g.use_info_window != null ) ? g.use_info_window : false,
            modified: (g.modified && new Date(g.modified * 1000)) || null ,
            form: g.form || null ,
            bounds: new giscloud.Bounds(g.x_min,g.y_min,g.x_max,g.y_max)
        });
        if (g.datasource) {
            this.datasource = {
                id: g.datasource_id,
                type: g.datasource.type,
                owner_id: g.datasource.owner_id,
                permissions: g.datasource.permissions,
                resource_id: g.datasource.resource_id
            }
        }
        if (g.analysis) {
            this.analysis = {
                id: g.analysis.id,
                layer_id: g.analysis.layer_id,
                type: g.analysis.type,
                params: g.analysis.params
            }
        }
        if (g.options) {
            this.options = g.options
        }
        if (this.form && typeof this.form.definition === "string") {
            this.form.definition = JSON.parse(this.form.definition)
        }
        this.copyStylesFrom = function(m) {
            var o, p, r, q;
            q = this;
            o = new e.Deferred();
            p = this.styles;
            giscloud.layers.byId(m).done(function(u) {
                r = u.styles;
                q.styles = r;
                o.resolve({
                    newStyles: r,
                    oldStyles: p
                })
            }).fail(function() {
                o.reject()
            });
            return o.promise()
        }
        ;
        this.remove = function() {
            return giscloud.layers.remove(this.id)
        }
        ;
        this.update = function() {
            var m;
            g.name = this.name || null ;
            g.source = (this.source && JSON.stringify(this.source)) || null ;
            g.datasource_id = this.datasourceId || null ;
            g.columns = this.columns || null ;
            g.onscale = this.onscale || null ;
            g.offscale = this.offscale || null ;
            g.label = this.label || null ;
            g.textfield = this.textfield || null ;
            g.alpha = this.alpha || null ;
            g.encoding = this.encoding || null ;
            g.margin = this.margin || null ;
            g.visible = this.visible || null ;
            g.lock = this.lock || null ;
            g.raster = this.raster || null ;
            g.grp = this.grp || null ;
            g.parent = this.parent || null ;
            g.tooltip = this.tooltip || null ;
            g.label_placement = (this.label_placement && JSON.stringify(this.label_placement)) || null ;
            g.styles = (this.styles && JSON.stringify(this.styles)) || null ;
            g.map_id = this.mapId || null ;
            g.type = this.type || null ;
            g.opened = this.opened;
            g.order = this.order || null ;
            g.form = this.form;
            g.use_info_window = (this.useInfoWindow != null ) ? this.useInfoWindow : null ;
            m = this.bounds;
            if (m && m.valid()) {
                g.x_min = m.left;
                g.y_min = m.bottom;
                g.x_max = m.right;
                g.y_max = m.top
            }
            return giscloud.layers.update(g.id, g)
        }
        ;
        this.clone = function() {
            var m = {};
            e.extend(m, g);
            delete m.id;
            return giscloud.layers.create(m)
        }
        ;
        this.reset = function() {
            return giscloud.layers.reset(this.mapId, [this.id])
        }
    }
}(window, window.giscloud.exposeJQuery()));
(function(a, d, e) {
    giscloud.Feature = function(g) {
        var f = g;
        if (f) {
            this.id = (f.__id != null ) ? f.__id : f.id;
            this.created = new Date(f.__created * 1000);
            this.modified = new Date(f.__modifed * 1000);
            this.owner = f.__owner;
            this.layerId = (f.__layerId != null ) ? f.__layerId : (f.__layer_id || f.layerId);
            this.geometry = f.__geometry || f.geometry || null ;
            this.bounds = new giscloud.Bounds(f.__xmin,f.__ymin,f.__xmax,f.__ymax);
            this.data = f.data || {};
            this.meta = f.meta
        } else {
            f = {}
        }
        this.remove = function() {
            return giscloud.features.remove(this.layerId, this.id)
        }
        ;
        this.update = function(m) {
            var h;
            f.layerId = this.layerId;
            f.data = this.data;
            f.geometry = this.geometry;
            h = this.bounds;
            that = this;
            delete f.__geometry;
            if (h) {
                f.__x_min = (h && h.left);
                f.__y_min = (h && h.bottom);
                f.__x_max = (h && h.right);
                f.__y_max = (h && h.top)
            }
            if (this.id != null ) {
                return giscloud.features.update(f.layerId, this.id, f, m)
            } else {
                return giscloud.features.update(f.layerId, null , f, m).done(function(o) {
                    that.id = o
                })
            }
        }
        ;
        this.clone = function() {
            return giscloud.features.create(this.layerId, {
                data: f.data,
                geometry: f.geometry
            })
        }
    }
})(window, window.giscloud.exposeJQuery());
(function(d, e, a, f) {
    giscloud.ViewerLayer = function(h) {
        var g, m;
        if (h) {
            this.id = parseInt(h.getId().replace(/layer(\d+)/, "$1"), 10);
            m = h.getData();
            this.sourceId = m && m.srcId;
            this.source = m && m.src;
            g = h.getBound();
            this.bounds = g && new giscloud.Bounds(g.xMin,g.yMin,g.xMax,g.yMax);
            this.instance = h
        } else {
            throw "Invalid arguments."
        }
    }
    ;
    giscloud.ViewerLayer.prototype = {
        visible: function() {
            var g = arguments[0];
            if (e.type(g) == "boolean") {
                if (g) {
                    this.instance.enable()
                } else {
                    this.instance.disable()
                }
                return this
            } else {
                return this.instance.getVisibility()
            }
        },
        selectable: function() {
            var g = arguments[0];
            if (e.type(g) == "boolean") {
                this.instance.setSelectable(g);
                return this
            } else {
                return this.instance.getSelectable()
            }
        },
        opacity: function() {
            var g = arguments[0];
            if (e.type(g) == "number") {
                this.instance.setAlpha(g);
                return this
            } else {
                return this.instance.getAlpha()
            }
        },
        expressions: function(g) {
            var h = this;
            if (!this.instance || !this.instance.features) {
                throw "Invalid layer."
            }
            return e.map(this.instance.features, function(m) {
                if (g && g.withExpression && g.withExpression != m.expression) {
                    return
                }
                if (g && g.withLabel && g.withLabel != m.expressionLabel) {
                    return
                }
                return new giscloud.ViewerLayerExpression(h,m)
            }).reverse()
        },
        redraw: function() {
            var g;
            g = this.instance.viewer.getLayerByName("llayer" + this.id);
            if (g) {
                g.redraw()
            }
            this.instance.redraw()
        },
        expressionVisible: function(h, o) {
            var q, p, g;
            if (h == null ) {
                throw "No index param provided."
            }
            if (!this.instance || !this.instance.features || !this.instance.features[h]) {
                throw "Invalid layer expression."
            }
            q = this.instance.features.length - h - 1;
            if (o === f) {
                return this.instance.features[q].visible !== false
            }
            p = this.instance.viewer.getLayerByName("llayer" + this.id);
            g = this.instance.features[q].expression;
            this.instance.features[q].visible = !!o;
            if (p) {
                for (var m = 0; m < p.features.length; m++) {
                    if (p.features[m].expression === g) {
                        p.features[m].visible = !!o
                    }
                }
                p.redraw()
            }
            this.instance.features[q].visible = !!o;
            this.instance.redraw();
            return this
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(e, f, d, g) {
    var a;
    giscloud.ViewerLayerExpression = function(p, m) {
        var h, o;
        if (m) {
            this.instance = m;
            a = p;
            this.expression = m && m.expression;
            this.label = m && m.expressionLabel
        } else {
            throw "Invalid arguments."
        }
    }
    ;
    giscloud.ViewerLayerExpression.prototype = {
        visible: function(h) {
            this.instance.visible = !!h;
            a.instance.redraw();
            return this
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(d, e, a, f) {
    giscloud.ViewerSelection = function(o) {
        var u = {}
          , z = o
          , m = {}
          , q = 0
          , g = a.oid()
          , h = {};
        if (o && o.constructor === giscloud.Viewer) {
            e.extend(this, {
                add: function(C, v, B) {
                    if (u[v] === f) {
                        u[v] = []
                    }
                    if (e.inArray(u[v], C) === -1) {
                        u[v].push(C);
                        q++;
                        if (!B) {
                            e(m).triggerHandler("featureAdd", [{
                                featureId: C,
                                layerId: v
                            }, this])
                        }
                    }
                    return this
                },
                highlightSelected: function p() {
                    var B = null 
                      , v = null ;
                    e.each(u, function(C, D) {
                        v = parseInt(C, 10);
                        e.each(D, function(E, F) {
                            B = parseInt(F, 10);
                            a.highlight(z.instance, B, v, false)
                        })
                    });
                    return this
                },
                clearHighlight: function r() {
                    a.highlight(z.instance, "", null , true);
                    return this
                },
                remove: function(D, B) {
                    var C, v = u[B];
                    if (v !== f) {
                        C = e.inArray(D, v);
                        if (C > -1) {
                            v.splice(C, 1);
                            q--;
                            e(m).triggerHandler("featureRemove", [{
                                featureId: D,
                                layerId: B
                            }, this])
                        }
                    }
                    return this
                },
                toggle: function(B, v) {
                    if (this.isSelected(B, v)) {
                        this.remove(B, v)
                    } else {
                        this.add(B, v)
                    }
                    return this
                },
                clear: function(v) {
                    if (v !== f && u[v] !== f) {
                        q -= u[v].length;
                        delete u[v]
                    } else {
                        q = 0;
                        u = {}
                    }
                    this.clearHighlight();
                    e(m).triggerHandler("selectionClear", [this]);
                    return this
                },
                isSelected: function(B, v) {
                    return u[v] !== f && e.inArray(B, u[v]) > -1
                },
                selected: function(C) {
                    var v = []
                      , D = this.add
                      , B = true;
                    if (e.isArray(C)) {
                        if (q > 0) {
                            this.clear()
                        }
                        e.each(C, function(E, F) {
                            D(F.featureId, F.layerId, B)
                        });
                        e(m).triggerHandler("multipleFeaturesAdd", [e.map(C, function(E) {
                            return {
                                featureId: E.featureId,
                                layerId: E.layerId
                            }
                        }), this]);
                        return this
                    }
                    e.each(u, function(E) {
                        e.each(this, function() {
                            v.push({
                                featureId: this,
                                layerId: E
                            })
                        })
                    });
                    return v
                },
                count: function() {
                    return q
                },
                bind: function(v, C) {
                    var B = this, D;
                    if (v && typeof v == "string" && typeof C == "function") {
                        D = function() {
                            C.apply(B, Array.prototype.slice.call(arguments, 1))
                        }
                        ;
                        e(m).on(v, D);
                        if (!C.gcunbind) {
                            C.gcunbind = {}
                        }
                        C.gcunbind[g + v] = D
                    }
                    return this
                },
                unbind: function(v, B) {
                    var C;
                    if (v && typeof v == "string" && typeof B == "function") {
                        C = B.gcunbind && B.gcunbind[g + v];
                        if (C) {
                            e(m).off(v, C)
                        }
                    }
                    return this
                },
                featureAdd: function(v) {
                    return this.bind("featureAdd", v)
                },
                featureRemove: function(v) {
                    return this.bind("featureRemove", v)
                },
                selectionClear: function(v) {
                    return this.bind("selectionClear", v)
                },
                ctrlDown: false
            })
        } else {
            throw "Invalid constructor arguments."
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(h, f, m, a, e) {
    var p = /^layer(\d+)\|\|(\d+)$/, o, d, g, r, q;
    giscloud.Viewer = function() {
        var F = this, z = arguments, E = m.oid(), v = {}, C = ["columns"], u, B, D;
        if (typeof z[0] === "string") {
            this.containerId = u = z[0];
            this.mapId = B = z[1];
            D = z[2] || {};
            this.initializing = new f.Deferred();
            this.loading = new f.Deferred();
            this.layersLoading = new f.Deferred();
            D.graphicScalebar = true;
            o(u, D).done(function(G) {
                var H, I = new a(G);
                I.plugins = {};
                I.plugins.marker = new fnMarker(I);
                I.plugins.kartehr = new fnKartehr(I);
                I.plugins.canvas = new fnCanvas(I);
                I.plugins.tooltip = new fnTooltip(I);
                I.plugins.kartehr.liveSite("http://www.mapcow.org/");
                if (D.scalebar) {
                    I.plugins.scalebar = new fnScalebar(I)
                }
                if (D.slider) {
                    I.plugins.slider = new fnSlider(I)
                }
                I.enablePanWithMiddleButton();
                F.instance = I;
                I.parent = F;
                I.addEventListener("layerRemoved", f.proxy(r, F));
                I.addEventListener("load", function() {
                    var J, K;
                    if ((giscloud && giscloud.layers && F.mapId != null ) && !D.dontWaitForLayers) {
                        J = giscloud.layers.byMapId(F.mapId, {
                            expand: C.join(",")
                        }).then(function(M) {
                            M = M || [];
                            M = M.sort(function(O, N) {
                                if (O.order != null  && O.order != null ) {
                                    return (parseInt(O.order, 10) > parseInt(N.order, 10)) ? 1 : -1
                                }
                                return 0
                            });
                            return M
                        })
                    } else {
                        J = f.Deferred().resolve(null )
                    }
                    if (giscloud && giscloud.userOptions && F.mapId != null  && D.userLayerStates) {
                        K = giscloud.userOptions.byName("MAP_" + F.mapId + "_LAYERS_STATES").then(function(N) {
                            var M;
                            try {
                                M = N && N.value && JSON.parse(N.value);
                                if (!M) {
                                    return {}
                                }
                                return M
                            } catch (O) {
                                return {}
                            }
                        }, function() {
                            return f.Deferred().resolve({})
                        })
                    } else {
                        K = f.Deferred().resolve({})
                    }
                    f.when(J, K).always(function(N, M) {
                        if (D.dontWaitForLayers) {
                            if (giscloud && giscloud.layers && F.mapId != null ) {
                                giscloud.layers.byMapId(F.mapId, {
                                    expand: C.join(",")
                                }).done(function(O) {
                                    q(F, O, M);
                                    F.layersLoading.resolveWith(F, [O, M])
                                }).fail(F.layersLoading.reject)
                            }
                        }
                        q(F, N, M);
                        if (N) {
                            F.layersLoading.resolveWith(F, [N, M])
                        }
                        F.graphic = new giscloud.Graphic(F);
                        if (!F.selection) {
                            F.selection = new giscloud.ViewerSelection(F);
                            F.selection.featureAdd(function(O) {
                                m.highlight(F.instance, O.featureId, O.layerId, false);
                                f(v).triggerHandler("selectionChange", {
                                    action: "add",
                                    feature: O
                                })
                            });
                            F.selection.bind("multipleFeaturesAdd", function(O) {
                                var S = {}, Q, P, R;
                                for (Q = 0,
                                P = O.length; Q < P; Q++) {
                                    R = O[Q].layerId;
                                    if (S[R] === e) {
                                        S[R] = [O[Q].featureId]
                                    } else {
                                        S[R].push(O[Q].featureId)
                                    }
                                }
                                for (R in S) {
                                    if (S.hasOwnProperty(R)) {
                                        m.highlightMultiple(F.instance, S[R], R, false)
                                    }
                                }
                                f(v).triggerHandler("selectionChange", {
                                    action: "add",
                                    feature: O
                                })
                            });
                            F.selection.featureRemove(function(Q, O) {
                                var P = f.map(O.selected(), function(R) {
                                    return "layer" + R.layerId + "||" + R.featureId
                                }).join();
                                m.highlight(F.instance, P, null , true);
                                f(v).triggerHandler("selectionChange", {
                                    action: "remove",
                                    feature: Q
                                })
                            });
                            F.selection.selectionClear(function() {
                                F.instance.modifyObject(null , {}, null , true);
                                f(v).triggerHandler("selectionChange", {
                                    action: "clear"
                                })
                            })
                        }
                        if (h.Proj4js) {
                            Proj4js.defs.GC_MAP_CURRENT = F.instance.projection;
                            F.projection = new Proj4js.Proj("GC_MAP_CURRENT")
                        } else {
                            F.projection = F.instance.projection
                        }
                        F.loading.resolveWith(F, []);
                        f(v).triggerHandler("loaded", [F]);
                        f(v).triggerHandler("ready", [F])
                    })
                });
                I.addEventListener("reload", function() {
                    var J, K;
                    if ((giscloud && giscloud.layers && F.mapId != null ) && !D.dontWaitForLayers) {
                        J = giscloud.layers.byMapId(F.mapId, {
                            expand: C.join(",")
                        }).then(function(M) {
                            M = M || [];
                            M = M.sort(function(O, N) {
                                if (O.order != null  && O.order != null ) {
                                    return (parseInt(O.order, 10) > parseInt(N.order, 10)) ? 1 : -1
                                }
                                return 0
                            });
                            return M
                        })
                    } else {
                        J = (new f.Deferred()).resolve(null )
                    }
                    if (giscloud && giscloud.userOptions && F.mapId != null  && D.userLayerStates) {
                        K = giscloud.userOptions.byName("MAP_" + F.mapId + "_LAYERS_STATES").then(function(N) {
                            var M;
                            try {
                                M = N && N.value && JSON.parse(N.value);
                                if (!M) {
                                    return {}
                                }
                                return M
                            } catch (O) {
                                return {}
                            }
                        }, function() {
                            return f.Deferred().resolve({})
                        })
                    } else {
                        K = f.Deferred().resolve({})
                    }
                    f.when(J, K).always(function(N, M) {
                        if (D.dontWaitForLayers) {
                            if (giscloud && giscloud.layers && F.mapId != null ) {
                                giscloud.layers.byMapId(F.mapId, {
                                    expand: C.join(",")
                                }).then(function(O) {
                                    O = O || [];
                                    O = O.sort(function(Q, P) {
                                        if (Q.order != null  && Q.order != null ) {
                                            return (parseInt(Q.order, 10) > parseInt(P.order, 10)) ? 1 : -1
                                        }
                                        return 0
                                    });
                                    return O
                                }).done(function(O) {
                                    q(F, O, M);
                                    F.layersLoading.resolveWith(F, [O, M])
                                }).fail(F.layersLoading.reject)
                            }
                        }
                        q(F, N, M);
                        if (N) {
                            F.layersLoading.resolveWith(F, [N, M])
                        }
                        if (h.Proj4js) {
                            Proj4js.defs.GC_MAP_CURRENT = F.instance.projection;
                            F.projection = new Proj4js.Proj("GC_MAP_CURRENT")
                        } else {
                            F.projection = F.instance.projection
                        }
                        F.loading.resolveWith(F, []);
                        f(v).triggerHandler("reloaded", [F])
                    })
                });
                if (F.instance.setLayerFeatureFilter && flashnavigator.extraOptions) {
                    for (H in flashnavigator.extraOptions.data) {
                        F.instance.setLayerFeatureFilter("layer" + H, flashnavigator.extraOptions.data[H])
                    }
                }
                if (B) {
                    F.loadMap(B, e, D.initialBounds)
                }
                F.initializing.resolveWith(F, []);
                f(v).triggerHandler("init", [F])
            });
            this.initializing.done(function() {
                h.toolbarControl = L.control.giscloudToolbar({
                    viewer: this
                });
                if (h.toolbarControl) {
                    this.instance.exposeLeaflet().addControl(h.toolbarControl)
                }
            });
            if (D.graphicScalebar) {
                this.initializing.done(function() {
                    var G = this.instance.exposeLeaflet();
                    G.scaleControl = L.control.scale();
                    G.scaleControl.original_update = G.scaleControl._update;
                    G.scaleControl.original_updateScales = G.scaleControl._updateScales
                })
            }
        } else {
            m.setError(this, "constructor", "Invalid constructor arguments")
        }
        this.activeLayer = null ;
        this.markers = [];
        this.editing = null ;
        f.extend(this, {
            bind: function(G, I) {
                var H = this, J;
                if (G && typeof G === "string" && typeof I === "function") {
                    switch (G) {
                    case "mouseDown":
                        J = function(K) {
                            I.call(H, new giscloud.LonLat(K.x,K.y), {
                                containerX: K.containerX,
                                containerY: K.containerY
                            })
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("mousedown", J)
                        });
                        break;
                    case "mouseUp":
                        J = function(K) {
                            I.call(H, new giscloud.LonLat(K.x,K.y))
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("mouseup", J)
                        });
                        break;
                    case "mouseMove":
                        J = function(K) {
                            I.call(H, new giscloud.LonLat(K.x,K.y))
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("mousemove", J)
                        });
                        break;
                    case "doubleClick":
                        J = function(K) {
                            I.call(H, new giscloud.LonLat(K.x,K.y))
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("doubleClick", J)
                        });
                        break;
                    case "dragEnd":
                        J = function() {
                            I.call(H)
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("dragend", J)
                        });
                        break;
                    case "scaleChange":
                        J = function(K) {
                            I.call(H, H.instance.convertScale(K.zoom))
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("scalechange", J)
                        });
                        break;
                    case "boundsChange":
                        J = function(K) {
                            var M = new giscloud.Bounds(K.bounds.xMin,K.bounds.yMin,K.bounds.xMax,K.bounds.yMax);
                            I.call(H, M)
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("boundschange", J)
                        });
                        break;
                    case "featureClick":
                        J = function(M) {
                            var K = M.id.match(p)
                              , N = {
                                layerId: parseInt(K[1], 10),
                                featureId: parseInt(K[2], 10),
                                key: M.key,
                                attributes: (M.object ? M.object.attributes : M.attributes)
                            };
                            I.call(H, N)
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("object_click", J)
                        });
                        break;
                    case "featureDoubleclick":
                        J = function(M) {
                            var K = M.id.match(p);
                            I.call(H, {
                                layerId: parseInt(K[1], 10),
                                featureId: parseInt(K[2], 10),
                                key: M.key,
                                attributes: (M.object ? M.object.attributes : M.attributes)
                            })
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("object_dblclick", J)
                        });
                        break;
                    case "featureOver":
                        J = function(M) {
                            var K = M.id.match(p);
                            I.call(H, {
                                layerId: parseInt(K[1], 10),
                                featureId: parseInt(K[2], 10),
                                key: M.key,
                                attributes: (M.object ? M.object.attributes : M.attributes)
                            })
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("object_over", J)
                        });
                        break;
                    case "featureOut":
                        J = function(M) {
                            var K = M.id.match(p);
                            I.call(H, {
                                layerId: parseInt(K[1], 10),
                                featureId: parseInt(K[2], 10),
                                key: M.key,
                                attributes: (M.object ? M.object.attributes : M.attributes)
                            })
                        }
                        ;
                        this.initializing.done(function() {
                            H.instance.addEventListener("object_out", J)
                        });
                        break;
                    default:
                        J = function() {
                            var K = Array.prototype.slice.call(arguments, 1);
                            I.apply(H, K)
                        }
                        ;
                        f(v).on(G, J);
                        break
                    }
                    if (!I.gcunbind) {
                        I.gcunbind = {}
                    }
                    I.gcunbind[E + G] = J
                }
                return this
            },
            getRenderParams: function(M) {
                var K = this
                  , I = M;
                function J(O) {
                    var N = K.instance.calculateScaleZoom(O);
                    return K.instance.convertScale(N)
                }
                function H(P, O) {
                    var N = P / J(O);
                    return -1 * Math.floor(Math.log(N) / Math.log(2))
                }
                function G(R) {
                    var S, Q, N, O, W, T, U, V, P = K.scale();
                    S = H(R, P);
                    Q = Math.pow(2, S);
                    N = (J(P) / Q) / R;
                    O = f(K.container());
                    W = O.width() * Q;
                    T = O.height() * Q;
                    U = Math.round(N * W);
                    V = Math.round(N * T);
                    return {
                        scale: N,
                        width: U,
                        height: V
                    }
                }
                return G(I)
            },
            unbind: function(G, I) {
                var H = this, J;
                if (G && typeof G === "string" && typeof I === "function") {
                    J = I.gcunbind && I.gcunbind[E + G];
                    if (J) {
                        switch (G) {
                        case "mouseDown":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("mousedown", J)
                            });
                            break;
                        case "mouseUp":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("mouseup", J)
                            });
                            break;
                        case "mouseMove":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("mousemove", J)
                            });
                            break;
                        case "doubleClick":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("doubleClick", J)
                            });
                            break;
                        case "dragEnd":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("dragend", J)
                            });
                            break;
                        case "scaleChange":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("scalechange", J)
                            });
                            break;
                        case "boundsChange":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("boundschange", J)
                            });
                            break;
                        case "featureClick":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("object_click", J)
                            });
                            break;
                        case "featureDoubleclick":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("object_dblclick", J)
                            });
                            break;
                        case "featureOver":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("object_over", J)
                            });
                            break;
                        case "featureOut":
                            this.initializing.done(function() {
                                H.instance.removeEventListener("object_out", J)
                            });
                            break;
                        default:
                            f(v).off(G, J);
                            break
                        }
                    }
                }
                return this
            },
            addLayersExpandParam: function() {
                var H = Array.prototype.slice.call(arguments), G = Array.prototype.concat.apply([], H), I;
                for (I = G.length - 1; I >= 0; I--) {
                    if (C.indexOf(G[I]) === -1) {
                        C.push(G[I])
                    }
                }
            },
            removeLayersExpandParam: function() {
                var I = Array.prototype.slice.call(arguments), H = Array.prototype.concat.apply([], I), J, G;
                for (J = H.length - 1; J >= 0; J--) {
                    G = C.indexOf(H[J]);
                    if (G > -1) {
                        C.splice(G, 1)
                    }
                }
            }
        })
    }
    ;
    f.extend(giscloud.Viewer.prototype, {
        loadMap: function(z, D, C) {
            var u, v, B;
            if (!this.instance) {
                m.setError(this, "loadMap", "No viewer instance.");
                return this
            }
            if (!z) {
                m.setError(this, "loadMap", "Invalid map id.");
                return this
            }
            u = m.liveSite() + "maps/map" + z + ".xml";
            if (giscloud.oauth2) {
                v = giscloud.oauth2.token();
                if (v) {
                    u += "?oauth_token=" + v
                }
            }
            v = giscloud.apiKey();
            if (v) {
                u += "?api_key=" + v;
                if (m.https() && m.liveSite().indexOf("http://giscloud.local") !== 0) {
                    u = u.replace("http:", "https:")
                }
            }
            if (this.loading.state() !== "pending") {
                this.loading = new f.Deferred()
            }
            if (this.layersLoading.state() !== "pending") {
                this.layersLoading = new f.Deferred()
            }
            this.instance.src(true);
            if (C) {
                B = {
                    xMin: C.left,
                    yMin: C.top,
                    xMax: C.right,
                    yMax: C.bottom
                }
            }
            this.instance.load(u, false, D, B);
            this.mapId = z;
            return this
        },
        reloadMap: function(z) {
            var u, v;
            if (!this.instance) {
                m.setError(this, "reloadMap", "No viewer instance.");
                return this
            }
            if (!this.mapId) {
                m.setError(this, "reloadMap", "Invalid map id.");
                return this
            }
            u = m.liveSite() + "maps/map" + this.mapId + ".xml";
            v = giscloud.oauth2.token();
            if (v) {
                u += "?oauth_token=" + v
            }
            v = giscloud.apiKey();
            if (v) {
                u += "?api_key=" + v;
                if (m.https() && m.liveSite().indexOf("http://giscloud.local") !== 0) {
                    u = u.replace("http:", "https:")
                }
            }
            if (this.loading.state() !== "pending") {
                this.loading = new f.Deferred()
            }
            if (this.layersLoading.state() !== "pending") {
                this.layersLoading = new f.Deferred()
            }
            if (z) {
                this.instance.unload()
            }
            this.instance.reload(u);
            return this
        },
        ready: function(u) {
            return this.bind("ready", u)
        },
        init: function(u) {
            return this.bind("init", u)
        },
        mouseDown: function(u) {
            return this.bind("mouseDown", u)
        },
        mouseUp: function(u) {
            return this.bind("mouseUp", u)
        },
        mouseMove: function(u) {
            return this.bind("mouseMove", u)
        },
        doubleClick: function(u) {
            return this.bind("doubleClick", u)
        },
        dragEnd: function(u) {
            return this.bind("dragEnd", u)
        },
        scaleChange: function(u) {
            return this.bind("scaleChange", u)
        },
        boundsChange: function(u) {
            return this.bind("boundsChange", u)
        },
        featureClick: function(u) {
            return this.bind("featureClick", u)
        },
        featureDoubleclick: function(u) {
            this.initializing.done(function() {
                this.instance.addEventListener("object_dblclick", function(z) {
                    var v = z.id.match(p);
                    u({
                        layerId: v[1],
                        featureId: v[2],
                        key: z.key,
                        attributes: (z.object ? z.object.attributes : z.attributes)
                    })
                })
            });
            return this
        },
        featureOver: function(u) {
            this.initializing.done(function() {
                this.instance.addEventListener("object_over", function(z) {
                    var v = z.id.match(p);
                    u({
                        layerId: v[1],
                        featureId: v[2],
                        key: z.key,
                        attributes: (z.object ? z.object.attributes : z.attributes)
                    })
                })
            });
            return this
        },
        featureOut: function(u) {
            this.initializing.done(function() {
                this.instance.addEventListener("object_out", function(z) {
                    var v = z.id.match(p);
                    u({
                        layerId: v[1],
                        featureId: v[2],
                        key: z.key,
                        attributes: (z.object ? z.object.attributes : z.attributes)
                    })
                })
            });
            return this
        },
        selectionChange: function(u) {
            return this.bind("selectionChange", u)
        },
        container: function(u) {
            if (u === e) {
                return f("#" + this.containerId)[0]
            } else {
                f("#" + u).append(f("#" + this.containerId).detach());
                this.containerId = u;
                return this
            }
        },
        width: function(v) {
            var u;
            if (v !== e) {
                f("#" + this.containerId).width(v);
                u = this.instance && this.instance.exposeLeaflet();
                u && u.invalidateSize();
                return this
            } else {
                return f("#" + this.containerId).width()
            }
        },
        height: function(u) {
            var v;
            if (u !== e) {
                f("#" + this.containerId).height(u);
                v = this.instance && this.instance.exposeLeaflet();
                v && v.invalidateSize();
                return this
            } else {
                return f("#" + this.containerId).height()
            }
        },
        bounds: function(v) {
            var u;
            if (v !== e) {
                this.loading.done(function() {
                    this.instance.setViewBound(v.left, v.bottom, v.right, v.top, true)
                });
                return this
            } else {
                u = this.instance.getViewBound();
                return new giscloud.Bounds(u.xMin,u.yMin,u.xMax,u.yMax)
            }
        },
        center: function(u, v) {
            if (u !== e) {
                if (!u || !(u instanceof giscloud.LonLat)) {
                    throw "Parameter 'center' should be a giscloud.LonLat instance."
                } else {
                    this.loading.done(function() {
                        var z = this.bounds();
                        if (z && z.center()) {
                            this.instance.setLocation(u.lon, u.lat, v)
                        } else {
                            throw "Viewer bounds are not set."
                        }
                    });
                    return this
                }
            } else {
                return this.bounds().center()
            }
        },
        scale: function(u) {
            if (u !== e) {
                if (!isFinite(u)) {
                    throw "Parameter 'scale' should be a finite number."
                } else {
                    this.loading.done(function() {
                        this.instance.setScale(u)
                    });
                    return this
                }
            } else {
                return this.instance.getScale()
            }
        },
        showLayer: function(v) {
            var u;
            u = this.layers.reduce(function(z, B) {
                if (z) {
                    return z
                }
                if (B.id === v) {
                    z = B
                }
                return z
            }, null );
            if (u) {
                u.visible(true);
                this.showLayerLabels(v)
            }
            return this
        },
        hideLayer: function(v) {
            var u;
            u = this.layers.reduce(function(z, B) {
                if (z) {
                    return z
                }
                if (B.id === v) {
                    z = B
                }
                return z
            }, null );
            if (u) {
                u.visible(false);
                this.hideLayerLabels(v)
            }
            return this
        },
        showLayerLabels: function(z) {
            giscloud.util.mediator.publish("labels/show", z);
            var u = "llayer" + z
              , v = this.instance.getLayerByName(u);
            if (v) {
                v.enable()
            }
        },
        hideLayerLabels: function(z) {
            giscloud.util.mediator.publish("labels/hide", z);
            var u = "llayer" + z
              , v = this.instance.getLayerByName(u);
            if (v) {
                v.disable()
            }
        },
        layerById: function(v) {
            var z, u, B;
            if (this.loading.state() === "resolved") {
                B = parseInt(v, 10);
                for (z = 0,
                u = this.layers.length; z < u; z++) {
                    if (this.layers[z].id === B) {
                        return this.layers[z]
                    }
                }
            }
            return null 
        },
        showTip: function(z, u) {
            var v = this.instance.plugins.tooltip;
            this.initializing.done(function() {
                v.show(z, u)
            });
            return this
        },
        hideTip: function() {
            var u = this.instance.plugins.tooltip;
            this.initializing.done(function() {
                u.hide()
            });
            return this
        },
        addMarker: function(u) {
            this.loading.done(function() {
                var v = this.instance.plugins.marker, E, D, F, C, B, z;
                B = function(K, I, N, J, G, P) {
                    var H, O, M;
                    O = u.rotation();
                    M = u.label();
                    N = N || "";
                    J = J ? z(N, J) : "";
                    if (I.url != null ) {
                        return P.loadPoi(K.lon, K.lat, I.url, {
                            hoverText: N,
                            popupContent: J,
                            popupVisible: G
                        }, true, I.width, I.height)
                    }
                    H = P.loadPoi(K.lon, K.lat, I, {
                        hoverText: N,
                        popupContent: J,
                        popupVisible: G
                    }, true);
                    if (M) {
                        P.attachLabel({
                            marker: H,
                            data: M
                        })
                    }
                    if (O) {
                        P.move(H, K.lon, K.lat, O)
                    }
                    return H
                }
                ;
                z = function(H, G) {
                    return f("<div/>").append(H ? f("<div/>", {
                        "class": "gc-info-popup-title"
                    }).html(H) : null , G ? f("<div/>", {
                        "class": "gc-info-popup-content"
                    }).html(G) : null ).html()
                }
                ;
                C = function(I, H) {
                    var K = this.instance.plugins.marker
                      , J = H.state
                      , G = J.marker
                      , O = G._id || null 
                      , M = H.newValue
                      , N = G.location();
                    if (H.oldValue === M) {
                        return
                    }
                    switch (H.property) {
                    case "location":
                        if (M && M instanceof giscloud.LonLat && M.valid() && G.visible()) {
                            if (O) {
                                K.move(O, M.lon, M.lat)
                            } else {
                                G._id = B(M, G.icon(), G.title(), G.content(), G.popup(), K)
                            }
                        } else {
                            O && K.removePoi(O);
                            G._id = null 
                        }
                        break;
                    case "rotation":
                        if (O) {
                            K.move(O, N.lon, N.lat, M)
                        }
                        break;
                    case "visible":
                        if (M && N && N instanceof giscloud.LonLat && N.valid()) {
                            G._id = B(N, G.icon(), G.title(), G.content(), G.popup(), K)
                        } else {
                            O && K.removePoi(O);
                            G._id = null 
                        }
                        break;
                    case "popup":
                        if (O) {
                            K.removePoi(O);
                            G._id = B(N, G.icon(), G.title(), G.content(), M, K)
                        }
                        break;
                    case "title":
                        if (O) {
                            K.removePoi(O);
                            G._id = B(N, G.icon(), M, G.content(), G.popup(), K)
                        }
                        break;
                    case "content":
                        if (O) {
                            K.removePoi(O);
                            G._id = B(N, G.icon(), G.title(), M, G.popup(), K)
                        }
                        break;
                    case "icon":
                        if (O) {
                            K.removePoi(O);
                            G._id = B(N, M, G.title(), G.content(), G.popup(), K)
                        }
                        break;
                    case "label":
                        if (O) {
                            if (M) {
                                K.attachLabel({
                                    marker: O,
                                    data: M
                                })
                            } else {
                                K.removePoi(O);
                                G._id = B(N, G.icon(), G.title(), G.content(), G.popup(), K)
                            }
                        }
                        break;
                    default:
                    }
                }
                ;
                if (u instanceof giscloud.Marker) {
                    F = u.location();
                    D = u.visible();
                    ico = u.icon() || null ;
                    this.markers.push(u);
                    f(u).on("stateChanged", f.proxy(C, this));
                    u._popupCloseHandler = function() {
                        u.popup(false, true)
                    }
                    ;
                    u._popupOpenHandler = function() {
                        u.popup(true, true)
                    }
                    ;
                    f(v).on("popupClose.fnMarker", u._popupCloseHandler).on("popupOpen.fnMarker", u._popupOpenHandler);
                    if (D && F && F instanceof giscloud.LonLat && F.valid()) {
                        u._id = B(F, ico, u.title(), u.content(), u.popup(), v)
                    }
                } else {
                    if (u instanceof giscloud.FlagMarker) {
                        E = u.sig;
                        if (E && m.markers[E].m) {
                            throw "This marker has already been added to a viewer."
                        } else {
                            u.sig = "m" + m.oid();
                            E = u.sig;
                            if (!m.markers) {
                                m.markers = {}
                            }
                            m.markers[E] = {
                                m: v
                            };
                            D = u.visible();
                            F = u.position();
                            if (D && F) {
                                m.markers[E].id = v.add(F.lon, F.lat, u.color().hex("0x"), u.title(), u.content(), null , true)
                            } else {
                                m.markers[E].id = null 
                            }
                            this.markers.push(u);
                            m.markers[E].open = true;
                            m.markers[E].openCloseHandler = function(G, I, H) {
                                if (m.markers[E]) {
                                    m.markers[E].open = H
                                }
                            }
                            ;
                            f(v).on("fnMarker.OpenClose", m.markers[E].openCloseHandler)
                        }
                    } else {
                        if (u instanceof giscloud.LabelMarker) {
                            E = u.sig;
                            if (E && m.markers[E].m) {
                                throw "This marker has already been added to a viewer."
                            }
                            u.sig = "m" + m.oid();
                            E = u.sig;
                            if (!m.markers) {
                                m.markers = {}
                            }
                            m.markers[E] = {
                                m: v,
                                label: new L.DivIcon({
                                    className: "gc-map-tip"
                                })
                            };
                            F = u.location();
                            D = u.visible();
                            this.markers.push(u);
                            f(u).on("stateChanged", f.proxy(g, this));
                            if (D && F && F instanceof giscloud.LonLat && F.valid()) {
                                F = this.instance.toLeafletCoords(F.lon, F.lat);
                                m.markers[E].marker = new L.Marker(F,{
                                    icon: m.markers[E].label,
                                    clickable: false
                                });
                                this.instance.exposeLeaflet().addLayer(m.markers[E].marker);
                                m.markers[E].marker._icon.innerHTML = u.content() || ""
                            }
                        } else {
                            throw "Not a giscloud marker."
                        }
                    }
                }
            });
            return this
        },
        removeMarker: function(u) {
            this.loading.done(function() {
                var v = this.instance.plugins.marker, z;
                if (u instanceof giscloud.Marker) {
                    if (u._id) {
                        f(v).off("popupClose.fnMarker", u._popupCloseHandler).off("popupOpen.fnMarker", u._popupOpenHandler);
                        u._popupCloseHandler = null ;
                        u._popupOpenHandler = null ;
                        v.removePoi(u._id)
                    }
                    z = f.inArray(u, this.markers);
                    if (z > -1) {
                        this.markers.splice(z, 1)
                    }
                } else {
                    if (u instanceof giscloud.FlagMarker) {
                        if (u.sig && m.markers[u.sig].m === v) {
                            m.markers[u.sig].m.remove(m.markers[u.sig].id);
                            f(v).off("fnMarker.OpenClose", m.markers[u.sig].openCloseHandler);
                            delete m.markers[u.sig].openCloseHandler;
                            delete m.markers[u.sig];
                            z = f.inArray(u, this.markers);
                            if (z > -1) {
                                this.markers.splice(z, 1)
                            }
                            delete u.sig
                        } else {
                            throw "This is not a marker which belongs to this viewer."
                        }
                    } else {
                        if (u instanceof giscloud.LabelMarker) {
                            if (u.sig && m.markers[u.sig].m === v) {
                                this.instance.exposeLeaflet().removeLayer(m.markers[u.sig].marker);
                                delete m.markers[u.sig];
                                z = f.inArray(u, this.markers);
                                if (z > -1) {
                                    this.markers.splice(z, 1)
                                }
                                delete u.sig;
                                f(u).off("stateChanged", g)
                            } else {
                                throw "This is not a marker which belongs to this viewer."
                            }
                        } else {
                            throw "Not a giscloud marker."
                        }
                    }
                }
            });
            return this
        },
        createAsMaplimProject: function(u) {
            var v = new f.Deferred();
            if (!this.options || !this.options.EMBLIM_PROJECT || this.options.EMBLIM_PROJECT !== "1") {
                giscloud.options.create({
                    resource: "maps",
                    id: u
                }, {
                    option_name: "EMBLIM_PROJECT",
                    option_value: "1"
                }).done(function() {
                    v.resolve()
                }).fail(function() {
                    v.reject()
                })
            } else {
                v.resolve()
            }
            return v.promise()
        },
        openInMaplim: function() {
            var u = parseInt(this.mapId, 10), v;
            this.createAsMaplimProject.call(this, u).done(function() {
                giscloud.maps.byId(u).done(function(z) {
                    v = getUrlFromAppName("maplim");
                    v += "map/" + u + "/" + z.name;
                    h.open(v)
                })
            }).fail(function() {
                alert("Problem with opening map in Maplim! You don't have edit rights for this map. Please contact owner of the map!")
            })
        },
        fullExtent: function() {
            var u = this.instance;
            this.loading.done(function() {
                u.setViewBound()
            });
            return this
        },
        measure: function() {
            var u = this;
            this.loading.done(function() {
                u.select(false);
                u.instance.setTool("MeasureTool")
            });
            return this
        },
        areaZoom: function() {
            var u = this;
            this.loading.done(function() {
                u.select(false);
                u.instance.setTool("SelectAreaTool")
            });
            return this
        },
        pan: function() {
            var u = this;
            this.loading.done(function() {
                u.select(false);
                u.instance.setTool("DragTool")
            });
            return this
        },
        zoomToLayer: function(u) {
            var v = this;
            this.loading.done(function() {
                var z = v.layerById(u);
                if (z) {
                    v.bounds(z.bounds)
                }
            });
            return this
        },
        zoomToCurrentLocation: function(u) {
            var v;
            if (navigator.geolocation == null ) {
                console.log("Browser doesn't support geolocation.");
                return this
            }
            if (h.Proj4js) {
                v = this.loading
            } else {
                v = f.when(giscloud.includeJs(m.liveSite() + "libs/proj4js/proj4js-compressed.js"), this.loading)
            }
            v.done(f.proxy(function() {
                var B = {
                    enableHighAccuracy: true,
                    timeout: 10000,
                    maximumAge: u ? Infinity : 20000
                }
                  , z = function(D) {
                    if (D) {
                        switch (D.code) {
                        case 1:
                            console.log("No permission to get geolocation.");
                            break;
                        case 2:
                            console.log("No geolocation available.");
                            break;
                        case 3:
                            console.log("Geolocation request timed out.");
                            break;
                        default:
                            console.log("Error acquiring geolocation (code: " + (D.code || "?") + ").")
                        }
                        if (D.message) {
                            console.log(D.message)
                        }
                    } else {
                        console.log("Error acquiring geolocation.")
                    }
                }
                  , C = f.proxy(function(K) {
                    var F = new Proj4js.Point(K.coords.longitude,K.coords.latitude), H = Math.max(K.coords.accuracy, 70), D = this.bounds(), G, M, J, E = h.navigator.userAgent, I = E.indexOf("MSIE ");
                    if (typeof this.projection === "string") {
                        Proj4js.defs.GC_MAP_CURRENT = this.projection;
                        this.projection = new Proj4js.Proj("GC_MAP_CURRENT")
                    }
                    Proj4js.transform(Proj4js.WGS84, this.projection, F);
                    if (I > 0) {
                        return this.center(new giscloud.LonLat(F.x,F.y), 11)
                    }
                    if (!H) {
                        return this.center(new giscloud.LonLat(F.x,F.y))
                    }
                    D.center(new giscloud.LonLat(F.x,F.y));
                    if (this.projection.units === "degrees") {
                        if (this.projection.a) {
                            if (this.projection.b) {
                                M = (this.projection.a + this.projection.b) / 2
                            } else {
                                M = this.projection.a
                            }
                        }
                        G = m.haversine(D.top, D.left, D.bottom, D.right, M);
                        J = (G / 2) / H;
                        H = Math.max(D.width(), D.height()) / J
                    } else {
                        H = giscloud.fromMeters(this.projection.units, H)
                    }
                    if (D.width() > D.height()) {
                        D.height(H * 3, true)
                    } else {
                        D.width(H * 3, true)
                    }
                    this.bounds(D)
                }, this);
                navigator.geolocation.getCurrentPosition(C, z, B)
            }, this));
            return this
        },
        select: function(u) {
            var z = this, v;
            if (u === true) {
                this.instance.setTool("DragTool");
                this.instance.enableSelection();
                v = f(this).data("selectFeatureClickCallback");
                if (!v) {
                    v = function(C) {
                        var B = C.id.match(p)
                          , I = parseInt(B[2], 10)
                          , G = parseInt(B[1], 10)
                          , H = C.key === 17
                          , F = z.selection
                          , E = z.instance
                          , D = function(M, K, J) {
                            m.highlight(E, M, K, J)
                        }
                        ;
                        if (H || F.ctrlDown) {
                            if (F.isSelected(I, G)) {
                                E.demodifyObjectsColor();
                                F.remove(I, G);
                                f.each(z.selection.selected().slice(0), function() {
                                    var K = this.featureId.toString()
                                      , J = this.layerId.toString();
                                    D(K, J, false)
                                })
                            } else {
                                D(I, G, false);
                                F.add(I, G)
                            }
                        } else {
                            if (F.isSelected(I, G) && F.count() === 1) {
                                E.demodifyObjectsColor();
                                F.remove(I, G)
                            } else {
                                F.clear();
                                D(I, G, true);
                                F.add(I, G)
                            }
                        }
                    }
                    ;
                    f(this).data("selectFeatureClickCallback", v)
                }
                this.instance.addEventListener("object_click", v)
            } else {
                if (u === false) {
                    this.instance.disableSelection();
                    this.instance.removeEventListener("object_click", f(this).data("selectFeatureClickCallback"))
                } else {
                    return !!(this.instance && this.instance.selectionEnabled)
                }
            }
            return this
        },
        selectFeature: function(v, F, z) {
            var D = this.selection
              , u = D.isSelected(F, v)
              , E = parseInt(F, 10)
              , C = parseInt(v, 10)
              , B = this;
            z = (z === false) ? false : true;
            this.loading.done(function() {
                if (u && !z) {
                    B.instance.demodifyObjectsColor();
                    D.remove(E, C);
                    f.each(D.selected().slice(0), function() {
                        var H = this.featureId.toString()
                          , G = this.layerId.toString();
                        m.highlight(B.instance, H, G, false)
                    })
                } else {
                    if (!u && z) {
                        m.highlight(B.instance, E, C, false);
                        D.add(E, C)
                    }
                }
            });
            return this
        },
        selectFeaturesByBounds: function(v, z, u) {
            this.loading.done(function() {
                var B = this;
                if (u) {
                    this.instance.demodifyObjectsColor();
                    this.selection.clear()
                }
                if (v !== null  || v !== e) {
                    giscloud.features.byBounds(v, z).done(function(E) {
                        var D, C;
                        for (D = 0,
                        C = E.length; D < C; D++) {
                            if (E[D].id !== e) {
                                B.selectFeature(v, E[D].id, true)
                            }
                        }
                    })
                }
            })
        },
        editFeature: function(v, E, B) {
            var C = this, D = this.editing, z, u;
            if (d(D)) {
                z = f.proxy(D.fail, D);
                this.editCancel()
            } else {
                z = f.proxy(this.loading.done, this.loading)
            }
            u = new f.Deferred();
            B = B || {};
            z(function() {
                if (v == null  || C.layerById(v) == null ) {
                    u.reject("Invalid layer id");
                    return
                }
                if (E == null ) {
                    return
                }
                C.select(false);
                u.always(function() {
                    C.select(true)
                });
                giscloud.features.byId(v, E, {
                    geometry: "wkt"
                }).fail(function() {
                    u.reject("Unknown feature")
                }).done(function(G) {
                    var F = giscloud.geometry.fromOGC(G.geometry)
                      , H = F && new giscloud.GraphicFeature(F);
                    if (!H) {
                        u.reject("Invalid feature geometry");
                        return
                    }
                    if (H.geometry() instanceof giscloud.geometry.Line) {
                        H.style({
                            size: 5
                        })
                    }
                    C.graphic.add(H).edit(H).fail(function() {
                        u.reject("Cancelled")
                    }).done(function(I) {
                        giscloud.features.update(G.layerId, G.id, {
                            geometry: I.toOGC()
                        }, {
                            use_map_srid: true
                        }).done(function() {
                            if (B.dontReset) {
                                u.resolve()
                            } else {
                                giscloud.layers.reset(C.mapId, [v]).always(function() {
                                    u.resolve()
                                }).done(function() {
                                    C.instance.reload()
                                })
                            }
                        }).fail(function() {
                            u.reject("Error updating feature")
                        })
                    });
                    u.always(function() {
                        C.graphic.remove(H)
                    })
                })
            });
            this.editing = u;
            return u.promise()
        },
        editAccept: function() {
            if (d(this.editing)) {
                this.graphic.editAccept()
            }
            return this
        },
        editCancel: function() {
            if (d(this.editing)) {
                this.graphic.editCancel()
            }
            return this
        },
        filterFeatures: function(u, v) {
            var z = this;
            this.initializing.done(function() {
                var C, D, B, E = v ? v.filter : e;
                if (u) {
                    C = "layer" + u,
                    z.instance.setLayerFeatureFilter(C, v);
                    D = z.instance.getLayerByName(C);
                    B = D.filterFunction != E;
                    D.filterFunction = E;
                    if (D && B) {
                        D.redraw()
                    }
                    labelLayerName = "llayer" + u,
                    labelLayerObject = z.instance.getLayerByName(labelLayerName);
                    if (labelLayerObject) {
                        z.instance.setLayerFeatureFilter(labelLayerName, v);
                        if (B) {
                            labelLayerObject.redraw()
                        }
                    }
                }
            })
        }
    });
    giscloud.Viewer.__googleMapsApiLoaded = new f.Deferred;
    d = function(u) {
        return u && u.state() === "pending"
    }
    ;
    q = function(G, D, M) {
        var v, H, I, u, F, E, B, C, z, K = /^layer(\d+)$/, J = G.instance;
        layerIndex = {};
        G.layers = [];
        if (D && D.length === 2 && f.isArray(D[0]) && f.isNumeric(D[1])) {
            D = D[0]
        }
        C = D && D.length;
        try {
            for (F = 0,
            E = J.getLayerCount(); F < E; F++) {
                H = J.getLayer(F);
                v = H.getId();
                B = v.match(K);
                if (B) {
                    v = B[1];
                    layerIndex[v] = F;
                    H = new giscloud.ViewerLayer(H);
                    u = M && M[v.toString()];
                    if (u && u.v != null ) {
                        H.visible(u.v)
                    }
                    G.layers.push(H)
                }
            }
            if (C) {
                for (F = 0; F < C; F++) {
                    I = D[F];
                    for (z = 0; z < G.layers.length; z++) {
                        if (parseInt(I.id) === G.layers[z].id) {
                            H = G.layers[z];
                            break
                        } else {
                            H = null 
                        }
                    }
                    if (H) {
                        u = M && M[H.id.toString()];
                        H.name = I.name;
                        H.type = I.type;
                        H.source = I.source.src;
                        H.sourceType = I.source.type;
                        H.datasourceId = I.datasourceId;
                        H.columns = I.columns;
                        H.opacity(parseInt(I.alpha, 10) || 100);
                        if (!u || u.v == null ) {
                            H.visible(I.visible === "t")
                        }
                        if (I.visible) {
                            H.visible(I.visible)
                        }
                        if (!u || u.l == null ) {
                            H.selectable(I.lock == null  || I.lock !== "t")
                        } else {
                            H.selectable(!u.l)
                        }
                    }
                }
            }
        } catch (N) {
            console.log(N)
        }
        f.data(G, "layerIndex", layerIndex);
        giscloud.util.mediator.publish("labels/redraw")
    }
    ;
    r = function(z) {
        var C = z && z.id.match(/^layer(\d+)$/)[1], v = f.data(this, "layerIndex"), B = v[C], u;
        if (!isNaN(B)) {
            this.layers.splice(B, 1);
            v = {};
            for (B = 0,
            u = this.layers.length; B < u; B++) {
                v[this.layers[B].id] = B
            }
            f.data(this, "layerIndex", v)
        }
    }
    ;
    g = function(z, v) {
        var B = v.state
          , u = B.marker
          , D = u.sig
          , C = v.newValue
          , E = u.location();
        if (v.oldValue === C) {
            return
        }
        switch (v.property) {
        case "location":
            if (C && C instanceof giscloud.LonLat && C.valid() && u.visible()) {
                E = this.instance.toLeafletCoords(E.lon, E.lat);
                if (m.markers[D].marker) {
                    m.markers[D].marker.setLatLng(E)
                } else {
                    m.markers[D].marker = new L.Marker(E,{
                        icon: m.markers[D].label,
                        clickable: false
                    });
                    this.instance.exposeLeaflet().addLayer(m.markers[D].marker);
                    m.markers[D].marker._icon.innerHTML = B.content || ""
                }
            } else {
                if (m.markers[D].marker) {
                    this.instance.exposeLeaflet().removeLayer(m.markers[D].marker);
                    m.markers[D].marker = null 
                }
            }
            break;
        case "visible":
            if (C && E && E instanceof giscloud.LonLat && E.valid()) {
                E = this.instance.toLeafletCoords(E.lon, E.lat);
                m.markers[D].marker = new L.Marker(E,{
                    icon: m.markers[D].label,
                    clickable: false
                });
                this.instance.exposeLeaflet().addLayer(m.markers[D].marker);
                m.markers[D].marker._icon.innerHTML = B.content || ""
            } else {
                this.instance.exposeLeaflet().removeLayer(m.markers[D].marker);
                m.markers[D].marker = null 
            }
            break;
        case "content":
            if (m.markers[D].marker) {
                m.markers[D].marker._icon.innerHTML = C
            }
            break;
        default:
        }
    }
    ;
    o = function(u, B, C) {
        var z = "tooltip,marker,kartehr,canvas"
          , v = new f.Deferred();
        B = B || {};
        if (B.scalebar) {
            z += ",scalebar"
        }
        if (B.slider) {
            z += ",slider"
        }
        flashnavigator.include(z);
        flashnavigator.setOptions(B);
        if (m.deferreds.flashnavigator === e) {
            m.deferreds.flashnavigator = {}
        }
        m.deferreds.flashnavigator[u] = v;
        v.done(C || null );
        flashnavigator.container(u, {
            onLoad: function(D) {
                v.resolve(D)
            }
        });
        return v
    }
})(window, giscloud.exposeJQuery(), giscloud.common(), fnViewer);
(function(g, e, h, d) {
    var f, q, o, p, m, a;
    h.deferreds.leafletLoading = new e.Deferred();
    if (g.L && g.L.Map) {
        m = g.L;
        h.deferreds.leafletLoading.resolve()
    }
    giscloud.exposeLeaflet = function() {
        return m
    }
    ;
    giscloud.Viewer.Leaflet = function(C, E, F) {
        var D, r, z, v, B, u;
        D = this;
        v = h.oid();
        r = {
            options: F
        };
        z = {};
        r.layers = [];
        if (h.deferreds.leafletLoading.state() !== "resolved") {
            giscloud.includeJs(h.liveSite() + "libs/leaflet-git/" + giscloud_config.leafletScript(), function() {
                if (g.L) {
                    m = g.L;
                    h.deferreds.leafletLoading.resolve()
                } else {
                    h.deferreds.leafletLoading.reject();
                    h.deferreds.leafletLoading = new e.Deferred()
                }
            });
            if (!a) {
                if (e.browser.msie && parseFloat(e.browser.version) < 9 && !("opacity" in document.createElement("div").style)) {
                    u = e.when(giscloud.includeCss(h.liveSite() + "libs/leaflet-git/leaflet.css"), giscloud.includeCss(h.liveSite() + "libs/leaflet-git/leaflet.ie.css"), giscloud.includeCss(h.liveSite() + "assets/api/1/css/gc-leaflet.css"))
                } else {
                    u = e.when(giscloud.includeCss(h.liveSite() + "libs/leaflet-git/leaflet.css"), giscloud.includeCss(h.liveSite() + "assets/api/1/css/gc-leaflet.css"))
                }
                u.done(function() {
                    a = true
                })
            }
        }
        this.init = new e.Deferred();
        this.init.done(function() {
            D.map = r.map;
            D.layer = r.layer;
            D.instance = r.map;
            r.map.on("zoomend", function() {
                e(z).triggerHandler("scaleChanged")
            })
        });
        h.deferreds.leafletLoading.done(function() {
            f(r, F.host || h.tileSite(), C, E, F);
            D.init.resolveWith(D)
        });
        this.bind = function(G, I) {
            var H, J;
            if (typeof I !== "function") {
                throw "Handler is not a function!"
            }
            switch (G) {
            case "click":
                H = "click";
                break;
            case "mouseDown":
                H = "mousedown";
                break;
            case "doubleClick":
                H = "dblclick";
                break;
            case "mouseMove":
                H = "mousemove";
                break;
            default:
                J = function() {
                    I.apply(D, Array.prototype.slice.call(arguments, 1))
                }
                ;
                e(z).on(G, J);
                I[G + v] = J;
                return this
            }
            J = function(K) {
                I.apply(D, [new giscloud.LonLat(K.latlng.lng,K.latlng.lat)])
            }
            ;
            r.map.on(H, J);
            I[G + v] = J;
            return this
        }
        ;
        this.unbind = function(G, I) {
            var H, J;
            if (typeof I !== "function") {
                throw "Handler is not a function!"
            }
            J = I[G + v];
            if (!J) {
                return this
            }
            switch (G) {
            case "click":
                H = "click";
                break;
            case "mouseDown":
                H = "mousedown";
                break;
            case "doubleClick":
                H = "dblclick";
                break;
            case "mouseMove":
                H = "mousemove";
                break;
            default:
                e(z).off(G, J);
                delete I[G + v];
                return this
            }
            r.map.off(H, J);
            delete I[G + v];
            return this
        }
        ;
        e.each(["click", "doubleClick", "mouseMove", "mouseDown"], function(G, H) {
            D[H] = function(I) {
                D.bind(H, I)
            }
        });
        this.bounds = function(G) {
            if (G == null ) {
                G = r.map.getBounds();
                return G && new giscloud.Bounds(G._southWest.lng,G._southWest.lat,G._northEast.lng,G._northEast.lat)
            } else {
                r.map.fitBounds(new m.LatLngBounds(new m.LatLng(G.bottom,G.left),new m.LatLng(G.top,G.right)));
                return this
            }
        }
        ;
        this.center = function(H, G) {
            if (H == null ) {
                H = r.map.getCenter();
                return H && new giscloud.LonLat(H.lng,H.lat)
            } else {
                r.map.setView(new g.L.LatLng(H.lat,H.lon), r.map.getZoom(), G);
                return this
            }
        }
        ;
        this.zoom = function(H, G) {
            if (H == null ) {
                return r.map.getZoom()
            } else {
                r.map.setView(r.map.getCenter(), H, G);
                return this
            }
        }
        ;
        this.addMarker = function(G, H, K) {
            var M, I, J;
            H = H || "defaultMarkerLayer";
            if (e(G).data(v + "_" + H) !== d) {
                throw {
                    msg: "Marker already present on the " + H + ".",
                    target: this,
                    param: G
                }
            }
            M = "m" + h.oid();
            e(G).data(v + "_" + H, M);
            if (r.markerLayers[H] === d) {
                J = new m.FeatureGroup();
                r.markerLayers[H] = J;
                if (K !== false) {
                    r.map.addLayer(J)
                }
            } else {
                J = r.markerLayers[H]
            }
            I = q(G.location(), G.title(), G.content(), G.icon());
            G.openPopup = function() {
                if (I._popup) {
                    I.openPopup()
                } else {
                    if (G.firstLoad) {
                        G.firstLoad()
                    } else {
                        throw "No popup, sorry."
                    }
                }
            }
            ;
            G.draggable = function(N) {
                if (N === d) {
                    return I.dragging.enabled()
                } else {
                    if (N === false) {
                        I.dragging.disable();
                        N = e(I).data("ondrag");
                        N && I.off("dragend", N)
                    } else {
                        I.dragging.enable();
                        I.on("dragend", N);
                        e(I).data("ondrag", N)
                    }
                }
            }
            ;
            I.on("dragend", function() {
                G.location(new giscloud.LonLat(this._latlng.lng,this._latlng.lat), true)
            });
            I.on("click", (function(N) {
                return function() {
                    N.triggerHandler("click", [N[0]])
                }
            }(e(G))));
            r.markers[M] = I;
            if (G.visible()) {
                J.addLayer(I)
            }
            e(G).on("stateChanged", function(O, N) {
                p.call(G, N, I, J)
            });
            return this
        }
        ;
        this.removeMarker = function(G, H) {
            var I;
            H = H || "defaultMarkerLayer";
            I = e(G).data(v + "_" + H);
            if (I && r.markers[I]) {
                r.markerLayers[H].removeLayer(r.markers[I]);
                delete r.markers[I];
                e(G).removeData(v + "_" + H);
                delete G.openPopup
            }
            return this
        }
        ;
        this.markerLayers = function() {
            return e.map(r.markerLayers, function(H, G) {
                return G
            })
        }
        ;
        this.showMarkerLayer = function(G) {
            var H;
            G = G || "defaultMarkerLayer";
            H = r.markerLayers[G];
            H && r.map.addLayer(H)
        }
        ;
        this.hideMarkerLayer = function(G) {
            var H;
            G = G || "defaultMarkerLayer";
            H = r.markerLayers[G];
            H && r.map.removeLayer(H)
        }
    }
    ;
    f = function(u, v, J, C, I) {
        var z, F, E, r, H, G, B;
        if (C) {
            if (I.timestamp) {
                if (I.timestamp === "auto") {
                    G = "map.modified"
                } else {
                    G = I.timestamp
                }
            } else {
                Math.round(e.now() / 1000)
            }
            z = v + "rt/" + G + "/" + C + "/{z}/{x}/{y}.png";
            F = new m.TileLayer(z,{
                minZoom: 1,
                maxZoom: I.maxZoom || 20
            })
        }
        H = {
            defaultMarkerLayer: new m.FeatureGroup()
        };
        try {
            E = [];
            F && E.push(F);
            I.basemap && E.push(new m.TileLayer(I.basemap.url,I.basemap.options));
            E.push(H.defaultMarkerLayer);
            B = {
                layers: E,
                worldCopyJump: false,
                closePopupOnClick: false
            };
            if (u.options.latloncrs) {
                B.crs = m.CRS.EPSG4326
            }
            if (u.options.lockZoom) {
                e.extend(B, {
                    touchZoom: false,
                    scrollWheelZoom: false,
                    doubleClickZoom: false,
                    zoomControl: false
                })
            }
            r = new m.Map(J,B);
            r.attributionControl.setPrefix((I.attribution && I.attribution.prefix) || "").addAttribution(I.attribution && I.attribution.text);
            if (I.background) {
                if (I.background.hex) {
                    e(".leaflet-container").css("background-color", I.background.hex())
                } else {
                    e(".leaflet-container").css("background-color", I.background)
                }
            }
            if (I.center && I.zoom) {
                r.setView(new m.LatLng(I.center.lat,I.center.lon), I.zoom, true)
            } else {
                if (I.bounds) {
                    r.fitBounds(new m.LatLngBounds(new m.LatLng(I.bounds.bottom,I.bounds.left),new m.LatLng(I.bounds.top,I.bounds.right)))
                }
            }
            u.map = r;
            u.layers = E;
            u.markerLayers = H;
            u.markers = {}
        } catch (D) {
            throw {
                name: "Leaflet error on viewer init.",
                err: D
            }
        }
    }
    ;
    q = function(u, C, z, v) {
        var r, B;
        B = new m.LatLng(u.lat,u.lon);
        r = new m.Marker(B,v && {
            icon: v
        });
        o(C, z && (z.value || z), r);
        if (r && z && z.action) {
            z.action(r)
        }
        return r
    }
    ;
    o = function(z, v, r) {
        var u;
        if (z || v) {
            u = "<h1>" + (z || "") + "</h1><p>" + (v || "") + "</p>";
            r.bindPopup(u, {
                maxWidth: 500,
                minWidth: 100
            })
        }
        return r
    }
    ;
    p = function(r, u) {
        var v;
        switch (r.property) {
        case "visible":
            u.setVisible(r.newValue);
            break;
        case "location":
            u.setLatLng(new m.LatLng(r.newValue.lat,r.newValue.lon));
            break;
        case "title":
        case "content":
            v = r.state.content;
            o(r.state.title, v && (v.value || v), u);
            if (v && v.action) {
                v.action(u)
            }
            break;
        case "icon":
            u.setIcon(r.newValue);
            break;
        default:
            console.log(r.property, "Not yet implemented.");
            break
        }
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(d, e, a, h) {
    var f = {};
    giscloud.Graphic = function(v) {
        var F = {}, S = this, r = {}, o = a.oid(), U = false, M = false, T = false, u = false, H = {}, q = new giscloud.GraphicStyle("line"), B, D, Z, K, Q, I;
        q.color = giscloud.Color.fromHex("#0097c6");
        q.color.alpha(80);
        q.size = 6;
        function G(aa) {
            var ac, ab;
            if (!U) {
                e.each(F, function(ad, ae) {
                    if (ae.gid === aa.id) {
                        ac = ae.feat;
                        return null 
                    }
                });
                ab = {
                    click: "click",
                    dblclick: "doubleClick",
                    mousedown: "mouseDown",
                    mouseover: "mouseOver",
                    mouseout: "mouseOut"
                }[aa.type] || aa.type;
                if (ab && ac) {
                    e(r).triggerHandler(ab, [ac]);
                    e(ac).triggerHandler(ab)
                }
            }
        }
        function P(aa) {
            var ae = F[this.id], ac = ae && ae.gid, ad, ab;
            if (B && ac) {
                if (aa) {
                    B.remove(ac);
                    ae.gid = null ;
                    if (aa instanceof giscloud.geometry.Point || aa instanceof giscloud.geometry.Multipoint) {
                        ad = new giscloud.GraphicStyle("point")
                    } else {
                        if (aa instanceof giscloud.geometry.Line || aa instanceof giscloud.geometry.Multiline) {
                            ad = new giscloud.GraphicStyle("line")
                        } else {
                            if (aa instanceof giscloud.geometry.Polygon || aa instanceof giscloud.geometry.Multipolygon) {
                                ad = new giscloud.GraphicStyle("polygon")
                            } else {
                                ad = new giscloud.GraphicStyle()
                            }
                        }
                    }
                    ab = ae.feat.style();
                    ab.fill = ad.fill ? ab.fill || ad.fill : null ;
                    ab.size = ad.size ? ab.size || ad.size : null ;
                    ae.feat.style(ab);
                    ac = B.addShape({
                        geom: aa,
                        color: ab.color.hex("0x"),
                        fill: ab.fill && ab.fill.hex("0x"),
                        alpha: Math.max(ab.color.alpha(), (ab.fill ? ab.fill.alpha() : 0)),
                        width: ab.size,
                        size: ab.size
                    }, null , true);
                    ae.gid = ac
                }
            }
        }
        function W(ac) {
            var ad = F[this.id], ab = ad && ad.gid, aa;
            if (B && ab) {
                if (ac.color != null ) {
                    B.setAttributeGeometry(ab, "color", ac.color.hex("#"), true)
                }
                if (ac.fill != null ) {
                    B.setAttributeGeometry(ab, "fill", ac.fill.hex("#"), true)
                }
                if (ac.size != null ) {
                    B.setAttributeGeometry(ab, "size", ac.size, true);
                    B.setAttributeGeometry(ab, "width", ac.size, true)
                }
                if (ac.border != null ) {
                    B.setAttributeGeometry(ab, "border", ac.border, true)
                }
                if (ac.shape === "circle") {
                    aa = (ac.size || 0) + (ac.border || 0);
                    B.setAttributeGeometry(ab, "borderRadius", aa, true)
                } else {
                    B.setAttributeGeometry(ab, "borderRadius", 0, true)
                }
                B.redrawGeometry(ab)
            }
        }
        function O(ac) {
            var ab = F[this.id]
              , aa = ab && ab.gid;
            if (B && aa) {
                B.setGeometryVisible(aa, !!ac)
            }
        }
        function R(aa) {
            Q = v.instance.exposeLeaflet();
            I = aa;
            H = {
                dragging: Q.dragging.enabled(),
                doubleClickZoom: Q.doubleClickZoom.enabled(),
                scrollWheelZoom: Q.scrollWheelZoom.enabled()
            };
            Q.dragging.disable();
            Q.doubleClickZoom.disable();
            Q.on("mousedown", Y);
            e(Q._container).on("touchstart", Y);
            e(document).keyup(C);
            T = false;
            u = false;
            return new e.Deferred
        }
        function C(aa) {
            if (aa.which === 27) {
                p()
            } else {
                if (aa.which === 13) {
                    J()
                } else {
                    return true
                }
            }
        }
        function Y(aa) {
            Q.off("mousedown", Y);
            Q.on("mousedown", E);
            e(Q._container).off("touchstart", Y);
            Q.on("touchmove", E);
            if (aa.type === "mousedown") {
                E(aa)
            }
        }
        function E(ab) {
            var ad, ae, aa, ac, af;
            if ((ab.type === "touchmove" || ab.type === "touchstart") && ab.originalEvent) {
                ab.originalEvent.preventDefault()
            }
            if (ab.originalEvent && ab.originalEvent.touches && ab.originalEvent.touches.length > 1) {
                return
            }
            Q.off("touchmove", E);
            ad = I.style;
            if (!ad.color || !ad.color.hex) {
                ac = "#0097c6";
                af = 0.8
            } else {
                ac = ad.color.hex();
                af = ad.color.alpha() / 100
            }
            ae = {
                color: ac,
                opacity: af,
                weight: (ad.size != null ) ? parseFloat(ad.size) : 4
            };
            if (ae.opacity > 1) {
                ae.opacity /= 100
            }
            aa = new L.Polyline([ab.latlng, ab.latlng],ae);
            T = aa;
            Q.addLayer(aa);
            Q.on("mousemove", N);
            Q.on("mouseup", V);
            Q.on("touchmove", N);
            e(Q._container).on("touchend", V)
        }
        function N(aa) {
            if (aa.type === "touchmove" && aa.originalEvent) {
                aa.originalEvent.preventDefault();
                if (aa.originalEvent.touches && aa.originalEvent.touches.length > 1) {
                    return
                }
            }
            T.spliceLatLngs(T._latlngs.length, 0, aa.latlng)
        }
        function V() {
            var aa;
            Q.off("mousemove", N);
            Q.off("mouseup", V);
            Q.off("touchmove", N);
            e(Q._container).off("touchend", V);
            Q.on("touchmove", E);
            if (!T) {
                return
            }
            aa = new giscloud.geometry.Line(T._latlngs.map(v.instance.fromLeafletCoords));
            Q.removeLayer(T);
            T = null ;
            if (!u) {
                aa = new giscloud.geometry.Multiline([aa]);
                u = new giscloud.GraphicFeature(aa,I.style);
                S.add(u)
            } else {
                u.geometry().lines.push(aa);
                P.call(u, u.geometry())
            }
        }
        function J() {
            z()
        }
        function p() {
            if (u) {
                S.remove(u);
                u = null 
            }
            z()
        }
        function z() {
            H.dragging ? Q.dragging.enable() : Q.dragging.disable();
            H.doubleClickZoom ? Q.doubleClickZoom.enable() : Q.doubleClickZoom.disable();
            H.scrollWheelZoom ? Q.scrollWheelZoom.enable() : Q.scrollWheelZoom.disable();
            Q.off("mousedown", Y);
            Q.off("mousedown", E);
            Q.off("mouseup", V);
            Q.off("mousemove", N);
            e(Q._container).off("touchstart", Y);
            e(Q._container).off("touchstart", E);
            e(Q._container).off("touchend", V);
            Q.off("touchmove", E);
            Q.off("touchmove", N);
            e(document).off("keyup", C);
            if (T) {
                Q.removeLayer(T);
                T = null 
            }
            U = false;
            if (u) {
                S.remove(u);
                Z.resolveWith(S, [u])
            } else {
                Z.rejectWith(S, [null ])
            }
        }
        v.initializing.done(function() {
            B = v.instance.plugins.canvas;
            B.addEventListener("click", G);
            B.addEventListener("dblclick", G);
            B.addEventListener("mousedown", G);
            B.addEventListener("mouseover", G);
            B.addEventListener("mouseout", G)
        });
        D = this.features = [];
        this.bind = function(aa, ab) {
            var ac = this
              , ad = function() {
                var ae = Array.prototype.slice.call(arguments, 1);
                ab.apply(ac, ae)
            }
            ;
            e(r).on(aa, ad);
            if (!ab.gcunbind) {
                ab.gcunbind = {}
            }
            ab.gcunbind[o + aa] = ad;
            return this
        }
        ;
        this.unbind = function(aa, ab) {
            var ac;
            ac = ab.gcunbind && ab.gcunbind[o + aa];
            e(r).off(aa, ac);
            return this
        }
        ;
        this.isFeatureCountOkForSnapping = function() {
            var ae, ad, ac, aa, ab;
            if (!B) {
                return null 
            }
            ae = B.snappingLayers();
            ac = 0;
            for (aa in ae) {
                if (ae[aa]) {
                    ad = v.layerById(aa).instance.getFeatureIds();
                    ac += v.layerById(aa).instance.getFeatureCount();
                    B.setSnappingLayerFids(aa, ad)
                }
            }
            ab = ac < 10000;
            B.canSnap(ab);
            return ab
        }
        ;
        this.snapToLayersGeometry = function(aa) {
            var ag, ad, af, ae, ac = false, ab, ah;
            if (aa == null ) {
                if (v.initializing.state() !== "resolved" || v.loading.state() !== "resolved") {
                    return false
                }
                af = {};
                ae = B.snappingLayers();
                ag = v.layers || [];
                for (ab = ag.length - 1; ab >= 0; ab--) {
                    ad = ag[ab];
                    ah = ad.id.toString();
                    if (ad.type && e.inArray(ad.type, ["tile", "wms", "wfs", "wmts", "raster", "folder"]) > -1) {
                        continue
                    }
                    af[ah] = B.snapping() && !!ae[ah]
                }
                return af
            }
            v.initializing.done(function() {
                ae = {};
                if (aa === false) {
                    B.snappingLayers({});
                    B.snapping(false);
                    return
                }
                e.each(v.layers, function(aj, ai) {
                    var al = ai.id.toString()
                      , ak = (aa === true) || !!aa[al];
                    if (ai.type && e.inArray(ai.type, ["tile", "wms", "wfs", "wmts", "raster", "folder"]) > -1) {
                        return true
                    }
                    ac = ac || ak;
                    ae[al] = ak
                });
                B.snappingLayers(ae);
                B.snapping(ac)
            });
            return this
        }
        ;
        this.draw = function(ac, ah, ae, aa) {
            var ab, ad = this;
            if (!e.isFunction(ah) && !e.isFunction(ae)) {
                aa = ah || {}
            }
            if (Z && Z.state() === "pending") {
                if (U === "freehand") {
                    J()
                } else {
                    B.endDraw()
                }
            }
            if (ac === false) {
                return Z.promise()
            } else {
                ag = function ag(ai) {
                    var aj;
                    if (ai && ai.geom) {
                        aj = new giscloud.GraphicFeature(giscloud.geometry.fromOGC(ai.geom));
                        if (aj) {
                            F[aj.id] = {
                                gid: ab,
                                feat: aj,
                                ind: ad.features.length
                            };
                            W.call(aj, aj.style());
                            ad.features.push(aj);
                            aj.bind("geometryChanged", P);
                            aj.bind("styleChanged", W);
                            aj.bind("visibilityChanged", O);
                            Z.resolveWith(ad, [aj])
                        } else {
                            Z.rejectWith(ad, [])
                        }
                    } else {
                        Z.rejectWith(ad, [])
                    }
                    U = false
                }
                ,
                af = function af(ai) {
                    Z.notify(ai)
                }
                ;
                if (ac === "point" || ac === "line" || ac === "polygon") {
                    Z = new e.Deferred();
                    B.addEventListener("add", ag);
                    B.addEventListener("draw", af);
                    Z.always(function() {
                        B.removeEventListener("add", ag);
                        B.removeEventListener("draw", af)
                    });
                    U = ac;
                    ab = B.add(ac)
                } else {
                    if (ac === "freehand") {
                        if (!aa) {
                            aa = {}
                        } else {
                            if (aa instanceof giscloud.GraphicStyle) {
                                aa = {
                                    style: aa
                                }
                            }
                        }
                        if (!aa.style) {
                            aa.style = q
                        }
                        Z = R(aa);
                        U = "freehand"
                    } else {
                        throw "Invalid type. Use 'point', 'line', 'polygon' or 'freehand'."
                    }
                }
                if (typeof ah === "function") {
                    Z.done(ah)
                }
                if (typeof ae === "function") {
                    Z.fail(ae)
                }
                return Z.promise()
            }
        }
        ;
        this.acceptDraw = function() {
            if (Z && Z.state() === "pending") {
                if (U === "freehand") {
                    J()
                } else {
                    B.endDraw({
                        cancel: false
                    });
                    Z.reject()
                }
            }
            return this
        }
        ;
        this.cancelDraw = function() {
            if (Z && Z.state() === "pending") {
                if (U === "freehand") {
                    p()
                } else {
                    B.endDraw({
                        cancel: true
                    });
                    Z.reject()
                }
            }
            return this
        }
        ;
        this.exists = function(aa) {
            return F[aa.id]
        }
        ;
        this.setId = function(ab, aa) {
            if (this.exists(ab)) {
                F[aa] = F[ab.id];
                delete F[ab.id]
            }
            ab.id = aa
        }
        ;
        this.add = function(aa) {
            var ab = this;
            v.initializing.done(function() {
                var ae, ac, ad, af;
                if (aa instanceof giscloud.GraphicFeature) {
                    ac = aa.geometry();
                    if (ac) {
                        ad = aa.style();
                        af = (ad.fill && (ad.color.alpha() < ad.fill.alpha())) ? ad.fill.alpha() : ad.color.alpha();
                        if (af > 1) {
                            af = af / 100
                        }
                        ae = B.addShape({
                            geom: ac,
                            color: ad.color && ad.color.hex("0x"),
                            fill: ad.fill && ad.fill.hex("0x"),
                            alpha: af,
                            width: ad.size,
                            size: ad.size,
                            border: ad.border,
                            shape: ad.shape
                        }, null , true);
                        F[aa.id] = {
                            gid: ae,
                            feat: aa,
                            ind: ab.features.length
                        };
                        aa.graphicScene = ab;
                        ab.features.push(aa);
                        aa.bind("geometryChanged", P);
                        aa.bind("styleChanged", W);
                        aa.bind("visibilityChanged", O)
                    }
                }
            });
            return this
        }
        ;
        this.edit = function(ac) {
            var ab, aa = F[ac.id];
            if (!aa) {
                throw "Unknown graphic feature."
            }
            if (M && M.state() === "pending") {
                this.cancel()
            }
            ab = B.getGeometry ? B.getGeometry(aa.gid) : giscloud.geometry.fromOGC(B.serializeGeometryOpenGIS(aa.gid));
            M = (new e.Deferred()).done(function() {
                B.editGeometryEnd(aa.gid);
                var ad = B.getGeometry ? B.getGeometry(aa.gid) : giscloud.geometry.fromOGC(B.serializeGeometryOpenGIS(aa.gid));
                ac.geometry(ad)
            }).fail(function() {
                B.editGeometryEnd(aa.gid);
                ac.geometry(ab)
            });
            B.editGeometry(aa.gid);
            return M.pipe(function() {
                return ac
            }, function() {
                return ac
            })
        }
        ;
        this.editAccept = function() {
            if (M && M.state() === "pending") {
                M.resolve()
            }
            return this
        }
        ;
        this.editCancel = function() {
            if (M && M.state() === "pending") {
                M.reject()
            }
            return this
        }
        ;
        this.remove = function(aa) {
            var ab = this;
            v.initializing.done(function() {
                var ac;
                if (aa instanceof giscloud.GraphicFeature) {
                    if (aa.graphicScene) {
                        delete aa.graphicScene
                    }
                    aa = aa.id
                }
                ac = F[aa];
                if (ac !== h) {
                    B.remove(ac.gid);
                    ab.features.splice(ac.ind, 1);
                    ac.feat.unbind("geometryChanged", P);
                    ac.feat.unbind("styleChanged", W);
                    ac.feat.unbind("visibilityChanged", O);
                    delete F[aa];
                    ac = null 
                }
            });
            return this
        }
        ;
        this.clear = function() {
            if (B) {
                if (Z && Z.state() === "pending") {
                    B.endDraw()
                }
                B.clear();
                e.each(this.features, function(aa, ab) {
                    ab.unbind("geometryChanged", P);
                    ab.unbind("styleChanged", W);
                    ab.unbind("visibilityChanged", O)
                });
                this.features = [];
                F = {}
            }
            return this
        }
        ;
        this.measureDisplay = function(aa) {
            if (aa == null ) {
                return B.measureDisplay()
            } else {
                B.measureDisplay(aa)
            }
            return this
        }
    }
    ;
    giscloud.GraphicFeature = function(o, q) {
        var r = a.oid(), v, z, p, u = true;
        if (o && o.geometry && o.style && q === h) {
            v = o;
            r = v.id != null  ? ("_orig" + v.id) : r;
            z = v.geometry;
            p = v.style;
            this.epsg = v.epsg || null ;
            this.proj4 = v.proj4 || null ;
            this.resourceId = v.resourceId
        } else {
            if (!q || q.constructor !== giscloud.GraphicStyle) {
                if (o instanceof giscloud.geometry.Point || o instanceof giscloud.geometry.Multipoint) {
                    p = new giscloud.GraphicStyle("point")
                } else {
                    if (o instanceof giscloud.geometry.Line || o instanceof giscloud.geometry.Multiline) {
                        p = new giscloud.GraphicStyle("line")
                    } else {
                        if (o instanceof giscloud.geometry.Polygon || o instanceof giscloud.geometry.Multipolygon) {
                            p = new giscloud.GraphicStyle("polygon")
                        } else {
                            p = new giscloud.GraphicStyle()
                        }
                    }
                }
            } else {
                p = q
            }
            if (o instanceof giscloud.Geometry) {
                z = o
            }
        }
        this.geometry = function(B) {
            if (B) {
                z = B;
                e(this).triggerHandler("geometryChanged", [z]);
                return this
            } else {
                return z
            }
        }
        ;
        this.style = function(B) {
            if (B) {
                e.extend(p, B);
                e(this).triggerHandler("styleChanged", [p]);
                return this
            } else {
                return p
            }
        }
        ;
        this.visibility = function(B) {
            if (typeof B === "boolean") {
                u = B;
                e(this).triggerHandler("visibilityChanged", [u]);
                return this
            } else {
                return u
            }
        }
        ;
        this.id = "graphic" + r;
        this.bind = function(B, C) {
            var D = this
              , E = function() {
                var F = Array.prototype.slice.call(arguments, 1);
                C.apply(D, F)
            }
            ;
            e(this).on(B, E);
            if (!C.gcunbind) {
                C.gcunbind = {}
            }
            C.gcunbind[this.id + B] = E;
            return this
        }
        ;
        this.unbind = function(B, C) {
            var D;
            D = C.gcunbind && C.gcunbind[this.id + B];
            e(this).off(B, D);
            return this
        }
        ;
        this.toOGC = function() {
            if (z) {
                return z.toOGC()
            } else {
                return null 
            }
        }
    }
    ;
    giscloud.GraphicFeature.prototype = {
        toDataObject: function() {
            var o = {};
            if (typeof this.id === "string" && this.id.indexOf("orig") > -1) {
                o.id = parseInt(this.id.match(/graphic_orig(\d+)/)[1], 10)
            }
            o.resourceId = this.resourceId;
            o.geometry = new giscloud.geometry.GeometryCollection([this.geometry()]).toOGC();
            o.style = this.style().stringify();
            o.epsg = this.epsg || null ;
            o.proj4 = this.proj4 || null ;
            return o
        },
        update: function() {
            var o = this, p = this.toDataObject(), q;
            if (p.id != null ) {
                q = p.id;
                delete p.id;
                return giscloud.graphicFeatures.update(q, p)
            }
            return giscloud.graphicFeatures.create(p).then(function(r) {
                if (o.graphicScene) {
                    o.graphicScene.setId(o, "graphic_orig" + r)
                } else {
                    o.id = "graphic_orig" + r
                }
                return o
            }).promise()
        },
        remove: function() {
            return giscloud.graphicFeatures.remove(this.toDataObject().id)
        }
    };
    giscloud.GraphicStyle = function(o) {
        if (typeof o === "string") {
            switch (o) {
            case "point":
                e.extend(true, this, f.pointStyle);
                break;
            case "line":
                e.extend(true, this, f.lineStyle);
                break;
            case "polygon":
                e.extend(true, this, f.polygonStyle);
                break;
            default:
                break
            }
        } else {
            o = o || {};
            this.color = (o.color != null  && o.color instanceof giscloud.Color) ? o.color : null ;
            this.fill = (o.fill != null  && o.fill instanceof giscloud.Color) ? o.fill : null ;
            this.size = (typeof o.size === "number") ? o.size : null ;
            this.border = (typeof o.border === "number") ? o.border : null ;
            this.shape = (o.shape === "circle") ? "circle" : ((o.shape === "square") ? "square" : null )
        }
    }
    ;
    giscloud.GraphicStyle.prototype.stringify = function m() {
        var o = {};
        if (this.color != null ) {
            o.color = this.color.toRgbaString()
        }
        if (this.fill != null ) {
            o.fill = this.fill.toRgbaString()
        }
        if (this.size != null ) {
            o.size = parseInt(this.size, 10)
        }
        if (this.border != null ) {
            o.border = parseInt(this.border, 10)
        }
        if (this.shape != null ) {
            o.shape = this.shape
        }
        return JSON.stringify(o)
    }
    ;
    giscloud.GraphicStyle.parse = function g(p) {
        var o = JSON.parse(p);
        if (o.color != null ) {
            o.color = giscloud.Color.fromString(o.color)
        }
        if (o.fill != null ) {
            o.fill = giscloud.Color.fromString(o.fill)
        }
        if (o.size != null ) {
            o.size = parseInt(o.size, 10);
            if (isNaN(o.size)) {
                o.size = null 
            }
        }
        return new giscloud.GraphicStyle(o)
    }
    ;
    f = {
        pointStyle: new giscloud.GraphicStyle({
            color: new giscloud.Color(0,0,0,100),
            fill: new giscloud.Color(255,255,255,100),
            size: 8,
            border: 1,
            shape: "circle"
        }),
        lineStyle: new giscloud.GraphicStyle({
            color: new giscloud.Color(0,0,0,100),
            size: 1
        }),
        polygonStyle: new giscloud.GraphicStyle({
            color: new giscloud.Color(0,0,0,100),
            fill: new giscloud.Color(255,0,0,100)
        })
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(d, a) {
    var f = /[a-z0-9._%+\-]+@[a-z0-9.\-]+/i
      , e = a && a.exposeJQuery() || d.jQuery;
    gravatar = {
        hash: function(g) {
            var h = a.md5 || d.md5;
            if (!h) {
                throw "No window.md5 hashing function available."
            }
            if (typeof g === "string") {
                if (f.test(g)) {
                    return h(g.toLowerCase())
                }
                return g
            }
            return null 
        },
        element: function(m, o, v, u, q) {
            var g, h = new e.Deferred(), r, p = {
                width: v,
                height: v,
                borderRadius: v,
            };
            g = this.url(o, v, u, "404");
            if (m.firstName() && m.lastName()) {
                r = m.firstName().charAt(0) + m.lastName().charAt(0)
            } else {
                r = m.username().charAt(0)
            }
            r = r.toUpperCase();
            e.ajax({
                url: g,
                context: this
            }).always(function(B, z) {
                if (z.toLowerCase().indexOf("error") > -1) {
                    p = e.extend(p, {
                        backgroundColor: "#f5f5f5",
                        border: "1px solid #e3e3e3",
                        textAlign: "center",
                        lineHeight: v + "px",
                        fontWeight: 700,
                        fontSize: (v / 2 - 2) + "px",
                    }, q);
                    h.resolve(e("<div>", {
                        css: p,
                        text: r
                    }))
                } else {
                    p = e.extend(p, {
                        backgroundImage: "url(" + g + ")"
                    }, q);
                    h.resolve(e("<div>", {
                        css: p
                    }))
                }
            });
            return h
        },
        url: function(m, g, p, h) {
            var o, q;
            o = this.hash(m);
            if (typeof g !== "number") {
                g = 80
            }
            if (p) {
                q = "https:"
            } else {
                q = (d.location.protocol == "https:" ? "https:" : "http:")
            }
            if (h == null ) {
                h = "mm"
            }
            return [q, "//www.gravatar.com/avatar/", o, "?r=g&s=", g, "&d=", h].join("")
        },
        image: function(q, m, g, r, p) {
            var o, h;
            h = e("<img/>", {
                src: this.url(q, m, r, p)
            });
            if (g) {
                if (g.jquery) {
                    o = e(g)
                } else {
                    o = e("#" + g)
                }
            }
            if (o && o.length) {
                o.append(h)
            }
            return h
        },
        profile: function(h) {
            var m = gravatar.hash(h)
              , g = ["https://www.gravatar.com/", m, ".json"].join("");
            return e.ajax(g, {
                dataType: "jsonp"
            }).then(function(o) {
                return o
            }, function() {
                return null 
            })
        }
    };
    if (a) {
        a.gravatar = gravatar
    } else {
        d.gravatar = gravatar
    }
}(window, window.giscloud));
(function(d, e, a, f) {
    giscloud.Map = function() {
        var r = this, o = arguments, p = o.length, m = {}, q = a.oid(), u, h;
        e.extend(this, {
            id: null ,
            resourceId: null ,
            name: null ,
            description: null ,
            owner: null ,
            active: null ,
            copyright: null ,
            proj4: null ,
            units_proj4: null ,
            units: null ,
            measure_unit: null ,
            maxzoom: null ,
            share: null ,
            bgcolor: null ,
            wmsaccess: null ,
            modified: null ,
            accessed: null ,
            created: null ,
            visited: null ,
            bounds: null 
        });
        if (typeof o[0] == "number") {
            this.id = o[0];
            this.refresh(o[2], o[1])
        } else {
            if (typeof o[0] == "object") {
                u = o[0];
                this.id = parseInt(u.id, 10);
                this.resourceId = parseInt(u.resource_id, 10);
                this.name = u.name;
                this.description = u.description;
                this.owner = u.owner;
                this.active = u.active;
                this.copyright = u.copyright;
                this.proj4 = u.proj4;
                this.units = u.units;
                this.measure_unit = u.measure_unit;
                this.units_proj4 = u.units_proj4;
                this.maxzoom = u.maxzoom;
                this.share = u.share;
                this.bgcolor = u.bgcolor;
                this.wmsaccess = u.wmsaccess;
                this.modified = new Date(u.modified * 1000);
                this.accessed = new Date(u.accessed * 1000);
                this.created = new Date(u.created * 1000);
                this.visited = isNaN(u.visited) ? null  : parseInt(u.visited, 10);
                if (u.options) {
                    this.options = u.options
                }
                if (u.permissions) {
                    this.permissions = u.permissions
                }
                if (u.bounds) {
                    try {
                        h = u.bounds && e.parseJSON(u.bounds)
                    } catch (g) {
                        h = null 
                    }
                    if (h) {
                        this.bounds = new giscloud.Bounds(parseFloat(h.xmin),parseFloat(h.ymin),parseFloat(h.xmax),parseFloat(h.ymax))
                    }
                }
                if (o[1]) {
                    this.refreshLayers(o[2])
                }
                e.extend(true, this, {
                    remove: function() {
                        return giscloud.maps.remove(this.id)
                    },
                    update: function() {
                        var v, z = e.extend({}, u);
                        z.name = this.name;
                        if (this.bounds) {
                            v = {
                                xmin: this.bounds.left,
                                ymin: this.bounds.bottom,
                                xmax: this.bounds.right,
                                ymax: this.bounds.top
                            }
                        }
                        if (JSON === f) {
                            giscloud.includeJs((d.location.protocol == "https:" ? "https:" : "http:") + "//giscloud.local/libs/json2/json2.min.js").done(function() {
                                z.bounds = JSON.stringify(v);
                                return giscloud.maps.update(z.id, z)
                            })
                        } else {
                            z.bounds = JSON.stringify(v)
                        }
                        z.description = this.description;
                        z.active = this.active;
                        z.copyright = this.copyright;
                        z.proj4 = this.proj4;
                        z.units = this.units;
                        z.measure_unit = this.measure_unit;
                        z.units_proj4 = this.units_proj4;
                        z.maxzoom = this.maxzoom;
                        z.share = this.share;
                        z.bgcolor = this.bgcolor;
                        z.wmsaccess = this.wmsaccess;
                        delete z.id;
                        delete z.resourceId;
                        return giscloud.maps.update(u.id, z)
                    },
                    clone: function() {
                        var v = {};
                        e.extend(v, u);
                        delete v.id;
                        delete v.resourceId;
                        return giscloud.maps.create(v)
                    },
                    users: function() {
                        var v, z, B = {
                            owner: null ,
                            editors: [],
                            viewers: []
                        };
                        if (typeof this.owner === "object") {
                            B.owner = {
                                id: this.owner.id,
                                username: this.owner.username
                            }
                        } else {
                            B.owner = this.owner
                        }
                        z = a.rest.get("maps/" + this.id + "/sharing").done(function(C) {
                            if (C && C.data && C.data.length) {
                                e.each(C.data, function(D, E) {
                                    if (E.view === "t") {
                                        B.viewers.push({
                                            id: E.user_id,
                                            username: E.username
                                        })
                                    }
                                    if (E.edit === "t") {
                                        B.editors.push({
                                            id: E.user_id,
                                            username: E.username
                                        })
                                    }
                                })
                            }
                        });
                        v = e.when(z);
                        return v.pipe(function() {
                            return B
                        }).promise()
                    }
                })
            } else {
                a.setError(this, "constructor", "Invalid constructor arguments")
            }
        }
    }
    ;
    e.extend(giscloud.Map.prototype, {
        refresh: function(p, m) {
            var h = this
              , o = this.id
              , g = function(q) {
                if (typeof p == "function") {
                    p(q)
                }
            }
            ;
            if (typeof o === f || o === null ) {
                a.setError(this, "refresh", "Map id is not set.")
            } else {
                giscloud.maps.byId(o, function(q) {
                    h.resourceId = parseInt(q.resource_id, 10);
                    h.name = q.name;
                    h.description = q.description;
                    h.owner = q.owner;
                    h.active = q.active;
                    h.copyright = q.copyright;
                    h.proj4 = q.proj4;
                    h.units = q.units;
                    h.measure_unit = q.measure_unit;
                    h.units_proj4 = q.units_proj4;
                    h.maxzoom = q.maxzoom;
                    h.share = q.share;
                    h.bgcolor = q.bgcolor;
                    h.wmsaccess = q.wmsaccess;
                    h.modified = new Date(q.modified);
                    h.accessed = new Date(q.accessed);
                    h.created = new Date(q.created);
                    if (q.bounds) {
                        b = q.bounds && e.parseJSON(q.bounds);
                        if (b) {
                            h.bounds = new giscloud.Bounds(parseFloat(b.xmin),parseFloat(b.ymin),parseFloat(b.xmax),parseFloat(b.ymax))
                        }
                    }
                    if (m) {
                        h.refreshLayers(g)
                    } else {
                        g(h)
                    }
                }, true)
            }
            return this
        },
        refreshLayers: function(m) {
            var g = this
              , h = this.id;
            if (!isFinite(h)) {
                a.setError(this, "refreshLayers", "Map id is not set.")
            } else {
                giscloud.layers.byMapId(h, function(o) {
                    g.layers = o;
                    if (typeof m == "function") {
                        m(g)
                    }
                })
            }
            return this
        },
        reset: function(g) {
            return giscloud.maps.reset(this.id, g)
        },
        imageUrl: function(h, g) {
            if (typeof h !== "number" && typeof g !== "number") {
                h = 400;
                g = 400
            }
            return a.rest.url(["maps/", this.id, "/render.png?width=", h, "&height=", g, "&timestamp=" + this.modified].join(""))
        },
        iframeUrl: function(p, g) {
            var m, h, r, o, q;
            if (typeof p === "object") {
                h = p
            }
            m = a.rest.url("maps/" + this.id + "/render.iframe");
            if (h) {
                r = [];
                for (o in h) {
                    if (h.hasOwnProperty(o)) {
                        q = (h[o] != null ) ? h[o].toString() : "";
                        r.push(o + "=" + q)
                    }
                }
                m += r.length > 0 ? "?" + r.join("&") : ""
            } else {
                if (typeof p === "number" && typeof g === "number") {
                    m += "?width=" + p + "&height=" + g
                }
            }
            return m
        }
    })
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(d, a, e) {
    giscloud.Task = function(f) {
        d.extend(this, {
            id: f && f.id || null ,
            owner: f && f.owner_id || null ,
            type: f && f.task_type_id || null ,
            params: f && f.params || null ,
            alternateEmail: f && f.alternate_email || null ,
            status: f && !isNaN(f.status) ? f.status : null ,
            priority: f && !isNaN(f.priority) ? f.priority : null ,
            appId: f && !isNaN(f.appId) ? f.gc_app_id : null ,
            timeSpent: f && !isNaN(f.time_spent) ? f.time_spent : null ,
            requested: f && !isNaN(f.timestamp_requested) && new Date(f.timestamp_requested) || null ,
            processed: f && !isNaN(f.timestamp_processed) && new Date(f.timestamp_processed) || null ,
            scheduled: f && !isNaN(f.timestamp_scheduled) && new Date(f.timestamp_scheduled) || null 
        })
    }
    ;
    giscloud.Task.prototype = {
        create: function(f) {
            return giscloud.tasks.create({
                task_type_id: this.type,
                alternate_email: this.alternateEmail,
                gc_app_id: this.appId,
                priority: this.priority,
                params: f || this.params
            })
        },
        remove: function() {
            return giscloud.tasks.remove(this.id)
        }
    }
})(giscloud.exposeJQuery(), giscloud.common());
(function(d, e, a, f) {
    giscloud.ui = {
        Toolbar: function(C) {
            var r = this, p, h, q = C.viewer, g = a.oid(), v = {}, D, B = [], o = {}, z = function(F) {
                var E = "gctoolbar_" + g + "_" + F.name, G;
                G = e("<div/>", {
                    id: E,
                    "class": C.type === "vertical" ? "gc-toolbar-placeholder gc-toolbar-placeholder-vertical" : "gc-toolbar-placeholder gc-toolbar-placeholder-horizontal"
                });
                G.appendTo(D);
                F.render(E);
                v[F.name] = E
            }
            , u = function(E) {
                var F = B.length > 0 ? B[B.length - 1] : null , G;
                if (F) {
                    G = r.tools[F];
                    G.deactivate()
                }
                B.push(E.name);
                if (B.length > 99) {
                    B.shift()
                }
                e(o).triggerHandler("toolChange", [G, E])
            }
            , m = function() {
                var E = B.length > 0 ? B[B.length - 1] : null ;
                if (E) {
                    r.tools[E].activate()
                }
            }
            ;
            if (!a.toolbarCssIncluded) {
                giscloud.includeCss(a.apiHost() + "/assets/api/1/css/toolbar.css");
                a.toolbarCssIncluded = true
            }
            this.viewer = q;
            this.tools = {};
            if (C.container) {
                D = e("#" + C.container);
                D.addClass("gc-toolbar");
                if (C.type === "vertical") {
                    D.addClass("gc-toolbar-vertical")
                } else {
                    D.addClass("gc-toolbar-horizontal")
                }
            }
            this.add = function() {
                var G, E, F, H = true;
                for (G = 0,
                E = arguments.length; G < E; G++) {
                    F = arguments[G];
                    if (F && F instanceof giscloud.ui.Toolbar.Tool) {
                        if (!F.toolbar || F.toolbar !== this) {
                            F.toolbar = this
                        } else {
                            H = false
                        }
                        this.tools[F.name] = F;
                        F.bind("activation", u);
                        F.bind("deactivation", m);
                        if (C.container && H) {
                            z(F)
                        }
                    }
                }
                return this
            }
            ;
            if (C.defaultTools) {
                for (p = 0,
                h = C.defaultTools.length; p < h; p++) {
                    this.add(giscloud.ui.defaultTools.tool(C.defaultTools[p]))
                }
                if (e.inArray("pan", C.defaultTools) > -1) {
                    this.tools.pan.activate()
                }
            }
            this.remove = function(E) {
                var F = e.inArray(E, B);
                if (F > -1 && F === B.length - 1) {
                    this.deactivateTool()
                } else {
                    if (F > -1) {
                        B.splice(F, 1)
                    }
                }
                delete this.tools[E];
                if (v[E]) {
                    e("#" + v[E]).remove();
                    delete v[E]
                }
                return this
            }
            ;
            this.bind = function(E, G) {
                var F = this, H;
                if (E && typeof E == "string" && typeof G == "function") {
                    H = function() {
                        var I = Array.prototype.slice.call(arguments, 1);
                        G.apply(F, I)
                    }
                    ;
                    e(o).on(E, H);
                    if (!G.gcunbind) {
                        G.gcunbind = {}
                    }
                    G.gcunbind[g + E] = H
                }
                return this
            }
            ;
            this.unbind = function(E, F) {
                var G;
                if (E && typeof E == "string" && typeof F == "function") {
                    G = F.gcunbind && F.gcunbind[g + E];
                    if (G) {
                        e(o).off(E, G)
                    }
                }
                return this
            }
            ;
            this.toolChange = function(E) {
                return this.bind("toolChange", E)
            }
        }
    };
    giscloud.ui.Toolbar.Tool = function(g, u) {
        var q, r, m = false, p, v, h = a.oid(), o = {};
        this.options = u;
        this.name = g;
        this.isToggle = function() {
            return p
        }
        ;
        this.isActive = function() {
            return m
        }
        ;
        this.toolbar = u.toolbar;
        this.viewer = u.viewer;
        q = u.actions.activation;
        r = u.actions.deactivation;
        p = u.toggle;
        this.activate = function(E) {
            var B = this
              , C = (this.toolbar && this.toolbar.viewer) || this.viewer
              , z = Array.prototype.slice.call(arguments, 0)
              , D = "gctool_" + this.name + "_" + h;
            if (!m && C) {
                C.initializing.done(function() {
                    if (u.instant) {
                        z.splice(0, 0, this);
                        q.apply(this, z)
                    } else {
                        m = true;
                        e("#" + D).addClass(u.styles.active || "gc-tool-active");
                        if (!E) {
                            e(o).triggerHandler("activation", [B])
                        }
                        if (q) {
                            z.splice(0, 0, this);
                            q.apply(B, z)
                        }
                    }
                })
            }
            return this
        }
        ;
        this.deactivate = function(E) {
            var B = this
              , C = (this.toolbar && this.toolbar.viewer) || this.viewer
              , z = Array.prototype.slice.call(arguments, 0)
              , D = "gctool_" + this.name + "_" + h;
            if (m && C) {
                C.initializing.done(function() {
                    m = false;
                    e("#" + D).removeClass(u.styles.active || "gc-tool-active");
                    if (r) {
                        z.splice(0, 0, this);
                        r.apply(B, z)
                    }
                    if (!E) {
                        e(o).triggerHandler("deactivation", [B])
                    }
                })
            }
            return this
        }
        ;
        this.render = function(z) {
            var I = this, K = u.styles || {}, B = "gctool_" + this.name + "_" + h, J, F, C, G, H, E, D;
            if (!a.toolbarCssIncluded) {
                giscloud.includeCss(a.apiHost() + "/assets/api/1/css/toolbar.css");
                a.toolbarCssIncluded = true
            }
            v = e("#" + z);
            v.html("");
            if (K.icon) {
                J = "gctoolicon_" + this.name + "_" + h;
                H = e("<img/>", {
                    id: J,
                    src: K.icon,
                    alt: K.caption || ""
                });
                if (K.iconHover) {
                    F = "gctoolicon_hover_" + this.name + "_" + h;
                    E = e("<img/>", {
                        id: F,
                        src: K.iconHover,
                        alt: K.caption || "",
                        css: {
                            display: "none"
                        }
                    })
                }
                if (K.iconActive) {
                    C = "gctoolicon_active_" + this.name + "_" + h;
                    D = e("<img/>", {
                        id: C,
                        src: K.iconActive,
                        alt: K.caption || "",
                        css: {
                            display: "none"
                        }
                    })
                }
            }
            G = e("<div/>", {
                id: B,
                "class": K.cssClass || "gc-tool",
                title: K.caption || "",
                mouseover: function(M) {
                    e(this).addClass(K.hover || "gc-tool-hover");
                    if (E) {
                        E.show();
                        D.hide();
                        H.hide()
                    }
                    M.stopPropagation();
                    M.preventDefault()
                },
                mouseout: function(M) {
                    e(this).removeClass(K.hover || "gc-tool-hover");
                    if (E) {
                        E.hide();
                        if (m) {
                            D.show();
                            H.hide()
                        } else {
                            D.hide();
                            H.show()
                        }
                    }
                    M.stopPropagation();
                    M.preventDefault()
                },
                click: function(M) {
                    if (u.instant) {
                        I.activate()
                    } else {
                        if (m && p) {
                            I.deactivate()
                        } else {
                            if (!m) {
                                I.activate()
                            }
                        }
                        M.stopPropagation();
                        M.preventDefault()
                    }
                }
            });
            if (J) {
                G.append(H);
                if (C) {
                    G.append(D)
                }
                if (F) {
                    G.append(E)
                }
            } else {
                if (K.caption && K.showCaption) {
                    G.append(K.caption)
                } else {
                    G.append("&nbsp;")
                }
            }
            G.appendTo("#" + z);
            return this
        }
        ;
        this.bind = function(z, C) {
            var B = this, D;
            if (z && typeof z == "string" && typeof C == "function") {
                D = function() {
                    var E = Array.prototype.slice.call(arguments, 1);
                    C.apply(B, E)
                }
                ;
                e(o).on(z, D);
                if (!C.gcunbind) {
                    C.gcunbind = {}
                }
                C.gcunbind[h + z] = D
            }
            return this
        }
        ;
        this.trigger = function(z, B) {
            e(o).trigger(z, B)
        }
        ;
        this.unbind = function(z, B) {
            var C;
            if (z && typeof z == "string" && typeof B == "function") {
                C = B.gcunbind && B.gcunbind[h + z];
                if (C) {
                    e(o).off(z, C)
                }
            }
            return this
        }
    }
    ;
    giscloud.ui.defaultTools = {
        pan: function(g) {
            return new giscloud.ui.Toolbar.Tool("pan",e.extend({
                styles: {
                    caption: "Pan",
                    showCaption: false,
                    cssClass: "gc-tool-pan",
                    active: "gc-tool-pan-active",
                    hover: "gc-tool-pan-hover"
                },
                actions: {
                    activation: function(h) {
                        h.pan()
                    }
                }
            }, g || {}))
        },
        zoom: function(g) {
            return new giscloud.ui.Toolbar.Tool("zoom",e.extend({
                styles: {
                    caption: "Zoom",
                    showCaption: false,
                    cssClass: "gc-tool-zoom",
                    active: "gc-tool-zoom-active",
                    hover: "gc-tool-zoom-hover"
                },
                actions: {
                    activation: function(h) {
                        h.areaZoom()
                    }
                }
            }, g || {}))
        },
        full: function(g) {
            return new giscloud.ui.Toolbar.Tool("full",e.extend({
                styles: {
                    caption: "Full",
                    showCaption: false,
                    cssClass: "gc-tool-full",
                    active: "gc-tool-full-active",
                    hover: "gc-tool-full-hover"
                },
                actions: {
                    activation: function(h) {
                        h.fullExtent()
                    }
                },
                instant: true
            }, g || {}))
        },
        measure: function(g) {
            return new giscloud.ui.Toolbar.Tool("measure",e.extend({
                styles: {
                    caption: "Measure",
                    showCaption: false,
                    cssClass: "gc-tool-measure",
                    active: "gc-tool-measure-active",
                    hover: "gc-tool-measure-hover"
                },
                actions: {
                    activation: function(h) {
                        h.measure()
                    }
                }
            }, g || {}))
        },
        select: function(g) {
            return new giscloud.ui.Toolbar.Tool("select",e.extend({
                styles: {
                    caption: "Select",
                    showCaption: false,
                    cssClass: "gc-tool-select",
                    active: "gc-tool-select-active",
                    hover: "gc-tool-select-hover"
                },
                actions: {
                    activation: function(h) {
                        h.select(true)
                    }
                }
            }, g || {}))
        },
        info: function(m) {
            function g() {
                var r = e(a).data("marker");
                if (r) {
                    this.viewer.removeMarker(r);
                    e(a).data("marker", false)
                }
            }
            function q(r) {
                e(this).data("lastLonLat", r)
            }
            function p(r) {
                a.viewerShowFeatureInfo(this.viewer, r.layerId, r.featureId, e(this).data("lastLonLat"), m && m.renderFunction)
            }
            function h() {
                if (!e(this).data("tracking")) {
                    this.getMouse = e.proxy(q, this);
                    this.viewer.bind("mouseMove", this.getMouse);
                    e(this).data("tracking", true)
                }
            }
            function o() {
                if (e(this).data("tracking")) {
                    e(this).data("tracking", false);
                    this.viewer.unbind("mouseMove", this.getMouse);
                    this.getMouse = null 
                }
            }
            return new giscloud.ui.Toolbar.Tool("info",e.extend({
                styles: {
                    caption: "Info",
                    showCaption: false,
                    cssClass: "gc-tool-info",
                    active: "gc-tool-info-active",
                    hover: "gc-tool-info-hover"
                },
                actions: {
                    activation: function(r) {
                        e(this).data("prevState", r.select());
                        if (!this.viewer) {
                            this.viewer = r || (this.toolbar && this.toolbar.viewer)
                        }
                        if (!this.options.dontShow) {
                            this.onFeatureOver = e.proxy(h, this);
                            this.onFeatureOut = e.proxy(o, this);
                            this.onFeatureAdd = e.proxy(p, this);
                            this.hideInfo = e.proxy(g, this);
                            r.bind("featureOver", this.onFeatureOver);
                            r.bind("featureOut", this.onFeatureOut);
                            r.bind("mouseDown", this.hideInfo);
                            r.selection.bind("featureAdd", this.onFeatureAdd)
                        }
                        r.select(true)
                    },
                    deactivation: function(r) {
                        r.select(e(this).data("prevState"));
                        if (!this.options.dontShow) {
                            r.unbind("featureOver", this.onFeatureOver);
                            r.unbind("featureOut", this.onFeatureOut);
                            r.bind("mouseDown", this.hideInfo);
                            r.selection.unbind("featureAdd", this.onFeatureAdd);
                            this.onFeatureOver = null ;
                            this.onFeatureOut = null ;
                            this.hideInfo = null ;
                            this.onFeatureAdd = null 
                        }
                    }
                }
            }, m || {}))
        },
        areaSelect: function(h) {
            var m = a.oid()
              , g = function(p) {
                var o = new giscloud.Bounds(parseFloat(p.xMin),parseFloat(p.yMin),parseFloat(p.xMax),parseFloat(p.yMax))
                  , q = a.refs[m];
                a.refs[m].selectFeaturesByBounds(q.activeLayer, o)
            }
            ;
            return new giscloud.ui.Toolbar.Tool("areaSelect",e.extend({
                styles: {
                    caption: "Select area",
                    showCaption: false,
                    cssClass: "gc-tool-areaselect",
                    active: "gc-tool-areaselect-active",
                    hover: "gc-tool-areaselect-hover"
                },
                actions: {
                    activation: function(o) {
                        o.loading.done(function() {
                            var p = this.instance;
                            a.refs[m] = this;
                            p.addEventListener("areaselection", g);
                            p.setTool("AreaSelection")
                        })
                    },
                    deactivation: function(o) {
                        o.loading.done(function() {
                            this.instance.removeEventListener("areaselection", g);
                            this.instance.setTool("DragTool");
                            delete a.refs[m]
                        })
                    }
                }
            }, h || {}))
        },
        pickCoordinates: function(g) {
            var h;
            function m(o) {
                h.coordinates = o;
                h.deactivate()
            }
            h = new giscloud.ui.Toolbar.Tool("pickCoordinates",e.extend({
                styles: {
                    caption: "Coordinate picker",
                    showCaption: false,
                    cssClass: "coordinate-tool",
                    active: "coordinate-tool-active",
                    hover: "coordinate-tool-hover"
                },
                actions: {
                    activation: function(o) {
                        this.coordinates = null ;
                        o.loading.done(function() {
                            e(o.container()).addClass("gc-cursor-crosshair");
                            o.bind("mouseDown", m)
                        })
                    },
                    deactivation: function(o) {
                        o.loading.done(function() {
                            o.unbind("mouseDown", m);
                            e(o.container()).removeClass("gc-cursor-crosshair")
                        })
                    }
                }
            }, g || {}));
            return h
        },
        selectExtent: function(E) {
            var p, I, O, J, Y, Q, ah, H, B, Z, ag, V, R, ai, m, ab, ad, v = {
                color: "#0097c6",
                weight: 4,
                opacity: 1
            }, D = {
                color: "#00c697",
                weight: 8
            }, aa = function(aj) {
                p = {};
                O = aj.viewer;
                J = O.instance,
                I = J.exposeLeaflet();
                Y = new L.DivIcon({
                    className: "gc-select-extent-label"
                });
                p.dragging = I.dragging.enabled();
                I.dragging.disable();
                I.on("mousedown", N);
                e(O.container()).addClass("gc-cursor-crosshair")
            }
            , S = function() {
                C();
                I.off("mousedown", N).off("mousemove", u).off("mousedown", C).off("mousemove", o).off("mousemove", q).off("mousemove", g).off("mousemove", h);
                e(O.container()).removeClass("gc-cursor-crosshair")
            }
            , N = function(aj) {
                var al = aj.latlng
                  , ak = new L.LatLngBounds(al,al);
                H = al.lat;
                B = al.lng;
                I.off("mousedown", N);
                I.off("mousedown", C);
                I.on("mousemove", u);
                e(document).on("mouseup", F);
                ah = new L.Rectangle(ak).addTo(I)
            }
            , u = function(aj) {
                var ak = ae(aj.latlng);
                ah.setBounds(ak);
                af(ak)
            }
            , F = function() {
                I.off("mousemove", u);
                e(document).off("mouseup", F);
                I.on("mousedown", C);
                I.on("mousedown", N);
                W()
            }
            , af = function(an) {
                var aF = an.getCenter(), am = an.getNorthEast(), aw = an.getSouthWest(), ay = am.lat, aD = am.lng, au = aw.lat, aq = aw.lng, ao = J.fromLeafletCoords(am), ar = J.fromLeafletCoords(aw), at = ao.y, av = ao.x, aE = ar.y, az = ar.x, ap = new L.LatLng(ay,aF.lng), ak = new L.LatLng(aF.lat,aD), aC = new L.LatLng(aF.lat,aq), al = new L.LatLng(au,aF.lng), aB, aj, ax, aA;
                if (Z == null ) {
                    Z = new L.Marker(ap,{
                        icon: Y,
                        html: at
                    }).addTo(I);
                    ag = new L.Marker(ak,{
                        icon: Y,
                        html: av
                    }).addTo(I);
                    R = new L.Marker(aC,{
                        icon: Y,
                        html: az
                    }).addTo(I);
                    V = new L.Marker(al,{
                        icon: Y,
                        html: aE
                    }).addTo(I)
                } else {
                    Z.setLatLng(ap)._icon.innerHTML = at;
                    ag.setLatLng(ak)._icon.innerHTML = av;
                    R.setLatLng(aC)._icon.innerHTML = az;
                    V.setLatLng(al)._icon.innerHTML = aE
                }
                aB = e(Z._icon);
                aj = e(ag._icon);
                ax = e(R._icon);
                aA = e(V._icon);
                aB.css("margin-left", aB.outerWidth() / -2).css("margin-top", -25);
                aj.css("margin-left", 5).css("margin-top", aj.outerHeight() / -2);
                ax.css("margin-left", ax.outerWidth() * -1 - 5).css("margin-top", ax.outerHeight() / -2);
                aA.css("margin-left", aA.outerWidth() / -2).css("margin-top", 5)
            }
            , r = function() {
                if (Z == null ) {
                    return
                }
                I.removeLayer(Z);
                I.removeLayer(ag);
                I.removeLayer(R);
                I.removeLayer(V);
                Z = null ;
                ag = null ;
                R = null ;
                V = null 
            }
            , W = function() {
                var al = ah.getBounds()
                  , an = al.getNorthEast()
                  , aj = al.getSouthWest()
                  , ak = new L.LatLng(an.lat,aj.lng)
                  , am = new L.LatLng(aj.lat,an.lng);
                ah.setStyle({
                    stroke: false
                });
                ai = new L.Polyline([ak, an],v).addTo(I).on("mouseover", U).on("mouseout", z).on("mousedown", M);
                m = new L.Polyline([am, an],v).addTo(I).on("mouseover", U).on("mouseout", z).on("mousedown", M);
                ab = new L.Polyline([aj, ak],v).addTo(I).on("mouseover", U).on("mouseout", z).on("mousedown", M);
                ad = new L.Polyline([aj, am],v).addTo(I).on("mouseover", U).on("mouseout", z).on("mousedown", M)
            }
            , U = function(aj) {
                var ak = aj.target;
                if (Q) {
                    return
                }
                I.removeLayer(ak).addLayer(ak);
                aj.target.setStyle(D)
            }
            , z = function(aj) {
                aj.target.setStyle(v)
            }
            , M = function(aj) {
                var ak = aj.target;
                if (Q) {
                    return
                }
                Q = ak;
                ak.off("mouseover", U).off("mouseout", z);
                e(document).on("mouseup", ac);
                switch (ak) {
                case ai:
                    I.on("mousemove", o);
                    break;
                case m:
                    I.on("mousemove", q);
                    break;
                case ab:
                    I.on("mousemove", g);
                    break;
                case ad:
                    I.on("mousemove", h);
                    break
                }
            }
            , ac = function() {
                e(document).off("mouseup", ac);
                switch (Q) {
                case ai:
                    I.off("mousemove", o);
                    break;
                case m:
                    I.off("mousemove", q);
                    break;
                case ab:
                    I.off("mousemove", g);
                    break;
                case ad:
                    I.off("mousemove", h);
                    break
                }
                Q.on("mouseover", U).on("mouseout", z);
                Q = null 
            }
            , o = function(aj) {
                var am = ah.getBounds()
                  , ap = am.getNorthEast()
                  , ao = am.getSouthWest()
                  , an = I.latLngToContainerPoint(ao)
                  , ak = aj.containerPoint.y
                  , al = an.y;
                if (ak > al - D.weight) {
                    return
                }
                am = new L.LatLngBounds(new L.LatLng(aj.latlng.lat,ap.lng),ao);
                ah.setBounds(am);
                af(am);
                P(am)
            }
            , q = function(aj) {
                var am = ah.getBounds()
                  , ap = am.getNorthEast()
                  , ao = am.getSouthWest()
                  , an = I.latLngToContainerPoint(ao)
                  , ak = aj.containerPoint.x
                  , al = an.x;
                if (ak < al + D.weight) {
                    return
                }
                am = new L.LatLngBounds(new L.LatLng(ap.lat,aj.latlng.lng),ao);
                ah.setBounds(am);
                af(am);
                P(am)
            }
            , g = function(aj) {
                var am = ah.getBounds()
                  , ap = am.getSouthWest()
                  , ao = am.getNorthEast()
                  , an = I.latLngToContainerPoint(ao)
                  , ak = aj.containerPoint.x
                  , al = an.x;
                if (ak > al - D.weight) {
                    return
                }
                am = new L.LatLngBounds(ao,new L.LatLng(ap.lat,aj.latlng.lng));
                ah.setBounds(am);
                af(am);
                P(am)
            }
            , h = function(aj) {
                var am = ah.getBounds()
                  , ap = am.getSouthWest()
                  , ao = am.getNorthEast()
                  , an = I.latLngToContainerPoint(ao)
                  , ak = aj.containerPoint.y
                  , al = an.y;
                if (ak < al + D.weight) {
                    return
                }
                am = new L.LatLngBounds(ao,new L.LatLng(aj.latlng.lat,ap.lng));
                ah.setBounds(am);
                af(am);
                P(am)
            }
            , P = function(al) {
                var an = al.getNorthEast()
                  , aj = al.getSouthWest()
                  , ak = new L.LatLng(an.lat,aj.lng)
                  , am = new L.LatLng(aj.lat,an.lng);
                ai.setLatLngs([ak, an]);
                m.setLatLngs([am, an]);
                ab.setLatLngs([aj, ak]);
                ad.setLatLngs([aj, am])
            }
            , T = function() {
                if (ai == null ) {
                    return
                }
                I.removeLayer(ai);
                I.removeLayer(m);
                I.removeLayer(ab);
                I.removeLayer(ad);
                ai = null ;
                m = null ;
                ab = null ;
                ad = null 
            }
            , C = function() {
                if (ah == null ) {
                    return
                }
                r();
                T();
                I.removeLayer(ah);
                H = null ;
                B = null ;
                ah = null 
            }
            , ae = function(al) {
                var aj = new L.LatLng(Math.min(H, al.lat),Math.min(B, al.lng))
                  , ak = new L.LatLng(Math.max(H, al.lat),Math.max(B, al.lng));
                return new L.LatLngBounds(aj,ak)
            }
            , K = function() {
                var aj = ah && ah.getBounds(), an, aq, ao, am, ar, ak, ap, al;
                if (aj == null ) {
                    return null 
                }
                an = aj.getNorthEast();
                aq = aj.getSouthWest();
                ao = J.fromLeafletCoords(an);
                am = J.fromLeafletCoords(aq);
                ar = ao.y;
                ak = ao.x;
                ap = am.y;
                al = am.x;
                return new giscloud.Bounds(al,ap,ak,ar)
            }
            , G = function() {
                p.dragging ? I.dragging.enable() : I.dragging.disable()
            }
            ;
            return new giscloud.ui.Toolbar.Tool("selectExtent",e.extend({
                extent: null ,
                styles: {
                    caption: a.__("Select extent"),
                    showCaption: false,
                    cssClass: "gc-tool-selectextent",
                    active: "gc-tool-selectextent-active",
                    hover: "gc-tool-selectextent-hover"
                },
                actions: {
                    activation: function(ak) {
                        var aj = this;
                        this.extent = null ;
                        ak.loading.done(function() {
                            aa(aj)
                        })
                    },
                    deactivation: function(ak) {
                        var aj = this;
                        ak.loading.done(function() {
                            aj.extent = K();
                            S();
                            G()
                        })
                    }
                }
            }, E || {}))
        },
        tool: function(h, g) {
            switch (h) {
            case "pan":
                return this.pan(g);
            case "zoom":
                return this.zoom(g);
            case "full":
                return this.full(g);
            case "measure":
                return this.measure(g);
            case "select":
                return this.select(g);
            case "info":
                return this.info(g);
            case "areaSelect":
                return this.areaSelect(g);
            case "selectExtent":
                return this.selectExtent(g);
            case "freehandSelect":
                return giscloud.ui.defaultTools.freehand(g);
            case "azimuth":
                return giscloud.ui.defaultTools.azimuth(g);
            case "areaMeasure":
                return giscloud.ui.defaultTools.areaMeasure(g);
            case "countByPolygon":
                return giscloud.ui.defaultTools.countByPolygon(g);
            default:
                return null 
            }
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(p, m, u, o) {
    var a, D, g, E, z, F, d, q, r, f, C = [], h = {
        selectable: true,
        locks: true,
        dnd: true,
        dropdownMenu: false,
        hiddenLayerIds: []
    };
    (function(J, K) {
        var M, I, H = document.createElement("div");
        H.className = "jstree-dropdown fa fa-ellipsis-v";
        if (J.browser.mozilla) {
            H.className += " jstree-dropdown-shifted"
        }
        function G(W, Q) {
            var S, T, Y, R, P, N, O, V, ab, Z, U;
            function aa() {
                M.addClass("gc-hidden")
            }
            function ac(ad) {
                J(d).triggerHandler("menu_action", [J(ad.currentTarget).attr("data-action"), T])
            }
            if (!M) {
                M = J("<div/>").attr("id", "gc_layer_list_dropdown").addClass("gc-layer-list-dropdown").addClass("gc-hidden").appendTo(J("body")).click(function(ad) {
                    ad.stopPropagation();
                    M.toggleClass("gc-hidden")
                })
            }
            J(document).one("click", aa);
            S = Q.id && Q.id.split("_");
            T = S && S.length && S[2];
            Y = f.layerById(T),
            R;
            if (Q.id != I) {
                M.removeClass("gc-hidden")
            } else {
                M.toggleClass("gc-hidden")
            }
            I = Q.id;
            M.empty();
            O = Y ? (Y.grp ? "layer_group_" + T : "layer" + T) : null ;
            V = O ? f.instance.getLayerByName(O) : null ;
            if (V && Q.data.type !== "folder" && Q.data.type !== "giscloud") {
                R = 1 - V.getAlpha() / 100;
                N = J("<div/>", {
                    "class": "dragdealer",
                    id: "demo-simple-slider"
                }).append(J("<div/>", {
                    "class": "gc-opacity-info",
                    text: u.__("Transparency")
                }), J("<div/>", {
                    "class": "handle red-bar"
                })).prependTo(M).click(function(ad) {
                    ad.stopImmediatePropagation();
                    ad.preventDefault()
                });
                new Dragdealer("demo-simple-slider",{
                    x: R,
                    animationCallback: function(ad) {
                        var af = Math.round(ad * 100)
                          , ae = Math.round((1 - ad) * 100);
                        J("#demo-simple-slider .red-bar").text(af);
                        V.setAlpha(ae);
                        J(d).triggerHandler("opacity", [T, ae])
                    }
                })
            }
            P = [{
                action: "zoomtolayer",
                text: u.__("Zoom_to_Layer")
            }];
            J(d).triggerHandler("menu_before", [P, Q]);
            Z = J("<ul/>", {
                "class": "gc-list"
            });
            for (U = 0; U < P.length; U++) {
                if (P[U].text === "separator") {
                    ab = J("<li/>", {
                        "class": "gc-separator"
                    })
                } else {
                    ab = J("<li/>", {
                        "class": "gc-list-item",
                        text: P[U].text
                    }).attr("data-action", P[U].action).click(ac)
                }
                ab.appendTo(Z)
            }
            Z.appendTo(M);
            M.position({
                my: "right top",
                at: "right top+" + W.height(),
                of: W,
                collision: "fit"
            })
        }
        J.jstree.defaults.dropdown = J.noop;
        J.jstree.plugins.dropdown = function(N, O) {
            this.bind = function() {
                O.bind.call(this);
                this.element.on("dblclick.jstree", ".jstree-dropdown", J.proxy(function(P) {
                    P.stopImmediatePropagation();
                    P.preventDefault();
                    this.settings.dropdown.call(this, this.get_node(P.target))
                }, this)).on("click.jstree", ".jstree-dropdown", J.proxy(function(P) {
                    P.stopImmediatePropagation();
                    P.preventDefault();
                    G(J(P.currentTarget), this.get_node(P.target))
                }, this))
            }
            ;
            this.redraw_node = function(T, P, U) {
                T = O.redraw_node.call(this, T, P, U);
                if (T) {
                    var Q = H.cloneNode(true), R = this.get_node(T.id), S;
                    if (!R || !R.data || R.data.type == "style" || R.data.type == "button") {
                        return T
                    }
                    S = J(T).children(".jstree-wholerow");
                    J(S).append(Q)
                }
                return T
            }
        }
    })(m);
    (function(G, H) {
        G.jstree.plugins.nohover = function() {
            this.hover_node = jQuery.noop
        }
    })(m);
    (function(G, H) {
        G.jstree.plugins.noselect = function() {
            this.select_node = jQuery.noop
        }
    })(m);
    (function(H, I) {
        var G = document.createElement("i");
        G.className = "gc-ll-icon gc-vicon gc-eye";
        H.jstree.defaults.visibility = H.noop;
        H.jstree.plugins.visibility = function(J, K) {
            this.bind = function() {
                K.bind.call(this);
                this.element.on("dblclick.jstree", ".gc-eye", H.proxy(function(M) {
                    M.stopImmediatePropagation();
                    M.preventDefault();
                    this.settings.visibility.call(this, this.get_node(M.target))
                }, this)).on("click.jstree", ".gc-eye", H.proxy(function(S) {
                    var P = H(S.target), R = P.closest("li"), M = R.attr("id").split("_"), O, Q, N;
                    S.stopImmediatePropagation();
                    S.preventDefault();
                    P.toggleClass("gc-eye-visible");
                    if (R.hasClass("gc-layer-child-node")) {
                        Q = R.attr("exprindex");
                        if (!Q) {
                            return
                        }
                        if (typeof Q === "string") {
                            Q = parseInt(Q)
                        }
                        O = f.layerById(R.attr("layerid"));
                        if (P.hasClass("gc-eye-visible")) {
                            O.expressionVisible(Q, true)
                        } else {
                            O.expressionVisible(Q, false)
                        }
                    } else {
                        N = D.recursive(M[2], {
                            getChild: true
                        });
                        H.each(N, function(T, U) {
                            if (P.hasClass("gc-eye-visible")) {
                                D.show(U.data.id)
                            } else {
                                D.hide(U.data.id)
                            }
                            H(d).triggerHandler("visibility", [U.data.id, P.hasClass("gc-eye-visible")])
                        })
                    }
                }, this))
            }
            ;
            this.allChildrenVisible = function() {}
            ;
            this.redraw_node = function(Q, U, V) {
                var R, N, M, O, P, S, T;
                Q = K.redraw_node.call(this, Q, U, V);
                if (Q) {
                    N = this.get_node(Q.id);
                    if (N.data.type === "style" || N.data.type === "button") {
                        return Q
                    }
                    R = G.cloneNode(true),
                    this.allChildrenVisible(N.data.id);
                    Q.insertBefore(R, Q.childNodes[2]);
                    M = Q.id;
                    O = M && M.split("_");
                    P = O && O.length && O[2];
                    S = f.layerById(P);
                    if (!S) {
                        return Q
                    }
                    if (S.type === "folder") {
                        Q.insertBefore(R, Q.childNodes[2]);
                        return Q
                    }
                    if (N.children.length > 0 && (!p.fno || (p.fno && p.fno.giscloud === false))) {
                        T = H(Q.children).filter("ul.jstree-children");
                        H.each(N.children, function(W, Y) {
                            var Z = H(R.cloneNode(true));
                            if (S.visible()) {
                                Z.addClass("gc-eye-visible")
                            } else {
                                Z.addClass("gc-layer-hidden")
                            }
                            T.find("#" + Y + " .jstree-icon.jstree-ocl").after(Z)
                        });
                        if (S.visible()) {
                            R.className += " gc-eye-visible"
                        } else {
                            Q.className += " gc-layer-hidden"
                        }
                    }
                    if (S) {
                        if (S.visible()) {
                            R.className += " gc-eye-visible"
                        } else {
                            Q.className += " gc-layer-hidden"
                        }
                    }
                }
                return Q
            }
        }
    })(m);
    (function(H, I) {
        var G = document.createElement("i");
        G.className = "jstree-icon jstree-locks";
        H.jstree.defaults.locks = H.noop;
        H.jstree.plugins.locks = function(J, K) {
            this.bind = function() {
                K.bind.call(this);
                this.element.on("dblclick.jstree", ".jstree-locks", H.proxy(function(M) {
                    M.stopImmediatePropagation();
                    M.preventDefault();
                    this.settings.locks.call(this, this.get_node(M.target))
                }, this)).on("click.jstree", ".jstree-locks", H.proxy(function(P) {
                    var N, O, M;
                    P.stopImmediatePropagation();
                    P.preventDefault();
                    if (!f) {
                        return
                    }
                    N = H(P.target);
                    O = N.closest("li");
                    M = O.attr("id").split("_");
                    D.selectability(M[2], !N.hasClass("jstree-lock-icon"))
                }, this))
            }
            ;
            this.redraw_node = function(Q, T, U) {
                var R, N, M, O, P, S;
                Q = K.redraw_node.call(this, Q, T, U);
                if (Q) {
                    N = this.get_node(Q.id);
                    if (N.data.type === "folder" || N.data.type === "style") {
                        return Q
                    }
                    M = Q.id;
                    O = M && M.split("_");
                    P = O && O.length && O[2];
                    S = f.layerById(P);
                    if (!S) {
                        return Q
                    }
                    R = G.cloneNode(true);
                    if (S.selectable && H.inArray(N.data.type, ["point", "line", "polygon", "wms"]) !== -1) {
                        R.className += (S.selectable() ? " jstree-no-lock-icon" : " jstree-lock-icon");
                        Q.insertBefore(R, Q.childNodes[3])
                    }
                }
                return Q
            }
        }
    })(m);
    (function(H, I) {
        var G = document.createElement("i");
        G.className = "jstree-icon jstree-settings ";
        H.jstree.defaults.settings = H.noop;
        H.jstree.plugins.settings = function(J, K) {
            this.bind = function() {
                K.bind.call(this);
                this.element.on("dblclick.jstree", ".jstree-settings", H.proxy(function(M) {
                    M.stopImmediatePropagation();
                    M.preventDefault();
                    this.settings.settings.call(this, this.get_node(M.target))
                }, this)).on("click.jstree", ".jstree-settings", H.proxy(function(Q) {
                    var O, P, M, N;
                    Q.stopImmediatePropagation();
                    Q.preventDefault();
                    if (!f) {
                        return
                    }
                    O = H(Q.target);
                    P = O.closest("li");
                    M = P.attr("id").split("_");
                    N = D.getLayerById(M[2]);
                    H(d).triggerHandler("setting", [M[2], O.hasClass("jstree-lock-icon")])
                }, this))
            }
            ;
            this.redraw_node = function(Q, T, U) {
                var R, N, M, O, P, S;
                Q = K.redraw_node.call(this, Q, T, U);
                if (Q) {
                    N = this.get_node(Q.id);
                    if (N.data.type === "style") {
                        return Q
                    }
                    M = Q.id;
                    O = M && M.split("_");
                    P = O && O.length && O[2];
                    S = f.layerById(P);
                    R = G.cloneNode(true);
                    if (N.data.type === "folder") {
                        Q.insertBefore(R, Q.childNodes[3])
                    } else {
                        Q.insertBefore(R, Q.childNodes[4])
                    }
                }
                return Q
            }
        }
    })(m);
    giscloud.ui.LayerList = function(T, W, O, S) {
        var J = u.oid(), M, N, H, V, K, U, I, G, R, P, Q;
        if (!T) {
            throw "No viewer to attach to."
        }
        D = this;
        this.initialized = false;
        this.layersLoading = new m.Deferred();
        r = W;
        f = T;
        m.extend(h, S);
        d = {};
        H = {};
        if (p.user && p.user.id > -1) {
            Q = giscloud.userOptions.byName("MAP_" + f.mapId + "_LAYERS_STATES").then(function(Z) {
                var Y;
                try {
                    Y = Z && Z.value && JSON.parse(Z.value);
                    if (!Y) {
                        return {}
                    }
                    return Y
                } catch (aa) {
                    return {}
                }
            }, function() {
                return m.Deferred().resolve({})
            })
        } else {
            Q = m.Deferred().resolve({})
        }
        initTree = function() {
            if (O) {
                f.addLayersExpandParam("form", "datasource", "analysis", "options");
                M = f.layersLoading
            } else {
                M = m.when(giscloud.layers.byMapId(f.mapId, {
                    expand: "form,datasource,analysis,options"
                }), Q)
            }
            m("#" + r).loader("show");
            M.done(function(aa, Y) {
                Y = Y || {};
                m("#" + r).loader("hide");
                N = (m.isArray(aa[0]) && (aa[0].length === 0 || aa[0][0] instanceof giscloud.Layer)) ? aa[0] : aa;
                H = {};
                function Z(ab) {
                    m.each(ab, function(ac, ad) {
                        var ae = ad.id.toString();
                        H[ae] = ad;
                        if (Y[ae]) {
                            if (Y[ae].v != null ) {
                                ad.visible = Y[ae].v ? "t" : "f"
                            }
                            if (ad.opened != null  && Y[ae].o != null ) {
                                ad.opened = Y[ae].o ? "t" : "f"
                            }
                        }
                        if (ad.sublayers && ad.sublayers.length > 0) {
                            Z(ad.sublayers)
                        }
                    })
                }
                Z(N);
                v(N);
                if (m.jstree.reference("#" + r) != null ) {
                    m("#" + r).jstree("destroy").empty();
                    m("#" + r).trigger("jstree.after_destroy")
                }
                V = a(N, J, f);
                V.on({
                    "before.jstree": function() {},
                    "check_node.jstree": function(ab, ac) {
                        U(ac.rslt.obj[0].id)
                    },
                    "uncheck_node.jstree": function(ab, ac) {
                        I(ac.rslt.obj[0].id)
                    },
                    "check_all.jstree": function() {
                        G()
                    },
                    "uncheck_all.jstree": function() {
                        R()
                    },
                    "ready.jstree": function() {
                        m(d).triggerHandler("ready");
                        if (!h.dnd) {
                            m("#" + r).find(".jstree-container-ul li").on("mousedown", function() {
                                return false
                            })
                        }
                        if (!h.selectable) {
                            m("#" + r).find("a.jstree-anchor").css("cursor", "default")
                        }
                    },
                    "after_open.jstree": function() {
                        m(d).triggerHandler("afterOpen")
                    },
                    "open_node.jstree": function(ac, ad) {
                        var ab = ad.node.id.split("_");
                        m(d).triggerHandler("open", [ab[2], ad.node.state.opened])
                    },
                    "close_node.jstree": function(ac, ad) {
                        var ab = ad.node.id.split("_");
                        m(d).triggerHandler("close", [ab[2], ad.node.state.opened])
                    },
                    "after_close.jstree": function(ac, ad) {
                        var ab = ad.node.id.split("_");
                        m(d).triggerHandler("afterClose")
                    },
                    "rename_node.jstree": function(ab, ac) {
                        m(d).triggerHandler("rename", [ac.node.data.id, ac.old, ac.text])
                    },
                    "select_node.jstree": function(ac, ad) {
                        var ab = ad.node.id.split("_");
                        if (ab.length > 3) {
                            m(d).triggerHandler("select", ["select", ab[3], ab[4], H[ab[2]]])
                        } else {
                            m(d).triggerHandler("select", ["select", ab[1], ab[2], H[ab[2]]])
                        }
                    },
                    "deselect_node.jstree": function(ac, ad) {
                        var ab = ad.node.id.split("_");
                        if (ab.length > 3) {
                            m(d).triggerHandler("unselect", ["unselect", ab[3], ab[4], H[ab[2]]])
                        } else {
                            m(d).triggerHandler("unselect", ["unselect", ab[1], ab[2], H[ab[2]]])
                        }
                    },
                    "dblclick.jstree": function(ad, af) {
                        var ae, ac, ab = m(ad.target).closest("li");
                        if (ab.length < 1) {
                            return
                        }
                        ae = ab.attr("id");
                        if (typeof ae !== "string") {
                            return
                        }
                        ac = ae.split("_");
                        node = m("#" + r).jstree().get_node("#" + ae);
                        if (node && node.data.type === "style") {
                            m(d).triggerHandler("dblclick", ["dblclick", ac[3], ac[4], H[ac[2]]])
                        } else {
                            m(d).triggerHandler("dblclick", ["dblclick", ac[1], ac[2], H[ac[2]]])
                        }
                    },
                    "changed.jstree": function(ac, ad) {
                        var ab = m.map(ad && ad.selected || [], function(af) {
                            var ae = af.split("_");
                            if (ae.length > 3) {
                                return {
                                    type: ae[3],
                                    id: ae[4],
                                    layer: H[ae[2]]
                                }
                            } else {
                                return {
                                    type: ae[1],
                                    id: ae[2],
                                    layer: H[ae[2]]
                                }
                            }
                        });
                        m(d).triggerHandler("changed", ["changed", ab])
                    }
                });
                m("#" + r).on("move_node.jstree", function(af, ag) {
                    var ac = ag.node.id.split("_")
                      , ah = ac[2]
                      , ai = ag.parent.split("_")
                      , ae = ag.old_parent.split("_")
                      , aj = ai == ae;
                    ai = ai && ai.length == 3 ? ai[2] * 1 : null ;
                    ae = ae && ae.length == 3 ? ae[2] * 1 : null ;
                    var ab = D.recursive()
                      , ad = [];
                    m.each(ab, function(ak, al) {
                        ad.push({
                            id: al.data.id
                        })
                    });
                    m(d).triggerHandler("orderchange", [ad, ah, ai, ae])
                });
                m(d).triggerHandler("reload");
                D.initialized = true
            });
            M.then(D.layersLoading.resolve, D.layersLoading.reject)
        }
        ;
        f.loading.done(initTree);
        this.bind = function(Y, Z) {
            var aa = this
              , ab = function() {
                var ac = Array.prototype.slice.call(arguments, 1);
                Z.apply(aa, ac)
            }
            ;
            m(d).on(Y, ab);
            if (!Z.gcunbind) {
                Z.gcunbind = {}
            }
            Z.gcunbind[J + Y] = ab;
            return this
        }
        ;
        this.unbind = function(Y, Z) {
            var aa;
            aa = Z.gcunbind && Z.gcunbind[J + Y];
            m(d).off(Y, aa);
            return this
        }
        ;
        this.selectAll = function() {
            if (!H) {
                return
            }
            var Y = [];
            m.each(H, function(Z, aa) {
                Y.push(aa)
            });
            this.select(Y)
        }
        ;
        this.select = function(Y, Z) {
            if (Y) {
                if (!H) {
                    return
                }
                if (!m.isArray(Y)) {
                    Y = [Y]
                }
                m.each(Y, function(aa, ab) {
                    var ac;
                    if (!(ab instanceof giscloud.Layer)) {
                        ab = H[ab]
                    }
                    if (!ab) {
                        return
                    }
                    ac = J + (ab.type === "folder" ? "_folder_" : "_layer_") + ab.id;
                    if (!Z && V && V.jstree) {
                        V.jstree("select_node", "#" + ac)
                    }
                })
            }
            return this
        }
        ;
        this.unselect = function(Y) {
            if (Y) {
                if (!m.isArray(Y)) {
                    Y = [Y]
                }
                m.each(Y, function(Z, aa) {
                    var ab;
                    if (!(aa instanceof giscloud.Layer)) {
                        aa = H[aa]
                    }
                    ab = J + (aa.type === "folder" ? "_folder_" : "_layer_") + aa.id;
                    V.jstree("deselect_node", "#" + ab)
                })
            } else {
                if (V && V.jstree) {
                    V.jstree("deselect_all")
                }
            }
            return this
        }
        ;
        this.selected = function() {
            if (!V) {
                return
            }
            return m.map(m("#" + r).jstree("get_selected"), function(Y) {
                var Z;
                if (typeof Y !== "string") {
                    return
                }
                Z = Y.split("_");
                return H[Z[2]]
            })
        }
        ;
        this.toggle = function(Y, Z) {
            if (!H) {
                return
            }
            if (Y) {
                if (!m.isArray(Y)) {
                    Y = [Y]
                }
                m.each(Y, function(aa, ab) {
                    var ac;
                    if (!(ab instanceof giscloud.Layer)) {
                        ab = H[ab]
                    }
                    ac = J + (ab.type === "folder" ? "_folder_" : "_layer_") + ab.id;
                    if (Z) {
                        V.jstree("open_node", "#" + ac)
                    } else {
                        V.jstree("close_node", "#" + ac)
                    }
                })
            }
            return this
        }
        ;
        this.expandAll = function() {
            V.jstree("open_all")
        }
        ;
        this.collapseAll = function() {
            V.jstree("close_all")
        }
        ;
        this.rename = function(Z) {
            var Y = this.getNodeById(Z);
            if (!Y) {
                return
            }
            m("#" + r).jstree("edit", Y.id)
        }
        ;
        this.lock = function(Y) {
            this.selectability(Y, true)
        }
        ;
        this.unlock = function(Y) {
            this.selectability(Y, false)
        }
        ;
        this.selectability = function(ad, aa) {
            var Z = D.getLayerById(ad)
              , Y = f.layerById(ad);
            if (Z && Y) {
                Z.lock = aa ? "t" : "f";
                var ac = getNodeByLayerId("#", ad)
                  , ab = m("#" + ac.id + " .jstree-locks");
                if (aa) {
                    Y.selectable(false);
                    ab.addClass("jstree-lock-icon");
                    ab.removeClass("jstree-no-lock-icon")
                } else {
                    Y.selectable(true);
                    ab.addClass("jstree-no-lock-icon");
                    ab.removeClass("jstree-lock-icon")
                }
                m(d).triggerHandler("lock", [ad, aa])
            }
        }
        ;
        this.show = function(Y) {
            this.visibility(Y, true)
        }
        ;
        this.hide = function(Y) {
            this.visibility(Y, false)
        }
        ;
        this.visibility = function(ac, ab) {
            var Z = D.getLayerById(ac)
              , Y = f.layerById(ac);
            if (Z) {
                Z.visible = ab ? "t" : "f";
                var aa = getNodeByLayerId("#", ac);
                if (ab) {
                    m("#" + aa.id).removeClass("gc-layer-hidden");
                    m("#" + aa.id + " .gc-eye").addClass("gc-eye-visible")
                } else {
                    m("#" + aa.id).addClass("gc-layer-hidden");
                    m("#" + aa.id + " .gc-eye").removeClass("gc-eye-visible")
                }
                if (ab) {
                    if (Z.type != "folder") {
                        f.showLayer(ac)
                    }
                } else {
                    if (Z.type != "folder") {
                        f.hideLayer(ac)
                    } else {
                        cl = K(ac);
                        if (cl) {
                            for (i = 0,
                            k = cl.length; i < k; i++) {
                                f.hideLayer(cl[i])
                            }
                        }
                    }
                }
            }
        }
        ;
        this.check = function(Y) {
            if (Y) {
                if (!m.isArray(Y)) {
                    Y = [Y]
                }
                m.each(Y, function(Z, ab) {
                    var ac;
                    if (!(ab instanceof giscloud.Layer)) {
                        ab = H[ab]
                    }
                    ac = J + (ab.type === "folder" ? "_folder_" : "_layer_") + ab.id;
                    var aa = V.get_node("#" + ac)
                })
            }
            return this
        }
        ;
        this.uncheck = function(Y) {
            if (Y) {
                if (!m.isArray(Y)) {
                    Y = [Y]
                }
                m.each(Y, function(Z, aa) {
                    var ab;
                    if (!(aa instanceof giscloud.Layer)) {
                        aa = H[aa]
                    }
                    ab = J + (aa.type === "folder" ? "_folder_" : "_layer_") + aa.id;
                    m("#" + r).jstree("uncheck_node", "#" + ab)
                })
            }
            return this
        }
        ;
        this.checkAll = function() {
            V.jstree("check_all");
            return this
        }
        ;
        this.uncheckAll = function() {
            V.jstree("uncheck_all");
            return this
        }
        ;
        this.destroy = function() {
            m("#" + r).jstree("destroy").empty();
            m("#" + r).trigger("jstree.after_destroy");
            d = {};
            H = {}
        }
        ;
        this.layers = function() {
            return N
        }
        ;
        this.width = function(Y) {
            if (Y === o) {
                return m("#" + r).width()
            }
            m("#" + r).width(Y);
            return this
        }
        ;
        this.height = function(Y) {
            if (Y === o) {
                return m("#" + r).height()
            }
            m("#" + r).height(Y);
            return this
        }
        ;
        this.layersOrder = function() {
            var Y = [];
            return Y
        }
        ;
        this.loader = function(Y) {
            if (Y === "hide") {
                m("#" + r).children().show();
                m("#" + r).loader("hide")
            } else {
                if (Y === "show") {
                    m("#" + r).children().hide();
                    m("#" + r).loader("show")
                }
            }
        }
        ;
        recursive = function(ab, ac, Z) {
            var Y = [], ad;
            if (!ab) {
                ab = m("#" + r).jstree().get_node(ac)
            }
            if (!ab) {
                return Y
            } else {
                if (ab.parent && ab.parent.indexOf("gcmap") > -1) {
                    if (Z && Z.getChild) {
                        Y.push(ab)
                    }
                    return Y
                } else {
                    if ((ab.data && ab.data.type != "style") || ab.id == "#") {
                        ad = Z && Z.excludeEmbededLayers && ab.data.type && ab.data.type == "giscloud";
                        if (ab.id != "#") {
                            Y = [ab]
                        }
                        if (ab.children && !ad) {
                            for (var aa = 0; aa < ab.children.length; aa++) {
                                Y = m.merge(Y, recursive(null , ab.children[aa], Z))
                            }
                        }
                    }
                }
            }
            return Y
        }
        ;
        this.recursive = function(Z, Y) {
            var aa = Z ? getNodeByLayerId("#", Z) : this.getNode("#");
            return recursive(aa, null , Y)
        }
        ;
        this.getNode = function(Y) {
            return m("#" + r).jstree().get_node(Y)
        }
        ;
        getNodeByLayerId = function(ab, ad) {
            var Z = m("#" + r).jstree().get_node(ab);
            if (!Z) {
                return null 
            } else {
                if (Z.data && Z.data.id == ad) {
                    return Z
                } else {
                    if (Z.children) {
                        var aa;
                        for (var Y = 0; Y < Z.children.length; Y++) {
                            var ac = getNodeByLayerId(Z.children[Y], ad);
                            if (ac) {
                                return ac
                            }
                        }
                    }
                }
            }
        }
        ;
        this.getNodeById = function(Y) {
            return getNodeByLayerId("#", Y)
        }
        ;
        this.getLayerById = function(Y) {
            return H[Y]
        }
        ;
        U = function(ac) {
            var ab, aa, Z, Y = ac.split("_");
            if (Y[1] === "layer") {
                f.showLayer(Y[2])
            } else {
                Z = K(ac);
                if (Z) {
                    for (ab = 0,
                    aa = Z.length; ab < aa; ab++) {
                        f.showLayer(Z[ab])
                    }
                }
            }
        }
        ;
        I = function(ac) {
            var ab, aa, Z, Y = ac.split("_");
            if (Y[1] === "layer") {
                f.hideLayer(Y[2])
            } else {
                Z = K(ac);
                if (Z) {
                    for (ab = 0,
                    aa = Z.length; ab < aa; ab++) {
                        f.hideLayer(Z[ab])
                    }
                }
            }
        }
        ;
        G = function() {
            m.each(f.layers, function(Y, Z) {
                Z.visible(true)
            })
        }
        ;
        R = function() {
            m.each(f.layers, function(Y, Z) {
                Z.visible(false)
            })
        }
        ;
        K = function(Z) {
            var Y = [];
            m("#" + Z).find("li[rel!='style']").each(function(aa, ab) {
                if (this.id.indexOf("folder") === -1) {
                    Y.push(this.id.split("_")[2])
                }
            });
            return F(Y)
        }
        ;
        P = function(aa, Z) {
            var Y = f.layerById(aa);
            if (Y) {
                Y.selectable(Z)
            }
        }
    }
    ;
    a = function(M, K, N) {
        var I = ["themes", "ui", "types", "wholerow", "visibility"];
        if (h.locks === true) {
            I.push("locks")
        }
        q = m.browser.msie && m.inArray(jQuery.browser.version, ["8.0", "9.0"]) > -1;
        if (h.dropdownMenu && !q) {
            I.push("dropdown")
        }
        if (h.dnd === true) {
            I.push("dnd")
        }
        if (!h.selectable) {
            I.push("nohover");
            I.push("noselect")
        }
        var H, G = g(M, K), J = {
            plugins: I,
            dnd: {
                copy: false
            },
            types: {
                max_depth: -2,
                max_children: -2,
                valid_children: ["layer", "folder"],
                layer: {
                    valid_children: ["style"]
                },
                folder: {
                    valid_children: ["layer", "folder"]
                },
                style: {
                    valid_children: [],
                    start_drag: false,
                    move_node: false,
                    hover_node: false,
                    dehover_node: false,
                    select_node: false
                }
            },
            ui: {
                selected_parent_close: false
            },
            core: {
                check_callback: function(O, Q, S, R, P) {
                    if (O == "move_node") {
                        if (Q.data && Q.data.type == "style") {
                            return false
                        }
                        if (Q.parent && Q.parent.indexOf("gcmap") > -1) {
                            return false
                        }
                        if (!S.parent) {
                            return true
                        }
                        return (S.data && S.data.type == "folder") ? true : false
                    }
                },
                themes: {
                    url: giscloud.app ? null  : (u.apiHost() + "/1/giscloud.ui.css?modules=layerlist"),
                    theme: "giscloud",
                    dots: false,
                    responsive: h.responsive || false
                },
                multiple: false,
                animation: 0,
                data: G
            }
        };
        H = m("#" + r).jstree(J);
        m.each(C, function(O) {
            m("#" + C[O] + " > a > i").addClass("nocolorLayerList")
        });
        return H
    }
    ;
    g = function(O, I) {
        var P, M, R, J, G, K, N, S = [], H = {}, Q = [];
        if (!O) {
            return {}
        }
        for (P = 0,
        M = O.length; P < M; P++) {
            R = O[P];
            J = null ;
            if (m.inArray(R.id * 1, h.hiddenLayerIds) > -1) {
                continue
            }
            if (R.type === "folder") {
                G = "folder" + R.id;
                if (H[G]) {
                    H[G].obj = R;
                    H[G].shouldExpand = !!R.opened && (R.opened === "t");
                    J = H[G]
                } else {
                    J = {
                        id: G,
                        obj: R,
                        nodes: [],
                        shouldExpand: !!R.opened && (R.opened === "t")
                    };
                    H[G] = J
                }
            } else {
                G = "layer" + R.id;
                J = {
                    id: G,
                    obj: R,
                    shouldExpand: !!R.opened && (R.opened === "t")
                }
            }
            if (R.parent === null ) {
                S.push(J)
            } else {
                N = "folder" + R.parent;
                if (!H[N]) {
                    H[N] = {
                        id: R.parent,
                        obj: null ,
                        nodes: []
                    }
                }
                H[N].nodes.push(J)
            }
        }
        K = function(U) {
            var T;
            T = U.sort(z);
            return m.map(T, function(V) {
                var Z, W;
                if (V.nodes) {
                    return {
                        id: I + "_folder_" + V.obj.id,
                        text: V.obj.name,
                        data: {
                            type: "folder",
                            title: V.obj.name,
                            id: V.obj.id * 1
                        },
                        children: K(V.nodes),
                        state: {
                            opened: V.shouldExpand
                        },
                        li_attr: {
                            title: "ID: " + V.obj.id + "\n" + u.__("Name") + ": " + V.obj.name + "\nType: 'Folder'",
                            rel: "folder",
                            id: I + "_folder_" + V.obj.id,
                            "class": "jstree-undetermined" + (V.shouldExpand ? " jstree-open" : "")
                        }
                    }
                } else {
                    if (V.obj.type == "giscloud") {
                        Z = Z && Z[0];
                        return {
                            id: I + "_gcmap_" + V.obj.id,
                            text: V.obj.name,
                            icon: E("giscloud"),
                            children: g(V.obj.sublayers),
                            data: {
                                type: V.obj.type,
                                title: V.obj.name,
                                id: V.obj.id * 1
                            },
                            state: {
                                opened: V.shouldExpand
                            },
                            li_attr: {
                                title: "ID: " + V.obj.id + "\n" + u.__("Name") + ": " + V.obj.name + "\n" + u.__("Type") + ": '" + V.obj.source.type + "'\n" + u.__("Source") + ": '" + V.obj.source.src + (V.obj.datasourceId ? "'\n" + u.__("Datasource_ID") + ": " + V.obj.datasourceId : ""),
                                rel: "layer",
                                id: I + "_layer_" + V.obj.id,
                                "class": V.obj.visible === "t" ? "jstree-checked" : ""
                            }
                        }
                    } else {
                        Z = V.obj.styles;
                        if (Z && Z.length > 1) {
                            return {
                                id: I + "_layer_" + V.obj.id,
                                text: V.obj.name,
                                icon: E(null , "multi"),
                                data: {
                                    type: V.obj.type,
                                    title: V.obj.name,
                                    id: V.obj.id * 1
                                },
                                state: {
                                    opened: V.shouldExpand
                                },
                                li_attr: {
                                    title: "ID: " + V.obj.id + "\n" + u.__("Name") + ": " + V.obj.name + "\n" + u.__("Type") + ": '" + V.obj.source.type + "'\n" + u.__("Source") + ": '" + V.obj.source.src + (V.obj.datasourceId ? "'\n" + u.__("Datasource_ID") + ": " + V.obj.datasourceId : ""),
                                    rel: "layer",
                                    id: I + "_layer_" + V.obj.id,
                                    "class": (V.obj.visible === "t" ? "jstree-checked" : "") + (V.shouldExpand ? " jstree-open" : "")
                                },
                                children: m.map(Z, function(ab, aa) {
                                    return {
                                        id: I + "_layer_" + V.obj.id + "_expression_" + aa,
                                        text: (ab.showlabel ? ab.label : ab.expression) || "",
                                        icon: E("geometry", (ab.offlineUrl && ab) || ab.symbol || ((ab.galleryUrl || ab.url) && ab) || (ab.hatchGalleryUrl && ab) || {
                                            type: V.obj.type,
                                            color: ab.color,
                                            border: ab.bordercolor
                                        }),
                                        data: {
                                            type: "style",
                                            title: (ab.showlabel ? ab.label : ab.expression) || ""
                                        },
                                        li_attr: {
                                            rel: "style",
                                            layerid: V.obj.id,
                                            exprindex: aa,
                                            id: I + "_layer_" + V.obj.id + "_expression_" + aa,
                                            "class": "jstree-style-node gc-layer-child-node"
                                        }
                                    }
                                })
                            }
                        } else {
                            Z = Z && Z[0];
                            var Y = "";
                            if (V.obj && V.obj.source) {
                                Y = "ID: " + V.obj.id + "\n" + u.__("Name") + ": " + V.obj.name + "\n" + u.__("Type") + ": '" + V.obj.source.type + "'\n" + u.__("Source") + ": '" + V.obj.source.src + (V.obj.datasourceId ? "'\n" + u.__("Datasource_ID") + ": " + V.obj.datasourceId : "")
                            }
                            return {
                                id: I + "_layer_" + V.obj.id,
                                text: V.obj.name,
                                icon: E(V.obj.type, Z && ((Z.offlineUrl && Z) || Z.symbol || ((Z.galleryUrl || Z.url || Z.hatchUrl || Z.hatchGalleryUrl) && Z) || {
                                    type: V.obj.type,
                                    color: Z.color,
                                    border: Z.bordercolor
                                }), V.obj && V.obj.source && V.obj.source.type, I + "_layer_" + V.obj.id),
                                data: {
                                    type: V.obj.type,
                                    title: V.obj.name,
                                    id: V.obj.id * 1
                                },
                                li_attr: {
                                    title: Y,
                                    rel: "layer",
                                    id: I + "_layer_" + V.obj.id,
                                    "class": V.obj.visible === "t" ? "jstree-checked" : ""
                                }
                            }
                        }
                    }
                }
            })
        }
        ;
        Q = K(S);
        return Q
    }
    ;
    z = function(J, I) {
        var H, G;
        if (typeof J.obj.order === "string") {
            H = parseInt(J.obj.order, 10);
            G = parseInt(I.obj.order, 10)
        } else {
            H = J.obj.order;
            G = I.obj.order
        }
        return G - H
    }
    ;
    F = function(K) {
        var I, H, J, G = [];
        for (I = 0,
        H = K.length; I < H; I++) {
            J = K[I];
            if (Object.prototype.toString.call(J) === "[object Array]") {
                G = G.concat(F(J))
            } else {
                G.push(J)
            }
        }
        return G
    }
    ;
    E = function(O, K, N, Q) {
        var G, M, S, P, J = h.responsive ? 24 : 10, R = (p.location.protocol == "https:" ? "https:" : "http:"), H = giscloud.offlineMode() && giscloudOffline.documentDirectory;
        if (K === "multi") {
            G = "/assets/images/layertree/color_swatch.gif"
        } else {
            switch (O) {
            case "folder":
                G = "/assets/images/layertree/folder.gif";
                break;
            case "analysis":
                G = "/assets/images/layertree/color_swatch.gif";
                break;
            case "raster":
                G = "/assets/images/image.gif";
                break;
            case "giscloud":
            case "wms":
            case "wfs":
            case "wmts":
            case "tile":
                G = "/assets/images/world.gif";
                break;
            case "point":
            case "line":
            case "polygon":
            case "geometry":
                if (K && H && K.offlineUrl) {
                    G = "/assets/" + K.offlineUrl
                } else {
                    if (N == "wfs") {
                        G = "/assets/images/world.gif"
                    } else {
                        if (K && K.galleryUrl) {
                            G = K.galleryUrl.replace(/^.*\/rest/i, "")
                        } else {
                            if (K && K.url) {
                                G = "/assets/icon.php?p=" + encodeURI(K.url)
                            } else {
                                if (K && K.hatchUrl) {
                                    var I = K.hatchUrl;
                                    return "/assets/icon.php?p=" + I
                                } else {
                                    if (K && K.hatchGalleryUrl) {
                                        G = K.hatchGalleryUrl.replace(/^.*\/rest/i, "")
                                    } else {
                                        if (K) {
                                            S = parseInt(K.size, 10) || 0;
                                            P = parseInt(K.bw, 10) || 0;
                                            M = (S + 2 * P) / J;
                                            if (M) {
                                                P = Math.round(P / M)
                                            }
                                            S = J - 2 * P;
                                            if (m(p).width() < 769) {
                                                S = 18
                                            }
                                            if (K.color === o && K.type === "line") {
                                                K.color = "";
                                                if (K.border === o) {
                                                    C.push(Q)
                                                }
                                            } else {
                                                if (K.color === o) {
                                                    K.color = "255,255,255";
                                                    if (K.border === o) {
                                                        C.push(Q)
                                                    }
                                                }
                                            }
                                            if (K.border === o) {
                                                K.border = "0,0,0"
                                            }
                                            if (K.color === "") {
                                                G = "/assets/icon.php?type=" + K.type + "&border=" + K.border + "&bw=" + P + "&size=" + S
                                            } else {
                                                G = "/assets/icon.php?type=" + K.type + "&color=" + K.color + "&border=" + K.border + "&bw=" + P + "&size=" + S
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                break;
            default:
                return null 
            }
        }
        if (H) {
            return "file://" + giscloudOffline.documentDirectory.slice(0, -1) + G
        }
        return u.apiHost().replace("http:", R) + G
    }
    ;
    function B(I) {
        var G, H, J;
        if (I.env) {
            return I
        }
        if (I.item) {
            return null 
        }
        if (I.all) {
            H = "all"
        } else {
            if (I.any) {
                H = "any"
            } else {
                if (I.one) {
                    H = "one"
                } else {
                    if (I.none) {
                        H = "none"
                    } else {
                        console.log("unknown deps operator", I);
                        return null 
                    }
                }
            }
        }
        J = m.map(I[H], B);
        if (J.length === 0) {
            return null 
        }
        G = {};
        G[H] = J;
        return G
    }
    function e(G) {
        if (!G || !G.form || !G.form.definition || !G.form.definition.items) {
            return
        }
        return m.map(G.form.definition.items, function(I) {
            var H;
            if (!m.isPlainObject(I.active)) {
                return
            }
            H = B(I.active);
            if (H) {
                return {
                    uuid: I.uuid,
                    name: I.name,
                    active: H
                }
            }
        })
    }
    function v(G) {
        m.each(G || [], function(J, I) {
            var H, K;
            if (!I.form) {
                return
            }
            H = e(I);
            if (!H || H.length === 0) {
                G[J].hideFields = [];
                return
            }
            K = new giscloud.DependencyResolver({
                formItems: H
            });
            G[J].hideFields = m.map(H, function(N) {
                var M = K.resolveDependency(N, N.active);
                if ((M && M.check && !M.check()) || M === false) {
                    return N.name
                }
            })
        })
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(m) {
    var h = [0, 3614090360, 3905402710, 606105819, 3250441966, 4118548399, 1200080426, 2821735955, 4249261313, 1770035416, 2336552879, 4294925233, 2304563134, 1804603682, 4254626195, 2792965006, 1236535329, 4129170786, 3225465664, 643717713, 3921069994, 3593408605, 38016083, 3634488961, 3889429448, 568446438, 3275163606, 4107603335, 1163531501, 2850285829, 4243563512, 1735328473, 2368359562, 4294588738, 2272392833, 1839030562, 4259657740, 2763975236, 1272893353, 4139469664, 3200236656, 681279174, 3936430074, 3572445317, 76029189, 3654602809, 3873151461, 530742520, 3299628645, 4096336452, 1126891415, 2878612391, 4237533241, 1700485571, 2399980690, 4293915773, 2240044497, 1873313359, 4264355552, 2734768916, 1309151649, 4149444226, 3174756917, 718787259, 3951481745]
      , D = [[0, 7, 1], [1, 12, 2], [2, 17, 3], [3, 22, 4], [4, 7, 5], [5, 12, 6], [6, 17, 7], [7, 22, 8], [8, 7, 9], [9, 12, 10], [10, 17, 11], [11, 22, 12], [12, 7, 13], [13, 12, 14], [14, 17, 15], [15, 22, 16]]
      , B = [[1, 5, 17], [6, 9, 18], [11, 14, 19], [0, 20, 20], [5, 5, 21], [10, 9, 22], [15, 14, 23], [4, 20, 24], [9, 5, 25], [14, 9, 26], [3, 14, 27], [8, 20, 28], [13, 5, 29], [2, 9, 30], [7, 14, 31], [12, 20, 32]]
      , v = [[5, 4, 33], [8, 11, 34], [11, 16, 35], [14, 23, 36], [1, 4, 37], [4, 11, 38], [7, 16, 39], [10, 23, 40], [13, 4, 41], [0, 11, 42], [3, 16, 43], [6, 23, 44], [9, 4, 45], [12, 11, 46], [15, 16, 47], [2, 23, 48]]
      , r = [[0, 6, 49], [7, 10, 50], [14, 15, 51], [5, 21, 52], [12, 6, 53], [3, 10, 54], [10, 15, 55], [1, 21, 56], [8, 6, 57], [15, 10, 58], [6, 15, 59], [13, 21, 60], [4, 6, 61], [11, 10, 62], [2, 15, 63], [9, 21, 64]];
    function C(F, H, G) {
        return (F & H) | (~F & G)
    }
    function z(F, H, G) {
        return (F & G) | (H & ~G)
    }
    function u(F, H, G) {
        return F ^ H ^ G
    }
    function q(F, H, G) {
        return H ^ (F | ~G)
    }
    var o = [[C, D], [z, B], [u, v], [q, r]];
    function e(F) {
        return String.fromCharCode(F & 255) + String.fromCharCode((F >>> 8) & 255) + String.fromCharCode((F >>> 16) & 255) + String.fromCharCode((F >>> 24) & 255)
    }
    function a(F) {
        return F.charCodeAt(0) | (F.charCodeAt(1) << 8) | (F.charCodeAt(2) << 16) | (F.charCodeAt(3) << 24)
    }
    function d(F) {
        while (F < 0) {
            F += 4294967296
        }
        while (F > 4294967295) {
            F -= 4294967296
        }
        return F
    }
    function E(O, T, I, H, F) {
        var N, M, K, J, G, S, Q, R, P;
        N = H[0];
        M = H[1];
        K = H[2];
        J = H[3];
        G = F[0];
        S = F[1];
        Q = F[2];
        P = I(T[M], T[K], T[J]);
        R = T[N] + P + O[G] + h[Q];
        R = d(R);
        R = ((R << S) | (R >>> (32 - S)));
        R += T[M];
        T[N] = d(R)
    }
    function g(N) {
        var H, S, G, T, R, Q, O, P, F, M, J, I, K;
        G = [1732584193, 4023233417, 2562383102, 271733878];
        R = N.length;
        Q = R & 63;
        O = (Q < 56) ? (56 - Q) : (120 - Q);
        if (O > 0) {
            N += "\x80";
            for (M = 0; M < O - 1; M++) {
                N += "\x00"
            }
        }
        N += e(R * 8);
        N += e(0);
        R += O + 8;
        H = [0, 1, 2, 3];
        S = [16];
        T = [4];
        for (I = 0; I < R; I += 64) {
            for (M = 0,
            J = I; M < 16; M++,
            J += 4) {
                S[M] = N.charCodeAt(J) | (N.charCodeAt(J + 1) << 8) | (N.charCodeAt(J + 2) << 16) | (N.charCodeAt(J + 3) << 24)
            }
            for (M = 0; M < 4; M++) {
                T[M] = G[M]
            }
            for (M = 0; M < 4; M++) {
                P = o[M][0];
                F = o[M][1];
                for (J = 0; J < 16; J++) {
                    E(S, T, P, H, F[J]);
                    K = H[0];
                    H[0] = H[3];
                    H[3] = H[2];
                    H[2] = H[1];
                    H[1] = K
                }
            }
            for (M = 0; M < 4; M++) {
                G[M] += T[M];
                G[M] = d(G[M])
            }
        }
        return e(G[0]) + e(G[1]) + e(G[2]) + e(G[3])
    }
    function p(I) {
        var H, G, J;
        var F;
        F = g(I);
        G = "";
        for (H = 0; H < 16; H++) {
            J = F.charCodeAt(H);
            G += "0123456789abcdef".charAt((J >> 4) & 15);
            G += "0123456789abcdef".charAt(J & 15)
        }
        return G
    }
    function f(F) {
        F = F ? F : "";
        return p(F.toString())
    }
    giscloud.md5 = f;
    if (m) {
        m.md5 = f
    } else {
        window.md5 = f
    }
}(typeof giscloud !== "undefined" ? giscloud.common() : null ));
(function(e) {
    function a(h) {
        var g = Math.random() * 16 | 0
          , f = h == "x" ? g : (g & 3 | 8);
        return f.toString(16)
    }
    function d() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, a)
    }
    giscloud.uuid = d;
    if (e) {
        e.uuid = d
    } else {
        window.uuid = d
    }
}(typeof giscloud !== "undefined" ? giscloud.common() : null ));
if (!window.giscloud) {
    window.giscloud = {};
    giscloud.common = function() {
        return null 
    }
}
(function(window, $, common, undefined) {
    var giscloud_tile_url = common.tileSite();
    var isWebKit = (navigator.userAgent.indexOf("WebKit") > 0);
    var tile_buffer = new Array();
    var isMouseDown;
    var fields;
    var _selectablePoly;
    var bounds;
    var selectionEnabled = false;
    var laycount = 0;
    var loader_id = 0;
    var active_loaders = {};
    var tile_request = {};
    var tile_req = [];
    var tile_req_seq = 0;
    var text_data = {};
    giscloud.Html5MapSetSelection = function(v) {
        selectionEnabled = v
    }
    ;
    giscloud.html5ResetLoaders = function() {
        var r;
        for (r in active_loaders) {
            if (!active_loaders[r]) {
                continue
            }
            if (active_loaders[r].dest) {
                active_loaders[r].dest._layer._tileOnError.call(active_loaders[r].dest)
            }
            if (active_loaders[r].abort) {
                active_loaders[r].abort()
            }
            active_loaders[r] = null 
        }
        loader_id++;
        tile_req = [];
        tile_request = {}
    }
    ;
    giscloud.Html5Map = function(o, parent) {
        _init(o, this);
        this.parent = parent;
        giscloud.Html5SendRequests = function() {
            sendRequests()
        }
        ;
        this._layer = o;
        laycount++;
        function _getTile(coord, zoom, ownerDocument, that) {
            var m = Math.pow(2, zoom);
            var y = coord.y;
            if (y < 0 || y >= m) {
                return ownerDocument.createElement("div")
            }
            var x = coord.x % m;
            var tile = jsonCanvas(ownerDocument, that);
            var uri = zoom + "/" + x + "/" + y;
            if (that.url) {
                var tileurl = that.url + uri;
                if (fields) {
                    ajaxLoader(drawGeomCanvas, tileurl + ".json?fields=" + fields, tile.c, uri)
                } else {
                    ajaxLoader(drawGeomCanvas, tileurl + ".json", tile.c, uri)
                }
            } else {
                tile_buffer.push({
                    tile: tile.c,
                    uri: uri
                })
            }
            return tile
        }
        function sendRequests() {
            var r, attribs;
            while ((r = tile_req.shift()) ) {
                attribs = "";
                var token = giscloud.tile_token + ":";
                token = "";
                if (tile_request[r.uri].attribs.length > 0) {
                    $.unique(tile_request[r.uri].attribs);
                    attribs = tile_request[r.uri].attribs.join(",") + "/"
                }
                if (r.that.url2) {
                    ajaxLoader(drawTile, r.that.url2 + token + tile_request[r.uri].timestamps.join(",") + "/" + r.that.mid + "/" + tile_request[r.uri].layers.join(",") + "/" + attribs + r.uri_for_request + ".json", r.tile, r.uri)
                } else {
                    if (r.that.url3) {
                        ajaxLoader(drawTile, r.that.url3 + token + tile_request[r.uri].timestamps.join(",") + "/" + r.that.mid + "/" + tile_request[r.uri].layers.join(",") + "/dyn," + r.that.t + "/" + attribs + r.uri_for_request + ".json", r.tile, r.uri)
                    } else {
                        tile_buffer.push({
                            tile: tile,
                            uri: uri
                        })
                    }
                }
                r.tile = null 
            }
        }
        function _loadTile(tile, coord, zoom, that) {
            var uri = "";
            var attribs = null ;
            if (that.feature_filter || that.parent.labels || (that.parent.labelData && that.parent.labelData.attribute)) {
                tile.feature_filter_attributes = "";
                if (that.feature_filter) {
                    tile.feature_filter_attributes = that.feature_filter.attributes
                }
                if (that.parent.labels) {
                    if (tile.feature_filter_attributes) {
                        tile.feature_filter_attributes += ","
                    }
                    tile.feature_filter_attributes += that.parent.labels.attribute
                }
                if (that.parent.labelData && that.parent.labelData.attribute) {
                    if (tile.feature_filter_attributes) {
                        tile.feature_filter_attributes += ","
                    }
                    tile.feature_filter_attributes += that.parent.labelData.attribute
                }
                if (tile.feature_filter_attributes) {
                    attribs = tile.feature_filter_attributes.split(",")
                }
                tile.feature_filter_attributes_array = attribs
            } else {
                if (flashnavigator.newLabelingMode) {
                    tile.feature_filter_attributes_array = null ;
                    if (that.parent.group) {
                        tile.feature_filter_attributes = that.parent.group.map(function(group) {
                            return group.labelData.attribute
                        }).filter(function(attribute, index, self) {
                            return self.indexOf(attribute) === index
                        }).filter(function(attribute) {
                            return !!attribute
                        }).join(",") || ""
                    }
                    if (tile.feature_filter_attributes && tile.feature_filter_attributes.length > 0) {
                        attribs = tile.feature_filter_attributes.split(",");
                        tile.feature_filter_attributes_array = attribs
                    }
                } else {
                    tile.feature_filter_attributes = null 
                }
            }
            uri += zoom + "/" + coord.x + "/" + coord.y;
            tile.obj = that;
            tile.zoom = zoom;
            tile.coord = coord;
            tile._loader_id = loader_id;
            tile.uri_for_request = uri;
            uri += "/" + that.mid;
            tile.uri = uri;
            if (tile.obj.parent.group) {
                var lids = [];
                var timestamps = [];
                for (var i = 0; i < tile.obj.parent.group.length; i++) {
                    if (tile.obj.parent._tileShouldBeLoaded(coord, tile.obj.parent.group[i])) {
                        lids.push(tile.obj.parent.group[i].options.id);
                        timestamps.push(tile.obj.parent.group[i].options.modified)
                    }
                }
                if (lids.length == 0) {
                    return
                }
                that.lid = lids.join(",");
                that.modified = timestamps.join(",")
            }
            if (!tile_request[uri]) {
                tile_req_seq++;
                tile_request[uri] = {
                    tiles: [],
                    layers: [],
                    timestamps: [],
                    attribs: [],
                    seq: tile_req_seq,
                    present: {}
                };
                tile_req.push({
                    coord: coord,
                    tile: tile,
                    that: that,
                    uri: uri,
                    uri_for_request: tile.uri_for_request
                })
            }
            if (!tile_request[uri].present[that.lid]) {
                tile_request[uri].tiles.push(tile);
                tile_request[uri].layers.push(that.lid);
                tile_request[uri].timestamps.push(that.modified);
                tile_request[uri].present[that.lid] = true;
                if (attribs) {
                    tile_request[uri].attribs = attribs.concat(tile_request[uri].attribs)
                }
            }
        }
        function ajaxLoader(func, url, dest, uri) {
            if (giscloud.offlineMode()) {
                return offlineMapTileLoader(func, url, dest, uri)
            }
            if (document.getElementById) {
                var x = (window.XDomainRequest) ? new XDomainRequest() : new XMLHttpRequest();
                if (window.XDomainRequest) {
                    x.xdomain = 1
                }
            }
            if (x) {
                x.tile_request = tile_request[uri];
                tile_request[uri] = null ;
                x.seq = x.tile_request.seq;
                x.dest = dest;
                active_loaders[x.seq] = x;
                x.onreadystatechange = function() {
                    var el = el || {}, d;
                    if (x.xdomain || x.readyState == 4) {
                        d = 0;
                        if (x.xdomain || x.status == 200) {
                            el = x.dest;
                            if (x.responseText && x.responseText[0] != "<" && x.responseText != "[0]") {
                                if (window.JSON) {
                                    d = window.JSON.parse(x.responseText)
                                } else {
                                    d = eval("(" + x.responseText + ")")
                                }
                            }
                        } else {
                            if (x.status === 0 && x.responseText) {
                                el = x.dest;
                                try {
                                    d = window.JSON.parse(x.responseText)
                                } catch (err) {}
                            }
                        }
                        handleMapTileResponse(x, func, el, d);
                        if (active_loaders[this.seq]) {
                            delete active_loaders[this.seq]
                        }
                    }
                }
                ;
                if (x.xdomain) {
                    x.onerror = function() {
                        if (active_loaders[this.seq]) {
                            delete active_loaders[this.seq]
                        }
                    }
                    ;
                    x.ontimeout = function() {
                        if (active_loaders[this.seq]) {
                            delete active_loaders[this.seq]
                        }
                    }
                    ;
                    x.onprogress = function() {}
                    ;
                    x.onload = x.onreadystatechange
                }
                x.open("GET", url);
                x._url = url;
                x.send()
            }
        }
        function handleMapTileResponse(request, callback_func, tile_container, tile_data) {
            if (tile_data && tile_data.length && !tile_container.obj.dynamic) {
                var tile, i, offset = 0, tiles = request.tile_request.tiles;
                for (i = 0; i < tiles.length; i++) {
                    tile = tiles[i];
                    if (tile.obj && tile.obj.processTiles) {
                        offset += tile.obj.processTiles(callback_func, request.tile_request, tile_data, i, offset)
                    } else {
                        if (tile_data[i]) {
                            callback_func(tile, tile_data[i], tile.obj.parent)
                        }
                    }
                    if (tile && tile.ontileload) {
                        tile.ontileload()
                    }
                }
            } else {
                if (tile_container) {
                    if (tile_container.obj && tile_container.obj.processTiles) {
                        tile_container.obj.processTiles(callback_func, request.tile_request, tile_data, 0, 0, true)
                    } else {
                        if (tile_data) {
                            callback_func(tile_container, tile_data, tile_container.obj.parent)
                        }
                    }
                    if (tile_container.ontileload) {
                        tile_container.ontileload()
                    }
                }
            }
        }
        function offlineMapTileLoader(callback_func, url, dest, uri) {
            var params, params_offset = 0, fields = null , request;
            url = url.split("/");
            if (url.length == 11) {
                params_offset += 1;
                fields = "&fields=" + url[7]
            }
            params = [url[4], url[5], url[6], url[7 + params_offset], url[8 + params_offset], url[9 + params_offset].replace(".json", "")];
            if (fields) {
                params.push(fields)
            }
            request = {
                tile_request: tile_request[uri]
            };
            tile_request[uri] = null ;
            giscloudOffline.getMapTile(params, function(tile_data) {
                if (window.JSON) {
                    tile_data = window.JSON.parse(tile_data)
                } else {
                    tile_data = eval("(" + tile_data + ")")
                }
                handleMapTileResponse(request, callback_func, dest, tile_data)
            }, function() {
                console.log("Error loading tile")
            })
        }
        this._loadTile = _loadTile;
        this.setFields = function(_fields) {
            fields = _fields
        }
        ;
        this.getTile = function(coord, zoom, ownerDocument) {
            return _getTile(coord, zoom, ownerDocument, this)
        }
        ;
        this.loadTile = function(tile, coord, zoom) {
            _loadTile(tile, coord, zoom, this)
        }
        ;
        this.selectablePoly = function(v) {
            _selectablePoly = v
        }
        ;
        this.setBounds = function(b) {
            bounds = b
        }
        ;
        this.onMouseMove = function(evt, force, offset, layer) {
            if (layer._selectable) {
                return checkForEvent(evt, force, offset)
            } else {
                return false
            }
        }
        ;
        this.onMouseUp = function(evt) {}
        ;
        this.onMouseDown = function(evt) {}
        ;
        this.modifyObject = function(feature_list, style, layer_id, clear, e, f) {
            layer_id = layer_id ? (layer_id + "").split("||")[0] : "";
            if (layer_id && !this.lid_map[layer_id]) {
                return
            }
            feature_list = feature_list ? feature_list + "" : "";
            if (clear && !this.has_modifier && !feature_list) {
                return
            }
            var i, color, sign, toClear = null , toClearLayers = null , had_modifier = false;
            if (isNaN(style.color)) {
                color = style.color
            } else {
                color = "#" + style.color.toString(16)
            }
            if (this.parent.group) {
                sign = feature_list + color + layer_id + clear + e + f;
                if (this.modify_sign == sign) {
                    return
                }
                this.modify_sign = sign
            }
            if (clear) {
                toClear = this.modifier;
                toClearLayers = this.modifier_layers;
                had_modifier = this.has_modifier;
                this.modifier = {};
                this.has_modifier = false
            }
            this.modifier_layers = {};
            if (feature_list) {
                feature_list = feature_list.split(",");
                style = {
                    color: color,
                    linewidth: 1
                };
                for (i = 0; i < feature_list.length; i++) {
                    if (feature_list[i] === "") {
                        continue
                    }
                    this.modifier[layer_id + "_" + feature_list[i]] = style;
                    this.modifier_layers[layer_id] = 1;
                    this.has_modifier = true
                }
            }
            if (!this.parent.group) {
                if (toClearLayers) {
                    for (layer_id in toClearLayers) {
                        drawAcrossTiles(this, toClear, layer_id)
                    }
                }
                for (layer_id in this.modifier_layers) {
                    drawAcrossTiles(this, toClear, layer_id)
                }
            } else {
                if (had_modifier || this.has_modifier) {
                    this.activeLayer = null ;
                    this.redraw()
                }
            }
            toClear = null 
        }
        ;
        this.redraw = function() {
            var current_filter_attributes = "";
            if (this.feature_filter && this.feature_filter.attributes) {
                current_filter_attributes = this.feature_filter.attributes
            } else {
                if (this.parent.group) {
                    current_filter_attributes = null 
                }
            }
            redraw(this, current_filter_attributes)
        }
        ;
        this.redrawSingleTile = function(tile) {
            var current_filter_attributes = "";
            if (this.feature_filter && this.feature_filter.attributes) {
                current_filter_attributes = this.feature_filter.attributes
            } else {
                if (this.parent.group) {
                    current_filter_attributes = null 
                }
            }
            redrawSingleTile(this, tile, current_filter_attributes)
        }
        ;
        this.reload = function() {
            var i, c = this.getCanvases();
            if (Object.keys(c).length === 0) {
                this.parent._update();
                return
            }
            for (i in c) {
                if (c[i].coord) {
                    c[i].styles = null ;
                    _loadTile(c[i], c[i].coord, c[i].zoom, this)
                }
            }
        }
        ;
        this.resetLoader = function() {
            giscloud.html5ResetLoaders()
        }
        ;
        this.getFeature = function(feature) {
            var f = feature.replace("||", "_");
            var c = this.getCanvases();
            for (var i in c) {
                if (c[i].fields && c[i].fields[f]) {
                    return c[i].fields[f]
                }
            }
        }
        ;
        this.initStyles = function() {
            var c = this.getCanvases();
            for (var i in c) {
                initStyles(c[i])
            }
        }
        ;
        this.getFeatureCount = function() {
            var c = this.getCanvases();
            var count = 0;
            for (var i in c) {
                if (c[i].featureCount && this.parent._tileShouldBeVisible(c[i].coord)) {
                    count += c[i].featureCount
                }
            }
            return count
        }
        ;
        this.getFeatureIds = function() {
            var c = this.getCanvases(), count = 0, a = [], o = {}, i, j, l, featureIds;
            for (i in c) {
                if (c[i].featureCount && this.parent._tileShouldBeVisible(c[i].coord)) {
                    featureIds = c[i].featureIds;
                    l = featureIds.length;
                    for (j = 0; j < l; j++) {
                        o[featureIds[j]] = featureIds[j]
                    }
                }
            }
            for (i in o) {
                a.push(o[i])
            }
            return a
        }
        ;
        this.renderLabels = function(labelLayer, labelTile) {
            renderLabelTile(labelLayer, labelTile)
        }
        ;
        return this
    }
    ;
    (function() {
        if (!window.giscloud) {
            window.giscloud = {
                math: {}
            }
        } else {
            if (!window.giscloud.math) {
                window.giscloud.math = {}
            }
        }
        (function() {
            var self = window.giscloud.math;
            function defVector2() {
                function Vector2(x, y) {
                    if (!this) {
                        throw new Error("[giscloud.math.Vector2] is a constructor and must be invoked with `new`")
                    }
                    if (Array.isArray(x)) {
                        this.x = x[0] || 0;
                        this.y = x[1] || 0
                    } else {
                        if (x instanceof Vector2) {
                            this.x = x.x;
                            this.y = x.y
                        } else {
                            if (typeof x === "number") {
                                if (typeof y === "number") {
                                    this.x = x;
                                    this.y = y
                                } else {
                                    this.x = x;
                                    this.y = x
                                }
                            } else {
                                this.x = 0;
                                this.y = 0
                            }
                        }
                    }
                }
                Vector2.prototype.length = function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                }
                ;
                Vector2.prototype.lengthSquared = function() {
                    return this.x * this.x + this.y * this.y
                }
                ;
                Vector2.prototype.angle = function() {
                    return Math.atan2(this.y, this.x)
                }
                ;
                Vector2.prototype.add = function(x, y) {
                    var ret = new Vector2(x,y);
                    ret.x += this.x;
                    ret.y += this.y;
                    return ret
                }
                ;
                Vector2.prototype.subtract = function(x, y) {
                    var ret = new Vector2(x,y);
                    ret.x = this.x - ret.x;
                    ret.y = this.y - ret.y;
                    return ret
                }
                ;
                Vector2.prototype.dot = function(x, y) {
                    var other = new Vector2(x,y);
                    return this.x * other.x + this.y * other.y
                }
                ;
                Vector2.prototype.scale = function(u) {
                    return new Vector2(this.x * u,this.y * u)
                }
                ;
                Vector2.prototype.cross = function() {
                    return new Vector2(this.y,-this.x)
                }
                ;
                Vector2.prototype.distanceTo = function(x, y) {
                    var other = new Vector2(x,y);
                    other.x -= this.x;
                    other.y -= this.y;
                    return other.length()
                }
                ;
                Vector2.prototype.distanceToSquared = function(x, y) {
                    var other = new Vector2(x,y);
                    other.x -= this.x;
                    other.y -= this.y;
                    return other.lengthSquared()
                }
                ;
                Vector2.lerp = function(src, dest, t) {
                    t = Math.min(Math.max(t, 0), 1);
                    var oneminust = 1 - t
                      , s = new Vector2(src)
                      , d = new Vector2(dest);
                    return new Vector2(s.x * oneminust + d.x * t,s.y * oneminust + d.y * t)
                }
                ;
                self.Vector2 = Vector2
            }
            defVector2();
            self.Vector2.define = defVector2
        })();
        (function() {
            var self = giscloud.math;
            function defMatrix2() {
                function Matrix2(a, b, c, d) {
                    if (!this) {
                        throw new Error("[giscloud.math.Matrix2] is a constructor and must be invoked with `new`")
                    }
                    if (typeof a === "number" && typeof b === "number" && typeof c === "number" && typeof d === "number") {
                        this.x = new self.Vector2(a,b);
                        this.y = new self.Vector2(c,d)
                    } else {
                        if (a instanceof self.Vector2 && b instanceof self.Vector2) {
                            this.x = new self.Vector2(a);
                            this.y = new self.Vector2(b)
                        } else {
                            if (Array.isArray(a) && Array.isArray(a[0]) && Array.isArray(a[1])) {
                                this.x = new self.Vector2(a[0][0],a[0][1]);
                                this.x = new self.Vector2(a[1][0],a[1][1])
                            } else {
                                this.x = new self.Vector2(1,0);
                                this.y = new self.Vector2(0,1)
                            }
                        }
                    }
                }
                Matrix2.prototype.transform = function(primitive) {
                    if (primitive instanceof self.Vector2) {
                        return new self.Vector2(this.x.x * primitive.x + this.x.y * primitive.y,this.y.x * primitive.x + this.y.y * primitive.y)
                    } else {
                        if (primitive instanceof giscloud.math.Rect) {
                            var mid = primitive.center()
                              , tr = primitive.min.subtract(mid)
                              , tl = new self.Vector2(primitive.max.x,primitive.min.y).subtract(mid)
                              , bl = primitive.max.subtract(mid)
                              , br = new self.Vector2(primitive.max.x,primitive.max.y).subtract(mid);
                            tr = this.transform(tr).add(mid);
                            tl = this.transform(tl).add(mid);
                            bl = this.transform(bl).add(mid);
                            br = this.transform(br).add(mid);
                            return new giscloud.math.Rect(mid,mid).extend(tr).extend(tl).extend(bl).extend(br)
                        }
                    }
                }
                ;
                Matrix2.prototype.mul = function(mat2) {
                    return new Matrix2(this.x.x * mat2.x.x + this.x.y * vec2.y.x,this.x.x * mat2.x.y + this.x.y * vec2.y.y,this.y.x * mat2.x.x + this.y.y * vec2.y.x,this.y.x * mat2.x.y + this.y.y * vec2.y.y)
                }
                ;
                Matrix2.prototype.scale = function(u, v) {
                    return new Matrix2(this.x.scale(u),this.y.scale(u))
                }
                ;
                Matrix2.prototype.rotate = function(angle) {
                    return this.mul(Matrix2.Rotation(angle))
                }
                ;
                Matrix2.Scale = function(u, v) {
                    return new Matrix2(u,0,0,v)
                }
                ;
                Matrix2.Identity = function() {
                    return new Matrix2()
                }
                ;
                Matrix2.Rotation = function(angle) {
                    var sina = Math.sin(angle)
                      , cosa = Math.cos(angle);
                    return new Matrix2(cosa,-sina,sina,cosa)
                }
                ;
                self.Matrix2 = Matrix2
            }
            defMatrix2();
            self.Matrix2.define = defMatrix2
        })();
        (function() {
            var self = window.giscloud.math;
            function defRect() {
                function Rect(xmin, ymin, xmax, ymax) {
                    if (!this) {
                        throw new Error("[giscloud.math.Rect] is a constructor and must be invoked with `new`")
                    }
                    if (xmin instanceof Rect) {
                        this.min = new self.Vector2(xmin.min);
                        this.max = new self.Vector2(xmin.max)
                    } else {
                        if (Array.isArray(xmin) && Array.isArray(ymin)) {
                            this.min = new self.Vector2(xmin);
                            this.max = new self.Vector2(ymin)
                        } else {
                            if (xmin instanceof self.Vector2 && ymin instanceof self.Vector2) {
                                this.min = new self.Vector2(xmin);
                                this.max = new self.Vector2(ymin)
                            } else {
                                if (typeof xmin === "number" && typeof ymin === "number" && typeof xmax === "number" && typeof ymax === "number") {
                                    this.min = new self.Vector2(xmin,ymin);
                                    this.max = new self.Vector2(xmax,ymax)
                                } else {
                                    this.min = new self.Vector2(0,0);
                                    this.max = new self.Vector2(0,0)
                                }
                            }
                        }
                    }
                }
                Rect.prototype.position = function() {
                    return this.min
                }
                ;
                Rect.prototype.size = function() {
                    return this.max.subtract(this.min)
                }
                ;
                Rect.prototype.left = function() {
                    return this.min.x
                }
                ;
                Rect.prototype.top = function() {
                    return this.min.y
                }
                ;
                Rect.prototype.right = function() {
                    return this.max.x
                }
                ;
                Rect.prototype.bottom = function() {
                    return this.max.y
                }
                ;
                Rect.prototype.area = function() {
                    var size = this.size();
                    return size.x * size.y
                }
                ;
                Rect.prototype.equals = function(rect) {
                    if (!(rect instanceof Rect)) {
                        throw new Error("[giscloud.math.Rect#equals] rect argument must be an instance of giscloud.math.Rect")
                    } else {
                        return ( (this.min.x === rect.min.x) && (this.min.y === rect.min.y) && (this.max.x === rect.max.x) && (this.max.y === rect.max.y)) 
                    }
                    return false
                }
                ;
                Rect.prototype.center = function() {
                    return new self.Vector2(0.5 * (this.min.x + this.max.x),0.5 * (this.min.y + this.max.y))
                }
                ;
                Rect.prototype.translate = function(x, y) {
                    var vec = new self.Vector2(x,y);
                    return new Rect(this.min.add(vec),this.max.add(vec))
                }
                ;
                Rect.prototype.contains = function(object) {
                    if (object instanceof self.Vector2) {
                        return ( (object.x >= this.min.x && object.x <= this.max.x) && (object.y >= this.min.y && object.y <= this.max.y)) 
                    } else {
                        if (object instanceof Rect) {
                            return ( this.contains(object.min) && this.contains(object.max)) 
                        } else {
                            throw new Error("[giscloud.math.Rect#contains] Invalid argument supplied, must be instance of giscloud.math.self.Vector2 or giscloud.math.Rect")
                        }
                    }
                }
                ;
                Rect.prototype.intersects = function(xmin, ymin, xmax, ymax) {
                    var other = new Rect(xmin,ymin,xmax,ymax);
                    return ( !(other.min.x > this.max.x) && !(other.max.x < this.min.x) && !(other.min.y > this.max.y) && !(other.max.y < this.min.y)) 
                }
                ;
                Rect.prototype.intersection = function(xmin, ymin, xmax, ymax) {
                    var other = new Rect(xmin,ymin,xmax,ymax);
                    if (this.intersects(other)) {
                        other.min.x = Math.max(this.min.x, other.min.x);
                        other.min.y = Math.max(this.min.y, other.min.y);
                        other.max.x = Math.min(this.max.x, other.max.x);
                        other.max.y = Math.min(this.max.y, other.max.y);
                        return other
                    } else {
                        return null 
                    }
                }
                ;
                Rect.prototype.extend = function(x, y) {
                    var vec = new self.Vector2(x,y);
                    return new Rect(Math.min(vec.x, this.min.x),Math.min(vec.y, this.min.y),Math.max(vec.x, this.max.x),Math.max(vec.y, this.max.y))
                }
                ;
                Rect.fromArrayPolygon = function(poly) {
                    var min = new self.Vector2(), max = new self.Vector2(), i;
                    for (i = 0; i < poly.length; i += 2) {
                        min.x = Math.min(min.x, poly[0]);
                        min.y = Math.min(min.x, poly[1]);
                        max.x = Math.max(max.x, poly[0]);
                        max.y = Math.max(max.x, poly[1])
                    }
                    return new Rect(min,max)
                }
                ;
                Rect.nearestNonIntersectingOffset = function(s, p) {
                    var intersection, k = 0.5;
                    intersection = intersectBounds(s, p);
                    if (!intersection) {
                        return null 
                    }
                    if ((s.contains(p.min) && !s.contains([p.max.x, p.min.y]) && !s.contains(p.max) && !s.contains([p.min.x, p.max.y])) || (!p.contains(s.min) && !p.contains([s.max.x, s.min.y]) && p.contains(s.max) && !p.contains([s.min.x, s.max.y]))) {
                        offset = intersection.min.subtract(intersection.max).scale(k);
                        if (Math.abs(offset.x) < Math.abs(offset.y)) {
                            offset.y = 0
                        } else {
                            offset.x = 0
                        }
                    } else {
                        if ((!s.contains(p.min) && !s.contains([p.max.x, p.min.y]) && s.contains(p.max) && !s.contains([p.min.x, p.max.y])) || (p.contains(s.min) && !p.contains([s.max.x, s.min.y]) && !p.contains(s.max) && !p.contains([s.min.x, s.max.y]))) {
                            offset = intersection.max.subtract(intersection.min).scale(k);
                            if (Math.abs(offset.x) < Math.abs(offset.y)) {
                                offset.y = 0
                            } else {
                                offset.x = 0
                            }
                        } else {
                            if ((!s.contains(p.min) && s.contains([p.max.x, p.min.y]) && !s.contains(p.max) && !s.contains([p.min.x, p.max.y])) || (!p.contains(s.min) && !p.contains([s.max.x, s.min.y]) && !p.contains(s.max) && p.contains([s.min.x, s.max.y]))) {
                                offset = intersection.max.subtract(intersection.min).scale(k);
                                if (Math.abs(offset.x) < Math.abs(offset.y)) {
                                    offset.y = 0
                                } else {
                                    offset.x = 0
                                }
                            } else {
                                if ((!s.contains(p.min) && !s.contains([p.max.x, p.min.y]) && !s.contains(p.max) && s.contains([p.min.x, p.max.y])) || (!p.contains(s.min) && p.contains([s.max.x, s.min.y]) && !p.contains(s.max) && !p.contains([s.min.x, s.max.y]))) {
                                    offset = intersection.min.subtract(intersection.max).scale(k);
                                    if (Math.abs(offset.x) < Math.abs(offset.y)) {
                                        offset.y = 0
                                    } else {
                                        offset.x = 0
                                    }
                                } else {
                                    if ((s.contains(p.min) && s.contains([p.max.x, p.min.y]) && !s.contains(p.max) && !s.contains([p.min.x, p.max.y])) || (!p.contains(s.min) && !p.contains([s.max.x, s.min.y]) && p.contains(s.max) && p.contains([s.min.x, s.max.y]))) {
                                        offset = new self.Vector2(0,-(intersection.max.y - intersection.min.y) * k)
                                    } else {
                                        if ((!s.contains(p.min) && !s.contains([p.max.x, p.min.y]) && s.contains(p.max) && s.contains([p.min.x, p.max.y])) || (p.contains(s.min) && p.contains([s.max.x, s.min.y]) && !p.contains(s.max) && !p.contains([s.min.x, s.max.y]))) {
                                            offset = new self.Vector2(0,(intersection.max.y - intersection.min.y) * k)
                                        } else {
                                            if ((s.contains(p.min) && !s.contains([p.max.x, p.min.y]) && !s.contains(p.max) && s.contains([p.min.x, p.max.y])) || (!p.contains(s.min) && p.contains([s.max.x, s.min.y]) && p.contains(s.max) && !p.contains([s.min.x, s.max.y]))) {
                                                offset = new self.Vector2(-(intersection.max.x - intersection.min.x) * k,0)
                                            } else {
                                                if ((!s.contains(p.min) && s.contains([p.max.x, p.min.y]) && s.contains(p.max) && !s.contains([p.min.x, p.max.y])) || (p.contains(s.min) && !p.contains([s.max.x, s.min.y]) && !p.contains(s.max) && p.contains([s.min.x, s.max.y]))) {
                                                    offset = new self.Vector2((intersection.max.x - intersection.min.x) * k,0)
                                                } else {
                                                    if (s.contains(p) || p.contains(s)) {
                                                        offset = new self.Vector2(0,(intersection.max.y - intersection.min.y) * k)
                                                    } else {
                                                        offset = new self.Vector2(0,-(intersection.max.y - intersection.min.y) * k)
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return offset
                }
                ;
                var INSIDE = 0
                  , LEFT = 1
                  , RIGHT = 2
                  , BOTTOM = 4
                  , TOP = 8;
                function computeClipPositionCode(vec, rect) {
                    var code = INSIDE;
                    if (vec.x < rect.min.x) {
                        code |= LEFT
                    } else {
                        if (vec.x > rect.max.x) {
                            code |= RIGHT
                        }
                    }
                    if (vec.y > rect.max.y) {
                        code |= BOTTOM
                    } else {
                        if (vec.y < rect.min.y) {
                            code |= TOP
                        }
                    }
                    return code
                }
                Rect.prototype.clipLine = function(src, dest) {
                    var s = new self.Vector2(src), d = new self.Vector2(dest), x, y, endpointOut, scode = computeClipPositionCode(s, this), dcode = computeClipPositionCode(d, this), accept = false;
                    while (true) {
                        if (!(scode | dcode)) {
                            accept = true;
                            break
                        } else {
                            if (scode & dcode) {
                                break
                            } else {
                                endpointOut = scode ? scode : dcode;
                                if (endpointOut & TOP) {
                                    x = s.x + (d.x - s.x) * (this.min.y - s.y) / (d.y - s.y);
                                    y = this.min.y
                                } else {
                                    if (endpointOut & BOTTOM) {
                                        x = s.x + (d.x - s.x) * (this.max.y - s.y) / (d.y - s.y);
                                        y = this.max.y
                                    } else {
                                        if (endpointOut & RIGHT) {
                                            y = s.y + (d.y - s.y) * (this.max.x - s.x) / (d.x - s.x);
                                            x = this.max.x
                                        } else {
                                            if (endpointOut & LEFT) {
                                                y = s.y + (d.y - s.y) * (this.min.x - s.x) / (d.x - s.x);
                                                x = this.min.x
                                            }
                                        }
                                    }
                                }
                                if (endpointOut === scode) {
                                    s.x = x;
                                    s.y = y;
                                    scode = computeClipPositionCode(s, this)
                                } else {
                                    d.x = x;
                                    d.y = y;
                                    dcode = computeClipPositionCode(d, this)
                                }
                            }
                        }
                    }
                    if (accept && s.distanceTo(d) > 0) {
                        return [s, d]
                    }
                    return null 
                }
                ;
                self.Rect = Rect
            }
            defRect();
            self.Rect.define = defRect
        })();
        (function() {
            var self = giscloud.math;
            function defQuadTree() {
                function Node(parent, bounds, maxObjects, maxLevel) {
                    this.bounds = bounds;
                    this.center = this.bounds.center();
                    this.maxObjects = maxObjects;
                    this.children = [];
                    this.objects = [];
                    if (!parent) {
                        this.level = maxLevel
                    } else {
                        this.parent = parent;
                        this.level = parent.level - 1
                    }
                }
                Node.prototype.split = function() {
                    this.children[0] = new Node(this,new self.Rect(this.center.x,this.bounds.min.y,this.bounds.max.x,this.center.y),this.maxObjects);
                    this.children[1] = new Node(this,new self.Rect(this.bounds.min.x,this.bounds.min.y,this.center.x,this.center.y),this.maxObjects);
                    this.children[2] = new Node(this,new self.Rect(this.bounds.min.x,this.center.y,this.center.x,this.bounds.max.y),this.maxObjects);
                    this.children[3] = new Node(this,new self.Rect(this.center.x,this.center.y,this.bounds.max.x,this.bounds.max.y),this.maxObjects)
                }
                ;
                function getNode(node, bounds) {
                    return node.children.reduce(function(memo, node) {
                        if (!memo && node.bounds.contains(bounds)) {
                            return node
                        }
                        return memo
                    }, null )
                }
                Node.prototype.insert = function(object) {
                    var node;
                    if (this.children.length) {
                        node = getNode(this, object.bounds);
                        if (node) {
                            node.insert(object);
                            return
                        }
                    }
                    this.objects.push(object);
                    if (this.objects.length > this.maxObjects && this.level) {
                        if (!this.children.length) {
                            this.split()
                        }
                        this.objects = this.objects.filter(function(object) {
                            node = getNode(this, object.bounds);
                            if (node) {
                                node.insert(object);
                                return false
                            }
                            return true
                        }
                        .bind(this))
                    }
                }
                ;
                Node.prototype.remove = function(comparator) {
                    var i, removed = [];
                    for (i = 0; i < this.children.length; ++i) {
                        removed = this.children[i].remove(comparator)
                    }
                    for (i = 0; i < this.objects.length; ++i) {
                        if (comparator(this.objects[i])) {
                            removed.push(this.objects[i]);
                            this.objects = this.objects.slice(0, i).concat(this.objects.slice(i + 1))
                        }
                    }
                    if (this.children.every(function(child) {
                        return !child.children.length
                    })) {
                        if (this.children.reduce(function(total, child) {
                            return total + child.objects.length
                        }, this.objects.length) <= this.maxObjects) {
                            this.objects = this.objects.concat(this.children.reduce(function(all, child) {
                                return all.concat(child.objects)
                            }, []));
                            this.children = []
                        }
                    }
                    return removed
                }
                ;
                Node.prototype.test = function(bounds) {
                    var node, queryResult;
                    node = getNode(this, bounds);
                    queryResult = this.objects;
                    if (this.children.length) {
                        if (node) {
                            queryResult = queryResult.concat(node.test(bounds))
                        } else {
                            this.children.forEach(function(node) {
                                queryResult = queryResult.concat(node.test(bounds))
                            })
                        }
                    }
                    return queryResult
                }
                ;
                function QuadTree(bounds, maxDepth, maxObjects) {
                    if (!this) {
                        throw new Error("[giscloud.math.QuadTree] is a constructor and must be invoked with `new`")
                    }
                    this.bounds = new self.Rect(bounds);
                    this.maxDepth = maxDepth || 8;
                    this.maxObjects = maxObjects || 8;
                    this.top = new Node(null ,this.bounds,this.maxObjects,this.maxDepth)
                }
                QuadTree.prototype.test = function(bounds) {
                    return this.top.test(bounds)
                }
                ;
                QuadTree.prototype.insert = function(bounds, object) {
                    if (!bounds || !object) {
                        throw new Error("[giscloud.math.QuadTree#insert] must have `bounds` and `object` arguments present")
                    }
                    this.top.insert({
                        obj: object,
                        bounds: bounds
                    })
                }
                ;
                QuadTree.prototype.remove = function(comparator) {
                    this.top.remove(comparator)
                }
                ;
                function walk(node, cb) {
                    var i, ret = [];
                    for (i = 0; i < node.objects.length; ++i) {
                        ret.push(cb(node.objects[i]))
                    }
                    for (i = 0; i < node.children.length; ++i) {
                        Array.prototype.concat.apply(ret, walk(node.children[i], cb))
                    }
                    return ret
                }
                QuadTree.prototype.walk = function(cb) {
                    return walk(this.top, cb)
                }
                ;
                function draw(node, ctx) {
                    var x, y, w, h;
                    ctx.strokeStyle = "rgba(128, 255, 128, 1.0)";
                    node.objects.forEach(function(object) {
                        x = object.bounds.min.x;
                        y = object.bounds.min.y;
                        w = object.bounds.max.x - x;
                        h = object.bounds.max.y - y;
                        ctx.strokeRect(x, y, w, h)
                    });
                    x = node.bounds.min.x;
                    y = node.bounds.min.y;
                    w = node.bounds.max.x - x;
                    h = node.bounds.max.y - y;
                    ctx.strokeStyle = "rgba(0, 0, 0, 0.5)";
                    ctx.strokeRect(x, y, w, h);
                    node.children.forEach(function(node) {
                        draw(node, ctx)
                    })
                }
                QuadTree.prototype.draw = function(ctx) {
                    draw(this.top, ctx)
                }
                ;
                QuadTree.prototype.clear = function() {
                    this.top = new Node(null ,this.bounds,this.maxObjects,this.maxDepth)
                }
                ;
                self.QuadTree = QuadTree
            }
            defQuadTree();
            self.QuadTree.define = defQuadTree
        })();
        (function() {
            var self = giscloud.math;
            function defGrid() {
                function Grid(width, height) {
                    this.width = width;
                    this.height = height;
                    this.grid = new Array(width * height);
                    this.stored = 0
                }
                Grid.prototype.insert = function(position, object) {
                    var pos = new self.Vector2(position), score, replace, replaced;
                    pos.x = Math.floor(pos.x);
                    pos.y = Math.floor(pos.y);
                    if (pos.x % 2) {
                        score = pos.add(0.5, 0.75).distanceToSquared(position)
                    } else {
                        score = pos.add(0.5, 0.25).distanceToSquared(position)
                    }
                    if (pos.x >= this.width || pos.y >= this.height || pos.x < 0 || pos.y < 0) {
                        return null 
                    }
                    pos = (this.width * pos.y) + pos.x;
                    if (!this.grid[pos]) {
                        this.grid[pos] = {
                            score: score,
                            object: object
                        };
                        this.stored++;
                        return null 
                    } else {
                        if ((this.grid[pos].object.score() < object.score()) || ((object.score() === this.grid[pos].object.score()) && (this.grid[pos].score && this.grid[pos].score > score))) {
                            replaced = this.grid[pos];
                            this.grid[pos] = {
                                score: score,
                                object: object
                            };
                            return replaced
                        }
                    }
                    return null 
                }
                ;
                Grid.prototype.walk = function(cb) {
                    var i, object, ret = [];
                    for (i = 0; i < this.grid.length; ++i) {
                        object = this.grid[i];
                        if (object !== undefined) {
                            ret.push(cb(object.object, object.score))
                        }
                    }
                    return ret
                }
                ;
                Grid.prototype.remove = function(condition) {
                    var i, object;
                    for (i = 0; i < this.grid.length; ++i) {
                        object = this.grid[i];
                        if (object !== undefined && condition(object.object)) {
                            this.grid[i] = undefined;
                            this.stored--
                        }
                    }
                }
                ;
                Grid.prototype.clear = function() {
                    this.grid = new Array(this.width * this.height)
                }
                ;
                Grid.prototype.full = function(quota) {
                    return Math.min(Math.max(quota, 0), 1) * this.width * this.height < this.stored
                }
                ;
                self.Grid = Grid
            }
            defGrid();
            self.Grid.define = defGrid
        })();
        (function() {
            function clamp(val, low, high) {
                return Math.min(Math.max(val, low), high)
            }
            function between(val, low, high) {
                return ( (val >= low) && (val <= high)) 
            }
            function isPointInsidePolygon(polygon, point) {
                var nvert = polygon.length / 2, c = false, i, j;
                for (i = 0,
                j = nvert - 1; i < nvert; j = i++) {
                    if (((polygon[i * 2 + 1] >= point.y) !== (polygon[j * 2 + 1] >= point.y)) && (point.x <= (polygon[j * 2] - polygon[i * 2]) * (point.y - polygon[i * 2 + 1]) / (polygon[j * 2 + 1] - polygon[i * 2 + 1]) + polygon[i * 2])) {
                        c = !c
                    }
                }
                return c
            }
            function isProjectedPointInSegment(v1, v2, point) {
                var val, area, e1, e2;
                e1 = [v2[0] - v1[0], v2[1] - v1[1]];
                e2 = [point[0] - v1[0], point[1] - v1[1]];
                area = e1[0] * e1[0] + e1[1] * e1[1];
                val = e1[0] * e2[0] + e1[1] * e2[1];
                return ( val > 0 && val < area) 
            }
            function isPointTouchingPath(path, point, radius) {
                var i, x, y, x1, y1, x2, y2, dx, dy, distance;
                x = point.x;
                y = point.y;
                for (i = 0; i < (path.length >> 1) - 1; i++) {
                    x1 = path[((i + 0) << 1) + 0];
                    y1 = path[((i + 0) << 1) + 1];
                    x2 = path[((i + 1) << 1) + 0];
                    y2 = path[((i + 1) << 1) + 1];
                    if (isProjectedPointInSegment([x1, y1], [x2, y2], [x, y])) {
                        dx = x2 - x1;
                        dy = y2 - y1;
                        distance = Math.abs((dy * x) - (dx * y) + (x2 * y1) - (y2 * x1)) / Math.sqrt(dy * dy + dx * dx);
                        if (distance < radius) {
                            return true
                        }
                    }
                }
                return false
            }
            function _boundedCenterOfGravity(polygon, offset, bounds) {
                var i, A2, areasum2 = 0, n = polygon.length - 2, centerOfGravity = {
                    x: null ,
                    y: null ,
                    area: null 
                }, p1 = {
                    x: clamp(offset.x + polygon[0], bounds.xmin, bounds.xmax),
                    y: clamp(offset.y + polygon[1], bounds.ymin, bounds.ymax)
                }, p2 = {
                    x: null ,
                    y: null 
                }, p3 = {
                    x: null ,
                    y: null 
                };
                for (i = 2; i < n; i += 2) {
                    p2.x = clamp(offset.x + polygon[i], bounds.xmin, bounds.xmax);
                    p2.y = clamp(offset.y + polygon[i + 1], bounds.ymin, bounds.ymax);
                    p3.x = clamp(offset.x + polygon[i + 2], bounds.xmin, bounds.xmax);
                    p3.y = clamp(offset.y + polygon[i + 3], bounds.ymin, bounds.ymax);
                    A2 = (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);
                    centerOfGravity.x += A2 * (p1.x + p2.x + p3.x);
                    centerOfGravity.x += A2 * (p1.y + p2.y + p3.y);
                    areasum2 += A2
                }
                centerOfGravity.area = areasum2;
                return centerOfGravity
            }
            function _unboundedCenterOfGravity(polygon, offset) {
                var i, A2, areasum2 = 0, n = polygon.length - 2, centerOfGravity = {
                    x: null ,
                    y: null ,
                    area: null 
                }, p1 = {
                    x: offset.x + polygon[0],
                    y: offset.y + polygon[1]
                }, p2 = {
                    x: null ,
                    y: null 
                }, p3 = {
                    x: null ,
                    y: null 
                };
                for (i = 2; i < n; i += 2) {
                    p2.x = offset.x + polygon[i];
                    p2.y = offset.y + polygon[i + 1];
                    p3.x = offset.x + polygon[i + 2];
                    p3.y = offset.y + polygon[i + 3];
                    A2 = (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);
                    centerOfGravity.x += A2 * (p1.x + p2.x + p3.x);
                    centerOfGravity.x += A2 * (p1.y + p2.y + p3.y);
                    areasum2 += A2
                }
                centerOfGravity.area = areasum2;
                return centerOfGravity
            }
            function findCenterOfGravity(polygon, offset, bounds) {
                offset = offset || {
                    x: 0,
                    y: 0
                };
                return ( bounds ? _boundedCenterOfGravity(polygon, offset, bounds) : _unboundedCenterOfGravity(polygon, offset)) 
            }
            function findCentroidOfPolygon(polygon, viewBounds) {
                var x = 0, y = 0, area = 0, bounds, points;
                for (i = 0; i < polygon.length; ++i) {
                    bounds = polygon[j].p[0].b;
                    points = polygon[j].p[0];
                    if (!bounds.c || bounds.xmin < viewBounds.xmin || bounds.xmax > viewBounds.xmax || bounds.ymin < viewBounds.ymin || bounds.ymax > viewBounds.ymax) {
                        bounds.c = findCG(points.p, points.cx, points.cy, viewBounds)
                    }
                    x += bounds.c[0];
                    y += bounds.c[1];
                    area += b.c[2]
                }
                x /= 3 * area;
                y /= 3 * area;
                return {
                    x: x,
                    y: y
                }
            }
            giscloud.math.util = {
                clamp: clamp,
                between: between,
                isPointInsidePolygon: isPointInsidePolygon,
                isPointTouchingPath: isPointTouchingPath,
                findCentroidOfPolygon: findCentroidOfPolygon,
                findCenterOfGravity: findCenterOfGravity
            }
        })()
    })();
    (function() {
        if (!window.giscloud) {
            window.giscloud = {
                util: {}
            }
        } else {
            if (!window.giscloud.util) {
                window.giscloud.util = {}
            }
        }
        (function() {
            var storageFallback = {}
              , expiryKeys = [];
            function store(key, data, expireIn) {
                if (expireIn) {
                    expiryKeys.push({
                        timeRemaining: expireIn,
                        key: key
                    })
                }
                window.localStorage.setItem(key, JSON.stringify(data))
            }
            function fetch(key, defaultValue) {
                var ret;
                ret = window.localStorage.getItem(key);
                if (ret === undefined) {
                    return defaultValue
                }
                return JSON.parse(ret)
            }
            function clear(key) {
                expiryKeys.filter(function(expiryKey) {
                    return expiryKey.key !== key
                });
                window.localStorage.removeItem(key)
            }
            function drop() {
                expiryKeys = [];
                window.localStorage.clear()
            }
            function storeFallback(key, data, expireIn) {
                if (expireIn) {
                    expiryKeys.push({
                        timeRemaining: expireIn,
                        key: key
                    })
                }
                storageFallback[key] = data
            }
            function fetchFallback(key, defaultValue) {
                var ret;
                ret = storageFallback[key];
                if (ret === undefined) {
                    return defaultValue
                }
                return ret
            }
            function clearFallback(key) {
                expiryKeys.filter(function(expiryKey) {
                    return expiryKey.key !== key
                });
                if (storageFallback[key]) {
                    delete storageFallback[key]
                }
            }
            function dropFallback() {
                expiryKeys = [];
                storageFallback = {}
            }
            window.giscloud.util.storage = {};
            if (window.localStorage) {
                window.giscloud.util.storage.store = store;
                window.giscloud.util.storage.fetch = fetch;
                window.giscloud.util.storage.clear = clear;
                window.giscloud.util.storage.drop = drop
            } else {
                window.giscloud.util.storage.store = storeFallback;
                window.giscloud.util.storage.fetch = fetchFallback;
                window.giscloud.util.storage.clear = clearFallback;
                window.giscloud.util.storage.drop = dropFallback
            }
            window.setInterval(function() {
                var i;
                for (i = 0; i < expiryKeys.length; ++i) {
                    expiryKeys[i].timeRemaining--;
                    if (expiryKeys[i].timeRemaining < 0) {
                        window.giscloud.util.storage.clear(expiryKeys[i].key)
                    }
                }
                expiryKeys = expiryKeys.filter(function(expiryKey) {
                    return !(expiryKey.timeRemaining < 0)
                })
            }, 1000)
        })();
        (function() {
            var self = window.giscloud.util;
            function defEncode() {
                function marshalToString(obj) {
                    if (typeof obj === "function" || typeof obj === "boolean" || typeof obj === "number") {
                        return obj.toString()
                    }
                    if (typeof obj === "string") {
                        return '"' + obj + '"'
                    }
                    if (obj instanceof Date) {
                        return '"' + obj.toISOString() + '"'
                    }
                    if (Array.isArray(obj)) {
                        return "[" + obj.map(function(elem) {
                            return marshalToString(elem)
                        }).join(",") + "]"
                    }
                    return "{" + Object.keys(obj).map(function(key) {
                        return obj.hasOwnProperty(key) ? key + ":" + marshalToString(obj[key]) : ""
                    }) + "}"
                }
                self.encode = {
                    string: {
                        marshal: marshalToString
                    }
                }
            }
            defEncode();
            self.encode.define = defEncode
        })();
        (function(options) {
            var subscriptions = {};
            function makeChannel(channel, hasHistory) {
                if (typeof channel !== "string") {
                    throw new TypeError("[giscloud.util.mediator.makeChannel] `channel` argument must be of type `string`")
                }
                if (hasHistory !== undefined) {
                    if (typeof hasHistory !== "boolean") {
                        throw new TypeError("[giscloud.util.mediator.makeChannel] `hasHistory` argument must be of type `boolean` if present")
                    }
                }
                if (!subscriptions[channel]) {
                    subscriptions[channel] = [];
                    if (hasHistory) {
                        subscriptions[channel].hasHistory = hasHistory;
                        subscriptions[channel].history = []
                    }
                } else {
                    console.warn("[gislcoud.mediator.makeChannel] chanel with name '" + channel + "' already exists")
                }
            }
            function deleteChannel(channel) {
                if (typeof channel !== "string") {
                    throw new TypeError("[giscloud.util.mediator.deleteChannel] `channel` argument must be of type `string`")
                }
                var chan = subscriptions[channel], i;
                if (chan) {
                    if (chan.hasHistory) {
                        for (i = 0; i < chan.length; ++i) {
                            delete chan[i].lastMessageIndex
                        }
                    }
                    delete subscriptions[channel]
                }
            }
            function subscribe(channel, handler) {
                if (typeof channel !== "string") {
                    throw new TypeError("[giscloud.util.mediator.subscribe] `channel` argument must be of type `string`")
                }
                if (typeof handler !== "function") {
                    throw new TypeError("[giscloud.util.mediator.subscribe] `handler` argument must be of type `function`")
                }
                var chan = subscriptions[channel], i;
                if (!chan) {
                    subscriptions[channel] = [handler]
                } else {
                    for (i = 0; i < chan.length; ++i) {
                        if (chan[i] === handler) {
                            console.warn("[giscloud.util.mediator.subscribe] trying to subscribe to a channel '" + channel + "' with a handler that is already registered");
                            return
                        }
                    }
                    chan.push(handler);
                    if (chan.hasHistory) {
                        if (!handler.lastMessageIndex) {
                            handler.lastMessageIndex = 0
                        }
                        for (i = handler.lastMessageIndex; i < chan.history.length; ++i) {
                            handler.apply(null , chan.history[i]);
                            ++handler.lastMessageIndex
                        }
                    }
                }
            }
            function publish(channel) {
                if (typeof channel !== "string") {
                    throw new TypeError("[giscloud.util.mediator.publish] `channel` argument must be of type `string`")
                }
                var chan = subscriptions[channel], len = arguments.length, args = new Array(len), i;
                if (chan) {
                    if (options.debug) {
                        console.debug("[giscloud.util.mediator.publish] publishing to channel '" + channel + "'")
                    }
                    for (i = 1; i < len; ++i) {
                        args[i - 1] = arguments[i]
                    }
                    if (chan.hasHistory) {
                        chan.history.push(args)
                    }
                    for (i = 0; i < chan.length; ++i) {
                        chan[i].apply(null , args);
                        if (chan.hasHistory) {
                            ++chan[i].lastMessageIndex
                        }
                    }
                } else {
                    if (options.debug) {
                        console.debug("[giscloud.util.mediator.publish] publishing to channel '" + channel + "' with no handlers")
                    }
                }
            }
            function unsubscribe(channel, handler) {
                if (typeof channel !== "string") {
                    throw new TypeError("[giscloud.util.mediator.subscribe] `channel` argument must be of type `string`")
                }
                if (typeof handler !== "function") {
                    throw new TypeError("[giscloud.util.mediator.subscribe] `handler` argument must be of type `function`")
                }
                var i, chan;
                chan = subscriptions[channel];
                if (chan) {
                    for (i = 0; i < chan.length; ++i) {
                        if (chan[i] === handler) {
                            chan.splice(i, 1);
                            break
                        }
                    }
                }
                if (!chan.length) {
                    deleteChannel(channel)
                }
            }
            window.giscloud.util.mediator = {};
            window.giscloud.util.mediator.makeChannel = makeChannel;
            window.giscloud.util.mediator.deleteChannel = deleteChannel;
            window.giscloud.util.mediator.publish = publish;
            window.giscloud.util.mediator.subscribe = subscribe;
            window.giscloud.util.mediator.unsubscribe = unsubscribe
        })({
            debug: false
        });
        (function() {
            var $ = window.giscloud.exposeJQuery(), main;
            function mainFunction() {
                self.onmessage = function(data) {
                    self.postMessage(self.op(data.data))
                }
            }
            main = mainFunction.toString();
            function Job(data) {
                this.data = data;
                this.globals = [];
                this.scope = {}
            }
            Job.prototype.run = function(op) {
                var requires, blob, blobURL, deferred = new $.Deferred();
                requires = ["(" + main + ")();\n\n", "op = " + op.toString() + ";\n\n"].concat(this.globals.map(function(glob) {
                    return glob + ";\n\n"
                }
                .bind(this)), Object.keys(this.scope).map(function(key) {
                    return key + " = " + this.scope[key] + ";\n\n"
                }
                .bind(this)));
                blob = new window.Blob(requires);
                blobURL = window.URL.createObjectURL(blob);
                this.job = new window.Worker(blobURL);
                window.URL.revokeObjectURL(blobURL);
                this.job.onmessage = function(data) {
                    this.terminate();
                    deferred.resolve(data.data)
                }
                ;
                this.job.onerror = function(data) {
                    deferred.reject(data.data);
                    this.terminate()
                }
                ;
                this.job.postMessage(this.data);
                this.deferred = deferred;
                return this.deferred.promise()
            }
            ;
            Job.prototype.terminate = function() {
                this.job.terminate();
                this.deferred.reject("Job terminated")
            }
            ;
            Job.prototype.require = function(env, shouldExecute) {
                var fn, fname, nscope;
                if (typeof env === "function") {
                    fn = env.toString();
                    fname = fn.match("");
                    if (!fname || shouldExecute) {
                        this.globals.push("(" + fn + ")()")
                    } else {
                        this.globals.push(fn)
                    }
                } else {
                    Object.keys(env).forEach(function(key) {
                        if (this.scope[key]) {
                            throw new Error("[giscloud.util.ThreadPool#require] Scope value `" + key + "` already defined")
                        } else {
                            this.scope[key] = window.giscloud.util.encode.string.marshal(env[key])
                        }
                    }
                    .bind(this))
                }
                return this
            }
            ;
            window.giscloud.util.Job = Job
        })();
        (function() {
            var id = 0, $ = window.giscloud.exposeJQuery(), main, self = window.giscloud.util;
            function threadMain() {
                self.onerror = function(error) {
                    self.postMessage({
                        status: "ERROR",
                        message: "Ane error occured",
                        error: error.toString()
                    })
                }
                ;
                self.onmessage = function(message) {
                    var data = message.data.data, op, result;
                    try {
                        op = self.eval("op = " + message.data.op)
                    } catch (e) {
                        op = null ;
                        self.postMessage({
                            status: "ERROR",
                            message: "Unable to deserialize operation function",
                            error: e.toString()
                        });
                        return
                    }
                    try {
                        data = op(data)
                    } catch (e) {
                        data = null ;
                        self.postMessage({
                            status: "ERROR",
                            message: "Error while processing data",
                            error: e.toString()
                        });
                        return
                    }
                    result = {
                        status: "OK",
                        data: data
                    };
                    self.postMessage(result)
                }
            }
            main = threadMain.toString();
            function ThreadPool(size) {
                if (!this) {
                    throw new Error("[giscloud.util.ThreadPool] is a constructor and must be invoked with `new`")
                }
                this.size = size || 8;
                this.scope = {};
                this.globals = [];
                this.usedPool = [];
                this.freePool = [];
                this.queue = []
            }
            ThreadPool.prototype.require = function(env, shouldExecute) {
                var fn, fname, nscope;
                if (typeof env === "function") {
                    fn = env.toString();
                    fname = fn.match("");
                    if (!fname || shouldExecute) {
                        this.globals.push("(" + fn + ")()")
                    } else {
                        this.globals.push(fn)
                    }
                } else {
                    Object.keys(env).forEach(function(key) {
                        if (this.scope[key]) {
                            throw new Error("[giscloud.util.ThreadPool#require] Scope value `" + key + "` already defined")
                        } else {
                            this.scope[key] = self.encode.string.marshal(env[key])
                        }
                    }
                    .bind(this))
                }
                return this
            }
            ;
            function enqueue(op) {
                var thread, message;
                thread = this.freePool.pop();
                thread.onmessage = function(msg) {
                    thread.onmessage = undefined;
                    this.usedPool = this.usedPool.filter(function(t) {
                        return t.id !== thread.id
                    });
                    this.freePool.push(thread);
                    if (msg.data.status === "ERROR") {
                        op.deferred.reject({
                            message: msg.data.message,
                            error: msg.data.error
                        })
                    } else {
                        op.deferred.resolve(msg.data.data)
                    }
                    if (this.queue.length) {
                        enqueue.call(this, this.queue.pop())
                    }
                }
                .bind(this);
                this.usedPool.push(thread);
                message = {
                    data: op.data,
                    op: op.op
                };
                thread.postMessage(message)
            }
            ThreadPool.prototype.enqueue = function(data, op) {
                var deferred = new $.Deferred()
                  , operation = {
                    data: data,
                    op: op.toString(),
                    deferred: deferred
                };
                this.queue.push(operation);
                while (this.freePool.length && this.queue.length) {
                    operation = this.queue.pop();
                    enqueue.call(this, operation)
                }
                return deferred.promise()
            }
            ;
            ThreadPool.prototype.terminate = function() {
                this.usedPool.forEach(function(t) {
                    t.terminate()
                });
                this.freePool.forEach(function(t) {
                    t.terminate()
                });
                this.usedPool = [];
                this.freePool = []
            }
            ;
            ThreadPool.prototype.start = function() {
                var i, blob, url, requires, thread;
                requires = ["(" + main + ")();\n\n"].concat(this.globals.map(function(glob) {
                    return glob + ";\n\n"
                }
                .bind(this)), Object.keys(this.scope).map(function(key) {
                    return key + " = " + this.scope[key] + ";\n\n"
                }
                .bind(this)));
                blob = new window.Blob(requires);
                url = window.URL.createObjectURL(blob);
                for (i = 0; i < this.size; ++i) {
                    thread = new window.Worker(url);
                    thread.id = id++;
                    this.freePool.push(thread)
                }
                while (this.freePool.length && this.queue.length) {
                    enqueue.call(this, this.queue.pop())
                }
                window.URL.revokeObjectURL(url)
            }
            ;
            window.giscloud.util.ThreadPool = ThreadPool
        })()
    })();
    function _init(o, that) {
        if (o.map) {
            that.gmap = 1;
            that.tileSize = new google.maps.Size(256,256)
        }
        that.modifier = {};
        that.hoverStyle = {
            fill: "rgba(255,0,0,0.8)",
            stroke: "rgba(255,0,0,0.8)"
        };
        that.mid = o.mid;
        that.timestamp = o.timestamp;
        that.lid = o.id;
        that.lid_map = {};
        that.lid_map[o.id] = 1;
        that.lmap = o.lmap;
        fields = "";
        that.map = o.map;
        if (o.tooltip) {
            that.tooltip = document.createElement("div");
            that.tooltip.style.position = "absolute";
            that.tooltip.style.top = "-5px";
            that.tooltip.style.left = "-5px";
            that.tooltip.className = "gc-map-tooltip";
            that.tooltip.style.padding = "1px";
            that.tooltip.style.border = "1px solid #CCC";
            that.tooltip.style.backgroundColor = "#FAF3A9";
            that.tooltip.style.zIndex = 1000;
            document.body.appendChild(that.tooltip);
            giscloud.Html5MapTooltip = that.tooltip
        }
        _selectablePoly = 0;
        $(document).mousedown(function(evt) {
            isMouseDown = true
        });
        $(document).mouseup(function(evt) {
            isMouseDown = false
        });
        if (!o.modified) {
            ajaxLoader(getTimestamp, common.liveSite() + "rest/1/maps/" + mid + "/get_modified_timestamp.json?" + Math.random(), that)
        } else {
            getTimestamp(that, o)
        }
    }
    function checkForEvent(evt, force, delta) {
        if (!force && isMouseDown) {
            return
        }
        var c = evt.currentTile;
        if (!c.data) {
            return
        }
        var x, y;
        if (evt.offsetX >= 0) {
            x = evt.offsetX;
            y = evt.offsetY
        } else {
            x = evt.layerX;
            y = evt.layerY
        }
        x += c._offset[c.layer];
        y += c._offset[c.layer];
        return handleEvent(c, x, y, evt, delta)
    }
    var hoverModifier = {};
    function handleEvent(c, x, y, evt, delta) {
        if (!selectionEnabled || c.data_type[c.layer] == "text") {
            return false
        }
        var cc = c;
        var d = 0;
        if (c.data) {
            d = c.data[c.layer]
        }
        if (!d) {
            return false
        }
        var r = 4;
        if (!delta) {
            delta = 0
        }
        if (c.data_type[c.layer] == "point") {
            r = delta
        }
        var xr = x + r;
        var xl = x - r;
        var yt = y - r;
        var yb = y + r;
        var minpoint_dist = 100000;
        var last_point_index = -1;
        var candidate = -1;
        var candidate_feature_id = null ;
        var feature_id;
        var i;
        var shouldRedraw = false;
        var shouldHighlight = !c.obj.parent.viewer.isUsingMapEngineGroupedLayers;
        for (i = d.length - 1; i >= 0; i--) {
            if (d[i].visible && xr >= d[i].b.xmin && xl <= d[i].b.xmax && yb >= d[i].b.ymin && yt <= d[i].b.ymax && (d[i].ispoint || (d[i].ispoly && !d[i].ispoint && window.giscloud.math.util.isPointInsidePolygon(d[i].p, {
                x: x,
                y: y
            })) || (!d[i].ispoly && !d[i].ispoint && window.giscloud.math.util.isPointTouchingPath(d[i].p, {
                x: x,
                y: y
            }, r)))) {
                if (d[i].ispoint) {
                    var dist = pointDistance(d[i].x, d[i].y, x, y);
                    if (dist < minpoint_dist) {
                        candidate = i;
                        minpoint_dist = dist
                    }
                } else {
                    feature_id = d[i].c;
                    if (d[i].curs && d[i].curs.type === "line") {
                        if (candidate_feature_id) {
                            break
                        }
                    } else {
                        if (feature_id == candidate_feature_id) {
                            candidate = -1;
                            candidate_feature_id = null ;
                            continue
                        } else {
                            if (candidate_feature_id) {
                                break
                            }
                        }
                    }
                    candidate = i;
                    candidate_feature_id = feature_id
                }
            }
        }
        if (candidate >= 0) {
            var elem = null ;
            var firstElem = candidate;
            elem = d[candidate];
            var selected = d[firstElem];
            if (flashnavigator.hasCanvas) {
                if (hoverModifier.isset) {
                    if (c.obj._hoveredElement === selected.c && c.layer === hoverModifier.layer) {
                        if (c.fields && c.fields[elem.c]) {
                            elem.attributes = c.fields[elem.c]
                        }
                        return elem
                    }
                    if (shouldHighlight) {
                        shouldRedraw = clearHover() || shouldRedraw
                    }
                }
                if (!c.obj.modifier[selected.c]) {
                    var style_index = 0;
                    if (selected.ispoint) {
                        style_index = selected.i
                    } else {
                        style_index = selected.s
                    }
                    c.styles = c.styles_data[c.layer];
                    if (shouldHighlight) {
                        hoverModifier.isset = true;
                        hoverModifier.color = c.styles[style_index].highlightcolor;
                        hoverModifier.hover = true;
                        hoverModifier.orig = c.obj.modifier[selected.c];
                        hoverModifier.orig_obj = c.obj;
                        hoverModifier.orig_key = selected.c;
                        hoverModifier.layer = c.layer;
                        hoverModifier.layerObj = c.curLayerObj;
                        c.obj.modifier[selected.c] = hoverModifier;
                        c.obj._hoveredElement = selected.c;
                        shouldRedraw = drawAcrossTiles(c.obj, true) || shouldRedraw
                    }
                } else {
                    c.obj._hoverModifier = null 
                }
            }
            if (c.fields && c.fields[elem.c]) {
                elem.attributes = c.fields[elem.c]
            }
            if (shouldRedraw) {
                c.obj.redraw()
            }
            return elem
        }
        if (flashnavigator.hasCanvas && hoverModifier.isset && c.layer === hoverModifier.layer) {
            shouldRedraw = clearHover() || shouldRedraw
        }
        if (shouldRedraw) {
            c.obj.redraw()
        }
        return false
    }
    function setupTile(el, data) {
        if (!el.dyndata) {
            return
        }
        el.styles = el.curLayerObj.features;
        var g = data.geom;
        var c = 0;
        var s;
        var sindex;
        var l = null ;
        var slen = 0;
        if (data.tile) {
            l = data.tile.l;
            slen = l.length - 1
        }
        var style = 0;
        var id;
        for (var i = 0, len = g.length; i < len; i++) {
            var c = g[i].c.split("_")[1];
            if (el.dyndata[c]) {
                g[i].dyn = el.dyndata[c]
            }
        }
        for (var i = 0; i < slen; i += 5) {
            if (l[i] < 0) {
                id = -l[i];
                style = l[i + 1];
                i++
            } else {
                id = l[i]
            }
            var x = l[i + 1];
            var y = l[i + 2];
            var dx = l[i + 3];
            var dy = l[i + 4];
            var o = {
                p: [x, y, x + dx, y + dy],
                id: id,
                s: style,
                c: el.curLayerObj.id + "_" + id,
                px: true
            };
            if (el.dyndata[o.id] >= 0) {
                o.dyn = el.dyndata[o.id]
            }
            g.push(o)
        }
        data.geom.sort(function(a, b) {
            return b.dyn - a.dyn
        });
        el.pixels2 = null ;
        if (data.tile) {
            data.tile.pixels = null 
        }
    }
    function drawTile(el, data, layer, dontRender, offset) {
        el.curLayerObj = layer;
        el.layer = el.layer || el.obj.parent.id;
        el.data = el.data || {};
        el.data_type = el.data_type || {};
        el._offset = el._offset || {};
        el._canvas_offset = el._canvas_offset || 0;
        el.featureCount = 0;
        el.featureIds = [];
        if (offset) {
            expandCanvas(el, offset)
        }
        if (loader_id === el._loader_id) {
            el._offset[el.layer] = 0;
            if (flashnavigator.hasCanvas) {
                ctx = el.getContext("2d");
                if (el._drawn && !dontRender) {
                    ctx.clearRect(0, 0, el.width, el.height)
                }
            }
            el._drawn = true;
            if (el.curLayerObj.options.dynamic && data[1]) {
                el.dyndata = data[1];
                data = data[0]
            }
            if (flashnavigator.newLabelingMode) {
                giscloud.util.mediator.publish("tile/loaded", el, data, layer, renderLabelTile)
            }
            if (layer.layer_info.hiddenGeometry) {
                return
            }
            if (data.tile) {
                if (data.tile.type == "text") {
                    el.data[el.layer] = data.tile.data;
                    el.fields = data.fields;
                    drawText(el, dontRender);
                    data.geom = null 
                }
                if (data.tile.type == "point") {
                    el.data[el.layer] = data.tile.data;
                    el.fields = data.fields;
                    parsePoint(el, data);
                    el.styles = data.styles;
                    initStyles(el);
                    drawPoint(el);
                    data.geom = null 
                }
            }
            if (data.geom) {
                setupTile(el, data);
                el.styles = data.styles;
                initStyles(el);
                if (!flashnavigator.hasCanvas) {
                    el.img = L.DomUtil.create("img", "", el);
                    el.img_url = el.obj.url + el.zoom + "/" + el.coord.x + "/" + el.coord.y + ".png";
                    el.img.src = el.img_url
                }
                drawGeom(el, data, dontRender)
            }
        }
        data.tile = null ;
        data.fields = null ;
        data = null 
    }
    function setupPaperOverlay(el) {
        el.overlay = L.DomUtil.create("div", "", el);
        el.overlay.style.position = "absolute";
        el.overlay.style.top = "0px";
        el.overlay.style.left = "0px";
        el.overlay.style.width = el.width;
        el.overlay.style.height = el.height
    }
    function newCanvas(oldCanvas) {
        var newCanvas = document.createElement("canvas");
        newCanvas.width = oldCanvas.width;
        newCanvas.height = oldCanvas.height;
        return newCanvas
    }
    var offscreenCanvases = [];
    function cleanupOffscreenCanvases(activeLayerId) {
        var i, len = offscreenCanvases.length;
        for (i = 0; i < len; i++) {
            if (offscreenCanvases[i].activeLayerId != activeLayerId) {
                offscreenCanvases[i].o.canvasCachePre = null ;
                offscreenCanvases[i].o.canvasCachePost = null ;
                removeDOM(offscreenCanvases[i]);
                offscreenCanvases.splice(i, 1);
                i--;
                len--
            }
        }
    }
    function newOffscreenCanvas(oldCanvas, canvas) {
        var ctx, len, i;
        if (canvas) {
            ctx = canvas.getContext("2d");
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            return canvas
        }
        canvas = newCanvas(oldCanvas);
        canvas.o = oldCanvas;
        canvas.activeLayerId = oldCanvas.activeLayerId;
        offscreenCanvases.push(canvas);
        return canvas
    }
    function redrawSingleTile(that, tile, currentFilterAttributes) {
        var ctx, layer, layerObj;
        if (currentFilterAttributes !== null ) {
            if (currentFilterAttributes != tile.feature_filter_attributes) {
                that._loadTile(tile, tile.coord, tile.zoom, that);
                return true
            }
        }
        layer = tile.layer;
        layerObj = tile.curLayerObj;
        if (tile.getContext) {
            ctx = tile.getContext("2d");
            ctx.clearRect(0, 0, tile.width, tile.height)
        }
        if (that.parent.group) {
            if (!tile.obj.activeLayer || tile.activeLayerId != tile.obj.activeLayer.uniqueId || !tile.canvasCachePre || !tile.canvasCachePost) {
                if (tile.obj.activeLayer) {
                    tile.activeLayerId = tile.obj.activeLayer.uniqueId
                } else {
                    tile.activeLayerId = null 
                }
                that.parent.group.forEach(function(group) {
                    if (group.visible) {
                        tile.layer = group.id;
                        tile.curLayerObj = group;
                        redrawTile(tile)
                    }
                })
            }
        } else {
            redrawTile(tile)
        }
        tile.layer = layer;
        tile.curLayerObj = layerObj;
        return false
    }
    function redraw(that, currentFilterAttributes) {
        var shouldSendReq = false, canvas, canvases, canvasKeys;
        canvases = that.getCanvases();
        canvasKeys = Object.keys(canvases);
        canvasKeys.forEach(function(canvasKey) {
            canvas = canvases[canvasKey];
            shouldSendReq = redrawSingleTile(that, canvas, currentFilterAttributes) || shouldSendReq
        });
        if (that.parent.group) {
            var activeLayerId = that.parent.gcmap.activeLayer ? that.parent.gcmap.activeLayer.uniqueId : null ;
            cleanupOffscreenCanvases(activeLayerId)
        }
        if (shouldSendReq) {
            giscloud.Html5SendRequests()
        }
    }
    function redrawTile(o) {
        if (!o._drawn || !o.data || !o.data_type[o.layer]) {
            return
        }
        if (o.data_type[o.layer] == "text") {
            drawText(o)
        } else {
            if (o.data_type[o.layer] == "point") {
                if (!o.obj.parent.group) {
                    w = o.width;
                    o.width = 1;
                    o.width = w
                }
                o._original = null ;
                drawPoint(o)
            } else {
                drawGeomInternal(o)
            }
        }
    }
    function drawAcrossTiles(that, toClear) {
        if (that.parent.group) {
            that.activeLayer = hoverModifier.isset ? hoverModifier.layerObj : null ;
            return true
        }
        var i;
        var c = that.getCanvases();
        for (i in c) {
            toClear && clearTile(c[i]);
            drawTileUsingModifier(c[i], that)
        }
        return false
    }
    function clearTile(tile) {
        if (tile._modified && tile._original) {
            ctx = tile.getContext("2d");
            rectCrop(tile._invalidateRect, 0, ctx.canvas.width);
            var w = tile._invalidateRect.xmax - tile._invalidateRect.xmin;
            var h = tile._invalidateRect.ymax - tile._invalidateRect.ymin;
            if (w > 0 && h > 0) {
                var offset = tile._canvas_offset - tile._offset[tile.layer];
                ctx.clearRect(offset + tile._invalidateRect.xmin, offset + tile._invalidateRect.ymin, w, h);
                ctx.drawImage(tile._original, offset + tile._invalidateRect.xmin, offset + tile._invalidateRect.ymin, w, h, offset + tile._invalidateRect.xmin, offset + tile._invalidateRect.ymin, w, h)
            }
            tile._invalidateRect = null ;
            tile._modified = false
        }
        if (tile._modified && tile.img && tile.data_type[tile.layer] != "point") {
            if (tile.img.src != tile.img_url) {
                tile.img.src = tile.img_url
            }
            tile._invalidateRect = null ;
            tile._modified = false
        }
    }
    function drawTileUsingModifier(tile, that) {
        if (!tile.lista) {
            return
        }
        if (!tile.getContext) {
            return drawTileUsingModifierNonCanvas(tile, that)
        }
        var ctx, id, j, lst, use_custom_renderer, layer, last_drawn_id;
        tile._path = null ;
        ctx = null ;
        use_custom_renderer = giscloud.mapFeatureRenderer != null ;
        var lista = tile.lista[tile.layer];
        for (id in that.modifier) {
            if (!that.modifier[id] || !lista || !lista[id] || lista[id].length == 0) {
                continue
            }
            lst = lista[id];
            layer = id.split("_")[0];
            if (!tile.data[layer]) {
                continue
            }
            tile.styles = tile.styles_data[layer];
            if (!tile._original) {
                tile._original = document.createElement("canvas");
                tile._original.width = tile.width;
                tile._original.height = tile.height;
                tile._original.getContext("2d").drawImage(tile, 0, 0)
            }
            if (!ctx) {
                ctx = tile.forceCtx || tile.getContext("2d");
                if (tile._canvas_offset && tile.obj.parent.group) {
                    ctx.beginPath();
                    ctx.rect(tile._canvas_offset, tile._canvas_offset, 256, 256);
                    ctx.clip()
                }
            }
            last_drawn_id = null ;
            for (j in lst) {
                var d = tile.data[layer][lst[j]];
                if (!d || !d.b) {
                    continue
                }
                tile._modified = true;
                var offset = 0;
                if (d.ispoint) {
                    drawImage(tile, that, ctx, d, null , that.modifier[id])
                } else {
                    if (last_drawn_id != d.c) {
                        finishPoly(tile, ctx);
                        last_drawn_id = d.c
                    }
                    var s = overrideStyle(tile.styles[d.s], that.modifier[id]);
                    offset = 0;
                    if (use_custom_renderer && giscloud.mapFeatureRendererHighlight) {
                        var w = {};
                        for (var k in s) {
                            w[k] = s[k]
                        }
                        s = w;
                        giscloud.mapFeatureRendererHighlight(d, s)
                    }
                    s.linewidth && (offset = s.linewidth);
                    s.width && (offset += s.width);
                    drawCanvasPolygon(tile, ctx, d.p, s, d.s, id, null , 1, use_custom_renderer)
                }
                if (!tile._invalidateRect) {
                    tile._invalidateRect = {};
                    rectAssign(tile._invalidateRect, d.b, offset)
                } else {
                    rectUnion(tile._invalidateRect, d.b, offset)
                }
            }
        }
        if (ctx) {
            finishPoly(tile, ctx)
        }
    }
    function clearHover() {
        var o_obj = hoverModifier.orig_obj;
        var shouldRedraw = false;
        if (o_obj.modifier[hoverModifier.orig_key] && o_obj.modifier[hoverModifier.orig_key].hover) {
            if (hoverModifier.orig) {
                o_obj.modifier[hoverModifier.orig_key] = hoverModifier.orig
            } else {
                o_obj.modifier[hoverModifier.orig_key] = null 
            }
            shouldRedraw = drawAcrossTiles(o_obj, true)
        }
        hoverModifier.isset = false;
        return shouldRedraw
    }
    function drawTileUsingModifierNonCanvas(tile, that) {
        var use_custom_renderer = giscloud.mapFeatureRenderer != null ;
        var mod_ids_used = {};
        var mod_ids_grouped = {};
        var override_style = "";
        var lista = tile.lista[tile.layer];
        for (id in that.modifier) {
            if (!that.modifier[id] || !lista || !lista[id] || lista[id].length == 0) {
                continue
            }
            lst = lista[id];
            for (j in lst) {
                var d = tile.data[tile.layer][lst[j]];
                if (!d || !d.b) {
                    continue
                }
                tile._modified = true;
                var offset = 0;
                if (d.ispoint) {
                    drawImageAsDOM(tile, d, null , that.modifier[id])
                } else {
                    var s = overrideStyle(tile.styles[d.s], that.modifier[id]);
                    offset = 0;
                    if (use_custom_renderer && giscloud.mapFeatureRendererHighlight) {
                        var w = {};
                        for (var k in s) {
                            w[k] = s[k]
                        }
                        s = w;
                        giscloud.mapFeatureRendererHighlight(d, s)
                    }
                    s.linewidth && (offset = s.linewidth);
                    s.width && (offset += s.width);
                    var i = id.split("_")[1];
                    if (!mod_ids_used[i]) {
                        mod_ids_used[i] = 1;
                        override_style = "000000,0,";
                        if (s.strokecolor) {
                            override_style += s.strokecolor.substr(1) + "," + s.linewidth + ","
                        } else {
                            override_style += "000000,0,"
                        }
                        if (s.fillcolor) {
                            override_style += s.fillcolor.substr(1)
                        } else {
                            override_style += "000000"
                        }
                        if (!mod_ids_grouped[override_style]) {
                            mod_ids_grouped[override_style] = []
                        }
                        mod_ids_grouped[override_style].push(i)
                    }
                }
            }
        }
        var s = "";
        for (var i in mod_ids_grouped) {
            s += i + "," + mod_ids_grouped[i].join(",") + ";"
        }
        if (s) {
            tile.img.src = tile.img_url + "?override_style=" + s
        }
    }
    function setupFiltersObject(el, d) {
        if (el.feature_filter_attributes_array) {
            var i, feature_filter_attributes_array = el.feature_filter_attributes_array;
            if (!d.data) {
                d.data = {}
            }
            for (i = 0; i < feature_filter_attributes_array.length; i++) {
                if (d.data[feature_filter_attributes_array[i]] === undefined) {
                    d.data[feature_filter_attributes_array[i]] = null 
                }
            }
        }
    }
    function overrideStyle(orig, o) {
        var r = {};
        if (o.color) {
            var color;
            if (o.color === "selectcolor") {
                color = orig.selectcolor
            } else {
                color = o.color
            }
            r.color = color;
            if (orig.strokecolor) {
                if (orig.type != "polygon") {
                    r.strokecolor = color
                } else {
                    r.strokecolor = orig.strokecolor
                }
            }
            if (orig.fillcolor) {
                r.fillcolor = color
            }
        } else {
            if (orig.strokecolor && o.strokecolor) {
                r.strokecolor = o.strokecolor
            } else {
                r.strokecolor = orig.strokecolor
            }
            if (orig.fillcolor && o.fillcolor) {
                r.fillcolor = o.fillcolor
            } else {
                r.fillcolor = orig.fillcolor
            }
            r.innerlinewidth = orig.innerlinewidth
        }
        if (o.dashed) {
            r.dashed = o.dashed
        } else {
            r.dashed = orig.dashed
        }
        r.linewidth = orig.linewidth;
        r.type = orig.type;
        r.visible = orig.visible;
        return r
    }
    function adjustLegacyStyles(styles) {
        for (var i = 0, len = styles.length; i < len; i++) {
            if (styles[i].lw * 1 > 0) {
                styles[i].linewidth = styles[i].lw * 1
            }
            if (styles[i].iw * 1 > 0) {
                styles[i].innerlinewidth = styles[i].iw * 1
            }
            styles[i].fillcolor = styles[i].f;
            styles[i].strokecolor = styles[i].s;
            if (styles[i].i) {
                styles[i].innerstrokecolor = styles[i].i
            }
            if (styles[i].f) {
                styles[i].type = "polygon"
            }
        }
    }
    function initStyles(el) {
        el.styles_data = el.styles_data || {};
        if (el.styles) {
            adjustLegacyStyles(el.styles)
        } else {
            el.styles = el.curLayerObj.features
        }
        for (var i = 0, len = el.styles.length; i < len; i++) {
            if (el.styles[i].type == "polygon") {
                if (!el.styles[i].linewidth) {
                    el.styles[i].linewidth = 1
                }
                if (el.styles[i].fillcolor) {
                    el.styles[i].predominantColor = el.styles[i].fillcolor
                } else {
                    el.styles[i].predominantColor = el.styles[i].strokecolor
                }
            } else {
                if (el.styles[i].innerstrokecolor && el.styles[i].innerlinewidth > 0) {
                    el.has_inner_line = true
                }
            }
            if (!el.styles[i].predominantColor) {
                if (el.styles[i].strokecolor) {
                    el.styles[i].predominantColor = el.styles[i].strokecolor
                } else {
                    if (el.styles[i].color) {
                        el.styles[i].predominantColor = el.styles[i].color
                    } else {
                        el.styles[i].predominantColor = "#000000"
                    }
                }
            }
            var c = common.getHighlightAndSelectColors(el.styles[i].predominantColor);
            el.styles[i].highlightcolor = c[0];
            el.styles[i].selectcolor = c[1]
        }
        el.styles_data[el.layer] = el.styles
    }
    function drawGeom(el, data, dontRender) {
        var geom = data.geom;
        el.lista = el.lista || {};
        el.data = el.data || {};
        el.data_type = el.data_type || {};
        el.pixels = el.pixels || {};
        el.data[el.layer] = geom;
        if (!el.lista[el.layer]) {
            el.lista[el.layer] = []
        }
        el.data_type[el.layer] = "geom";
        el.fields = data.fields;
        var lista = el.lista[el.layer];
        var that = el.obj;
        var len = geom.length;
        var sindex = -1;
        var s = null ;
        var object, g;
        var i, j, glen, b;
        var offset = 0;
        var precision = 0;
        if (el.curLayerObj.options.offset) {
            offset = el.curLayerObj.options.offset
        }
        if (el.curLayerObj.options.precision) {
            precision = el.curLayerObj.options.precision
        }
        if (data.tile && data.tile.pixels) {
            el.pixels[el.layer] = data.tile.pixels;
            data.tile.pixels = null 
        }
        var has_fields = 0;
        if (data.fields) {
            has_fields = 1
        }
        el.featureCount = len;
        for (i = len - 1; i >= 0; i--) {
            object = geom[i];
            if (object.s >= 0) {
                sindex = object.s
            } else {
                object.s = sindex
            }
            b = {};
            if (!lista[object.c]) {
                lista[object.c] = []
            }
            lista[object.c].push(i);
            if (sindex != -1) {
                s = el.styles[sindex]
            }
            if (s.type == "polygon") {
                object.ispoly = 1
            }
            if (!object.initialized) {
                var g = object.p;
                glen = g.length;
                if (precision > 0) {
                    for (j = 0; j < glen; j++) {
                        g[j] /= precision
                    }
                }
                if (offset > 0) {
                    doOffset(object, offset)
                }
                g = object.p;
                b = {};
                b.xmin = b.xmax = g[0];
                b.ymin = b.ymax = g[1];
                el.featureIds.push(+object.c.split("_")[1]);
                for (j = 2; j < glen; j += 2) {
                    if (g[j] < b.xmin) {
                        b.xmin = g[j]
                    } else {
                        if (g[j] > b.xmax) {
                            b.xmax = g[j]
                        }
                    }
                    if (g[j + 1] < b.ymin) {
                        b.ymin = g[j + 1]
                    } else {
                        if (g[j + 1] > b.ymax) {
                            b.ymax = g[j + 1]
                        }
                    }
                }
                b.xmin = Math.floor(b.xmin);
                b.ymin = Math.floor(b.ymin);
                b.xmax = Math.ceil(b.xmax);
                b.ymax = Math.ceil(b.ymax);
                object.initialized = true;
                object.b = b;
                object.visible = true;
                if (has_fields) {
                    object.data = el.fields[object.c];
                    setupFiltersObject(el, object)
                }
            }
        }
        el.data[el.layer] = geom;
        geom = null ;
        data.geom = null ;
        data.style = null ;
        if (!dontRender) {
            drawGeomInternal(el)
        }
    }
    function drawGeomInternal(el) {
        var geom, ctx, len, user_custom_renderer, feature, feature_id_a;
        if (!el.data) {
            return
        }
        geom = el.data[el.layer];
        el.styles = el.styles_data[el.layer];
        el._original = null ;
        if (!geom) {
            return
        }
        var filter = null ;
        if (el.obj.feature_filter && el.obj.feature_filter.filter) {
            filter = el.obj.feature_filter.filter
        }
        if (el.getContext) {
            ctx = el.forceCtx || el.getContext("2d");
            if (el._canvas_offset) {
                ctx.save();
                ctx.beginPath();
                ctx.rect(el._canvas_offset, el._canvas_offset, 256, 256);
                ctx.clip()
            }
            if (el.curLayerObj.isGroupLayer) {
                ctx.globalAlpha = el.curLayerObj.options.opacity
            } else {
                ctx.globalAlpha = 1
            }
            len = geom.length;
            if (!filter && el.pixels[el.layer]) {
                drawPixels(ctx, el, !(el.obj.parent.group))
            }
            use_custom_renderer = giscloud.mapFeatureRenderer != null ;
            for (i = len - 1; i >= 0; i--) {
                object = geom[i];
                sindex = object.s;
                if (sindex != -1) {
                    s = el.styles[sindex]
                }
                if (use_custom_renderer) {
                    var w = {};
                    for (var k in s) {
                        w[k] = s[k]
                    }
                    s = w;
                    feature_id_a = object.c.split("_");
                    feature = {
                        featureId: feature_id_a[1] * 1,
                        layerId: parseInt(feature_id_a[0].replace("layer", "").replace("l", "")),
                        geometry: object.p,
                        bounds: object.b,
                        visible: object.visible
                    };
                    if (object.data) {
                        feature.attributes = object.data
                    }
                    giscloud.mapFeatureRenderer(feature, s);
                    object.visible = feature.visible
                }
                object.curs = s;
                if (!filter || (object.data && filter(object.data))) {
                    object.visible = true;
                    drawCanvasPolygon(el, ctx, object.p, object.curs, object.s, el.lastP, null , 1, use_custom_renderer)
                } else {
                    object.visible = false
                }
            }
            finishPoly(el, ctx);
            if (el.has_inner_line) {
                for (i = len - 1; i >= 0; i--) {
                    object = geom[i];
                    if (object.visible) {
                        drawCanvasPolygon(el, ctx, object.p, object.curs, object.s, el.lastP, null , 2, use_custom_renderer)
                    }
                }
                finishPoly2(el, ctx)
            }
        }
        if (el.obj.modifier) {
            drawTileUsingModifier(el, el.obj)
        }
        if (el._canvas_offset) {
            ctx.restore()
        }
    }
    function drawCanvasPolygon(el, ctx, d, c, cindex, id, clear, mode, forcerender) {
        if (c.visible === false) {
            return
        }
        var len, j;
        if (el.last_c && el.last_c_index != cindex || forcerender) {
            if (mode != 2) {
                finishPoly(el, ctx)
            } else {
                finishPoly2(el, ctx)
            }
        }
        if (!el._path) {
            if (clear) {
                ctx.globalCompositeOperation = "destination-out"
            }
            ctx.lineCap = "round";
            ctx.lineJoin = "round";
            ctx.beginPath();
            el._path = 1;
            el.last_c = c;
            el.last_c_index = cindex
        }
        len = d.length;
        if (el._canvas_offset) {
            var offset = el._canvas_offset;
            ctx.moveTo(offset + d[0], offset + d[1]);
            for (j = 2; j < len; j += 2) {
                ctx.lineTo(offset + d[j], offset + d[j + 1])
            }
        } else {
            ctx.moveTo(d[0], d[1]);
            for (j = 2; j < len; j += 2) {
                ctx.lineTo(d[j], d[j + 1])
            }
        }
        if (clear) {
            finishPoly(el, ctx);
            ctx.globalCompositeOperation = "source-over"
        }
        el.lastP = id
    }
    function finishPoly(el, ctx) {
        if (!el.last_c) {
            return
        }
        var c = el.last_c;
        if (c.icon && c.icon_image) {
            if (!c.pattern) {
                c.pattern = ctx.createPattern(c.icon_image, "repeat")
            }
            ctx.fillStyle = c.pattern;
            ctx.fill()
        } else {
            if (c.fillcolor) {
                ctx.fillStyle = c.fillcolor;
                ctx.fill()
            }
        }
        if (c.strokecolor && c.linewidth > 0) {
            if (c.dashed) {
                if (ctx.setLineDash) {
                    ctx.setLineDash(c.dashed)
                } else {
                    ctx.mozDash = c.dashed;
                    ctx.webkitLineDash = c.dashed
                }
            }
            ctx.lineWidth = c.linewidth;
            if (!c.fillcolor && c.color) {
                ctx.strokeStyle = c.color
            } else {
                ctx.strokeStyle = c.strokecolor
            }
            ctx.stroke();
            if (c.dashed) {
                if (ctx.setLineDash) {
                    ctx.setLineDash([])
                } else {
                    ctx.mozDash = [];
                    ctx.webkitLineDash = []
                }
            }
        }
        el.last_c = null ;
        el.last_c_index = null ;
        el._path = 0
    }
    function finishPoly2(el, ctx) {
        if (!el.last_c) {
            return
        }
        var c = el.last_c;
        if (c.innerstrokecolor) {
            if (c.dashed) {
                if (ctx.setLineDash) {
                    ctx.setLineDash(c.dashed)
                } else {
                    ctx.mozDash = c.dashed;
                    ctx.webkitLineDash = c.dashed
                }
            }
            ctx.strokeStyle = c.innerstrokecolor;
            ctx.lineWidth = c.innerlinewidth;
            ctx.stroke();
            if (c.dashed) {
                if (ctx.setLineDash) {
                    ctx.setLineDash([])
                } else {
                    ctx.mozDash = [];
                    ctx.webkitLineDash = []
                }
            }
        }
        el.last_c = null ;
        el.last_c_index = null ;
        el._path = 0
    }
    function parsePoint(el, data) {
        var offset = 10;
        var i, d;
        var has_fields = 0;
        var f;
        i = 0;
        while (1) {
            f = el.curLayerObj.features[i++];
            if (!f) {
                break
            }
            if (f.clustering > offset) {
                offset = f.clustering
            }
        }
        if (el._canvas_offset > offset) {
            offset = el._canvas_offset
        }
        expandCanvas(el, offset);
        el.data_type[el.layer] = "point";
        var tileData = el.data[el.layer];
        el.lista = el.lista || {};
        if (!el.lista[el.layer]) {
            el.lista[el.layer] = []
        }
        var lista = el.lista[el.layer];
        if (data.fields) {
            has_fields = 1
        }
        for (i = 0; i < tileData.length; i++) {
            d = tileData[i];
            d.x = offset + Math.round(((d.x - bounds.xmin) / bounds.max * Math.pow(2, el.zoom) - el.coord.x) * 256);
            d.y = offset + Math.round(((bounds.ymax - d.y) / bounds.max * Math.pow(2, el.zoom) - el.coord.y) * 256);
            d.id = d.id.replace("||", "_");
            d.c = d.id;
            d.ispoint = true;
            if (has_fields) {
                d.data = data.fields[d.id];
                setupFiltersObject(el, d)
            }
            if (!lista[d.c]) {
                lista[d.c] = []
            }
            lista[d.c].push(i)
        }
    }
    function drawPoint(el, use_modifier) {
        if (!flashnavigator.hasCanvas) {
            drawPointDOM(el, use_modifier);
            return
        }
        var ctx = el.forceCtx || el.getContext("2d");
        if (el.curLayerObj.isGroupLayer) {
            ctx.globalAlpha = el.curLayerObj.options.opacity
        } else {
            ctx.globalAlpha = 1
        }
        var f = null ;
        if (el.obj.feature_filter && el.obj.feature_filter.filter) {
            f = el.obj.feature_filter.filter
        }
        var data = el.data[el.layer];
        el.featureCount += data.length;
        for (var i = 0; i < data.length; i++) {
            if (drawImage(el, el.obj, ctx, data[i], f)) {
                el.featureIds.push(+data[i].c.split("_")[1])
            }
        }
        if (el.obj.modifier) {
            drawTileUsingModifier(el, el.obj)
        }
    }
    function getImageOverlay(imgs, modifier, d, layer) {
        var c;
        var key = modifier.color;
        if (d.cl > 0) {
            key += "_cluster"
        }
        if (imgs.icon_image_overlay && imgs.icon_image_overlay[key]) {
            c = imgs.icon_image_overlay[key]
        } else {
            c = document.createElement("canvas");
            c.width = d.b.xmax - d.b.xmin;
            c.height = d.b.ymax - d.b.ymin;
            var ic_ctx = c.getContext("2d");
            drawPointCanvas(ic_ctx, d, layer, imgs, 0, 0, true);
            ic_ctx.globalAlpha = 0.7;
            var style = overrideStyle(imgs, modifier);
            ic_ctx.fillStyle = style.color;
            ic_ctx.beginPath();
            ic_ctx.rect(0, 0, c.width, c.height);
            ic_ctx.globalCompositeOperation = "source-in";
            ic_ctx.fill();
            if (!imgs.icon_image_overlay) {
                imgs.icon_image_overlay = []
            }
            imgs.icon_image_overlay[key] = c
        }
        return c
    }
    function drawImage(el, obj, ctx, d, f, modifier) {
        if (el.styles && el.styles[d.i] && el.styles[d.i].visible === false) {
            return 0
        }
        if (!f) {
            if (obj.feature_filter && obj.feature_filter.filter) {
                f = obj.feature_filter.filter
            }
        }
        var imgs = el.curLayerObj.features[d.i];
        if (imgs.iready && (!f || (d.data && f(d.data)))) {
            img = imgs.icon_image;
            d.b = {
                xmin: Math.floor(d.x - img.width / 2),
                ymin: Math.floor(d.y - img.height / 2),
                xmax: d.x + img.width / 2,
                ymax: d.y + img.height / 2
            };
            drawPointCanvas(ctx, d, obj._layer, imgs);
            if (modifier) {
                var c = getImageOverlay(imgs, modifier, d, obj._layer);
                ctx.drawImage(c, d.b.xmin, d.b.ymin, d.b.xmax - d.b.xmin, d.b.ymax - d.b.ymin)
            }
            d.visible = true
        } else {
            d.visible = false
        }
        return 1
    }
    function drawPointCanvas(ctx, d, layer, object, x, y, overlay) {
        if (!d.b) {
            return
        }
        if (x == undefined) {
            x = d.b.xmin
        }
        if (y == undefined) {
            y = d.b.ymin
        }
        var img = object.icon_image, style, feature_id_a, feature, visible = true;
        var use_custom_renderer = giscloud.mapFeatureRenderer != null ;
        if (!overlay || !d.cl || !object.clustering) {
            if (use_custom_renderer) {
                feature_id_a = d.c.split("_");
                feature = {
                    featureId: feature_id_a[1] * 1,
                    layerId: parseInt(feature_id_a[0].replace("layer", "").replace("l", "")),
                    geometry: [d.x, d.y],
                    bounds: d.b,
                    visible: visible
                };
                if (d.data) {
                    feature.attributes = d.data
                }
                style = {
                    icon: object.icon_image
                };
                giscloud.mapFeatureRenderer(feature, style);
                img = style.icon;
                visible = feature.visible
            }
            if (visible) {
                ctx.drawImage(img, x, y)
            }
        }
        if (d.cl && object.clustering > 0) {
            var cluster = object.clustering;
            var text = d.cl + 1;
            ctx.save();
            ctx.textAlign = "center";
            ctx.textBaseline = "middle";
            var cx = x + (d.b.ymax - d.b.ymin * 1) / 2;
            var cy = y + (d.b.ymax - d.b.ymin * 1) / 2;
            ctx.beginPath();
            ctx.arc(cx, cy, cluster - 2, 0, 2 * Math.PI, false);
            ctx.fillStyle = object.predominantColor;
            ctx.fill();
            ctx.lineWidth = 2;
            ctx.strokeStyle = "#003300";
            ctx.stroke();
            if (!overlay) {
                ctx.lineWidth = 1;
                ctx.fillStyle = "#fff";
                ctx.strokeStyle = "#000";
                ctx.strokeText(text, cx, cy);
                ctx.fillText(text, cx, cy);
                if (img.width / 2 < cluster) {
                    d.b.xmin = Math.floor(d.x - cluster);
                    d.b.xmax = d.x + cluster
                }
                if (img.height / 2 < cluster) {
                    d.b.ymin = Math.floor(d.y - cluster);
                    d.b.ymax = d.y + cluster
                }
            }
            ctx.restore()
        }
    }
    function drawPointDOM(el, use_modifier) {
        var f = null ;
        if (el.obj.feature_filter && el.obj.feature_filter.filter) {
            f = el.obj.feature_filter.filter
        }
        var data = el.data[el.layer];
        for (var i = 0; i < data.length; i++) {
            drawImageAsDOM(el, data[i], f)
        }
    }
    function drawImageAsDOM(el, d, f, modifier) {
        if (modifier) {
            return
        }
        var obj = el.obj;
        if (!f) {
            if (obj.feature_filter && obj.feature_filter.filter) {
                f = obj.feature_filter.filter
            }
        }
        var imgs = el.curLayerObj.features[d.i];
        if (imgs.iready && (!f || (d.data && f(d.data)))) {
            img = imgs.icon_image;
            d.b = {
                xmin: Math.floor(d.x - img.width / 2),
                ymin: Math.floor(d.y - img.height / 2),
                xmax: d.x + img.width / 2,
                ymax: d.y + img.height / 2
            };
            drawPointAsDOM(el, d, obj._layer, imgs);
            if (modifier) {}
            d.visible = true
        } else {
            d.visible = false
        }
    }
    function drawPointAsDOM(el, d, layer, object, x, y, overlay) {
        if (!d.b) {
            return
        }
        if (x == undefined) {
            x = d.b.xmin
        }
        if (y == undefined) {
            y = d.b.ymin
        }
        if ((!overlay || !d.cl || !object.clustering) && !d.cl) {
            var cont = L.DomUtil.create("img", "", el);
            cont.style.position = "absolute";
            cont.style.left = d.b.xmin + "px";
            cont.style.top = d.b.ymin + "px";
            cont.src = object.icon
        }
        if (d.cl && object.clustering > 0) {
            if (!el.paper) {
                setupPaperOverlay(el);
                el.paper = Raphael(el.overlay, el.width, el.height)
            }
            var cluster = object.clustering;
            var text = d.cl + 1;
            var cx = x + (d.b.ymax - d.b.ymin * 1) / 2;
            var cy = y + (d.b.ymax - d.b.ymin * 1) / 2;
            el.paper.circle(cx, cy, cluster - 2).attr({
                fill: object.predominantColor,
                "stroke-width": 2,
                stroke: "#003300"
            });
            if (!overlay) {
                el.paper.text(cx, cy, text).attr({
                    "stroke-width": 1,
                    stroke: "#fff"
                });
                if (img.width / 2 < cluster) {
                    d.b.xmin = Math.floor(d.x - cluster);
                    d.b.xmax = d.x + cluster
                }
                if (img.height / 2 < cluster) {
                    d.b.ymin = Math.floor(d.y - cluster);
                    d.b.ymax = d.y + cluster
                }
            }
        }
    }
    var labelCache = {}
      , LEFT = 1
      , RIGHT = 2
      , BOTTOM = 4
      , TOP = 8
      , options = {
        benchmark: true
    }
      , bench = {
        counter: {},
        perf: {}
    };
    bench.start = function(key) {
        if (!options.benchmark) {
            return
        }
        bench.perf[key] = performance.now()
    }
    ;
    bench.end = function(key) {
        if (!options.benchmark) {
            return
        }
        if (!bench.counter[key]) {
            bench.counter[key] = 0
        }
        bench.counter[key] += performance.now() - bench.perf[key];
        delete bench.perf[key]
    }
    ;
    bench.collect = function(key) {
        if (!options.benchmark) {
            return
        }
        if (bench.perf[key]) {
            bench.end(key)
        }
        console.debug("[" + key + "] took " + bench.counter[key].toFixed(3) + "ms");
        delete bench.counter[key]
    }
    ;
    function dropCache() {
        labelCache = {}
    }
    giscloud.util.mediator.deleteChannel("labelRenderer/dropCache");
    giscloud.util.mediator.makeChannel("labelRenderer/dropCache", true);
    giscloud.util.mediator.subscribe("labelRenderer/dropCache", dropCache);
    function prerenderLabel(text, style, angle) {
        bench.start("prerender label");
        var prerendered, canvas, context, cache, textHeight, textWidth, font, fontSize, fontName, outlineColor, fillColor, x, y, hash, rect, matrix, stylusPoint, widthBuffer, heightBuffer;
        hash = style.styleName;
        if (angle !== undefined) {
            hash += "_" + angle.toFixed(2)
        }
        if (!labelCache[hash]) {
            labelCache[hash] = {}
        }
        cache = labelCache[hash];
        prerendered = cache[text];
        if (prerendered) {
            return prerendered
        } else {
            canvas = document.createElement("canvas");
            context = canvas.getContext("2d");
            widthBuffer = 4;
            heightBuffer = 4;
            fontSize = style.fontsize || 12;
            fontName = style.fontname || "Arial Black";
            outlineColor = style.outline ? "#" + style.outline.substr(2) : null ;
            fillColor = style.color ? "#" + style.color.substr(2) : null ;
            font = "" + fontSize + "px '" + fontName + "'";
            context.font = font;
            textHeight = heightBuffer + Math.SQRT2 * fontSize;
            textWidth = widthBuffer + context.measureText(text).width;
            x = widthBuffer >> 1;
            y = Math.floor(textHeight - ((textHeight - fontSize) / 2));
            if (angle !== undefined) {
                matrix = giscloud.math.Matrix2.Rotation(angle);
                rect = new giscloud.math.Rect(-(textWidth >> 1),-(textHeight >> 1),(textWidth >> 1),(textHeight >> 1));
                rect = matrix.transform(rect);
                canvas.width = Math.floor(rect.max.x - rect.min.x + 8);
                canvas.height = Math.floor(rect.max.y - rect.min.y + 8);
                context.font = font;
                x = Math.floor(-(textWidth >> 1) + x);
                y = Math.floor(-(textHeight >> 1) + y - 4);
                context.save();
                context.translate(canvas.width >> 1, canvas.height >> 1);
                context.rotate(angle)
            } else {
                canvas.width = textWidth;
                canvas.height = textHeight;
                context.font = font
            }
            if (outlineColor) {
                context.fillStyle = outlineColor;
                context.fillText(text, x - 1, y);
                context.fillText(text, x + 1, y);
                context.fillText(text, x, y - 1);
                context.fillText(text, x, y + 1);
                context.fillText(text, x - 1, y - 1);
                context.fillText(text, x - 1, y + 1);
                context.fillText(text, x + 1, y - 1);
                context.fillText(text, x + 1, y + 1)
            }
            if (outlineColor && !fillColor) {
                context.globalCompositeOperation = "xor";
                context.fillStyle = "#ffffff";
                context.fillText(text, x, y)
            } else {
                context.fillStyle = fillColor;
                context.fillText(text, x, y)
            }
            if (angle !== undefined) {
                context.restore()
            }
            cache[text] = canvas;
            return canvas
        }
    }
    function prepareFragments(tile) {
        var text, image;
        tile.grid.walk(function(fragment) {
            if (fragment.label.style) {
                text = fragment.text();
                if (!text) {
                    return
                }
                image = prerenderLabel(text, fragment.label.style, fragment.angle);
                if (fragment.label.image !== image) {
                    fragment.label.image = image;
                    i = fragment.label.image.width >> 1;
                    j = fragment.label.image.height >> 1;
                    fragment.label.rect = new giscloud.math.Rect(fragment.position[0] - i,fragment.position[1] - j,fragment.position[0] + i,fragment.position[1] + j)
                }
                if (!collides(tile, fragment, fragment.label.rect)) {
                    if (tile.qtree.top.bounds.contains(fragment.label.rect)) {
                        tile.qtree.insert(fragment.label.rect, fragment);
                        fragment.tile = tile
                    } else {
                        neighbours = canInsertIntoNeighbours(tile, fragment.label.rect, fragment);
                        if (neighbours.length) {
                            fragment.originalTile = tile;
                            fragment.neighbours = neighbours;
                            insertIntoNeighbours(neighbours, fragment);
                            tile.qtree.insert(fragment.label.rect, fragment);
                            fragment.tile = tile
                        }
                    }
                }
            }
        })
    }
    function drawTileLabels(tile) {
        var gfx = tile.getContext("2d"), label;
        gfx.clearRect(0, 0, 256, 256);
        tile.qtree.walk(function(obj) {
            label = obj.obj;
            gfx.drawImage(label.label.image, obj.bounds.min.x, obj.bounds.min.y)
        })
    }
    function drawGridCellCenters(tile) {
        var i, j, x, y, ctx = tile.getContext("2d");
        ctx.strokeStyle = "rgba(64, 64, 192, 0.8)";
        ctx.lineWidth = 2;
        for (i = 0; i < tile.grid.width; ++i) {
            for (j = 0; j < tile.grid.height; ++j) {
                ctx.beginPath();
                if (i % 2) {
                    x = (i + 0.5) * (256 / tile.grid.width);
                    y = (j + 0.75) * (256 / tile.grid.height)
                } else {
                    x = (i + 0.5) * (256 / tile.grid.width);
                    y = (j + 0.25) * (256 / tile.grid.height)
                }
                ctx.arc(x, y, 4, 0, 2 * Math.PI);
                ctx.stroke()
            }
        }
    }
    function renderLabelTile(labelLayer, labelTile) {
        labelTile.getContext("2d").clearRect(0, 0, 256, 256);
        renderPointLabels(labelLayer, labelTile);
        renderLineLabels(labelLayer, labelTile);
        renderPolygonLabels(labelLayer, labelTile);
        prepareFragments(labelTile);
        drawTileLabels(labelTile)
    }
    giscloud.util.mediator.deleteChannel("renderer/drawTile");
    giscloud.util.mediator.makeChannel("renderer/drawTile");
    giscloud.util.mediator.subscribe("renderer/drawTile", renderLabelTile);
    function clearLabelTile(labelLayer, labelTile) {
        labelTile.grid.clear();
        labelTile.qtree.clear()
    }
    giscloud.util.mediator.deleteChannel("renderer/clearTile");
    giscloud.util.mediator.makeChannel("renderer/clearTile");
    giscloud.util.mediator.subscribe("renderer/clearTile", clearLabelTile);
    function collides(tile, object, rect) {
        var i, query, collision, ctx, toRemove = [], width, height, x, y;
        query = tile.qtree.test(rect);
        collision = false;
        for (i = 0; i < query.length; ++i) {
            if (query[i].bounds.intersects(rect)) {
                if (query[i].obj.score() < object.score()) {
                    toRemove.push(query[i])
                } else {
                    collision = true;
                    break
                }
            }
        }
        if (!collision && toRemove.length) {
            ctx = tile.getContext("2d");
            ctx.clearRect(0, 0, 256, 256);
            toRemove.forEach(function(toDelete) {
                tile.qtree.remove(function(node) {
                    return node.obj.id === toDelete.obj.id
                });
                if (toDelete.obj.tile) {
                    toDelete.obj.tile.getContext("2d").clearRect(toDelete.obj.label.rect.min.x - 1, toDelete.obj.label.rect.min.y - 1, toDelete.obj.label.image.width + 2, toDelete.obj.label.image.height + 2)
                }
                if (toDelete.obj.neighbours) {
                    toDelete.obj.neighbours.forEach(function(neighbour) {
                        neighbour.tile.qtree.remove(function(node) {
                            if (node.obj === toDelete.obj) {
                                ctx = neighbour.tile.getContext("2d");
                                x = neighbour.rect.min.x - 1;
                                y = neighbour.rect.min.y - 1;
                                width = neighbour.rect.max.x - x + 2;
                                height = neighbour.rect.max.y - y + 2;
                                ctx.clearRect(x, y, width, height);
                                return true
                            }
                            return false
                        })
                    })
                }
            })
        }
        return collision
    }
    function insertIntoNeighbours(neighbours, point) {
        for (i = 0; i < neighbours.length; ++i) {
            neighbours[i].tile.qtree.insert(neighbours[i].rect, point);
            drawTileLabels(neighbours[i].tile)
        }
    }
    function canInsertIntoNeighbours(tile, rect, object) {
        var neighbours = [], collisions = [], tileRect, side = 0, tmpTile, tmpRect;
        tileRect = tile.qtree.top.bounds;
        if (rect.min.x < tileRect.min.x) {
            side |= LEFT
        }
        if (rect.max.x > tileRect.max.x) {
            side |= RIGHT
        }
        if (rect.min.y < tileRect.min.y) {
            side |= TOP
        }
        if (rect.max.y > tileRect.max.y) {
            side |= BOTTOM
        }
        if (side & LEFT) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x - 1,tile.coord.y));
            tmpRect = rect.translate(256, 0);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (side & TOP) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x,tile.coord.y - 1));
            tmpRect = rect.translate(0, 256);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (side & RIGHT) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x + 1,tile.coord.y));
            tmpRect = rect.translate(-256, 0);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (side & BOTTOM) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x,tile.coord.y + 1));
            tmpRect = rect.translate(0, -256);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (!(side ^ (TOP | LEFT))) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x - 1,tile.coord.y - 1));
            tmpRect = rect.translate(256, 256);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (!(side ^ (TOP | RIGHT))) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x + 1,tile.coord.y - 1));
            tmpRect = rect.translate(-256, 256);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (!(side ^ (BOTTOM | LEFT))) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x - 1,tile.coord.y + 1));
            tmpRect = rect.translate(256, -256);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        if (!(side ^ (BOTTOM | RIGHT))) {
            tmpTile = tile._layer.getTile(new L.Point(tile.coord.x + 1,tile.coord.y + 1));
            tmpRect = rect.translate(-256, -256);
            if (!collides(tmpTile, object, tmpRect)) {
                neighbours.push({
                    tile: tmpTile,
                    rect: tmpRect
                })
            } else {
                return []
            }
        }
        return neighbours
    }
    function renderPointLabels(labelLayer, labelTile, data) {
        var i, j, layerKeys, points, pointKeys, point, neighbours, x, y, data, image, fragment, expression;
        data = labelTile.labelData.point;
        layerKeys = Object.keys(data);
        layerKeys = layerKeys.filter(function(key) {
            return !data[key].hidden
        });
        for (i = 0; i < layerKeys.length; ++i) {
            points = data[layerKeys[i]];
            pointKeys = Object.keys(points.geometry);
            for (j = 0; j < pointKeys.length; ++j) {
                point = points.geometry[pointKeys[j]];
                x = point.position[0] * (labelTile.grid.width / 256);
                y = point.position[1] * (labelTile.grid.height / 256);
                fragment = {
                    id: point.id,
                    position: [point.position[0], point.position[1]],
                    label: {
                        rect: null 
                    },
                    score: function(lid) {
                        return labelLayer.layers[lid].orderIndex
                    }
                    .bind(null , point.layerId)
                };
                if ((point.label.style !== null ) && labelLayer.layers[point.layerId] && labelLayer.layers[point.layerId].labelData && labelLayer.layers[point.layerId].labelData.styles) {
                    expression = (labelLayer.layers[point.layerId].labelData.features[point.label.style] ? labelLayer.layers[point.layerId].labelData.features[point.label.style].expression : "");
                    if (expression) {
                        fragment.label.style = labelLayer.layers[point.layerId].labelData.styles.reduce(function(memo, style) {
                            if (memo) {
                                return memo
                            }
                            if (style.expression === expression) {
                                memo = style
                            }
                            return memo
                        }, null )
                    } else {
                        fragment.label.style = labelLayer.layers[point.layerId].labelData.styles[point.label.style]
                    }
                    fragment.text = function(lid, id, coord, style) {
                        var attribute, tile, spec;
                        attribute = style.label;
                        if (!attribute) {
                            return ""
                        }
                        tile = labelLayer.getTile(coord);
                        if (!tile) {
                            return ""
                        }
                        spec = tile.labelData.point[lid];
                        if (!spec) {
                            return ""
                        }
                        if (spec.attribute && spec.features[id] && spec.features[id][attribute]) {
                            return spec.features[id][attribute]
                        } else {
                            return ""
                        }
                    }
                    .bind(null , point.layerId, point.id, labelTile.coord, fragment.label.style);
                    labelTile.grid.insert([x, y], fragment)
                }
            }
        }
    }
    function renderPolygonLabels(labelLayer, labelTile, data) {
        var i, j, layerKeys, polygons, polygonKeys, polygon, neighbours, x, y, data, image, fragment;
        data = labelTile.labelData.polygon;
        layerKeys = Object.keys(data);
        layerKeys = layerKeys.filter(function(key) {
            return !data[key].hidden
        });
        for (i = 0; i < layerKeys.length; ++i) {
            polygons = data[layerKeys[i]];
            polygonKeys = Object.keys(polygons.geometry);
            for (j = 0; j < polygonKeys.length; ++j) {
                polygon = polygons.geometry[polygonKeys[j]];
                x = polygon.position[0] * (labelTile.grid.width / 256);
                y = polygon.position[1] * (labelTile.grid.height / 256);
                fragment = {
                    id: polygon.id,
                    position: [polygon.position[0], polygon.position[1]],
                    label: {
                        rect: null 
                    },
                    score: function(lid) {
                        return labelLayer.layers[lid].orderIndex
                    }
                    .bind(null , polygon.layerId)
                };
                if ((polygon.label.style !== null ) && labelLayer.layers[polygon.layerId] && labelLayer.layers[polygon.layerId].labelData && labelLayer.layers[polygon.layerId].labelData.styles) {
                    expression = (labelLayer.layers[polygon.layerId].labelData.features[polygon.label.style] ? labelLayer.layers[polygon.layerId].labelData.features[polygon.label.style].expression : "");
                    if (expression) {
                        fragment.label.style = labelLayer.layers[polygon.layerId].labelData.styles.reduce(function(memo, style) {
                            if (memo) {
                                return memo
                            }
                            if (style.expression === expression) {
                                memo = style
                            }
                            return memo
                        }, null )
                    } else {
                        fragment.label.style = labelLayer.layers[polygon.layerId].labelData.styles[polygon.label.style]
                    }
                    fragment.text = function(lid, id, coord, style) {
                        var attribute, tile, spec;
                        attribute = style.label;
                        if (!attribute) {
                            return ""
                        }
                        tile = labelLayer.getTile(coord);
                        if (!tile) {
                            return ""
                        }
                        spec = tile.labelData.polygon[lid];
                        if (!spec) {
                            return ""
                        }
                        if (spec.attribute && spec.features[id] && spec.features[id][attribute]) {
                            return spec.features[id][attribute]
                        } else {
                            return ""
                        }
                    }
                    .bind(null , polygon.layerId, polygon.id, labelTile.coord, fragment.label.style);
                    labelTile.grid.insert([x, y], fragment)
                }
            }
        }
    }
    function renderLineLabels(labelLayer, labelTile) {
        var i, j, k, layerKeys, lines, lineKeys, line, fragment, neighbours, x, y, data, image, expression;
        data = labelTile.labelData.line;
        layerKeys = Object.keys(data);
        layerKeys = layerKeys.filter(function(key) {
            return !data[key].hidden
        });
        for (i = 0; i < layerKeys.length; ++i) {
            lines = data[layerKeys[i]];
            lineKeys = Object.keys(lines.geometry);
            for (j = 0; j < lineKeys.length; ++j) {
                line = lines.geometry[lineKeys[j]];
                for (k = 0; k < line.positions.length; ++k) {
                    fragment = {
                        id: line.id,
                        score: function(lid) {
                            return labelLayer.layers[lid].orderIndex
                        }
                        .bind(null , line.layerId)
                    };
                    x = line.positions[k].x;
                    y = line.positions[k].y;
                    fragment.angle = line.positions[k].angle;
                    fragment.position = [x, y];
                    fragment.label = {
                        rect: null 
                    };
                    if ((line.label.style !== null ) && labelLayer.layers[line.layerId] && labelLayer.layers[line.layerId].labelData && labelLayer.layers[line.layerId].labelData.styles) {
                        expression = (labelLayer.layers[line.layerId].labelData.features[line.label.style] ? labelLayer.layers[line.layerId].labelData.features[line.label.style].expression : "");
                        if (expression) {
                            fragment.label.style = labelLayer.layers[line.layerId].labelData.styles.reduce(function(memo, style) {
                                if (memo) {
                                    return memo
                                }
                                if (style.expression === expression) {
                                    memo = style
                                }
                                return memo
                            }, null )
                        } else {
                            fragment.label.style = labelLayer.layers[line.layerId].labelData.styles[line.label.style]
                        }
                        fragment.text = function(lid, id, coord, style) {
                            var attribute, tile, spec;
                            attribute = style.label;
                            if (!attribute) {
                                return ""
                            }
                            tile = labelLayer.getTile(coord);
                            if (!tile) {
                                return ""
                            }
                            spec = tile.labelData.line[lid];
                            if (!spec) {
                                return ""
                            }
                            if (spec.attribute && spec.features[id] && spec.features[id][attribute]) {
                                return spec.features[id][attribute]
                            } else {
                                return ""
                            }
                        }
                        .bind(null , line.layerId, line.id, labelTile.coord, fragment.label.style);
                        labelTile.grid.insert([x * (labelTile.grid.width / 256), y * (labelTile.grid.height / 256)], fragment)
                    }
                }
            }
        }
    }
    function drawText(el) {
        var filter = null ;
        if (el.obj.feature_filter && el.obj.feature_filter.filter) {
            filter = el.obj.feature_filter.filter
        }
        var fields = el.fields;
        var d = 100;
        if (el._canvas_offset > d) {
            d = el._canvas_offset
        }
        expandCanvas(el, d);
        el.data_type[el.layer] = "text";
        var data = el.data[el.layer];
        var dlen = data.length;
        if (dlen < 1) {
            return
        }
        if (!el.getContext) {
            drawTextDOM(el, data, filter);
            return
        }
        var ctx = el.forceCtx || el.getContext("2d");
        ctx.lineWidth = 3;
        ctx.lineCap = "round";
        ctx.lineJoin = "round";
        var last_feature_id = -1;
        var dx, dy, fs_with_margin;
        for (var i = 0; i < dlen; i++) {
            if (last_feature_id != data[i].i && data[i].i >= 0) {
                last_feature_id = data[i].i;
                var f = el.curLayerObj.features[data[i].i];
                if (f.visible === false) {
                    ctx.clearRect(0, 0, el.width, el.height);
                    continue
                }
                if (f.outline) {
                    ctx.strokeStyle = "#" + f.outline.substr(2)
                }
                if (f.color) {
                    ctx.fillStyle = "#" + f.color.substr(2)
                } else {
                    ctx.fillStyle = "rgba(255, 255, 255, 0)"
                }
                dx = 0;
                dy = 0;
                f.dx && (dx = f.dx);
                f.dy && (dy = f.dy);
                ctx.textAlign = "center";
                ctx.textBaseline = "middle";
                var al = f.anchor;
                if (al) {
                    if (al == "TL") {
                        ctx.textBaseline = "top";
                        ctx.textAlign = "left"
                    } else {
                        if (al == "T") {
                            ctx.textBaseline = "top"
                        } else {
                            if (al == "TR") {
                                ctx.textBaseline = "top";
                                ctx.textAlign = "right"
                            } else {
                                if (al == "R") {
                                    ctx.textAlign = "right"
                                } else {
                                    if (al == "BR") {
                                        ctx.textBaseline = "bottom";
                                        ctx.textAlign = "right"
                                    } else {
                                        if (al == "B") {
                                            ctx.textBaseline = "bottom"
                                        } else {
                                            if (al == "BL") {
                                                ctx.textBaseline = "bottom";
                                                ctx.textAlign = "left"
                                            } else {
                                                if (al == "L") {
                                                    ctx.textAlign = "left"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                var fontname = "arial";
                if (f.fontname) {
                    fontname = f.fontname
                }
                ctx.font = data[0].fs + "px " + fontname;
                fs_with_margin = data[0].fs * 1 + 2
            }
            var text = data[i].text;
            text = text.split("\n");
            var p = data[i].p;
            var plen = p.length;
            for (var k = 0; k < plen; k++) {
                if (filter) {
                    var item = {};
                    if (fields && p[k][4]) {
                        item.data = fields[p[k][4].replace("||", "_")]
                    }
                    setupFiltersObject(el, item);
                    if (!item.data || !filter(item.data)) {
                        continue
                    }
                }
                el.featureCount += text.length;
                for (var j = 0; j < text.length; j++) {
                    ctx.save();
                    ctx.translate(p[k][0] + d + dx, p[k][1] + d + dy + fs_with_margin * j);
                    ctx.rotate(p[k][2] / 180 * Math.PI);
                    if (f.outline) {
                        ctx.strokeText(text[j], 0, 0)
                    }
                    ctx.fillText(text[j], 0, 0);
                    ctx.restore()
                }
            }
        }
    }
    function drawTextDOM(el, data, filter) {
        var d = el._offset[el.layer];
        var dx = 0;
        var dy = 0;
        var fields = el.fields;
        var dlen = data.length;
        var last_feature_id = -1;
        var fill, vertical_offset, offsetX, fontname, halign;
        for (var i = 0; i < dlen; i++) {
            if (last_feature_id != data[i].i && data[i].i >= 0) {
                var f = el.curLayerObj.features[data[i].i];
                if (f.color) {
                    fill = "#" + f.color.substr(2)
                } else {
                    fill = "#000"
                }
                vertical_offset = Math.ceil(data[0].fs / 2);
                var al = f.anchor;
                halign = -1;
                dx = dy = 0;
                f.dx && (dx = f.dx);
                f.dy && (dy = f.dy);
                dy -= vertical_offset;
                if (al) {
                    if (al == "TL") {
                        dy += vertical_offset;
                        halign = 0
                    } else {
                        if (al == "T") {
                            dy += vertical_offset
                        } else {
                            if (al == "TR") {
                                dy += vertical_offset;
                                halign = 2
                            } else {
                                if (al == "R") {
                                    halign = 2
                                } else {
                                    if (al == "BR") {
                                        dy -= vertical_offset;
                                        halign = 2
                                    } else {
                                        if (al == "B") {
                                            dy -= vertical_offset
                                        } else {
                                            if (al == "BL") {
                                                dy -= vertical_offset;
                                                halign = 0
                                            } else {
                                                if (al == "L") {
                                                    halign = 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                offsetX = 0;
                fontname = "Arial";
                if (f.fontname) {
                    fontname = f.fontname
                }
            }
            var text = data[i].text;
            var p = data[i].p;
            var plen = p.length;
            for (var k = 0; k < plen; k++) {
                if (filter) {
                    var item = {};
                    if (fields && p[k][4]) {
                        item.data = fields[p[k][4].replace("||", "_")]
                    }
                    setupFiltersObject(el, item);
                    if (!item.data || !filter(item.data)) {
                        continue
                    }
                }
                var o = L.DomUtil.create("span", "", el);
                o.style.fontWeight = "bold";
                o.style.color = fill;
                o.style.fontSize = data[0].fs + "px";
                o.style.fontFamily = fontname;
                o.innerText = text;
                offsetX = halign * o.offsetWidth / 2;
                o.style.position = "absolute";
                o.style.left = (p[k][0] + d + dx + offsetX) + "px";
                o.style.top = (p[k][1] + d + dy) + "px"
            }
        }
    }
    function drawPixels(ctx, data, renderDirectOnTile) {
        var tmp_canvas = null , original_ctx;
        if (!renderDirectOnTile) {
            tmp_canvas = newCanvas(ctx.canvas);
            original_ctx = ctx;
            ctx = tmp_canvas.getContext("2d")
        }
        var imgd = ctx.createImageData(ctx.canvas.width, ctx.canvas.height);
        var pix = imgd.data;
        var px = data.pixels[data.layer];
        var slen = px.length;
        var c = 0;
        var r, g, b, k, i;
        r = g = b = 0;
        for (i = 1; i < slen; i++) {
            if (px[i] < 0) {
                k = px[i];
                if (px[i + 1] == 0) {
                    i++;
                    r = px[++i];
                    g = px[++i];
                    b = px[++i]
                }
                while (k++) {
                    pix[c * 4] = r;
                    pix[c * 4 + 1] = g;
                    pix[c * 4 + 2] = b;
                    pix[c * 4 + 3] = 255;
                    c++
                }
            } else {
                c += px[i]
            }
        }
        ctx.putImageData(imgd, 0, 0);
        if (!renderDirectOnTile) {
            original_ctx.drawImage(tmp_canvas, 0, 0)
        }
    }
    function expandCanvas(el, d) {
        var c, ctx;
        el._offset[el.layer] = d;
        el.activeLayerId = null ;
        if (d <= el._canvas_offset) {
            return
        }
        el.style.marginLeft = "-" + d + "px";
        el.style.marginTop = "-" + d + "px";
        if (!el.getContext) {
            el.style.width = el.width + "px";
            el.style.height = el.height + "px"
        } else {
            c = newCanvas(el);
            ctx = c.getContext("2d");
            ctx.drawImage(el, 0, 0)
        }
        el.width = el._layer.options.tileSize + d * 2;
        el.height = el._layer.options.tileSize + d * 2;
        if (ctx) {
            ctx = el.getContext("2d");
            ctx.drawImage(c, d, d);
            removeDOM(c)
        }
        el._canvas_offset = d
    }
    function rectUnion(a, b, offset) {
        if (b.xmin - offset < a.xmin) {
            a.xmin = b.xmin - offset
        }
        if (b.ymin - offset < a.ymin) {
            a.ymin = b.ymin - offset
        }
        if (b.xmax + offset > a.xmax) {
            a.xmax = b.xmax + offset
        }
        if (b.ymax + offset > a.ymax) {
            a.ymax = b.ymax + offset
        }
    }
    function rectCrop(a, min, max) {
        var i;
        for (i in a) {
            if (a[i] < min) {
                a[i] = min
            } else {
                if (a[i] > max) {
                    a[i] = max
                }
            }
        }
    }
    function rectAssign(a, b, offset) {
        a.xmin = b.xmin - offset;
        a.ymin = b.ymin - offset;
        a.xmax = b.xmax + offset;
        a.ymax = b.ymax + offset
    }
    function pointDistance(x1, y1, x2, y2) {
        var dx = x1 - x2;
        var dy = y1 - y2;
        return Math.sqrt(dx * dx + dy * dy)
    }
    function vector(x, y) {
        return {
            x: x,
            y: y
        }
    }
    function vectorAdd(V1, V2) {
        return vector(V1.x + V2.x, V1.y + V2.y)
    }
    function scalarMul(s, V) {
        return vector(s * V.x, s * V.y)
    }
    function length(V) {
        return Math.sqrt(V.x * V.x + V.y * V.y)
    }
    function normalize(V) {
        return scalarMul(1 / length(V), V)
    }
    function offset(d, P1, P2) {
        var O, OP1, OP2;
        O = scalarMul(d, normalize(vector(P1.y - P2.y, P2.x - P1.x)));
        OP1 = vectorAdd(O, P1);
        OP2 = vectorAdd(O, P2);
        return [OP1, OP2]
    }
    function intersectLines(p1, p2, p3, p4, dist) {
        var dx1 = p2.x - p1.x;
        var dx2 = p4.x - p3.x;
        var dy1 = p2.y - p1.y;
        var dy2 = p4.y - p3.y;
        var den = dx1 * dy2 - dy1 * dx2;
        if (den < 0.0001) {
            return p3
        }
        var ub = (dx1 * (p1.y - p3.y) - dy1 * (p1.x - p3.x)) / den;
        if (ub * Math.sqrt(dx2 * dx2 + dy2 * dy2) > dist) {
            return p3
        } else {
            return {
                x: p3.x + ub * dx2,
                y: p3.y + ub * dy2
            }
        }
    }
    function doOffset(element, dist) {
        if (!element.px) {
            var a = element.p;
            var len = a.length;
            var v0 = vector(a[0], a[1]);
            var p1;
            var p2 = null ;
            for (var i = 2; i < len; i += 2) {
                var v1 = v0;
                var v2 = vector(a[i], a[i + 1]);
                v0 = v2;
                var o = offset(dist / 10, v1, v2);
                if (p2) {
                    p1 = intersectLines(p1, p2, o[0], o[1], dist)
                } else {
                    p1 = o[0]
                }
                p2 = o[1];
                a[i - 2] = Math.round(p1.x * 10) / 10;
                a[i - 1] = Math.round(p1.y * 10) / 10;
                p1 = o[0]
            }
            a[len - 2] = Math.round(p2.x * 10) / 10;
            a[len - 1] = Math.round(p2.y * 10) / 10
        }
    }
    function removeDOM(el) {
        if (!el.remove) {
            el = $(el)
        }
        el.remove()
    }
    function getTimestamp(el, d) {
        if (el.lid) {
            if (d.dynamic) {
                el.url_prefix = giscloud_tile_url + "d/" + d.modified + "/" + el.mid + "/" + el.lid;
                var t = new Date().getTime();
                el.url = giscloud_tile_url + "d/" + d.modified + "/" + el.mid + "/" + el.lid + "/dyn," + t + "/";
                el.url3 = giscloud_tile_url + "d/";
                el.t = t;
                el.modified = d.modified;
                el.dynamic = true
            } else {
                var tile_prefix;
                if (giscloud.app && giscloud.app.option("DISABLE_CORS")) {
                    tile_prefix = "dt/"
                } else {
                    tile_prefix = "t/"
                }
                var token = "," + giscloud.tile_token;
                token = "";
                el.url = giscloud_tile_url + tile_prefix + d.modified + "/" + el.mid + token + "/" + el.lid + "/";
                el.url2 = giscloud_tile_url + tile_prefix;
                el.modified = d.modified
            }
        } else {
            if (fields) {
                el.url = giscloud_tile_url + "vt3/" + d.modified + "/" + el.mid + "/" + fields + "/"
            } else {
                el.url = giscloud_tile_url + "vt2/" + d.modified + "/" + el.mid + "/"
            }
        }
        var t;
        while (t = tile_buffer.pop()) {
            if (fields) {
                ajaxLoader(drawGeomCanvas, el.url + t.uri + ".json?fields=" + fields, t.tile, t.uri)
            } else {
                ajaxLoader(drawGeomCanvas, el.url + t.uri + ".json", t.tile, t.uri)
            }
        }
        if (el.map) {
            el.map.getDiv().firstChild.firstChild.firstChild.firstChild.style.zIndex = 150
        }
    }
    function jsonCanvas(ownerDocument, obj) {
        var d = ownerDocument.createElement("div");
        var c = ownerDocument.createElement("canvas");
        d.appendChild(c);
        d.c = c;
        c.od = ownerDocument;
        c.setAttribute("width", 256);
        c.setAttribute("height", 256);
        c.setAttribute("style", "position:relative");
        c.style.position = "relative";
        c.obj = obj;
        if (window.G_vmlCanvasManager) {
            G_vmlCanvasManager.initElement(c)
        }
        google.maps.event.addDomListener(c, "mousemove", function(evt) {
            checkForEvent(evt)
        });
        return d
    }
    function intersects(a, b) {
        if (a.xmax < b.xmin || a.xmin > b.xmax || a.ymax < b.ymin || a.ymin > b.ymax) {
            return false
        }
        return true
    }
    function findCG(P, ox, oy, b) {
        var i, A2, Areasum2 = 0, Cent3 = [], n = P.length - 2, CG = [], p1x = Math.min(Math.max(ox + P[0], b.xmin), b.xmax), p1y = Math.min(Math.max(oy + P[1], b.ymin), b.ymax), p2x, p2y, p3x, p3y;
        CG[0] = 0;
        CG[1] = 0;
        for (i = 2; i < n; i += 2) {
            p2x = Math.min(Math.max(ox + P[i], b.xmin), b.xmax);
            p2y = Math.min(Math.max(oy + P[i + 1], b.ymin), b.ymax);
            p3x = Math.min(Math.max(ox + P[i + 2], b.xmin), b.xmax);
            p3y = Math.min(Math.max(oy + P[i + 3], b.ymin), b.ymax);
            A2 = (p2x - p1x) * (p3y - p1y) - (p3x - p1x) * (p2y - p1y);
            CG[0] += A2 * (p1x + p2x + p3x);
            CG[1] += A2 * (p1y + p2y + p3y);
            Areasum2 += A2
        }
        CG[2] = Areasum2;
        return CG
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(d, e, a, f) {
    giscloud.proxy = {
        call: function(m, h, p) {
            var g = "proxy"
              , o = new e.Deferred();
            h = h || {};
            if (typeof h === "function") {
                p = h;
                h = {}
            } else {
                p = p || h.callback
            }
            h.url = m;
            a.rest.get(g, h).done(function(q) {
                try {
                    if (typeof p == "function") {
                        p(q)
                    }
                    o.resolve(users)
                } catch (r) {
                    o.reject()
                }
            }).fail(function() {
                o.reject()
            });
            return o.promise()
        }
    }
}(window, giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.geoutils = {
        merge: function(h, g) {
            var e = new d.Deferred()
              , f = "geo_utils/merge.json"
              , m = {
                sources: h
            };
            if (g && g.fieldsMap) {
                g.fields_map = d.isArray(g.fieldsMap) ? g.fieldsMap.join() : g.fieldsMap;
                delete g.fieldsMap
            }
            d.extend(m, g);
            a.rest.get(f, m, "application/json").done(function(r, q, u) {
                var p = u.getResponseHeader("Location")
                  , o = p && p.match(/tables\/(\w+)/);
                e.resolve([o && o[1]])
            }).fail(function() {
                e.reject(arguments)
            });
            return e.promise()
        },
        featuresAtPoint: function(e, h, g, q) {
            var o = new d.Deferred()
              , f = "geo_utils/features_at_point.json?"
              , m = {}
              , p = (e && e instanceof giscloud.LonLat) ? e : null ;
            if (!p || !h) {
                return
            }
            if (typeof g === "function") {
                q = g;
                g = null 
            } else {
                q = q || (g && g.callback)
            }
            f += "point_x=" + p.lon;
            f += "&point_y=" + p.lat;
            f += "&layer_id=" + h.join(",");
            if (g && g.srid) {
                f += "&srid=" + g.srid
            }
            if (g && g.buffer) {
                f += "&buffer=" + g.buffer
            }
            a.rest.get(f).done(function() {
                var r = arguments[0]
                  , u = [];
                try {
                    d.each(r, function() {
                        u.push(new giscloud.Feature(this))
                    });
                    o.resolve(u)
                } catch (v) {
                    o.reject()
                }
            }).fail(function() {
                o.reject()
            });
            if (q) {
                o.done(q)
            }
            return o.promise()
        },
        featuresAtPointForMap: function(e, g, f) {
            var h = new d.Deferred();
            giscloud.layers.byMapId(g, function(q) {
                var m, p = new Array();
                try {
                    d.each(q, function(r, u) {
                        p.push(u.id)
                    });
                    giscloud.geoutils.featuresAtPoint(e, p, m, function(r) {
                        try {
                            h.resolve(r)
                        } catch (u) {
                            h.reject()
                        }
                    })
                } catch (o) {
                    h.reject()
                }
            });
            return h.promise()
        },
        nearest: function(e, h, g, p) {
            var m = new d.Deferred()
              , f = "geo_utils/nearest.json?"
              , o = (e && e instanceof giscloud.LonLat) ? e : null ;
            if (!o || !h) {
                return
            }
            if (typeof g === "function") {
                p = g;
                g = null 
            } else {
                p = p || (g && g.callback)
            }
            f += "point_x=" + o.lon;
            f += "&point_y=" + o.lat;
            f += "&layer_id=" + h.join(",");
            if (g && g.srid) {
                f += "&srid=" + g.srid
            }
            if (g && g.results) {
                f += "&results=" + g.results
            }
            a.rest.get(f).done(function() {
                var q = arguments[0]
                  , r = [];
                try {
                    d.each(q, function() {
                        r.push(new giscloud.Feature(this))
                    });
                    m.resolve(r)
                } catch (u) {
                    m.reject(u)
                }
            }).fail(function() {
                m.reject(arguments)
            });
            if (p) {
                m.done(p)
            }
            return m.promise()
        },
        spatialFilter: function(o, g, f, p) {
            var m = new d.Deferred()
              , e = "geo_utils/spatial_filter.json"
              , h = {};
            if (!g) {
                return
            }
            if (typeof f === "function") {
                p = f;
                f = null 
            } else {
                p = p || (f && f.callback)
            }
            if (f && f.srid) {
                h.srid = f.srid
            }
            if (f && f.operation) {
                h.operation = f.operation
            }
            if (f && f.onlyFeatureIds) {
                h.only_feature_ids = 1
            }
            if (f && f.filterByExpression) {
                h.filter_by_expression = 1
            }
            if (typeof o === "string") {
                h.features = o
            } else {
                if (o instanceof giscloud.Geometry) {
                    h.filter = o.toOGC()
                }
            }
            h.layer_ids = g.join(",");
            a.rest.call("POST", e, h).done(function() {
                var q = arguments[0]
                  , r = [];
                try {
                    d.each(q, function() {
                        r.push(new giscloud.Feature(this))
                    });
                    m.resolve(r)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            if (p) {
                m.done(p)
            }
            return m.promise()
        },
        area: function(h, o, p, q) {
            var f = h;
            if (f.rings) {
                var g = new giscloud.GraphicStyle("polygon");
                f = new giscloud.GraphicFeature(h,g)
            }
            var m = new d.Deferred()
              , e = "geo_utils/area.json?geometry=" + f.toOGC() + "&geometry_srid=" + o + "&output_srid=" + p;
            a.rest.call("POST", e).done(function() {
                var r = arguments[0]
                  , v = "";
                try {
                    d.each(r, function() {
                        v = this.toString()
                    });
                    m.resolve(v)
                } catch (u) {
                    m.reject()
                }
            }).fail(function() {
                m.reject()
            });
            if (q) {
                m.done(q)
            }
            return m.promise()
        },
        featureArea: function(h, m, g, q, r) {
            if (!h || !m) {
                console.log("Please define layer id and feature id to proceed.");
                return
            }
            if (!g) {
                g = "900913"
            }
            if (!q) {
                q = g
            }
            var o = h
              , f = m
              , p = ""
              , e = new d.Deferred();
            giscloud.features.byId(o, f, {
                geometry: "wkt"
            }).done(function(v) {
                if (v.geometry) {
                    p = v.geometry;
                    var u = "geo_utils/area.json?geometry=" + p + "&geometry_srid=" + g + "&output_srid=" + q;
                    a.rest.call("POST", u).done(function() {
                        var z = arguments[0]
                          , C = "";
                        try {
                            d.each(z, function() {
                                C = this.toString()
                            });
                            e.resolve(C)
                        } catch (B) {
                            e.reject()
                        }
                    }).fail(function() {
                        e.reject()
                    })
                } else {
                    console.log("Geometry is not defined.");
                    return
                }
            });
            if (r) {
                e.done(r)
            }
            return e.promise()
        },
        featureBounds: function(e, g, o) {
            var m = new d.Deferred()
              , f = "geo_utils/feature_bounds.json?"
              , h = {};
            if (!e) {
                return
            }
            f += "layer_id=" + e;
            if (g && g.where) {
                f += "&where=" + encodeURIComponent(g.where)
            }
            if (g && g.srid) {
                f += "&srid=" + g.srid
            }
            if (g && g.proj4) {
                f += "&proj4=" + encodeURIComponent(g.proj4)
            }
            a.rest.get(f).done(function() {
                var p = arguments[0];
                m.resolve(p)
            }).fail(function() {
                m.reject(arguments)
            });
            if (o) {
                m.done(o)
            }
            return m.promise()
        },
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(d, a) {
    giscloud.geocoder = {
        query: function(h, f, o) {
            var g = new d.Deferred()
              , e = "geocoder.json"
              , m = {
                service: "tt"
            };
            if (typeof f === "function") {
                o = f;
                f = null 
            } else {
                o = o || (f && f.callback)
            }
            if (typeof h == "object") {
                d.extend(m, h)
            } else {
                if (typeof h == "string") {
                    d.extend(m, {
                        address: h
                    })
                } else {
                    console.log("Invalid first arg.");
                    return g
                }
            }
            if (f && f.srid) {
                m.srid = f.srid
            }
            if (f && f.service) {
                m.service = f.service.toLowerCase()
            }
            a.rest.get(e, m).done(function() {
                var p = arguments[0]
                  , q = {};
                if (m.service == "tt") {
                    try {
                        q.results = p.geoResponse.geoResult;
                        d.each(q.results, function(u, v) {
                            delete v.geohash;
                            delete v.mapName;
                            delete v.isCensusMicropolitanFlag;
                            delete v.iteration;
                            delete v.widthMeters;
                            delete v.heightMeters
                        });
                        g.resolve(q)
                    } catch (r) {
                        g.reject()
                    }
                } else {
                    q.results = p;
                    g.resolve(q)
                }
            }).fail(function() {
                var p = arguments[0]
                  , q = p ? d.parseJSON(p.responseText) : null ;
                g.reject(q, p ? p.status : null )
            });
            if (o) {
                g.done(o)
            }
            return g.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(E, u, K, v) {
    var M, S, O, o, N, g, f = Math.PI / 180, q, p, C, d, H, r, G, F, I, m = {
        color: new giscloud.Color(160,160,160,100),
        size: 1
    }, h = new giscloud.GraphicStyle(m), B = new giscloud.GraphicStyle("point"), J, z = false, a, R, e;
    giscloud.ui.defaultTools.azimuth = function() {
        return new giscloud.ui.Toolbar.Tool("azimuth",{
            styles: {
                caption: "Azimuth",
                showCaption: false,
                cssClass: "gc-tool-azimuth",
                active: "gc-tool-azimuth-active",
                hover: "gc-tool-azimuth-hover"
            },
            actions: {
                activation: function(T) {
                    e = T;
                    e.loading.done(function() {
                        e.bind("mouseDown", Q);
                        e.bind("mouseMove", P);
                        u(e.container()).addClass("gc-edit-cursor")
                    })
                },
                deactivation: function(T) {
                    e = T;
                    for (var U = 0; U < e.markers.length; U++) {
                        e.markers[U].visible(false)
                    }
                    e.graphic.unbind("doubleClick", D);
                    e.unbind("mouseMove", P);
                    e.unbind("mouseDown", Q);
                    u(e.container()).removeClass("gc-edit-cursor");
                    e.graphic.clear();
                    J = null ;
                    r = null ;
                    M = null ;
                    z = false;
                    d = null 
                }
            }
        })
    }
    ;
    function Q(T) {
        if (J) {
            e.graphic.add(J);
            C = new giscloud.LabelMarker();
            e.addMarker(C);
            C.location(T).content(a);
            J = null 
        }
        q = new giscloud.geometry.Point(T.lon,T.lat);
        o = T.lon * f;
        O = T.lat * f;
        if (!z) {
            H = new giscloud.GraphicFeature(q,B);
            e.graphic.add(H);
            e.graphic.bind("doubleClick", D)
        }
        z = true
    }
    function P(W) {
        var V, Y, T, U;
        if (!z) {
            return
        }
        p = new giscloud.geometry.Point(W.lon,W.lat);
        G = new giscloud.geometry.Line([q, p]);
        if (!J) {
            J = new giscloud.GraphicFeature(G,h);
            e.graphic.add(J)
        }
        J.geometry(G);
        if (!r) {
            r = new giscloud.GraphicFeature(p,B);
            e.graphic.add(r)
        }
        r.geometry(p);
        g = W.lon * f;
        N = W.lat * f;
        F = g - o;
        I = N - O;
        if (F > 0 && I > 0) {
            V = (Math.atan((F) / (I))) * (1 / f)
        } else {
            if (F > 0 && I < 0) {
                V = ((Math.atan((F) / (I))) * (1 / f)) + 180
            } else {
                if (F < 0 && I < 0) {
                    V = ((Math.atan((F) / (I))) * (1 / f)) + 180
                } else {
                    if (F < 0 && I > 0) {
                        V = ((Math.atan((F) / (I))) * (1 / f)) + 360
                    } else {
                        if (F === 0 && I > 0) {
                            V = 0
                        } else {
                            if (F === 0 && I < 0) {
                                V = 180
                            } else {
                                if (F > 0 && I === 0) {
                                    V = 90
                                } else {
                                    if (F < 0 && I === 0) {
                                        V = 270
                                    } else {
                                        if (F === 0 && I === 0) {
                                            V = 0
                                        } else {
                                            console.log("Problem with azimuth!")
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        Y = V | 0;
        T = (Math.abs(V - Y)) * 60 | 0;
        U = ((Math.abs(V - Y)) * 3600 - T * 60) | 0;
        a = Y + "°" + T + "'" + U + "''";
        if (!d) {
            d = new giscloud.LabelMarker();
            e.addMarker(d)
        }
        d.location(W).content(a)
    }
    function D() {
        J = null ;
        r = null ;
        M = null ;
        z = false;
        d = null ;
        return
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(q, h, r, f) {
    var o = this, p, d, m, a = new giscloud.GraphicStyle({
        color: giscloud.Color.fromHex(0),
        size: 1
    }), z = new giscloud.GraphicStyle({
        size: 1,
        color: new giscloud.Color(0,0,0),
        fill: new giscloud.Color(255,0,0)
    });
    giscloud.ui.defaultTools.freehand = function(D) {
        p = new giscloud.ui.Toolbar.Tool("freehand",{
            styles: {
                caption: "Freehand",
                showCaption: false,
                cssClass: "gc-tool-freehand",
                active: "gc-tool-freehand-active",
                hover: "gc-tool-freehand-hover"
            },
            actions: {
                activation: function(E) {
                    m = E;
                    m.loading.done(function() {
                        v();
                        h(m.container()).addClass("gc-edit-cursor")
                    })
                },
                deactivation: function(E) {
                    g()
                }
            }
        });
        p.layerId = D && D.layerId ? D.layerId : null ;
        return p
    }
    ;
    function v() {
        if (d) {
            m.graphic.remove(d)
        }
        m.instance.setTool("SelectTool");
        e()
    }
    function g() {
        if (d) {
            m.graphic.remove(d)
        }
        m.graphic.cancelDraw();
        h(m.container()).off("mousedown", B);
        h(m.container()).off("mouseup", C)
    }
    function C(D) {
        o.lastMouseEvent = D;
        m.graphic.acceptDraw()
    }
    function B(D) {
        if (h.inArray(h(D.target).prop("tagName").toLowerCase(), ["svg", "canvas"]) == -1) {
            e();
            return
        }
        h(document).one("mouseup", C)
    }
    function e() {
        h(m.container()).one("mousedown", B);
        m.graphic.draw("freehand", a).done(function(G) {
            if (d) {
                m.graphic.remove(d)
            }
            var E = G.geometry(), F;
            E.lines[0].points.push(E.lines[0].points[0]);
            E = new giscloud.geometry.Polygon(E.lines);
            F = p.layerId ? p.layerId : null ;
            if (!F) {
                var D = q.gcapp && gcapp.gclayer.llist ? gcapp.gclayer.llist.getSelected() : null ;
                F = D ? D.id : null 
            }
            if (!F) {
                if (giscloud.ui && giscloud.ui.alert) {
                    giscloud.ui.alert.red(__("No layer selected"), 2000)
                }
                e();
                return
            }
            if (giscloud.ui && giscloud.ui.alert) {
                giscloud.ui.alert.red(__("PleaseWait"))
            }
            giscloud.geoutils.spatialFilter(E, [F], {
                srid: m.instance.epsg,
                operation: "intersect",
                onlyFeatureIds: 1
            }).always(function() {
                if (giscloud.ui && giscloud.ui.alert) {
                    giscloud.ui.alert.hide()
                }
            }).done(function(H) {
                u(H)
            });
            d = new giscloud.GraphicFeature(E,z);
            m.graphic.add(d);
            p.trigger("select", {
                geometry: E
            });
            e()
        })
    }
    function u(D) {
        p.trigger("selectFeatures", {
            features: D
        });
        if (q.gcapp) {
            var E = {
                lid: gcapp.gclayer.llist.getSelected().id,
                fids: []
            };
            h.each(D, function(F, G) {
                E.fids.push(G.id)
            });
            E.fids = E.fids.join(",");
            gcapp.selo.onGetFeaturesByBoundComplete(E, o.lastMouseEvent.originalEvent)
        } else {
            m.selection.clear();
            h.each(D, function(G, F) {
                m.selectFeature(p.layerId, F.id)
            })
        }
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(q, g, B, h) {
    var o, I = {
        url: "...",
        width: 0,
        height: 0
    }, F, H = [], C, u, v, J, d, z = 3410, G = true, K, f, p = "m";
    giscloud.ui.defaultTools.areaMeasure = function(M) {
        if (M && M.srid) {
            giscloud.ui.defaultTools.areaMeasure.outputSrid(M.srid)
        }
        if (M && M.unit) {
            giscloud.ui.defaultTools.areaMeasure.measureUnit(M.unit)
        }
        return new giscloud.ui.Toolbar.Tool("areaMeasure",g.extend({
            styles: {
                caption: "Area measure",
                showCaption: false,
                cssClass: "gc-tool-areaMeasure",
                active: "gc-tool-areaMeasure-active",
                hover: "gc-tool-areaMeasure-hover"
            },
            actions: {
                activation: function(N) {
                    d = N;
                    g(document).keyup(a);
                    d.loading.done(function() {
                        d.bind("mouseDown", m);
                        g(d.container()).addClass("gc-edit-cursor")
                    })
                },
                deactivation: function(N) {
                    var P = 0
                      , O = d.markers;
                    d = N;
                    g(document).unbind("keyup");
                    d.unbind("mouseDown", m);
                    d.graphic.clear();
                    H = [];
                    C = null ;
                    u = null ;
                    v = null ;
                    G = true;
                    K = null ;
                    o = null ;
                    for (P; P < O.length; P++) {
                        O[P].visible(false)
                    }
                }
            }
        }, M || {}))
    }
    ;
    function a(N) {
        var M = 0;
        if (N.keyCode == 27) {
            d.graphic.clear();
            for (M; M < d.markers.length; M++) {
                d.markers[M].visible(false)
            }
        }
    }
    giscloud.ui.defaultTools.areaMeasure.outputSrid = function(M) {
        if (!M) {
            if (q.user && q.user.options && user.options.UNIT_SRID) {
                z = user.options.UNIT_SRID
            }
        } else {
            z = M
        }
        return z
    }
    ;
    giscloud.ui.defaultTools.areaMeasure.measureUnit = function(M) {
        if (M !== h && D(M)) {
            p = M
        }
        return p
    }
    ;
    function D(M) {
        if (typeof M !== "string") {
            return null 
        }
        if (!giscloud.toSqMeterRatio[M] && !giscloud.toMeterRatios[M]) {
            return null 
        }
        return M
    }
    function m(M) {
        f = M;
        if (G) {
            K = giscloud.ui.map.graphic.draw("polygon").progress(E).then(r);
            G = false
        }
        return
    }
    function E(M) {
        if (M) {
            e(f)
        }
        return
    }
    function e(Q) {
        var M, O, N, R = Proj4js.defs["EPSG:" + z] ? new Proj4js.Proj("EPSG:" + z).units : new Proj4js.Proj("GC_MAP_CURRENT").units, P;
        F = new giscloud.geometry.Point(Q.lon,Q.lat);
        H.push(F);
        if (H.length === 1) {
            C = new giscloud.LonLat(Q.lon,Q.lat);
            return
        }
        if (H.length > 1) {
            if (!u) {
                u = new giscloud.geometry.Line(H);
                return
            } else {
                u.points.push(F)
            }
        }
        if (H.length > 2) {
            if (!v) {
                v = new giscloud.geometry.Polygon([u])
            } else {
                v.rings[0].points.push(F)
            }
            if (d.instance.epsg) {
                J = parseInt(d.instance.epsg)
            } else {
                J = 3410
            }
            giscloud.geoutils.area(v, J, z).done(function(S) {
                if (!o) {
                    o = new giscloud.Marker();
                    o.icon(I);
                    d.addMarker(o)
                }
                var T = S;
                if (p !== R && R !== "degrees" && S !== "0") {
                    if (p == "acre" || p == "ha") {
                        S = giscloud.toMeters(R, parseFloat(S), true);
                        S = giscloud.fromSquareMeter(p, S)
                    } else {
                        S = giscloud.toMeters(R, parseFloat(S), true);
                        S = giscloud.fromMeters(p, S, true)
                    }
                }
                S = parseFloat(S).toFixed(2).toString().replace(".", ",");
                switch (p) {
                case "foot":
                case "us survey foot":
                case "foot_us":
                    P = "ft";
                    break;
                case "meter":
                case "meters":
                    P = "m";
                    break;
                case "acres":
                    P = "acres";
                    break;
                default:
                    P = p
                }
                giscloud.ui.map.instance.exposeLeaflet().fireEvent("areaMeasure", {
                    epsg_area: T,
                    epsg_unit: R,
                    epsg: J
                });
                N = S.split(",");
                M = 0;
                O = N[0].length - 3;
                for (O; O > 0; O = O - 3) {
                    S = [S.slice(0, O), ".", S.slice(O)].join("");
                    M++
                }
                if (p == "acre" || p == "ha") {
                    S = S + "&nbsp;" + P + "&nbsp;"
                } else {
                    S = S + "&nbsp;" + P + "<sup>2</sup>"
                }
                o.location(C).label(S)
            }).fail(function() {
                alert("Problem with area measurement!")
            })
        }
    }
    function r() {
        H = [];
        C = null ;
        counter = 0;
        u = null ;
        v = null ;
        o = null ;
        moveLine = null ;
        activate = false;
        G = true;
        K = null ;
        return
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(h, e, m, a) {
    var g, d, f;
    giscloud.ui.defaultTools.countByPolygon = function() {
        return new giscloud.ui.Toolbar.Tool("countByPolygon",{
            styles: {
                caption: "Count by polygon",
                showCaption: false,
                cssClass: "gc-tool-countByPolygon",
                active: "gc-tool-countByPolygon-active",
                hover: "gc-tool-countByPolygon-hover"
            },
            actions: {
                activation: function(q) {
                    g = q;
                    g.loading.done(function() {
                        g.instance.setTool("AreaSelection");
                        g.instance.addEventListener("areaselection", p)
                    })
                },
                deactivation: function(q) {
                    g.instance.removeEventListener("areaselection", p)
                }
            }
        })
    }
    ;
    function o() {
        if (d) {
            g.graphic.remove(d)
        }
        if (f) {
            g.removeMarker(f)
        }
    }
    function p(C) {
        var z = giscloud.ui.layerList.selected();
        if (z == null  || isNaN(z)) {
            alert("Please select the layer first.");
            return
        }
        var q = new giscloud.Bounds(Math.min(C.xMin, C.xMax),Math.min(C.yMin, C.yMax),Math.max(C.xMin, C.xMax),Math.max(C.yMin, C.yMax));
        o();
        var B = [];
        B.push(new giscloud.geometry.Point(C.xMin,C.yMin));
        B.push(new giscloud.geometry.Point(C.xMax,C.yMin));
        B.push(new giscloud.geometry.Point(C.xMax,C.yMax));
        B.push(new giscloud.geometry.Point(C.xMin,C.yMax));
        B.push(new giscloud.geometry.Point(C.xMin,C.yMin));
        var u = new giscloud.GraphicStyle("polygon")
          , E = new giscloud.geometry.Line(B)
          , r = new giscloud.geometry.Polygon([E]);
        d = new giscloud.GraphicFeature(r,u);
        d.bind("click", o);
        g.graphic.add(d);
        var v = new giscloud.LonLat(q.left,q.top)
          , D = "Loading...";
        f = new giscloud.LabelMarker();
        g.addMarker(f);
        f.location(v).content(D);
        giscloud.features.byBounds(z, q).done(function(G) {
            var F = G.length >= 5000 ? G.length + "+" : G.length;
            f.content(F)
        })
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(g, h) {
    var f = {
        title: "GIS Cloud",
        message: "",
        value: null ,
        placeholder: null ,
        container: null ,
        inputType: "text",
        inputValues: null 
    }
      , m = {
        width: "auto",
        overlay: false,
        escClose: true,
        draggable: true,
        privateButtons: true,
        buttons: [{
            "class": "btn btn-default gc-prompt-cancel-button",
            html: h.__("Cancel")
        }, {
            "class": "btn btn-primary gc-prompt-ok-button",
            html: h.__("OK")
        }]
    }
      , o = g("<div/>", {
        "class": "gc-prompt-buttons"
    }).append(g("<button/>", {
        "class": "btn btn-primary gc-prompt-ok-button",
        value: h.__("OK")
    }), g("<button/>", {
        "class": "btn btn-default gc-prompt-cancel-button",
        value: h.__("Cancel")
    }));
    function r(u, v) {
        if (v && v.length) {
            setTimeout(function() {
                v.empty().remove();
                v = null 
            }, 1000)
        }
        u.empty().remove();
        u = null 
    }
    function p(z, v, u) {
        if (u.which === 13) {
            a(z, v)
        }
    }
    function q(v, u) {
        if (u.data("gc-prompt-result")) {
            v.resolve(u.find(".gc-prompt-input").val())
        } else {
            v.reject()
        }
        r(u, u.closest(".modal"))
    }
    function a(v, u) {
        u.data("gc-prompt-result", true);
        if (u.data("gc-prompt-modal")) {
            u.closest(".modal").hide()
        }
        q(v, u)
    }
    function e(v, u) {
        if (u.data("gc-prompt-modal")) {
            u.closest(".modal").hide()
        }
        q(v, u)
    }
    giscloud.ui.prompt = function d(G, E, C, D, v) {
        var H, F, z, B, u = new g.Deferred();
        if (g.isPlainObject(G)) {
            H = g.extend(true, {}, f, G)
        } else {
            H = g.extend(true, {}, f);
            H.title = C != null  ? C : H.title;
            H.message = G != null  ? G : H.message;
            H.value = E != null  ? E : H.value;
            H.placeholder = D != null  ? D : H.placeholder;
            H.container = v != null  ? v : H.container
        }
        if (H.inputType === "select") {
            B = g("<select/>", {
                "class": " form-control gc-prompt-input gc-prompt-input-select"
            });
            B.append(g.map(H.inputValues || [], function(I) {
                if (I.name) {
                    return g("<option/>", {
                        text: I.title || I.name,
                        value: I.name
                    })
                }
                return g("<option/>", {
                    text: I,
                    value: I
                })
            }))
        } else {
            B = g("<input/>", {
                type: H.inputType,
                "class": "form-control gc-prompt-input gc-prompt-input-" + H.inputType
            })
        }
        z = g("<div/>", {
            "class": "form-group gc-prompt-content"
        }).append(g("<label/>", {
            "class": "gc-prompt-message",
            html: H.message
        }), B);
        if (H.container) {
            H.container = g(H.container);
            H.container.addClass("gc-prompt-container");
            H.container.append(z);
            H.container.append(o);
            H.container.on("click", ".gc-prompt-ok-button", g.proxy(a, window, u, H.container)).on("click", ".gc-prompt-cancel-button", g.proxy(e, window, u, H.container));
            if (H.value != null ) {
                B.val(H.value)
            }
            B.focus()
        } else {
            F = giscloud.ui.modal(g.extend(true, {}, m, {
                title: H.title,
                content: z[0].outerHTML
            }));
            H.container = F.find(".modal-body");
            H.container.data("gc-prompt-modal", true);
            F.on("hide.bs.modal", g.proxy(q, window, u, H.container)).on("keydown", g.proxy(p, window, u, H.container)).on("click", ".gc-prompt-ok-button", g.proxy(a, window, u, H.container)).on("click", ".gc-prompt-cancel-button", g.proxy(e, window, u, H.container));
            F.one("shown.bs.modal", function() {
                var I = g(this).find(".gc-prompt-input");
                if (H.value != null ) {
                    I.val(H.value)
                }
                I.focus()
            })
        }
        H.container.data("gc-prompt-result", false);
        return u.promise()
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(a) {
    giscloud.ui.ProjectionPicker = function(h, B) {
        var m = this, q, z, o, r = [], u, e, f, d, p, g = {
            my: "left top",
            at: "left bottom",
            collision: "none"
        }, v = [{
            epsg: 900913,
            title: "EPSG:900913 Global Mercator(e.g. Google projection)",
            proj4: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
        }, {
            epsg: 4326,
            title: "EPSG:4326 WGS84",
            proj4: "+proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees"
        }, {
            epsg: 3410,
            title: "EPSG:3410 NSIDC EASE-Grid Global",
            proj4: "+proj=cea +lon_0=0 +lat_ts=30 +x_0=0 +y_0=0 +a=6371228 +b=6371228 +units=m +no_defs",
            addToProj4js: true
        }];
        this.options = B;
        m.init = function() {
            if (B && !B.no_title) {
                var M = B.title || "Choose projection";
                h.html(M)
            }
            z = a("<div/>", {
                "class": "gc-projectionpicker"
            });
            var G = a("<div/>", {
                text: gclang.Last_used_spatial_projection,
                "class": "gc-header"
            });
            var H = a("<ul/>", {
                "class": "gc-list"
            });
            var C = a("<div/>", {
                "class": "gc-aux-menu"
            });
            a("body").append(z);
            z.append(G, H, C);
            e = z.find(".gc-aux-menu");
            var F = a("<span/>", {
                text: gclang.Projection_is_not_on_the_list__Look_up_the_full_list_,
                "class": "gc-comment"
            });
            var K = a("<a/>", {
                text: gclang.Open_projection_form,
                "class": "gc-projection-form linkbutton"
            });
            e.append(F, K);
            u = z.find(".gc-projection-form");
            o = z.find(".gc-list");
            a(h).click(m.toggle);
            u.click(m.openProjectionForm);
            a(document).mouseup(function(N) {
                if (f && !z.is(N.target) && !a(h).is(N.target) && z.has(N.target).length === 0) {
                    m.close()
                }
            });
            a(document).keyup(function(N) {
                if (N.keyCode == 27) {
                    m.close()
                }
            });
            var I;
            if (a.cookie) {
                I = (a.cookie("gc-projection-last-used") && a.cookie("gc-projection-last-used").length) ? a.parseJSON(a.cookie("gc-projection-last-used")) : null 
            }
            I = I && I.length ? I : v;
            a.each(I, function(O, N) {
                m.addProjection(N)
            });
            if (B && B.hidden_fields) {
                var E = B.epsg_field || "epsg";
                var J = B.proj4_field || "proj4";
                var D = h.parents("form:first");
                d = D.find("input[name='" + E + "']").first();
                p = D.find("input[name='" + J + "']").first();
                if (d.length && p.length) {
                    m.select({
                        epsg: d.val(),
                        proj4: p.val()
                    })
                } else {
                    d = a("<input type='hidden' name='" + E + "' />");
                    D.prepend(d);
                    p = a("<input type='hidden' name='" + J + "' />");
                    D.prepend(p)
                }
            }
            if (B && B.default_proj) {
                m.select(B.default_proj)
            }
        }
        ;
        m.openProjectionForm = function(C) {
            showProjections({
                proj4: a("#proj4").val()
            }, function(D) {
                if (!D || !D.proj4) {
                    return
                }
                m.setProjTitle(D);
                m.select(D)
            });
            m.close()
        }
        ,
        m.setProjTitle = function(C) {
            if (C.title) {
                return
            }
            C.title = "EPSG:" + (C.epsg > 0 ? C.epsg : "Unknown");
            if (C.name) {
                C.title += " " + C.name
            }
        }
        ,
        m.active = function() {
            return q
        }
        ,
        m.unselect = function(C) {
            if (B && !B.no_title) {
                var D = (B && B.title) || "Choose projection";
                h.html(D)
            }
            h.attr("title", "");
            if (d && p) {
                d.val(null );
                p.val(null )
            }
            q = null ;
            m.close();
            o.find("li").removeClass("gc-active")
        }
        ,
        m.select = function(C) {
            if (!C || !a.isNumeric(C.epsg)) {
                return
            }
            m.setProjTitle(C);
            if (m.options && !m.options.no_title) {
                h.html(C.title)
            }
            h.attr("title", "EPSG:" + C.epsg + " Proj4: " + C.proj4);
            if (d && p) {
                d.val(C.epsg);
                p.val(C.proj4)
            }
            q = C;
            m.close();
            m.addProjection(C, true);
            a.each(o.find("li").removeClass("gc-active"), function(E, D) {
                var D = a(D)
                  , F = D.data("proj");
                if (F && F.epsg == C.epsg) {
                    D.addClass("gc-active")
                }
            });
            if (C.epsg > 0) {
                a.each(r, function(D, E) {
                    if (E.epsg == C.epsg) {
                        r.splice(D, 1);
                        r.splice(0, 0, C)
                    }
                });
                m.saveCookie()
            }
            h.trigger("select", C)
        }
        ,
        m.addProjection = function(C, F) {
            if (!C || !(C.epsg > 0)) {
                return
            }
            var E = false;
            a.each(r, function(G, H) {
                if (H.epsg == C.epsg) {
                    E = true
                }
            });
            if (E) {
                return
            }
            m.setProjTitle(C);
            var D = a("<li/>", {
                text: C.title,
                title: C.proj4
            });
            D.click(function() {
                m.select(C, true)
            });
            if (F) {
                o.prepend(D);
                r.splice(0, 0, C)
            } else {
                o.append(D);
                r.push(C)
            }
            D.data("proj", C);
            r = a(r).slice(0, 10);
            m.saveCookie();
            if (C.addToProj4js) {
                Proj4js.defs["EPSG:" + C.epsg] = C.proj4
            }
        }
        ,
        m.saveCookie = function() {
            if (!a.cookie) {
                return
            }
            var C = [];
            a.each(r, function(D, E) {
                C.push({
                    epsg: E.epsg,
                    proj4: E.proj4,
                    title: E.title
                })
            });
            a.cookie("gc-projection-last-used", JSON.stringify(C))
        }
        ,
        m.toggle = function() {
            if (f) {
                m.close()
            } else {
                m.open()
            }
        }
        ;
        m.open = function(C) {
            z.show();
            h.addClass("gc-hover");
            f = true;
            z.position(a.extend({
                of: h
            }, g))
        }
        ;
        m.close = function(C) {
            z.hide();
            h.removeClass("gc-hover");
            f = false
        }
        ;
        m.init()
    }
    ;
    a(function() {})
}(giscloud.exposeJQuery()));
(function(e, f, a, g) {
    var d = {
        data_filter_input: {
            code: "DATA_FILTER_INPUT",
            label: "Input Filter"
        },
        data_filter_autocomplete: {
            code: "DATA_FILTER_AUTOCOMPLETE",
            label: "Autocomplete filter"
        },
        data_filter_minmax: {
            code: "DATA_FILTER_MINMAX",
            type: [0, 2],
            label: "Min/Max filter"
        },
        data_filter_range: {
            code: "DATA_FILTER_RANGE",
            type: [0, 2],
            label: "Range filter"
        },
        data_filter_dropdown: {
            code: "DATA_FILTER_DROPDOWN",
            label: "Dropdown filter"
        },
        data_filter_datetime: {
            code: "DATA_FILTER_DATETIME",
            type: [0, 2, 11],
            label: "Date filter"
        },
        data_filter_slider: {
            code: "DATA_FILTER_SLIDER",
            type: [0, 2],
            label: "Slider filter"
        },
        data_filter_features_number: {
            code: "DATA_FILTER_FEATURES_NUMBER",
            label: "Features number filter"
        }
    };
    giscloud.ui.filters = function(o, q, h) {
        var m = this, r, p = false;
        m.eventNamespace = "gc-filter";
        m.options = {
            gcdatagrid: null ,
            viewer: null ,
            zoomToFeatures: true,
            flagRelevantVal: false
        };
        m.EVENTS = ["filter-add", "filter-remove", "panel-rendering", "panel-rendered"];
        m.layerId = null ;
        m.whereObjects = [];
        m.whereObjectsBetween = [];
        m.filterColumnsList = [];
        m.layer = null ;
        m.init = function() {
            m.options = f.extend(true, {}, m.options, h);
            if (e.gcdatagrid && !m.options.gcdatagrid) {
                m.options.gcdatagrid = e.gcdatagrid
            }
            if (giscloud.ui.map && !m.options.viewer) {
                m.options.viewer = giscloud.ui.map
            }
            m.layerId = o.layer_id;
            m.layer = m.options.viewer.layerById(m.layerId);
            if (!m.options.viewer) {
                throw "giscloud.ui.filters: viewer is not defined"
            }
            if (!m.layerId) {
                throw "giscloud.ui.filters: layerId is not defined"
            }
            if (!m.layer) {
                throw "giscloud.ui.filters: layer is not defined"
            }
            if (m.options.gcdatagrid) {
                m.options.gcdatagrid.addEvent("applyfilters", function() {
                    m.getNumOfFeatures()
                })
            }
            m.render();
            m.getNumOfFeatures()
        }
        ;
        m.on = function() {
            f(m).on.apply(m, Array.prototype.slice.apply(arguments));
            return m
        }
        ;
        m.off = function() {
            f(m).off.apply(m, Array.prototype.slice.apply(arguments));
            return m
        }
        ;
        m.bind = function() {
            return m.on.apply(m, Array.prototype.slice.apply(arguments))
        }
        ;
        m.unbind = function() {
            return m.off.apply(m, Array.prototype.slice.apply(arguments))
        }
        ;
        m.triggerEvent = function(v, u) {
            var z = v + "." + m.eventNamespace;
            f(m).trigger(z, u)
        }
        ;
        m.failHandler = function(u) {
            throw u || "An error has occurred please contact technical support for further help"
        }
        ;
        m.render = function() {
            q.find(".gc-filter-item").remove();
            var u = o.items, v, B;
            for (v = 0; v < u.length; v++) {
                B = u[v];
                m.renderFilter(B)
            }
            var z = f("<button/>").html("Reset").css("margin-right", 10).addClass("btn btn-default btn-info btn-sm btn-reset").click(m.reset)
              , E = f("<button/>").html("Export").css("margin-right", 10).addClass("btn btn-default btn-sm btn-success").click(m.exportCSV);
            var D = f("<div/>").addClass("gc-filter-item").css("padding-top", 10);
            if (!o.search) {
                D.append(z)
            }
            if (o.export_csv) {
                D.append(E)
            }
            if (o.mail_csv) {
                r = f("<button/>").html(o.mailto_label ? o.mailto_label : "Mail").css("margin-right", 10).addClass("btn btn-default btn-sm btn-success").click(m.mailCSV).appendTo(D)
            }
            if (o.applyButton) {
                var C = f("<button/>").html("Apply").addClass("btn btn-default btn-sm btn-primary").appendTo(D)
            }
            q.append(D)
        }
        ;
        m.reset = function() {
            var u = o.items, v;
            if (m.options.gcdatagrid) {
                m.options.gcdatagrid.removeAllFilters(true)
            }
            if (m.options.gcdatagrid) {
                m.options.gcdatagrid.applyFilters()
            }
            m.clearWhereObjects();
            for (v = 0; v < u.length; v++) {
                u[v].value = null ;
                u[v].forceMin = null ;
                u[v].forceMax = null ;
                u[v].forceIncludeNull = null ;
                u[v].dataCondition = null 
            }
            m.render();
            m.triggerEvent(m.EVENTS[1], m);
            m.applyFilterOnMap()
        }
        ;
        m.exportCSV = function() {
            if (m.options.gcdatagrid) {
                m.options.gcdatagrid.last_req_params = {
                    where: m.options.gcdatagrid.options.where
                };
                m.options.gcdatagrid.downloadCSV(true)
            }
        }
        ;
        m.mailCSV = function() {
            if (m.sending_email) {
                return
            }
            r.text("Sending...");
            m.sending_email = true;
            giscloud.features.emailCSV({
                emails: o.mailto,
                layer_id: o.layer_id,
                where: m.options.gcdatagrid ? m.options.gcdatagrid.options.where : null 
            }).done(function() {
                alert("Mail has been sent successfully.")
            }).fail(function() {
                alert("Mail has NOT been sent successfully. Please try again or contact us directly.")
            }).always(function() {
                m.sending_email = false;
                r.text(o.mailto_label ? o.mailto_label : "Mail")
            })
        }
        ;
        m.apply = function(v, B, u, z) {
            if (B === "" || B == null  || B == g || (f.isArray(B) && f.inArray("__gc_no_filter", B) != -1)) {
                m.removeFilter(v, z)
            } else {
                m.addFilter(v, B, u, z)
            }
            m.refreshFilterItems(z.target)
        }
        ;
        m.refreshFilterItems = function(z) {
            var C = "", F = "", D, H, I, v, B, u, E, G;
            B = function(J) {
                if (J) {
                    J = " AND " + J
                }
                return J
            }
            ;
            u = function(J) {
                if (J) {
                    J = " OR " + J
                }
                return J
            }
            ;
            E = function(J, K) {
                if (J) {
                    J = J + " " + K + " "
                }
                return J
            }
            ;
            G = function(J) {
                return f.grep(o.items, function(K) {
                    if (K.id == J) {
                        return K
                    }
                })[0]
            }
            ;
            f.map(m.whereObjects, function(J) {
                if (J.value) {
                    if (f.isArray(J.value)) {
                        F = "";
                        f.map(J.value, function(M, K) {
                            if (K > 0) {
                                F = E(F, J.insideOpr)
                            }
                            if (M === "null") {
                                F += '"' + J.column + '" IS NULL'
                            } else {
                                F += '"' + J.column + "\"='" + M + "'"
                            }
                        });
                        if (F) {
                            C = "(" + F + ")" + B(C)
                        }
                    } else {
                        C = '"' + J.column + "\"='" + J.value + "'" + B(C)
                    }
                }
            });
            D = f.map(m.whereObjectsBetween, function(J) {
                F = "";
                if (J.max) {
                    F = '"' + J.column + '"<=' + J.max + ""
                }
                if (J.min) {
                    F = '"' + J.column + '">=' + J.min + "" + B(F)
                }
                if (F) {
                    F = "(" + F + ")"
                }
                if (J.includeNull) {
                    F = '"' + J.column + "\"='" + J.includeNull + "'" + u(F)
                }
                return F
            });
            if (D.length > 0) {
                if (D.length == 1) {
                    C = "(" + D.join(" ") + ")" + B(C)
                } else {
                    C = "(" + D.join(" AND ") + ")" + B(C)
                }
            }
            f.map(m.whereObjects, function(J) {
                H = G(J.itemId);
                if (H) {
                    H.value = J.value
                }
            });
            f.map(m.whereObjectsBetween, function(J) {
                H = G(J.itemId);
                if (H) {
                    H.value = J.value;
                    H.forceMin = J.min;
                    H.forceMax = J.max;
                    H.forceIncludeNull = J.includeNull
                }
            });
            f.map(o.items, function(J) {
                if (!J.relevantValues || z && J.id == m.getElementItemId(z)) {
                    return
                }
                if (J.relevantValues) {
                    J.dataCondition = C;
                    I = m.isFilterActive(J);
                    v = m.renderFilter(J, true);
                    if (I) {
                        v.addClass("active")
                    }
                }
            })
        }
        ;
        m.clearWhereObjects = function() {
            m.whereObjects = [];
            m.whereObjectsBetween = []
        }
        ;
        m.removeWhereObjects = function(u) {
            m.whereObjects = f.grep(m.whereObjects, function(v) {
                if (v.itemId === u) {
                    return false
                }
                return true
            });
            m.whereObjectsBetween = f.grep(m.whereObjectsBetween, function(v) {
                if (v.itemId === u) {
                    return false
                }
                return true
            })
        }
        ;
        m.applyWhereObjects = function(B, C, z, D) {
            var v = "AND"
              , u = {};
            if (z && z.between) {
                v = "BETWEEN"
            }
            if (!f.isArray(C)) {
                C = [C]
            }
            m.removeWhereObjects(D);
            if (C.length === 0) {
                return
            }
            if (v === "BETWEEN") {
                m.whereObjectsBetween.push({
                    column: B,
                    option: z,
                    min: C[0],
                    max: C[1],
                    includeNull: C[2],
                    itemId: D
                })
            } else {
                u = {
                    column: B,
                    value: C,
                    option: z,
                    insideOpr: z.insideOperator || v,
                    itemId: D
                };
                m.whereObjects.push(u)
            }
        }
        ;
        m.addFilter = function(z, B, v, D) {
            var F = f(D.target).parents("[data-column='" + z + "']") || q.find("[data-column='" + z + "']"), u, C;
            F.addClass("active");
            if (!f.isEmptyObject(v)) {
                u = v
            }
            if (m.filterColumnsList.indexOf(z) == -1) {
                m.filterColumnsList.push(z)
            }
            if (m.options.gcdatagrid) {
                C = m.options.gcdatagrid.isFilterAdded(z, B, u);
                if (C) {
                    m.options.gcdatagrid.removeFIlterByColumnAndValue(z, [u.preMin, u.preMax], u)
                }
                if (u && u.preMin && u.preMax) {
                    C = m.options.gcdatagrid.isFilterAdded(z, [u.preMin, u.preMax], {
                        itemId: u.itemId,
                        between: true
                    });
                    if (C) {
                        m.options.gcdatagrid.removeFIlterByColumnAndValue(z, [u.preMin, u.preMax], {
                            itemId: u.itemId,
                            between: true
                        })
                    }
                    delete u.preMin;
                    delete u.preMax
                }
                if (u.distinct && C !== true) {
                    C = m.options.gcdatagrid.isFilterAdded(z, B.slice(0, B.length - 1), u);
                    if (C) {
                        m.options.gcdatagrid.removeFIlterByColumnAndValue(z, B.slice(0, B.length - 1), u)
                    }
                }
                if (f.isArray(B) && B.length > 0) {
                    m.options.gcdatagrid.addFilter(z, B, u, false)
                } else {
                    if (f.isArray(B) && B.length === 0) {
                        var E = m.getWhereObjectValueAndOpt(m.getElementItemId(D.target));
                        if (E && E.value) {
                            m.options.gcdatagrid.removeFIlterByColumnAndValue(z, E.value, E.option, true)
                        }
                    } else {
                        m.options.gcdatagrid.addFilter(z, B, u, false)
                    }
                }
            }
            m.applyWhereObjects(z, B, v, m.getElementItemId(D.target));
            m.applyFilterOnMap();
            m.triggerEvent(m.EVENTS[0], m)
        }
        ;
        m.getElementItemId = function(u) {
            return f(u).parents(".gc-filter-item").attr("item-id")
        }
        ;
        m.isFilterActive = function(u) {
            return q.find(".gc-filter-item[item-id='" + u.id + "']").hasClass("active")
        }
        ;
        m.getWhereObjectValueAndOpt = function(z) {
            var v;
            var u = f.grep(m.whereObjects, function(B) {
                if (B.itemId === z) {
                    return true
                }
                return false
            })[0];
            if (!u) {
                u = f.grep(m.whereObjectsBetween, function(B) {
                    if (B.itemId === z) {
                        return true
                    }
                    return false
                })[0];
                if (u) {
                    v = [u.min, u.max];
                    if (u.includeNull) {
                        v.push(u.includeNull)
                    }
                }
            } else {
                v = [u.value]
            }
            if (v === g) {
                return
            }
            return {
                value: v,
                option: u.option
            }
        }
        ;
        m.applyFilterOnMap = function() {
            if (m.options.viewer.selection.clearHighlight) {
                m.options.viewer.selection.clearHighlight()
            }
            var u = {
                attributes: m.filterColumnsList.join(","),
                filter: function u(C) {
                    var D, z, v, B;
                    if (m.whereObjects.length === 0 && m.whereObjectsBetween.length === 0) {
                        return true
                    }
                    B = f.grep(f.merge(m.whereObjects, m.whereObjectsBetween), function(E) {
                        return C[E.column] !== g ? false : true
                    }).length === 0;
                    D = f.map(C, function(I, F) {
                        var E = f.grep(m.whereObjects, function(J) {
                            return J.column === F
                        });
                        var H = f.grep(m.whereObjectsBetween, function(J) {
                            return J.column === F
                        });
                        var G = f.grep(E, function(J) {
                            if (J.option.datetime) {
                                I = new Date(I);
                                I.setHours(0, 0, 0, 0, 0);
                                J.value[0].setHours(0, 0, 0, 0, 0)
                            }
                            if (J.option.operator) {
                                switch (J.option.operator) {
                                case "after":
                                    return J.value[0] > I;
                                case "onorafter":
                                    return J.value[0] >= I;
                                case "before":
                                    return J.value[0] < I;
                                case "onorbefore":
                                    return J.value[0] <= I
                                }
                            } else {
                                return f.isArray(J.value) ? J.value.indexOf(I) > -1 : J.value == I
                            }
                        });
                        if (G.length === 0 && H.length > 0) {
                            G = f.grep(H, function(J) {
                                return I >= J.min && I <= J.max || (J.includeNull ? I === null  : false)
                            })
                        }
                        if (E.length > 0 || H.length > 0) {
                            if (G.length === 0) {
                                G = 0
                            } else {
                                G = 1
                            }
                        } else {
                            G = 2
                        }
                        return G
                    });
                    z = f.grep(D, function(E) {
                        return E === 1
                    });
                    v = f.grep(D, function(E) {
                        return E === 2
                    });
                    return ( (z.length + v.length) === D.length && B) 
                }
            };
            m.options.viewer.filterFeatures(m.layerId, u);
            if (m.options.zoomToFeatures) {
                giscloud.geoutils.featureBounds(m.layerId, {
                    where: gcdatagrid.options.where,
                    srid: fn.getMap().epsg
                }).done(function(v) {
                    if (v.bounds.left == 0 || v.bounds.right == 0) {
                        return
                    }
                    m.options.viewer.bounds(new giscloud.Bounds(v.bounds.left,v.bounds.bottom,v.bounds.right,v.bounds.top))
                }).fail(function() {
                    var v = "Error zooming to features";
                    var z;
                    var C = "";
                    try {
                        z = JSON.parse(arguments[0][0].responseText)
                    } catch (B) {
                        console.warn("aiee, could not decode server response")
                    }
                    if (z.msg) {
                        C += z.msg
                    }
                    if (z.nested.msg) {
                        C += " " + z.nested.msg
                    }
                    if (C) {
                        C = v + ": " + C
                    } else {
                        C = v
                    }
                    giscloud.ui.alert.red().show(C, 5000);
                    f.proxy(m.failHandler, this)
                })
            }
        }
        ;
        m.removeFilter = function(B, D) {
            var v = o.items, z, C, u;
            if (m.options.gcdatagrid) {
                u = m.getWhereObjectValueAndOpt(m.getElementItemId(D.target));
                if (u && u.value && u.option) {
                    m.options.gcdatagrid.removeFIlterByColumnAndValue(B, u.value, u.option, true)
                }
            }
            for (z = 0; z < v.length; z++) {
                C = v[z];
                if (C.id.toString() === f(D.target).parents(".gc-filter-item").attr("item-id")) {
                    m.removeWhereObjects(C.id);
                    C.value = null ;
                    C.forceMin = null ;
                    C.forceMax = null ;
                    C.dataCondition = {};
                    C.forceIncludeNull = null ;
                    m.renderFilter(C, true)
                }
            }
            m.applyFilterOnMap();
            m.refreshFilterItems();
            m.triggerEvent(m.EVENTS[1], m)
        }
        ;
        m.renderFilter = function(C, z) {
            var D, u;
            var B = giscloud.ui.filters.getFilters();
            switch (C.type.toUpperCase()) {
            case B.data_filter_input.code:
                D = m.renderInput(C, z);
                break;
            case B.data_filter_autocomplete.code:
                D = m.renderAutocomplete(C, z);
                break;
            case B.data_filter_minmax.code:
                D = m.renderMinMax(C, z);
                break;
            case B.data_filter_range.code:
                D = m.renderRange(C, z);
                break;
            case B.data_filter_dropdown.code:
                D = m.renderDropdown(C, z);
                break;
            case B.data_filter_datetime.code:
                D = m.renderDateTime(C, z);
                break;
            case B.data_filter_slider.code:
                D = m.renderSlider(C, z);
                break;
            case B.data_filter_features_number.code:
                m.renderFeaturesNumber(C, z);
                D = null ;
                break;
            default:
                D = null ;
                break
            }
            if (m.options.flagRelevantVal && C.relevantValues && D) {
                u = f("<i>", {
                    "class": "fa relevant-value fa-bookmark",
                    "data-toggle": "tooltip"
                });
                u.attr("title", m.tooltip);
                D.eq(0).addClass("relevant-value").prepend(u)
            }
            if (D) {
                var v = f('<button type="button" class="close removeFilter" title="Remove filter" ></button>').click(function(F) {
                    var E = f(F.currentTarget).parents(".gc-filter-item").attr("data-column");
                    m.removeFilter(E, F)
                });
                if (D.length > 1) {
                    D = D.eq(0)
                }
                D.append(v)
            }
            return D
        }
        ;
        m.renderAutocomplete = function(C, B) {
            var z = C.label ? C.label : C.column
              , E = {}
              , v = f("<input type='text' />").attr("placeholder", z).addClass("form-control").val(C.value)
              , u = f("<label/>").text(z).addClass("control-label")
              , F = m.renderFilterDiv(C, B).append(u).append(v);
            if (C.style) {
                v.attr("style", C.style)
            }
            if (!B) {
                q.append(F)
            }
            if (C.mode == "search") {
                var D = C.layer_id ? C.layer_id : o.layer_id;
                C.component = v.autocomplete({
                    source: function(I, G) {
                        var H = I.term;
                        giscloud.features.byLayer(D, {
                            where: C.column + " ILIKE '" + H + "%'",
                            format: true,
                            perPage: 20
                        }).done(G)
                    },
                    focus: function() {
                        return false
                    },
                    select: function(H, J) {
                        var G = C.column_alias ? J.item.data[C.column_alias] : J.item.data[C.column];
                        this.value = G;
                        m.options.viewer.bounds(J.item.bounds);
                        var I = {
                            count: 1,
                            format: true,
                            data: J.item.data,
                            meta: J.item.meta,
                            __id: J.item.id,
                            __xmin: J.item.bounds.left,
                            __ymin: J.item.bounds.bottom,
                            __xmax: J.item.bounds.right,
                            __ymax: J.item.bounds.top
                        };
                        gcapp.selo.showRecordInfo(I);
                        return false
                    },
                    change: function(G) {}
                }).data("autocomplete")._renderItem = function(H, I) {
                    var G = C.column_alias ? I.data[C.column_alias] : I.data[C.column];
                    H.addClass("filter");
                    return f("<li>").attr("data-value", I).append(f("<a>").text(G)).appendTo(H)
                }
            } else {
                f.extend(E, {
                    order_by: C.column + ":ASC"
                });
                if (C.dataCondition) {
                    f.extend(E, {
                        where: C.dataCondition
                    })
                }
                v.typeahead({
                    hint: true,
                    highlight: true,
                    minLength: 1,
                    showHintOnFocus: C.dataCondition ? true : false,
                    source: function(H, G) {
                        if (H === v.val()) {
                            G([])
                        }
                        if (C.dataCondition && f.isEmptyObject(C.dataCondition) === false) {
                            E.where = C.dataCondition + ' AND "' + C.column + "\" ILIKE '" + H + "%'"
                        } else {
                            f.extend(E, {
                                where: '"' + C.column + "\" ILIKE '" + H + "%'"
                            })
                        }
                        giscloud.layers.attributeOps.distinct(o.layer_id, C.column, E).done(function(I) {
                            G(I.data)
                        })
                    },
                    afterSelect: function(G) {
                        m.apply(C.column, G, {
                            itemId: C.id
                        }, {
                            target: v
                        })
                    },
                    render: function(G) {
                        var H = false;
                        G = f(G).map(f.proxy(function(I, J) {
                            var K = this.displayText(J);
                            I = f(this.options.item).data("value", J);
                            I.find("a").html(this.highlighter(K));
                            I.attr("title", K);
                            if (K == this.$element.val()) {
                                I.addClass("active");
                                this.$element.data("active", J);
                                H = true
                            }
                            return I[0]
                        }, this));
                        if (this.autoSelect && !H) {
                            G.first().addClass("active");
                            this.$element.data("active", G.first().data("value"))
                        }
                        this.$menu.html(G);
                        return this
                    }
                })
            }
            return F
        }
        ;
        m.renderInput = function(C, B) {
            var z = C.label ? C.label : C.column
              , v = f("<input type='text' />").attr("placeholder", z).addClass("form-control").change(function(E) {
                m.apply(C.column, v.val(), {
                    itemId: C.id
                }, E)
            }).keypress(function(E) {
                if (E.which == 13) {
                    m.apply(C.column, v.val(), {
                        itemId: C.id
                    }, E)
                }
            })
              , u = f("<label/>").text(z).addClass("control-label")
              , D = m.renderFilterDiv(C, B).append(u).append(v);
            C.component = v;
            if (C.style) {
                v.attr("style", C.style)
            }
            if (!B) {
                q.append(D)
            }
            return D
        }
        ;
        m.getColumnMinMax = function(v) {
            var u = {
                min: 0,
                max: 0
            };
            if (v && v.data.length > 0) {
                u.max = Math.max.apply(Math, v.data);
                u.min = Math.min.apply(Math, v.data);
                if (isNaN(u.max) || isNaN(u.min)) {
                    u = Number.NaN
                }
            }
            return u
        }
        ;
        m.renderSlider = function(D, z) {
            var F = D.label ? D.label : D.column
              , v = f("<div/>").addClass("form-control")
              , E = f("<div/>").addClass("comment ").css("margin-top", 5)
              , G = f("<label/>").text(F).addClass("control-label")
              , u = m.renderFilterDiv(D, z).append(G).append(v).append(E)
              , C = {};
            if (D.style) {
                v.attr("style", D.style)
            }
            if (!z) {
                q.append(u)
            }
            v[0].slide = null ;
            var B = function(I) {
                var J = I ? I.min : parseFloat(D.min)
                  , H = I ? I.max : parseFloat(D.max);
                if (!D.orgMin) {
                    D.orgMin = []
                }
                D.orgMin.push(J);
                if (!D.orgMax) {
                    D.orgMax = []
                }
                D.orgMax.push(H);
                E.text("Min: " + J + " - Max: " + H);
                D.component = v.slider({
                    range: true,
                    min: D.orgMin[0],
                    max: D.orgMax[0],
                    step: parseFloat(D.step),
                    values: [J, H],
                    slide: function(K, N) {
                        var M = N.value;
                        f(this).tooltip("destroy");
                        f(this).attr({
                            "data-toggle": "tooltip",
                            title: M,
                            "data-trigger": "manual"
                        });
                        f(this).tooltip("show")
                    },
                    stop: function(O, Q) {
                        var N = parseFloat(Q.values[0])
                          , K = parseFloat(Q.values[1])
                          , P = D.orgMin[D.orgMin.length - 1]
                          , M = D.orgMax[D.orgMax.length - 1];
                        m.apply(D.column, [N, K], {
                            itemId: D.id,
                            between: true,
                            preMin: P,
                            preMax: M
                        }, O);
                        E.text("Min: " + N + " - Max: " + K);
                        f(this).tooltip("destroy")
                    }
                })
            }
            ;
            if (D.autofetch) {
                m.toggleLoader(D.id, "show", u);
                if (D.dataCondition) {
                    C = {
                        where: D.dataCondition
                    }
                }
                giscloud.layers.attributeOps.distinct(o.layer_id, D.column, C).then(f.proxy(m.getColumnMinMax, this)).fail(function() {
                    m.toggleLoader(D.id, "hide");
                    B()
                }).fail(f.proxy(m.failHandler, this)).done(function(H) {
                    m.toggleLoader(D.id, "hide");
                    if (!f.isPlainObject(H)) {
                        E.append("<p class='text-danger'><b>Error:</b></br>Slider filter defined column is '" + D.column + "' which values are not <b>Number</b>.</p>");
                        return
                    }
                    B(H);
                    if (D.forceMin) {
                        v.slider("option", "values", [D.forceMin, D.forceMax]);
                        E.text(D.forceMin + " - " + D.forceMax)
                    }
                })
            } else {
                B()
            }
            return u
        }
        ;
        m.wrapNull = function(u) {
            return f.map(u, function(v) {
                if (!f.isPlainObject(v)) {
                    v = {
                        value: v,
                        label: v
                    }
                }
                if (v.label === null ) {
                    v.label = "(null)";
                    v.value = "null"
                }
                return v
            })
        }
        ;
        m.wrapWhiteSpace = function(u) {
            return f.map(u, function(v) {
                if (!f.isPlainObject(v)) {
                    v = {
                        value: v,
                        label: v
                    }
                }
                if (f.trim(v.label) === "") {
                    v.label = "(Empty string)"
                }
                return v
            })
        }
        ;
        m.getDropdownValues = function(v) {
            v.data = m.wrapNull(v.data);
            v.data = m.wrapWhiteSpace(v.data);
            var u = f.map(v.data, function(z) {
                return f("<option/>", {
                    value: z.value,
                    html: z.label
                })
            });
            return u
        }
        ;
        m.toggleLoader = function(B, z, C) {
            var u = f("[loader-item-id='" + B + "']")
              , v = q.find("div.loader").filter(function(D, E) {
                return f(E).closest(".gc-filter-features-number").length === 0
            });
            if (u.length === 0) {
                if (f("[item-id='" + B + "']").length > 0) {
                    u = f("[item-id='" + B + "']").after(f("<div>", {
                        "loader-item-id": B
                    }).hide())
                } else {
                    if (C) {
                        u = f("<div>", {
                            "loader-item-id": B
                        }).hide();
                        C.after(u)
                    }
                }
            }
            if (z == "show") {
                if (v.length === 0) {
                    m.triggerEvent(m.EVENTS[2], m)
                }
                u.show();
                if (f("[item-id='" + B + "']").length > 0) {
                    f("[item-id='" + B + "']").hide()
                } else {
                    if (C) {
                        C.eq(0).hide()
                    }
                }
                u.loader("show")
            } else {
                if (f("[item-id='" + B + "']").length > 0) {
                    f("[item-id='" + B + "']").show()
                } else {
                    if (C) {
                        C.eq(0).show()
                    }
                }
                u.loader("hide");
                if (q.find("div.loader").length === 0) {
                    m.triggerEvent(m.EVENTS[3], m)
                }
            }
        }
        ;
        m.renderDropdown = function(B, v) {
            var D = B.label ? B.label : B.column, F = f("<select/>").addClass("form-control  selectpicker dropdown-filter"), J = f("<label/>").text(D).addClass("control-label"), u = m.renderFilterDiv(B, v).append(J).append(F), z = {}, E = false, G, I, H, C;
            C = function(K) {
                H = f(K.target).val();
                if (!f.isArray(H)) {
                    H = [H]
                }
                H = f.map(H, function(M) {
                    if (typeof M === "string" && M.toLowerCase() === "null") {
                        return [null ]
                    } else {
                        return M
                    }
                });
                if (H.indexOf("__gc_no_filter") > -1) {
                    H = [];
                    F.selectpicker("deselectAll").parent(".dropdown-filter").removeClass("open");
                    m.removeFilter(B.column, K)
                } else {
                    if (G && G.prop("checked")) {
                        H.push(B.null_value)
                    }
                }
                if (H.length === 1 && H[0] === null ) {
                    H = null 
                }
                m.apply(B.column, H, {
                    insideOperator: "OR",
                    itemId: B.id,
                    distinct: true
                }, K)
            }
            ;
            B.component = F;
            if (B.multiselect) {
                f(F).attr("multiple", true)
            }
            f(F).attr("title", D);
            f(F).selectpicker({
                title: D,
                style: "filter form-control btn-default"
            }).on("change", C);
            u.find("button.dropdown-toggle.filter").attr("style", B.style);
            if (!B.autofetch) {
                I = f.map(B.items, function(K) {
                    if (K.no_filter) {
                        E = true
                    }
                    if (K.value !== null ) {
                        return f("<option/>", {
                            value: K.no_filter ? "__gc_no_filter" : K.value,
                            html: K.label || K.value,
                            "class": K.no_filter ? "gc-clear-filter" : null 
                        })
                    }
                });
                if (B.no_filter && E === false) {
                    I.unshift(f("<option/>", {
                        value: "__gc_no_filter",
                        html: B.no_filter,
                        "class": "gc-clear-filter"
                    }))
                }
                if (I) {
                    F.append(I)
                }
                f(F).selectpicker("refresh");
                u.find(".bootstrap-select.dropdown-filter").attr("style", B.style)
            } else {
                m.toggleLoader(B.id, "show", u);
                f.extend(z, {
                    order_by: B.column + ":ASC"
                });
                if (B.dataCondition) {
                    f.extend(z, {
                        where: B.dataCondition
                    })
                }
                giscloud.layers.attributeOps.distinct(o.layer_id, B.column, z).then(f.proxy(m.getDropdownValues, this)).fail(function() {
                    m.toggleLoader(B.id, "hide")
                }).fail(f.proxy(m.failHandler, this)).done(function(K) {
                    if (B.no_filter) {
                        K.unshift(f("<option/>", {
                            value: "__gc_no_filter",
                            html: B.no_filter,
                            "class": "gc-clear-filter"
                        }))
                    }
                    F.append(K);
                    F.selectpicker("refresh");
                    f.map(u.find(".dropdown-filter .dropdown-menu.open span.text"), function(M) {
                        f(M).closest("li").attr("title", f(M).text())
                    });
                    u.find(".bootstrap-select.dropdown-filter").attr("style", B.style);
                    if (B.value) {
                        if (!f.isArray(B.value)) {
                            B.value = [B.value]
                        }
                        f.map(B.value, function(M) {
                            if (F.find("option[value='" + M + "']").length === 0) {
                                F.append(f("<option/>", {
                                    html: M,
                                    value: M
                                }))
                            }
                        });
                        F.selectpicker("refresh");
                        F.selectpicker("val", B.value)
                    }
                    m.toggleLoader(B.id, "hide")
                })
            }
            if (B.null_value) {
                G = m.renderNullCheckbox(B, u, C)
            }
            if (!v) {
                q.append(u)
            }
            return u
        }
        ;
        m.renderDateTime = function(C, z) {
            var E = C.label ? C.label : C.column, v, J = f("<label/>").text(E).addClass("control-label"), u = m.renderFilterDiv(C, z).append(J), B = {}, F = false, G, I, H, D;
            v = '<div class="input-group date" >';
            v += '  <span class="input-group-addon"><span class="glyphicon-calendar glyphicon"></span></span>';
            v += '  <input type="text" maxlength="10" class="form-control" />';
            v += "</div>";
            v = f(v);
            u.append(v);
            D = function(K) {
                var M = K.date.toDate();
                H = [M];
                m.apply(C.column, H, {
                    itemId: C.id,
                    operator: C.operator,
                    datetime: true
                }, K)
            }
            ;
            if (!z) {
                q.append(u)
            }
            v.datetimepicker({
                pickTime: false,
                format: "DD/MM/YYYY"
            }).on("dp.change", D);
            return u
        }
        ;
        m.renderMinMax = function(C, v) {
            var E = C.label ? C.label : C.column
              , D = f("<div/>").addClass("comment ").css("margin-top", 5)
              , H = f("<label/>").text(E).addClass("control-label")
              , F = f("<input type='text' />").addClass("gc-filter-spinner").addClass("form-control").val(C.value).hide()
              , u = m.renderFilterDiv(C, v).append(H).append(F).append(D)
              , z = {};
            if (C.style) {
                F.attr("style", C.style)
            }
            if (!v) {
                q.append(u)
            }
            F.attr("data-parsley-type", "number");
            F.attr("data-parsley-errors-container", "[item-id='" + C.id + "']");
            var G = function(K) {
                var J = F.parsley().validate()
                  , M = parseFloat(F.val())
                  , I = parseFloat(F.attr("max"));
                if (J !== true) {
                    F.parent(".ui-spinner").find(".ui-spinner-button").addClass("error");
                    return
                }
                D.text("Min : " + M + " - Max: " + I);
                m.apply(C.column, [M, I], {
                    itemId: C.id,
                    between: true
                }, K)
            }
            ;
            var B = function(J) {
                var K = J ? J.min : parseFloat(C.min)
                  , I = J ? J.max : parseFloat(C.max);
                C.component = F.spinner({
                    min: K,
                    max: I,
                    stop: function(N) {
                        clearTimeout(f.data(F, "timer"));
                        var M = setTimeout(G, 500, N);
                        F.data("timer", M)
                    }
                });
                if (C.forceMin && C.forceMin >= K) {
                    F.val(C.forceMin).show()
                } else {
                    F.val(J ? J.min : C.min).show()
                }
                F.attr("min", K).attr("max", I);
                D.text("Min: " + K + " - Max: " + I);
                F.parent(".ui-spinner").addClass("filter-min-max")
            }
            ;
            if (C.dataCondition) {
                z = {
                    where: C.dataCondition
                }
            }
            if (C.autofetch) {
                m.toggleLoader(C.id, "show", u);
                giscloud.layers.attributeOps.distinct(o.layer_id, C.column, z).then(f.proxy(m.getColumnMinMax, this)).fail(function() {
                    B();
                    m.toggleLoader(C.id, "hide")
                }).fail(f.proxy(m.failHandler, this)).done(function(I) {
                    if (!f.isPlainObject(I)) {
                        u.empty().append("<p class='text-danger'><b>Error:</b></br>Min/max filter defined column is '" + C.column + "' which values are not <b>Number</b>.</p>");
                        return
                    }
                    B(I);
                    m.toggleLoader(C.id, "hide")
                })
            } else {
                B()
            }
            return u
        }
        ;
        m.renderFeaturesNumber = function(z, v) {
            var u = f("<div/>").addClass("gc-filter-features-number");
            z.id = z.id || giscloud.ui.id();
            var B = f("<div/>").addClass("gc-filter-item").attr("item-id", z.id).css("height", "20px").append(u);
            if (z.style) {
                u.attr("style", z.style)
            }
            z.component = u;
            q.append(B);
            m.getNumOfFeatures();
            return B
        }
        ;
        m.getNumOfFeatures = function(B, z) {
            var v = q.find(".gc-filter-features-number")
              , u = m.options.gcdatagrid.options.where;
            if (v.length === 0) {
                return
            }
            if (v.find(".loader").length === 0) {
                v.empty().loader("show").height("20px")
            }
            giscloud.features.byLayer(o.layer_id, {
                perPage: 1,
                where: u
            }).done(function(C, D) {
                v.loader("hide");
                v.text((o.results_num_label ? o.results_num_label : "Results: ") + D)
            })
        }
        ;
        m.renderRange = function(C, v) {
            var F = C.label ? C.label : C.column, G, z = f("<input type='text' />").addClass("form-control gc-filter-spinner").hide(), D = f("<input type='text' />").addClass("form-control gc-filter-spinner").hide(), I = f("<label/>").text(F).addClass("control-label"), u = m.renderFilterDiv(C, v).append(I).append(z).append(D), B = {};
            if (C.style) {
                z.attr("style", C.style);
                D.attr("style", C.style)
            }
            z.attr("data-parsley-type", "number");
            D.attr("data-parsley-type", "number");
            z.attr("data-parsley-errors-container", "[item-id='" + C.id + "']");
            D.attr("data-parsley-errors-container", "[item-id='" + C.id + "']");
            C.component = [];
            if (!v) {
                q.append(u)
            }
            if (C.null_value) {
                G = m.renderNullCheckbox(C, u, function(J) {
                    var K = [z.val() * 1, D.val() * 1];
                    if (G.prop("checked")) {
                        K.push(C.null_value)
                    }
                    m.apply(C.column, K, {
                        itemId: C.id
                    }, J)
                });
                G.parent("label").show();
                C.component.push(G)
            }
            var H = function(M) {
                var K = z.parsley().validate()
                  , N = D.parsley().validate()
                  , J = [z.val() * 1, D.val() * 1];
                if (K !== true || N !== true) {
                    if (K !== true) {
                        z.parent(".ui-spinner").find(".ui-spinner-button").addClass("error")
                    }
                    if (N !== true) {
                        D.parent(".ui-spinner").find(".ui-spinner-button").addClass("error")
                    }
                    return
                } else {
                    z.parent(".ui-spinner").find(".ui-spinner-button").removeClass("error");
                    D.parent(".ui-spinner").find(".ui-spinner-button").addClass("error")
                }
                if (G && G.prop("checked")) {
                    J.push(C.null_value)
                }
                m.apply(C.column, J, {
                    itemId: C.id,
                    between: true
                }, M)
            }
            ;
            var E = function(K) {
                var M = K ? K.min : C.min
                  , J = K ? K.max : C.max;
                C.component.push(z.spinner({
                    min: M,
                    max: J,
                    step: C.step ? C.step : 1,
                    stop: function(O) {
                        clearTimeout(f.data(z, "timer"));
                        var N = setTimeout(H, 500, O);
                        z.data("timer", N)
                    }
                }));
                C.component.push(D.spinner({
                    min: M,
                    max: J,
                    step: C.step ? C.step : 1,
                    stop: function(O) {
                        clearTimeout(f.data(D, "timer"));
                        var N = setTimeout(H, 500, O);
                        D.data("timer", N)
                    }
                }));
                D.parent(".ui-spinner").addClass("pull-right");
                if (C.forceMin) {
                    z.val(C.forceMin).show()
                } else {
                    z.val(K ? K.min : C.min).show()
                }
                if (C.forceMax) {
                    D.val(C.forceMax).show()
                } else {
                    D.val(K ? K.max : C.max).show()
                }
                if (G) {
                    if (C.includeNull) {
                        G.prop("checked", C.includeNull).parent("label").show()
                    } else {
                        G.parent("label").show()
                    }
                }
                z.attr("min", M).attr("max", J);
                D.attr("min", M).attr("max", J)
            }
            ;
            if (C.dataCondition) {
                B = {
                    where: C.dataCondition
                }
            }
            if (C.autofetch) {
                m.toggleLoader(C.id, "show", u);
                giscloud.layers.attributeOps.distinct(o.layer_id, C.column, B).then(f.proxy(m.getColumnMinMax, this)).fail(function() {
                    m.toggleLoader(C.id, "hide");
                    E()
                }).fail(f.proxy(m.failHandler, this)).done(function(J) {
                    m.toggleLoader(C.id, "hide");
                    if (!f.isPlainObject(J)) {
                        u.empty().append("<p class='text-danger'><b>Error:</b></br>Range filter defined column is '" + C.column + "' which values are not <b>Number</b>.</p>");
                        return
                    }
                    E(J)
                })
            } else {
                E()
            }
            return u
        }
        ;
        m.renderNullCheckbox = function(v, B, u) {
            var z = f("<label/>").text(" Include null values").appendTo(f("<div/>").appendTo(B));
            return f("<input type='checkbox' />").val(v.null_value).prependTo(z).prop("checked", true).change(u)
        }
        ;
        m.renderFilterDiv = function(v, u) {
            var z;
            v.id = v.id || giscloud.ui.id();
            if (u) {
                z = q.find("[item-id='" + v.id + "']")
            } else {
                z = f("<div/>").attr("item-id", v.id).addClass("gc-filter-item").attr("data-column", v.column)
            }
            return z.empty().removeClass("active")
        }
        ;
        m.getActiveFilters = function() {
            return q.find(".gc-filter-item.active")
        }
        ;
        m.init()
    }
    ;
    giscloud.ui.filters.getFilters = function() {
        return d
    }
    ;
    giscloud.ui.filters.getFilterByCode = function(h) {
        return f.map(d, function(m) {
            if (m.code === h) {
                return m
            }
        })[0]
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(d, e, a, f) {
    giscloud.ui.Panel = function(h) {
        var u = this, m, z, F, v, B, p, I, H, g, o, r = h.push ? true : false, q = h.resizeble, G = {
            alsoResize: null ,
            maxHeight: null ,
            maxWidth: null ,
            minHeight: null ,
            minWidth: null 
        }, v = (h.container && e(h.container).length === 1) ? e(h.container) : e("body"), E = h.width ? h.width : 240, D = h.height ? h.height : 140, C = h.size ? h.size : 240, J = {
            right: "left",
            left: "right",
            top: "bottom",
            bottom: "top"
        };
        u.render = function() {
            if (h.resizableOpt) {
                e.extend(G, h.resizableOpt)
            }
            g = e("<div>", {
                "class": "gc_panel-root-conteiner"
            });
            v.append(g);
            var M = h.id ? h.id : "gc_panel" + Math.round(Math.random() * 100000);
            m = h.position == "floating" ? "floating" : ((h.position == "right" || h.position == "left") ? "vertical" : "horizontal");
            z = e("<nav/>").addClass("gc-panel gc-panel-" + m).addClass(h.position).attr("id", M).appendTo(g);
            if (m == "vertical" || m == "horizontal") {
                u.size(C)
            } else {
                u.size(E, D)
            }
            v.addClass("gc-panel-wrapper " + h.position);
            F = e("<div/>").addClass("gc-panel-content").appendTo(z);
            if (giscloud.app && giscloud.app.config.panels && giscloud.app.config.panels.length > 0 && u.getPanelEl()[0].id !== "gc-panel-right") {
                F.css("height", (D - 70) + "px")
            }
            if (h.panelBg) {
                var N = e("<div/>").addClass("gc-panel-bg").appendTo(z);
                if (h.transparent) {
                    N.addClass("transparent")
                }
            }
            if (h.titleHtml) {
                o = e(h.titleHtml);
                z.prepend(o)
            } else {
                if (h.title) {
                    o = e("<h3/>").text(h.title).addClass("gc-panel-title");
                    z.prepend(o)
                }
            }
            if (h.css) {
                z.css(h.css)
            }
            if (h.content) {
                F.html(h.content)
            }
            if (h.style_content) {
                F.attr("style", h.style_content)
            }
            if (h.url) {
                F.load(h.url, h.contentLoad ? h.contentLoad : null , function() {
                    z.trigger("load")
                })
            }
            if (h.draggable) {
                z.draggable({
                    handle: o || false,
                }).addClass("draggable")
            }
            if (h.resizeble) {
                var O = null ;
                if (h.position == "right" && m == "vertical") {
                    O = "w"
                } else {
                    if (h.position == "left" && m == "vertical") {
                        O = "e"
                    } else {
                        if (h.position == "top" && m == "horizontal") {
                            O = "n"
                        } else {
                            if (h.position == "bottom" && m == "horizontal") {
                                O = "s"
                            }
                        }
                    }
                }
                e.extend(G, {
                    handles: O,
                    start: u.resizePanel,
                    stop: u.resizePanel,
                    resize: u.resizePanel,
                    animateDuration: "fast"
                });
                v.resizable(G);
                var P = e("<div/>", {
                    "class": "arrow-" + O + " fa fa-ellipsis-v"
                });
                e("div.ui-resizable-" + O).append(P);
                P.on("click", u.collapseExpand)
            }
            if (h.closeButton === f || h.closeButton) {
                B = e("<button/>").attr("type", "button").addClass("close gc-panel-close").text("x").click(function() {
                    u.close()
                }).appendTo(z)
            }
            if (h.drawer) {
                I = e("<div/>").addClass("gc-panel-drawer").click(function() {
                    u.toggle()
                }).appendTo(z)
            }
            if (v.prop("tagName") !== "BODY") {
                z.addClass("gc-panel-container");
                if (q) {
                    if (m == "vertical") {
                        var K = z.outerWidth(true);
                        v.css("width", K);
                        u.size(K)
                    } else {
                        var O = z.outerHeight(true);
                        v.css("height", O);
                        u.size(O)
                    }
                }
                if (o && o.filter('[style*="width"]') > 0) {
                    o.width(v.outerWidth(true))
                }
            }
            if (h.open) {
                u.open()
            } else {
                u.close()
            }
        }
        ;
        u.collapseExpand = function() {
            var K, M;
            K = v.isCollapsed ? v.orgWidth : 0;
            M = v.isCollapsed ? v.orgHeight : 0;
            if (h.position == "left" || h.position == "right") {
                v.animate({
                    width: K
                }, {
                    progress: u.alsoResizeTrigger
                }, 500)
            } else {
                v.animate({
                    height: M
                }, {
                    progress: u.alsoResizeTrigger
                }, 500)
            }
            if (z.is(":visible") == true) {
                e.extend(v, {
                    orgWidth: v.width(),
                    orgHeight: v.height()
                });
                z.hide();
                e.extend(v, {
                    isCollapsed: true
                });
                v.trigger("collapse", {
                    isCollapsed: true
                })
            } else {
                e.extend(v, {
                    isCollapsed: false
                });
                v.trigger("collapse", {
                    isCollapsed: false
                });
                z.show()
            }
            if (o && o.filter('[style*="width"]') > 0) {
                o.width(v.outerWidth(true))
            }
        }
        ;
        u.alsoResizeTrigger = function() {
            if (G.alsoResize instanceof Array) {
                e.each(G.alsoResize, function(K, M) {
                    e(M).trigger("resize")
                })
            } else {
                if (G.alsoResize) {
                    e(G.alsoResize).trigger("resize")
                }
            }
        }
        ;
        u.resizePanel = function(N, M) {
            var K;
            if (!z.is(":visible")) {
                z.show()
            }
            if (m == "vertical") {
                K = e(M.element).width()
            } else {
                K = e(M.element).height()
            }
            if (h.position === "right") {
                M.position.left = 0
            }
            u.size(K)
        }
        ;
        u.getPanelEl = function() {
            return z
        }
        ;
        u.getWidth = function() {
            return z.width()
        }
        ;
        u.getHeight = function() {
            return z.height()
        }
        ;
        u.getMargin = function(K) {
            return parseInt(z.css("margin-" + K).replace("px", ""))
        }
        ;
        u.open = u.show = function(K) {
            if (K) {
                u.size(K)
            }
            if (m == "vertical" || m == "horizontal") {
                if (r) {
                    v.css(J[h.position], -C)
                }
                if (v.prop("tagName") === "BODY") {
                    z.css(h.position, 0)
                }
            } else {
                z.show()
            }
            z.trigger("open");
            p = true;
            if (B) {
                B.show()
            }
        }
        ;
        u.empty = function() {
            F.empty()
        }
        ;
        u.toggle = function() {
            if (!p) {
                u.open()
            } else {
                u.close()
            }
        }
        ;
        u.size = function(M, K) {
            C = M;
            if (m == "vertical") {
                z.css("width", C)
            } else {
                if (m == "horizontal") {
                    z.css("height", C)
                } else {
                    if (m == "floating") {
                        z.css("width", M);
                        z.css("height", K)
                    }
                }
            }
            if (o) {
                o.width(v.outerWidth(true))
            }
        }
        ;
        u.content = function() {
            return F
        }
        ;
        u.close = u.hide = function() {
            if (r) {
                v.css(J[h.position], 0)
            }
            if (m == "vertical") {
                z.css(h.position, (typeof C == "string" && C.indexOf("%") > 0) ? -1 * z.width() : -C)
            } else {
                if (m == "horizontal") {
                    z.css(h.position, (typeof C == "string" && C.indexOf("%") > 0) ? -1 * z.height() : -C)
                } else {
                    z.hide()
                }
            }
            p = false;
            z.trigger("close");
            if (B) {
                B.hide()
            }
        }
        ;
        u.render()
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(o, E) {
    if (o == null  || o.fn == null  || o.fn.jquery == null ) {
        throw "The filterBuilder requires jQuery to function."
    }
    var Q = {
        filterMaskUrl: "/filterform",
        viewer: null ,
        layer: null ,
        filterConfig: null ,
        panelContent: null ,
        i18n: {
            applyOk: gclang.config_successfullyAppliedFilterItem,
            ErrorOccurred: gclang.AnErrorOccurred,
            promptRemoveFilter: gclang.prompt_sureRemoveFilter
        },
        internalColumn: ["__created", "__modified", "__owner", "__id"]
    }
      , R = function R(V) {
        return ( o.inArray(V, this.options.internalColumn) > -1) 
    }
      , z = function z(W) {
        var V;
        if (W && W.responseText) {
            V = JSON.parse(W.responseText);
            if (V.nested && V.nested.msg) {
                V = V.nested.msg
            } else {
                V = V.msg
            }
        }
        q.apply(this, ["layer '" + this.options.layer.name + "' : " + V]);
        throw W && W.responseText || this.options.i18n.ErrorOccurred
    }
      , O = function O() {
        giscloud.ui.alert.green().show(this.options.i18n.applyOk, 5000)
    }
      , q = function q(V) {
        giscloud.ui.alert.red().show(V || this.options.i18n.ErrorOccurred, 5000)
    }
      , g = function g(W, V) {
        var Y = W + "." + this.eventNamespace;
        o(this).trigger(Y, V);
        this.container.trigger(Y, V)
    }
      , v = function v(Y) {
        var V = this.container.find(".filter-config:visible input.typeahead")
          , W = o.map(Y.data, function(Z) {
            if (Z !== null ) {
                return Z + ""
            }
        });
        o.map(V, o.proxy(function(Z) {
            if (o(Z).data("typeahead") !== undefined) {
                o(Z).typeahead("destroy")
            }
            o(Z).typeahead({
                hint: true,
                highlight: true,
                minLength: 0,
                source: W,
                updater: o.proxy(function(aa) {
                    o(Z).parents(".dropdown-items").find(".dropdown-item-label").val(aa);
                    return aa
                }, this)
            })
        }, this))
    }
      , J = function J(aa, Y) {
        var V = this.container.find(".filter-config .filter-cmp:visible"), Z, W;
        if (o.isEmptyObject(this.layerAtrributes)) {
            this.layerAtrributes = aa
        }
        if (this.layerAtrributes && o.isArray(this.layerAtrributes.attributes)) {
            this.container.find(".filter-config .filter-cmp .fa-spinner").hide();
            this.container.find(".bootstrap-select.layer-attribute").show();
            this.container.find(".layer-attribute.selectpicker").find("option").remove();
            o.map(this.layerAtrributes.attributes, o.proxy(function(ab) {
                if (Y !== undefined && o.inArray(ab.type, Y) === -1) {
                    return
                }
                if (R.apply(this, [ab.name])) {
                    return
                }
                this.container.find(".layer-attribute.selectpicker").append(o("<option>", {
                    text: ab.name,
                    val: ab.name
                }))
            }, this));
            this.container.find(".filter-cmp:visible .layer-attribute.selectpicker").selectpicker("refresh");
            if (V.length > 0 && this.container.find(".filter-cmp:visible .layer-attribute.selectpicker").length > 0) {
                Z = V.attr("item-id");
                W = H.apply(this, [Z]);
                if (W && W.column) {
                    this.container.find(".filter-cmp:visible .layer-attribute.selectpicker").selectpicker("val", W.column)
                }
            }
        }
    }
      , h = function h(Z) {
        var Y = this.container.find(".filter-config .filter-cmp." + Z.type.toLowerCase())
          , W = Y.find("[data]")
          , V = giscloud.ui.filters.getFilterByCode(Z.type)
          , aa = [];
        if (Y.find("[subitem-property]").length > 1) {
            o.map(Y.find("[subitem-property]"), function(ab) {
                if (Y.find("[subitem-property]").length > 1) {
                    o(ab).remove()
                }
            })
        }
        J.apply(this, [this.layerAtrributes, V.type]);
        o.map(W, function(ac) {
            aa = Z[o(ac).attr("data")];
            if (o(ac).is(":checkbox")) {
                if (aa) {
                    o(ac).prop("checked", true)
                } else {
                    o(ac).prop("checked", false)
                }
            }
            if (o(ac).is(":radio")) {
                if (aa == o(ac).val()) {
                    o(ac).prop("checked", true)
                }
            } else {
                if (o(ac).attr("subitem-property")) {
                    var ad = o(ac)
                      , ab = Z[ad.attr("data")];
                    o.map(ab || [], o.proxy(function(ag, ae) {
                        var af = ad.clone();
                        af.find(".remove-item").show();
                        if (ae === ab.length - 1) {
                            af.find(".add-item").show()
                        } else {
                            af.find(".add-item").hide()
                        }
                        if (ag.no_filter) {
                            Y.find("[data='no_filter']").val(ag.label)
                        } else {
                            o.map(ag, o.proxy(function(ai, ah) {
                                af.find("[data=" + ah + "]").val(ai)
                            }, this));
                            ad.parents(".dropdown-items-wrapper").append(af)
                        }
                    }, this));
                    if (aa && aa.length > 0) {
                        ad.remove()
                    }
                } else {
                    if (o(ac).hasClass("selectpicker")) {
                        if (!aa) {
                            o(ac).selectpicker("refresh")
                        } else {
                            o(ac).selectpicker("val", aa)
                        }
                    } else {
                        o(ac).val(aa)
                    }
                }
            }
        });
        M.apply(this);
        if (this.container.find(".layer-attribute.selectpicker").length > 0) {
            I.apply(this, [this.container.find(".filter-cmp:visible .layer-attribute.selectpicker")])
        }
    }
      , F = function F(Y) {
        var W = this.container.find(".existing-filters .list-group")
          , V = this.container.find(".existing-filters .list-group-item.tmp");
        this.container.find(".existing-filters .list-group-item:not(.tmp)").remove();
        if (this.options.filterConfig && !o.isEmptyObject(this.options.filterConfig)) {
            o.map(this.options.filterConfig.items, o.proxy(function(ab) {
                var Z = V.clone()
                  , aa = giscloud.ui.filters.getFilterByCode(ab.type)
                  , ac = aa ? aa.label : ab.type;
                Z.append(ac);
                if (ab.label || ab.column) {
                    Z.append(o("<span>", {
                        text: " (" + (ab.label || ab.column) + ")",
                        "class": "list-filter-label"
                    }))
                }
                Z.attr("item-id", ab.id);
                Z.removeClass("tmp");
                Z.on("click", o.proxy(function() {
                    W.find(".list-group-item.active").removeClass("active");
                    Z.addClass("active");
                    m.apply(this, [["hideAll", "show"], ab.type.toLowerCase(), ab.id]);
                    h.apply(this, [ab])
                }, this));
                W.append(Z);
                Z.show()
            }, this))
        }
        if (Y) {
            this.container.find(".existing-filters .list-group-item[item-id='" + Y + "']").addClass("active")
        }
    }
      , m = function m(Y, W, Z) {
        var V;
        if (!o.isArray(Y)) {
            Y = [Y]
        }
        if (o.inArray("hideAll", Y) > -1) {
            this.container.find(".filter-config").hide();
            this.container.find(".filter-config .filter-cmp").hide()
        }
        if (o.inArray("hide", Y) > -1) {
            this.container.find(".filter-config").hide();
            this.container.find(".filter-config .filter-cmp:not(." + W + ")").hide()
        }
        if (o.inArray("show", Y) > -1) {
            this.container.find(".filter-config").show();
            this.container.find(".filter-config .filter-cmp." + W).show();
            V = this.container.find(".filter-config .filter-cmp." + W).parsley();
            if (V) {
                V.reset()
            }
            if (Z) {
                this.container.find(".filter-config .filter-cmp." + W).attr("item-id", Z)
            }
        }
    }
      , H = function H(V) {
        if (!this.options.filterConfig) {
            return
        }
        return o.grep(this.options.filterConfig.items, o.proxy(function(W) {
            return W.id == V
        }))[0]
    }
      , r = function r(W) {
        var V = this.container.find(".filter-config .filter-cmp:visible")
          , Y = V.attr("item-id");
        if (!Y) {
            Y = o(W.target).parents(".list-group-item").attr("item-id")
        }
        giscloud.ui.confirm(this.options.i18n.promptRemoveFilter, {
            overlay: true
        }).yes(o.proxy(function() {
            this.options.filterConfig.items = o.grep(this.options.filterConfig.items, o.proxy(function(Z) {
                return Z.id != Y
            }));
            m.apply(this, ["hideAll"]);
            F.apply(this)
        }, this))
    }
      , T = function T() {
        var Z = this.container.find(".filter-config .filter-cmp:visible"), V = Z.data("Parsley"), aa = Z.attr("item-id"), Y = H.apply(this, [aa]) || {}, W;
        if (!V.validate()) {
            return
        } else {
            V.reset()
        }
        o.map(Y, function(ac, ab) {
            if (o.isArray(ac)) {
                Y[ab] = []
            }
        });
        o.map(Z.find("[data]").filter(":not([subitem])"), function(ad) {
            var ae = o(ad).val()
              , af = o(ad)
              , ac = af.attr("subitem-property")
              , ab = af.attr("type");
            if (o(ad).is(":checkbox")) {
                if (o(ad).is(":checked")) {
                    Y[o(ad).attr("data")] = true
                } else {
                    Y[o(ad).attr("data")] = false
                }
            } else {
                if (o(ad).is(":radio")) {
                    if (o(ad).is(":checked")) {
                        Y[o(ad).attr("data")] = ae
                    }
                } else {
                    if (o(ad).attr("subitem-property")) {
                        o.map(af, o.proxy(function(ak) {
                            var ah = o(ak).find("[data]"), ag = o(ak).find(".wrapper").attr("subtype"), aj, ai;
                            if (ag === "array") {
                                ai.push(o(ak).find("[data]").val())
                            } else {
                                if (ag === "object") {
                                    ai = {};
                                    o.map(ah, o.proxy(function(al) {
                                        ai[o(al).attr("data")] = o(al).val()
                                    }, this))
                                } else {
                                    Y[ac] = aj
                                }
                            }
                            if (ab === "array") {
                                if (!Y[ac]) {
                                    Y[ac] = []
                                }
                                Y[ac].push(ai)
                            } else {
                                Y[ac] = ai
                            }
                        }, this))
                    } else {
                        Y[o(ad).attr("data")] = ae
                    }
                }
            }
        });
        if (Y.autofetch === true) {
            Z.find(".toggle-autofetch").find("[data]").map(function() {
                if (Y.items) {
                    delete Y.items
                } else {
                    if (Y.min !== undefined || Y.max !== undefined) {
                        delete Y.min;
                        delete Y.max
                    }
                }
            })
        }
        W = this.container.find(".existing-filters .list-group-item[item-id='" + aa + "']");
        if (W.find("span.list-filter-label").length === 0) {
            W.append(o("<span>", {
                "class": "list-filter-label"
            }))
        }
        if (Y.label) {
            this.container.find(".existing-filters .list-group-item[item-id='" + aa + "'] span.list-filter-label").text(" (" + Y.label + ")")
        } else {
            if (Y.column) {
                this.container.find(".existing-filters .list-group-item[item-id='" + aa + "'] span.list-filter-label").text(" (" + Y.column + ")")
            }
        }
        O.apply(this)
    }
      , I = function I(Z) {
        var Y = this.container.find(".filter-config .filter-cmp:visible")
          , W = H.apply(this, [Y.attr("item-id")]) || {}
          , V = Z.target ? o(Z.target).val() : Z.val();
        if (V && this.container.find(".filter-cmp:visible .filter-autofetch").is(":checked")) {
            giscloud.layers.attributeOps.distinct(this.options.layer.id, V, {}).done(o.proxy(v, this)).fail(o.proxy(z, this))
        }
        if (V && this.container.find(".filter-cmp:visible input.filter-label").length > 0 && (W && W.label === null )) {
            this.container.find(".filter-cmp:visible input.filter-label").val(V)
        }
    }
      , e = function e(ac) {
        var Z = o(ac.target).val()
          , ad = giscloud.ui.id()
          , ab = this.container.find(".filter-config .filter-cmp:visible")
          , W = ab.data("Parsley")
          , Y = this.options.filterConfig ? this.options.filterConfig.items : []
          , V = this.container.find(".filter-config .filter-cmp." + Z).find("[data]").filter(":not([subitem])")
          , aa = {
            type: Z.toUpperCase(),
            id: ad
        };
        this.container.find(".filter-attribute.selectpicker").selectpicker("refresh").selectpicker("deselectAll");
        if (ab.length > 0 && !W.validate()) {
            return
        }
        o.map(V, function(ae) {
            if (o(ae).attr("type") === "array") {
                aa[o(ae).attr("data")] = []
            } else {
                if (o(ae).attr("type") === "object") {
                    aa[o(ae).attr("data")] = {}
                } else {
                    aa[o(ae).attr("data")] = null 
                }
            }
        });
        if (!this.options.filterConfig) {
            this.options.filterConfig = {
                layer_id: this.options.layer.id,
                items: [aa]
            }
        } else {
            Y.push(aa)
        }
        F.apply(this, [ad]);
        m.apply(this, [["hideAll", "show"], Z, ad]);
        h.apply(this, [aa]);
        this.container.find(".filter-cmp:visible .layer-attribute.selectpicker").selectpicker("refresh").selectpicker("deselectAll")
    }
      , P = function P() {
        var W = this.container.find(".filter-config .filter-cmp:visible")
          , Y = W.attr("item-id")
          , V = H.apply(this, [Y]);
        F.apply(this, [Y]);
        h.apply(this, [V])
    }
      , C = function C(W) {
        var V = o(W.target).parents(".dropdown-items").clone();
        o(W.target).parents(".dropdown-items").find(".remove-item").show();
        o(W.target).parents(".dropdown-items").find(".add-item").hide();
        V.find("input").val("");
        this.container.find(".dropdown-items-wrapper").append(V);
        I.apply(this, [this.container.find(".filter-cmp:visible .layer-attribute.selectpicker")])
    }
      , N = function N() {
        var V = this.container.find(".filter-cmp:visible .filter-relevant-values");
        if (!V.is(":visible")) {
            V.prop("checked", false)
        }
    }
      , M = function M(Y) {
        var V, W;
        if (this.container.find(".filter-cmp:visible .filter-autofetch").length === 0) {
            return
        }
        if (Y) {
            V = o(Y.target).parents(".filter-cmp:visible").find(".toggle-autofetch");
            W = o(Y.target).parents(".filter-cmp:visible").find(".relevant-value-wrap");
            if (V.is(":visible")) {
                V.hide();
                W.show()
            } else {
                V.show();
                W.hide()
            }
        } else {
            if (this.container.find(".filter-cmp:visible .filter-autofetch").length > 0 && this.container.find(".filter-cmp:visible .filter-autofetch").is(":checked")) {
                this.container.find(".filter-cmp:visible .relevant-value-wrap").show();
                this.container.find(".filter-cmp:visible .toggle-autofetch").hide()
            } else {
                this.container.find(".filter-cmp:visible .relevant-value-wrap").hide();
                this.container.find(".filter-cmp:visible .toggle-autofetch").show()
            }
        }
        N.apply(this)
    }
      , u = function u(W) {
        var V = o(W.target).parents(".filter-cmp");
        if (V.find(".dropdown-items").length === 1) {
            V.find(".dropdown-items input").val("")
        } else {
            o(W.target).parents(".dropdown-items").remove()
        }
        V.find(".dropdown-items").last().find(".add-item").show()
    }
      , d = function d() {
        this.container.find(".bootstrap-select.layer-attribute").hide().after("<i class='fa-li fa fa-spinner fa-spin'></i>");
        giscloud.layers.attributeOps.info(this.options.layer.id).done(o.proxy(J, this)).fail(o.proxy(function() {
            this.container.find(".bootstrap-select.layer-attribute").show();
            this.container.find(".filter-config .filter-cmp .fa-spinner").hide()
        }, this)).fail(o.proxy(z, this))
    }
      , a = function a() {
        var W = giscloud.ui.filters.getFilters(), V;
        this.container.on("change", ".filter-attribute.selectpicker", o.proxy(e, this));
        this.container.on("change", ".layer-attribute.selectpicker ", o.proxy(I, this));
        this.container.on("click", ".add-Item-wrapper .remove-item", o.proxy(u, this));
        this.container.on("click", ".add-Item-wrapper .add-item", o.proxy(C, this));
        this.container.on("click", ".apply-filter", o.proxy(T, this));
        this.container.on("click", ".remove-filter", o.proxy(r, this));
        this.container.on("click", ".discard-filter", o.proxy(P, this));
        this.container.on("click", ".filter-autofetch", o.proxy(M, this));
        o.each(W, o.proxy(function(Y) {
            V = W[Y].label;
            this.container.find(".filter-attribute.selectpicker").append(o("<option>", {
                text: V,
                value: Y
            }))
        }, this));
        this.container.find(".filter-attribute.selectpicker").selectpicker("refresh").selectpicker("deselectAll");
        o.map(this.container.find(".filter-config .filter-cmp input.filter-min, .filter-config .filter-cmp input.filter-max"), o.proxy(function(aa) {
            var Z = o(aa).parents(".filter-cmp").attr("class"), Y;
            Z = Z.replace("filter-cmp", "");
            if (o(aa).parents(".filter-cmp").find(".filter-autofetch").length > 0) {
                Y = "#" + this.options.panelContent.attr("id") + " ." + Z + " .filter-autofetch , #" + this.options.panelContent.attr("id") + " ." + Z + " .";
                if (o(aa).hasClass("filter-max")) {
                    o(aa).attr("data-parsley-fgt", Y + "filter-min")
                } else {
                    if (o(aa).hasClass("filter-min")) {
                        o(aa).attr("data-parsley-flt", Y + "filter-max")
                    }
                }
            }
        }, this));
        o.map(this.container.find(".filter-config .filter-cmp"), function(Y) {
            o(Y).parsley()
        });
        F.apply(this);
        this.container.find(".selectpicker").selectpicker();
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {
            this.container.find(".selectpicker").selectpicker("mobile")
        }
        d.apply(this)
    }
      , f = function f() {
        if (!this.options.filterConfig || o.isEmptyObject(this.options.filterConfig)) {
            return
        }
        o.map(this.options.filterConfig.items, function(V) {
            V.id = giscloud.ui.id()
        })
    }
      , D = function D() {
        this.container.load(this.options.filterMaskUrl, o.proxy(function(W, V) {
            g.apply(this, [this.EVENTS[0], {
                status: V,
                object: this
            }]);
            if (V === "success") {
                a.apply(this)
            } else {
                throw "form didn't load properly"
            }
        }, this))
    }
    ;
    giscloud.ui.FilterBuilder = function(W, Y) {
        this.eventNamespace = "gc-filter-builder";
        this.EVENTS = ["form-loaded"];
        this.options = {};
        this.layerAtrributes = {};
        this.container = null ;
        this.initialize = function V() {
            if (o.isPlainObject(W)) {
                this.options = o.extend(true, {}, Q, {
                    viewer: giscloud.ui.map || null 
                }, W)
            } else {
                this.options = Y || {};
                this.options.selector = W;
                this.options = o.extend(true, {}, Q, {
                    viewer: giscloud.ui.map || null 
                }, Y)
            }
            if (o.isPlainObject(W)) {
                this.container = W
            } else {
                this.container = o(W)
            }
            f.apply(this);
            if (!this.options.viewer) {
                throw "giscloud.Viewer object is required."
            }
            if (!this.options.layer) {
                throw "giscloud.viewerLayer object is required."
            }
            D.apply(this)
        }
        ;
        return this.initialize()
    }
    ;
    giscloud.ui.FilterBuilder.prototype = {
        on: function B() {
            this.container.on.apply(this.container, Array.prototype.slice.apply(arguments));
            return this
        },
        off: function S() {
            this.container.off.apply(this.container, Array.prototype.slice.apply(arguments));
            return this
        },
        bind: function U() {
            return this.on.apply(this, Array.prototype.slice.apply(arguments))
        },
        unbind: function p() {
            return this.off.apply(this, Array.prototype.slice.apply(arguments))
        },
        discardFilterForm: function K() {
            P.apply(this);
            return this
        },
        getFilterConfig: function G() {
            var Y = jQuery.extend(true, {}, this.options.filterConfig), V, W, Z;
            if (this.options.filterConfig) {
                Z = o.map(Y.items, o.proxy(function(aa) {
                    W = this.container.find(".filter-cmp." + aa.type.toLowerCase());
                    V = W.parsley();
                    if (!V) {
                        return
                    }
                    W.find(".layer-attribute.selectpicker").selectpicker("refresh");
                    m.apply(this, [["hideAll", "show"], aa.type.toLowerCase(), aa.id]);
                    h.apply(this, [aa]);
                    if (W.length > 0 && !V.validate()) {
                        return aa
                    }
                    m.apply(this, [["hide"], aa.type.toLowerCase(), aa.id])
                }, this));
                if (Z.length > 0) {
                    this.container.find(".existing-filters .list-group").find(".list-group-item[item-id='" + Z[0].id + "']").trigger("click");
                    V = this.container.find(".filter-cmp." + Z[0].type.toLowerCase()).parsley();
                    V.validate();
                    return false
                }
            }
            if (o.isEmptyObject(Y) === false) {
                o.map(Y.items, function(aa) {
                    delete aa.id
                })
            }
            return Y
        }
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(g, B) {
    if (g == null  || g.fn == null  || g.fn.jquery == null ) {
        throw "giscloud.ui.FilterBuilderManager: FilterBuilderManager requires jQuery to function."
    }
    var I = {
        managerMaskUrl: "/filtermanager",
        maskWraperId: "GcFilterManager",
        viewer: null ,
        fullWidth: true,
        containerId: "GcFilterBuilder",
        mode: "fullscreen",
        fileConfig: "app.json",
        filePath: "/apps/",
        triggerEventOnDoc: true,
        standalone: true,
        authorization: true,
        helpPointContent: gclang.filter_point_layer_info,
        i18n: {
            saveOk: gclang.Successfully_saved_,
            ErrorOccurred: gclang.AnErrorOccurred,
            modalTitle: gclang.filterManager
        },
        panelFilter: {
            id: "gc-panel-filter",
            title: gclang.filter,
            position: "floating",
            width: 350,
            height: 600,
            open: false,
            draggable: true,
            closeButton: true,
            filters: [],
            css: {
                top: "100px"
            }
        }
    }
      , q = function q(M) {
        o.apply(this, [M]);
        throw M || this.options.i18n.ErrorOccurred
    }
      , H = function H() {
        giscloud.ui.alert.green().show(this.options.i18n.saveOk, 5000)
    }
      , o = function o(M) {
        giscloud.ui.alert.red().show(M || this.options.i18n.ErrorOccurred)
    }
      , E = function E(M) {
        this.save(true, M)
    }
      , f = function f(N, M) {
        var O = N + "." + this.eventNamespace;
        g(this).trigger(O, M);
        if (this.options.triggerEventOnDoc) {
            g(document).trigger(O, M)
        }
    }
      , u = function u() {
        if (this.options.mode === "fullscreen") {
            this.maskWraper.on("click", ".close-mng,.forward-mng", g.proxy(this.close, this));
            this.maskWraper.on("click", ".save-mng", g.proxy(this.save, this));
            this.maskWraper.on("click", ".save-close-mng", g.proxy(E, this))
        } else {
            if (this.modal !== null ) {
                this.modal.on("click", ".close-mng", g.proxy(this.close, this));
                this.modal.on("click", ".save-mng", g.proxy(this.save, this))
            }
        }
    }
      , a = function a(M) {
        this.layers = g.grep(M, function(N) {
            return ( g.inArray(N.type.toUpperCase(), ["POINT", "LINE", "POLYGON", "GEOMETRY"]) !== -1) 
        })
    }
      , e = function e() {
        g("#" + this.options.containerId).load(this.options.managerMaskUrl, g.proxy(function(N, M) {
            f.apply(this, [this.EVENTS[0], {
                status: M,
                object: this
            }]);
            if (M === "success") {
                this.maskWraper = g("#" + this.options.maskWraperId);
                D.apply(this)
            } else {
                throw "giscloud.ui.FilterBuilderManager: form didn't load properly."
            }
        }, this))
    }
      , p = function p() {
        giscloud.layers.byMapId(this.options.viewer.mapId, {
            expand: "columns"
        }).fail(g.proxy(q, this)).done(g.proxy(a, this)).done(g.proxy(e, this))
    }
      , d = function d(M) {
        if (!this.filterConfig) {
            return {}
        }
        return g.grep(this.filterConfig, function(N) {
            if (N.layer_id == M) {
                return N
            }
        })[0]
    }
      , D = function D() {
        var N = this.classNamespace + giscloud.ui.id(), O, M;
        if (this.options.mode === "fullscreen" && this.options.standalone === true) {
            this.maskWraper.find("nav.manager-navbar").addClass("navbar-fixed-top")
        } else {
            if (this.options.mode === "modal") {
                this.maskWraper.find("nav.manager-navbar").remove()
            }
        }
        if (this.options.standalone === false) {
            this.maskWraper.find("nav.manager-navbar").find(".save-mng, .save-close-mng").hide();
            this.maskWraper.find(".manager-contant").addClass("standalone-false")
        } else {
            this.maskWraper.find("nav.manager-navbar").find(".forward-mng").hide()
        }
        this.dom = g.extend(this.dom, {
            accordion: this.maskWraper.find(".filter-accordion").attr("id", N),
            panels: []
        });
        O = this.dom.accordion.find(".filter-panel .panel-heading "),
        M = this.dom.accordion.find(".filter-panel .panel-collapse");
        g.each(this.layers, g.proxy(function(S, R) {
            var T = O.clone()
              , P = M.clone()
              , U = "head-" + R.id
              , Q = "panel-" + R.id;
            T.attr("id", U);
            T.attr("data-parent", "#" + N);
            T.attr("href", "#" + Q);
            T.attr("aria-controls", Q);
            T.find(".panel-title a").text(R.name);
            P.attr("id", Q);
            P.attr("aria-labelledby", U);
            this.dom.accordion.find(".filter-panel").append(T);
            this.dom.accordion.find(".filter-panel").append(P);
            this.dom.panels.push({
                panelTitle: T,
                panelContent: P,
                layer: R
            });
            if (R.type.toUpperCase() == "POINT") {
                T.find(".panel-title").append(g("<i>", {
                    "class": "fa fa-info-circle pull-right filter-point-info"
                }).attr("data-toggle", "popover").attr("data-placement", "left").popover({
                    html: true,
                    container: this.maskWraper,
                    content: this.options.helpPointContent
                }))
            }
            this.filterBuilders.push({
                component: new giscloud.ui.FilterBuilder(P.find(".filter-container"),{
                    layer: R,
                    viewer: this.options.viewer,
                    filterConfig: d.apply(this, [R.id]),
                    panelContent: P
                })
            })
        }, this));
        u.apply(this);
        this.registerMinMaxVal(this);
        O.remove();
        M.remove()
    }
      , m = function m(N) {
        var O = [], M;
        if (this.options.standalone === true) {
            this.fileConfig = g.parseJSON(N.content);
            M = g.grep(this.fileConfig.panels || [], g.proxy(function(P) {
                return g.isArray(P.filters) || g.isPlainObject(P.filters)
            }, this))[0]
        } else {
            M = this.panelFilter.filters;
            this.fileConfig.panels = [];
            this.fileConfig.panels.push(this.panelFilter)
        }
        if (!M) {
            if (this.fileConfig && !g.isArray(this.fileConfig.panels)) {
                this.fileConfig.panels = this.fileConfig.panels ? [this.fileConfig.panels] : []
            }
            this.fileConfig.panels.push(this.options.panelFilter)
        }
        if (this.fileConfig.panels.length > 0) {
            g.map(this.fileConfig.panels, g.proxy(function(P) {
                if (P.filters) {
                    this.filterPanel = P
                } else {
                    return
                }
                if (g.isArray(P.filters)) {
                    M = g.map(P.filters, g.proxy(function(Q) {
                        return Q[this.options.viewer.mapId]
                    }, this))
                } else {
                    M = P.filters[this.options.viewer.mapId] || []
                }
                O = g.merge(O, M)
            }, this))
        }
        if (O.length > 0) {
            this.filterConfig = O
        }
        p.apply(this)
    }
    ;
    giscloud.ui.FilterBuilderManager = function(N) {
        this.eventNamespace = "gc-filter-manager-builder";
        this.classNamespace = "GcFilterMng";
        this.dom = {
            panels: []
        };
        this.filterPanel = null ;
        this.filterBuilders = [];
        this.EVENTS = ["form-loaded", "form-save", "form-close"];
        this.options = {};
        this.layers = [];
        this.modal = null ;
        this.relpath = null ;
        this.fileConfig = {};
        this.filterConfig = [];
        this.maskWraper = null ;
        this.initialize = function M() {
            this.options = g.extend(true, {}, I, {
                viewer: giscloud.ui.map || null 
            }, N);
            if (this.options.authorization === true && fno.app_instance_owner_id != giscloud.app.user.id()) {
                alert(gclang.filterBuilderAuth || "You are not authorized for Filter builder.");
                return
            }
            if (!this.options.viewer || !this.options.viewer.mapId) {
                throw "giscloud.ui.FilterBuilderManager: giscloud.Viewer object is required."
            }
            if (!this.options.filePath) {
                throw "giscloud.ui.FilterBuilderManager: filePath is required."
            }
            if (!this.options.fileConfig) {
                throw "giscloud.ui.FilterBuilderManager: fileConfig name is required."
            }
            if (this.options.filePath === "/apps/" && giscloud.app.config && giscloud.app.config.instanceId) {
                this.relpath = this.options.filePath + "app" + giscloud.app.config.instanceId + "/" + this.options.fileConfig
            }
            if (this.options.standalone) {
                this.options.viewer.loading.done(g.proxy(function() {
                    giscloud.storage.fs.get(this.relpath).done(g.proxy(m, this)).fail(g.proxy(q, this))
                }, this))
            } else {
                this.panelFilter = this.options.panelFilter;
                m.apply(this)
            }
            if (this.options.mode === "fullscreen") {
                giscloud.ui.fullScreen({
                    id: this.options.containerId,
                    "class": "filter-builder-manager"
                });
                g("#" + this.options.containerId).append("<i class='fa fa-refresh fa-spin'>")
            } else {
                if (this.options.mode === "modal") {
                    var O = {
                        overlay: false,
                        title: this.options.i18n.modalTitle,
                        fid: "ModalFilterMng",
                        phoneFullSc: true,
                        dragable: true,
                        content: "<div id='" + this.options.containerId + "' class='filter-builder-manager'></div>",
                        buttons: [{
                            html: "close",
                            "class": "close-mng"
                        }, {
                            html: "Save",
                            "class": "save-mng btn-primary"
                        }]
                    };
                    if (g(window).width() > 767) {
                        O = g.extend(O, {
                            width: "800px"
                        })
                    }
                    this.modal = giscloud.ui.modal(O)
                } else {
                    throw "giscloud.ui.FilterBuilderManager: opening mode is not defined properly."
                }
            }
        }
        ;
        return this.initialize()
    }
    ;
    giscloud.ui.FilterBuilderManager.prototype = {
        on: function r() {
            g(this).on(this, Array.prototype.slice.apply(arguments));
            return this
        },
        off: function J() {
            g(this).off(this, Array.prototype.slice.apply(arguments));
            return this
        },
        bind: function K() {
            return this.on.apply(this, Array.prototype.slice.apply(arguments))
        },
        unbind: function h() {
            return this.off.apply(this, Array.prototype.slice.apply(arguments))
        },
        close: function C(M) {
            var N = this.options.viewer.mapId
              , Q = this.applyFIltersFromBuilders()
              , P = {}
              , O = g(M.target).parent().hasClass("close-mng");
            if (this.options.standalone === false && !O) {
                if (Q === false) {
                    return
                } else {
                    if (g.isArray(this.filterPanel.filters)) {
                        if (this.filterPanel.filters.length > 0) {
                            g.map(this.filterPanel.filters, g.proxy(function(R) {
                                R[N] = this.filterConfig
                            }, this))
                        } else {
                            P[N] = this.filterConfig;
                            this.filterPanel.filters.push(P)
                        }
                    } else {
                        this.filterPanel.filters[N] = this.filterConfig
                    }
                }
            }
            f.apply(this, [this.EVENTS[2], {
                object: this,
                filterPanel: this.filterPanel
            }]);
            this.unregisterMinMaxVal();
            if (this.options.mode === "fullscreen") {
                formManager.closeFullpage(this.options.containerId)
            } else {
                if (this.modal !== null ) {
                    this.modal.remove()
                }
            }
        },
        applyFIltersFromBuilders: function F() {
            var M, O, N;
            this.filterConfig = [];
            O = g.map(this.filterBuilders, g.proxy(function(P) {
                M = P.component.getFilterConfig();
                if (g.isEmptyObject(M) === false) {
                    this.filterConfig.push(M)
                } else {
                    if (M === false) {
                        N = g.grep(this.dom.panels, function(Q) {
                            if (Q.layer.id === P.component.options.layer.id) {
                                return true
                            }
                            return false
                        })[0];
                        if (N && !N.panelContent.is(":visible")) {
                            N.panelTitle.trigger("click")
                        }
                        return false
                    }
                }
            }, this));
            if (O.length > 0) {
                return false
            }
        },
        save: function G(Q, N) {
            var R = [], M = {}, O = this.options.viewer.mapId, P;
            R = this.applyFIltersFromBuilders();
            if (R === false) {
                return
            }
            if (!g.isArray(this.filterPanel.filters)) {
                this.filterPanel.filters = []
            }
            P = g.grep(this.filterPanel.filters, function(S) {
                if (S[O]) {
                    S[O] = [];
                    return true
                } else {
                    return false
                }
            })[0];
            if (!P) {
                P = {};
                P[O] = [];
                this.filterPanel.filters.push(P)
            }
            g.map(this.filterConfig, g.proxy(function(S) {
                if (this.filterPanel.filters.length === 0) {
                    M[O] = [S];
                    this.filterPanel.filters.push(M)
                } else {
                    if (S.items.length > 0) {
                        P[O].push(S)
                    }
                }
            }, this));
            giscloud.storage.fs.update(this.relpath, {
                content: JSON.stringify(this.fileConfig)
            }).done(g.proxy(H, this)).fail(g.proxy(o, this));
            f.apply(this, [this.EVENTS[1], {
                object: this,
                config: this.fileConfig
            }]);
            if (Q === true) {
                this.close(N)
            }
        },
        unregisterMinMaxVal: function v() {
            window.ParsleyValidator.removeValidator("fgt");
            window.ParsleyValidator.removeValidator("flt")
        },
        registerMinMaxVal: function z() {
            var M = this.maskWraper;
            window.ParsleyValidator.addValidator("fgt", function(P, R) {
                var O, N, Q = true;
                R = R.split(",");
                O = M.find(R[0]);
                N = M.find(R[1]);
                window.ParsleyUI.removeError(this.element.parsley(), "condGr");
                window.ParsleyUI.removeError(this.element.parsley(), "condReq");
                if (!O.is(":checked")) {
                    if (!P) {
                        window.ParsleyUI.addError(this.element.parsley(), "condReq", B.__("This value is required."));
                        Q = false
                    }
                    if (N.val() && (parseFloat(P) > parseFloat(N.val())) === false && Q === true) {
                        window.ParsleyUI.addError(this.element.parsley(), "condGr", B.__("This value should be greater."));
                        Q = false
                    }
                }
                return Q
            }, 32).addMessage("en", "fgt", ParsleyUtils.noMessage);
            window.ParsleyValidator.addValidator("flt", function(P, R) {
                var O, N, Q = true;
                R = R.split(",");
                O = M.find(R[0]);
                N = M.find(R[1]);
                window.ParsleyUI.removeError(this.element.parsley(), "condReq");
                window.ParsleyUI.removeError(this.element.parsley(), "condLs");
                if (!O.is(":checked")) {
                    if (!P) {
                        window.ParsleyUI.addError(this.element.parsley(), "condReq", B.__("This value is required."));
                        Q = false
                    }
                    if (N.val() && (parseFloat(P) < parseFloat(N.val())) === false && Q === true) {
                        window.ParsleyUI.addError(this.element.parsley(), "condLs", B.__("This value should be less."));
                        Q = false
                    }
                }
                return Q
            }, 2).addMessage("en", "flt", ParsleyUtils.noMessage)
        }
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(f) {
    var d = {
        viewer: null ,
        filterDef: [],
        gcdatagrid: null ,
        saveScrollPosition: true
    };
    var e = function e(u, v) {
        var r = this.find(".panel-title div.total");
        if (r.length === 0) {
            r = f("<div>", {
                "class": "total pull-right"
            });
            this.find(".panel-title").append(r)
        }
        if (v.getActiveFilters().length === 0) {
            r.text("")
        } else {
            r.text("(" + v.getActiveFilters().length + ")")
        }
    }
    ;
    var h = function h() {
        this.container.scrollTop(this.container.data("scrollPostion"))
    }
    ;
    var p = function p() {
        this.container.data("scrollPostion", this.container.scrollTop())
    }
    ;
    var g = function g() {
        var v = this.classNamespace + giscloud.ui.id(), r, B, z, u;
        this.template.panelGroup.attr("id", v);
        this.container.empty();
        f.map(this.options.filterDef, f.proxy(function(D) {
            r = this.options.viewer.layerById(D.layer_id);
            if (!r) {
                console.info("layer doesn't exist " + D.layer_id);
                return
            }
            z = this.template.panelHeading.clone();
            u = this.template.panelCollapse.clone();
            B = "layerId-" + r.id;
            z.attr("data-parent", "#" + v).attr("data-target", "#" + B);
            z.find("a").text(r.name);
            u.attr("id", B);
            var C = {
                filter: new giscloud.ui.filters(D,u.find(".panel-body"),{
                    gcdatagrid: this.options.gcdatagrid,
                    viewer: this.options.viewer
                }),
                panelCollapse: u,
                panelHeading: z
            };
            f(C.filter).on("filter-add.gc-filter", f.proxy(e, C.panelHeading)).on("filter-remove.gc-filter", f.proxy(e, C.panelHeading));
            if (this.options.saveScrollPosition) {
                f(C.filter).on("panel-rendering.gc-filter", f.proxy(p, this)).on("panel-rendered.gc-filter", f.proxy(h, this))
            }
            this.filters.push(C);
            if (this.options.filterDef.length === 1) {
                u.addClass("in");
                z.removeClass("collapsed")
            }
            this.template.panelGroup.find(".panel").append(z);
            this.template.panelGroup.find(".panel").append(u)
        }, this));
        this.container.append(this.template.panelGroup)
    }
    ;
    giscloud.ui.LayerFilterForm = function(u, v) {
        this.eventNamespace = "gc-layer-filter-form";
        this.EVENTS = ["form-rendered"];
        this.options = {};
        this.filters = [];
        this.classNamespace = "gcLayerFilterForm";
        this.container = null ;
        this.template = {
            panelGroup: f("<div>", {
                "class": "panel-group gc-filter-form",
                role: "tablist",
                "aria-multiselectable": true
            }).append(f("<div>", {
                "class": "panel panel-default"
            })),
            panelHeading: f("<div>", {
                "class": "accordion-toggle collapsed panel-heading",
                role: "tab",
                "data-toggle": "collapse",
                "aria-expanded": true
            }).append(f("<div>", {
                "class": "panel-title"
            }).append(f("<a>"))),
            panelCollapse: f("<div>", {
                "class": "panel-collapse collapse",
                role: "tabpanel"
            }).append(f("<div>", {
                "class": "panel-body"
            }))
        };
        this.initialize = function r() {
            if (f.isPlainObject(u)) {
                this.options = f.extend(true, {}, d, {
                    viewer: giscloud.ui.map || null 
                }, u)
            } else {
                this.options = v || {};
                this.options.container = u;
                this.options = f.extend(true, {}, d, {
                    viewer: giscloud.ui.map || null 
                }, v)
            }
            if (f.isPlainObject(u)) {
                this.container = f(this.options.container)
            } else {
                this.container = f(u)
            }
            if (!f.isArray(this.options.filterDef)) {
                this.options.filterDef = [this.options.filterDef]
            }
            if (this.container === null  || !this.container.length) {
                throw "giscloud.ui.LayerFilterForm: invalid container"
            }
            if (!this.options.viewer) {
                throw "giscloud.Viewer object is required."
            }
            this.container.empty().append(f("<i>", {
                "class": "fa fa-refresh fa-spin fa-4x"
            }));
            this.options.viewer.loading.done(f.proxy(g, this))
        }
        ;
        return this.initialize()
    }
    ;
    giscloud.ui.LayerFilterForm.prototype = {
        on: function m() {
            this.container.on.apply(this.container, Array.prototype.slice.apply(arguments));
            return this
        },
        off: function a() {
            this.container.off.apply(this.container, Array.prototype.slice.apply(arguments));
            return this
        },
        bind: function o() {
            return this.on.apply(this, Array.prototype.slice.apply(arguments))
        },
        unbind: function q() {
            return this.off.apply(this, Array.prototype.slice.apply(arguments))
        }
    }
}(window.giscloud && giscloud.exposeJQuery() || window.jQuery));
(function(g) {
    var F = {
        ajax: {
            type: "POST",
            url: null ,
            data: null 
        },
        editButton: false,
        editButtonTemplate: "<a class='btn-inline-edit' href='#'><i class='fa fa-pencil'></a>",
        inputPlaceholder: null ,
        inputInitValue: null ,
        id: null ,
        hideEditMaskOnBlur: true,
        autosize: false
    };
    var r = function r() {
        if (this.wrapContainer.width() > this.container.textWidth() + 30) {
            this.container.removeClass("widthFull").addClass("widthAuto")
        } else {
            this.container.removeClass("widthAuto").addClass("widthFull")
        }
    }
    ;
    var d = function d(J, I) {
        g(this).trigger(J, I);
        this.container.trigger(J, I)
    }
    ;
    var m = function m() {
        var I = this.options.ajax.data;
        I.value = this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val();
        return g.ajax({
            method: this.options.ajax.type,
            url: this.options.ajax.url,
            data: this.options.ajax.data
        }).done(g.proxy(function(J) {
            d.apply(this, [this.EVENTS[3], {
                component: this,
                message: J
            }])
        }, this)).fail(g.proxy(function(J, K) {
            d.apply(this, [this.EVENTS[4], {
                component: this,
                xhr: J,
                status: K
            }])
        }, this))
    }
    ;
    var B = function B(I) {
        C.apply(this, ["SET", I]);
        v.call(this)
    }
    ;
    var C = function C(I, K) {
        var J;
        function M() {
            if (this.useText) {
                this.container.text(J)
            } else {
                this.container.val(J)
            }
        }
        if (I === "SET") {
            J = this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val();
            this.values.changedValue.push(J);
            if (K === true) {
                M.apply(this)
            }
        } else {
            if (I === "RESTORE") {
                if (this.values.savedValue.length > 0) {
                    J = this.values.savedValue[this.values.savedValue.length - 1]
                } else {
                    J = this.values.initalValue
                }
                this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val(J);
                if (K === true) {
                    M.apply(this)
                }
            }
        }
    }
    ;
    var v = function v(I) {
        if (I === "DISPLAY") {
            this.showDisplayMask()
        } else {
            if (I == "EDIT") {
                this.showEditMask(true)
            }
        }
        if (!I) {
            if (this.wrapContainer.find(".inline-wrap-display").is(":visible")) {
                this.showEditMask(true)
            } else {
                this.showDisplayMask()
            }
        }
    }
    ;
    var a = function a(I) {
        var K = {
            component: this,
            cancelSave: false,
            value: this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val()
        }, J;
        if (this.options.ajax.url) {
            d.apply(this, [this.EVENTS[2], K]);
            J = m.apply(this)
        } else {
            B.apply(this, [true]);
            d.apply(this, [this.EVENTS[5], K])
        }
        if (J !== undefined) {
            J.done(function() {
                this.values.savedValue.push(K.value)
            })
        } else {
            if (K.cancelSave === false) {
                this.values.savedValue.push(K.value)
            }
        }
        if (I && I instanceof jQuery.Event) {
            I.stopPropagation()
        }
    }
    ;
    var p = function p(I) {
        C.apply(this, ["RESTORE"]);
        v.apply(this);
        d.apply(this, [this.EVENTS[1], {
            component: this
        }]);
        if (I && I instanceof jQuery.Event) {
            I.stopPropagation()
        }
    }
    ;
    var o = function o(J) {
        var I = g(J.target);
        if (J.which === 13 && I.prop("tagName") !== "TEXTAREA") {
            a.apply(this)
        } else {
            if (J.which === 13 && J.ctrlKey === true && I.prop("tagName") === "TEXTAREA") {
                a.apply(this)
            } else {
                if (J.which == 27) {
                    p.apply(this)
                }
            }
        }
    }
    ;
    giscloud.ui.inlineEdit = function f(J, K) {
        this.EVENTS = ["gc.inlineEdit.initial.done", "gc.inlineEdit.cancel", "gc.inlineEdit.save.before", "gc.inlineEdit.save.done", "gc.inlineEdit.save.fail", "gc.inlineEdit.save.click", "gc.inlineEdit.showEditMask", "gc.inlineEdit.showDisplayMask", "gc.inlineEdit.refreshDisplayMask", "gc.inlineEdit.hideBtns", "gc.inlineEdit.showBtns"];
        this.template = {
            inlineWrap: g("<div>", {
                "class": "inline-wrap"
            }),
            inlineWrapEdit: g("<div>", {
                "class": "inline-wrap-edit ",
                css: {
                    display: "none"
                }
            }),
            inlineWrapDisplay: g("<div>", {
                "class": "inline-wrap-display"
            }),
            inputTemplate: g("<input>", {
                type: "text",
                "class": "form-group form-control inline-edit-element",
                value: "",
                placeholder: ""
            }),
            textAreaTemplate: g("<textarea>", {
                type: "text",
                "class": "form-group form-control inline-edit-element",
                value: "",
                placeholder: ""
            }),
            buttonsWrap: g("<div>", {
                "class": "form-group inline-btn-wrap"
            }),
            buttonsTemplate: [g("<a>", {
                "class": "btn btn-md btn-primary btn-save",
                type: "button"
            }).append(g("<i>", {
                "class": "fa fa-check"
            })), g("<a>", {
                "class": "btn btn-md btn-default btn-cancel",
                type: "button"
            }).append(g("<i>", {
                "class": "fa fa-times"
            })), g("<div>", {
                "class": "clearfix"
            })]
        };
        this.values = {
            initalValue: null ,
            changedValue: [],
            savedValue: []
        };
        this.useText = false;
        this.container = null ;
        this.wrapContainer = null ;
        this.elId = null ;
        this.initialize = function I() {
            var M = this.template.inputTemplate;
            if (g.isPlainObject(J)) {
                this.options = g.extend(true, {}, F, J)
            } else {
                this.options = K || {};
                this.options.selector = J;
                this.options = g.extend(true, {}, F, K)
            }
            if (g.isPlainObject(J)) {
                this.container = J
            } else {
                this.container = g(J)
            }
            if (g.inArray(this.container.prop("tagName"), ["INPUT", "TEXTAREA"]) == -1 && !this.options.inputInitValue) {
                this.values.initalValue = this.container.text();
                this.useText = true
            } else {
                if (this.container.prop("tagName") === "TEXTAREA") {
                    M = this.template.textAreaTemplate
                }
                this.values.initalValue = this.options.inputInitValue || this.container.val()
            }
            this.template.textAreaTemplate.val(this.values.initalValue);
            M.val(this.values.initalValue);
            this.elId = this.options.id || giscloud.uuid();
            this.template.inlineWrap.attr("id", this.elId);
            this.container.wrap(this.template.inlineWrap);
            this.container.wrap(this.template.inlineWrapDisplay);
            this.container.addClass("inline-dispay-element");
            this.template.buttonsWrap.append(this.template.buttonsTemplate);
            this.wrapContainer = g("#" + this.elId);
            this.wrapContainer.append(this.template.inlineWrapEdit);
            this.wrapContainer.find(".inline-wrap-edit").append(M);
            this.wrapContainer.find(".inline-wrap-edit").append(this.template.buttonsWrap);
            if (this.options.autosize) {
                this.wrapContainer.find(".inline-edit-element").autosize({
                    append: false
                })
            }
            if (this.options.editButton === true) {
                this.wrapContainer.find(".inline-wrap-display").append(this.options.editButtonTemplate);
                this.wrapContainer.on("click", "a.btn-inline-edit", g.proxy(B, this));
                r.apply(this)
            } else {
                this.container.addClass("inline-no-btn");
                this.wrapContainer.on("click focus", ".inline-dispay-element", g.proxy(B, this))
            }
            if (this.options.hideEditMaskOnBlur === true) {
                this.wrapContainer.on("blur", ".inline-edit-element", g.proxy(this.showDisplayMask, this))
            }
            this.wrapContainer.on("mousedown", ".btn-cancel", g.proxy(p, this)).on("mousedown", ".btn-save", g.proxy(a, this));
            this.wrapContainer.on("keydown", ".inline-wrap-edit .inline-edit-element", g.proxy(o, this)).on("keyup", ".inline-wrap-edit .inline-edit-element", g.proxy(C, this, "SET"));
            d.apply(this, [this.EVENTS[0], {
                component: this
            }]);
            return this
        }
        ;
        return this.initialize()
    }
    ;
    giscloud.ui.inlineEdit.prototype = {
        on: function q() {
            this.container.on.apply(this.container, Array.prototype.slice.apply(arguments));
            return this
        },
        off: function G() {
            this.container.off.apply(this.container, Array.prototype.slice.apply(arguments));
            return this
        },
        bind: function H() {
            return this.on.apply(this, Array.prototype.slice.apply(arguments))
        },
        unbind: function h() {
            return this.off.apply(this, Array.prototype.slice.apply(arguments))
        },
        setEditValue: function E(I) {
            this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val(I);
            C.apply(this, ["SET"]);
            return this
        },
        refreshDisplayMask: function z() {
            d.apply(this, [this.EVENTS[8], {
                component: this
            }]);
            if (this.options.editButton === true) {
                r.apply(this)
            }
        },
        clearEditValue: function e(I) {
            if (I) {
                this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val(this.values.initalValue)
            } else {
                this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").val("")
            }
            C.apply(this, ["SET"]);
            return this
        },
        showDisplayMask: function u() {
            d.apply(this, [this.EVENTS[7], {
                component: this
            }]);
            this.wrapContainer.find(".inline-wrap-display").show();
            if (this.options.editButton === true) {
                r.apply(this)
            }
            if (this.options.autosize) {
                this.container.trigger("autosize.resize")
            }
            this.wrapContainer.find(".inline-wrap-edit").hide();
            return this
        },
        showEditMask: function D(I) {
            d.apply(this, [this.EVENTS[6], {
                component: this
            }]);
            this.wrapContainer.find(".inline-wrap-display").hide();
            this.wrapContainer.find(".inline-wrap-edit").show();
            if (I === true) {
                this.wrapContainer.find(".inline-wrap-edit .inline-edit-element").focus()
            }
            if (this.options.autosize) {
                this.wrapContainer.find(".inline-edit-element").trigger("autosize.resize")
            }
            return this
        }
    }
}(giscloud.exposeJQuery()));
(function(d, e, a, f) {
    if (!giscloud.ui.columns) {
        giscloud.ui.columns = {}
    }
    giscloud.ui.columns.filterDropdown = function(q, o) {
        var h, p, m, g = e(this);
        o.page = o.page ? o.page : 1;
        o.perpage = o.perpage ? o.perpage : 10;
        o.sort = o.sort || o.column;
        e(q).find(".gc-list").empty();
        e(q).find(".gc-dropdown-list").hide();
        m = e(q).find(".gc-pagination-list").addClass("gc-hidden");
        e(q).loader();
        giscloud.layers.attributeOps.distinct(o.layer_id, o.column, o).done(function(v) {
            e(q).loader("hide");
            var B, F, z, C, u, r, E, D;
            h = Math.ceil(v.total / o.perpage),
            p = v.page;
            u = p + " / " + h;
            B = e(q).find(".gc-list");
            z = e(q).find(".gc-dropdown-list").show();
            D = e(q).find("#gc-dropdown-input");
            C = e(q).find(".gc-page-stats");
            C = e(q).find(".gc-page-stats");
            r = e(q).find(".gc-arrow-left");
            E = e(q).find(".gc-arrow-right");
            if (!B.length) {
                B = e("<ul/>").addClass("gc-list");
                z = e("<div/>").addClass("gc-dropdown-list");
                D = e("<input/>").attr({
                    id: "gc-dropdown-input",
                    type: "text",
                    placeholder: "filter..."
                });
                m = e("<div/>").addClass("gc-pagination-list gc-hidden").css("margin", "10px 0 0 0");
                r = e("<div/>").addClass("gc-icon gc-arrow-left gc-pointer");
                E = e("<div/>").addClass("gc-icon gc-arrow-right gc-pointer").css("float", "right").css("margin", "0");
                C = e("<div/>").addClass("gc-comment gc-page-stats").css("float", "left").css("margin", "3px 0 0 17px").css("font-size", 10);
                e(q).append(D);
                e(q).append(z);
                e(q).append(m);
                z.append(B);
                m.append(r);
                m.append(C);
                m.append(E)
            }
            r.unbind();
            E.unbind();
            D.unbind();
            r.click(function() {
                if (p <= 1) {
                    return
                }
                o.page--;
                o.dontUnbind = true;
                giscloud.ui.columns.filterDropdown(q, o)
            });
            E.click(function() {
                if (p >= h) {
                    return
                }
                o.page++;
                o.dontUnbind = true;
                giscloud.ui.columns.filterDropdown(q, o)
            });
            D.bind("keypress", function(H) {
                if (H.keyCode === 13) {
                    var G = D.val();
                    g.trigger("item-click", [{
                        value: G,
                        column: o.column
                    }])
                }
            });
            if (h == 1) {} else {
                m.removeClass("gc-hidden");
                C.html(u)
            }
            F = e("<li/>").addClass("gc-item gc-pointer").html("<a class='deletebutton' >Clear filter</a>");
            F.click(function() {
                g.trigger("item-click", [{
                    value: null ,
                    column: o.column
                }])
            });
            B.append(F);
            e.each(v.data, function(G, H) {
                F = e("<li/>").addClass("gc-item gc-pointer").html(H);
                F.click(function() {
                    g.trigger("item-click", [{
                        value: H,
                        column: o.column
                    }])
                });
                B.append(F)
            });
            g.trigger("done")
        });
        if (o && !o.dontUnbind) {
            g.unbind("item-click")
        }
        return g
    }
})(window, giscloud.exposeJQuery(), giscloud.common());
(function(V) {
    var am, B, U, g, m, au, h, I, ar = false, af = false, F = {};
    function q(aw, av) {
        return giscloud.ui.alert.color("red").show(aw, av)
    }
    function D(aw, av) {
        return giscloud.ui.alert.color("green").show(aw, av)
    }
    function ao() {
        g = {}
    }
    function C(az) {
        var ay, ax, aw = giscloud.ui.map.instance, av = aw.getLayerCount();
        for (ay = 0; ay < av; ay++) {
            ax = aw.getLayer(ay);
            if (ax.id === "layer" + az) {
                return ax
            }
        }
        return null 
    }
    function z(aw, ay) {
        var ax = C(aw.id)
          , av = ax && ax.getSelectable();
        aw = fnl.getLayerById(aw.id);
        if (!ay) {
            return av && gcapp.isEditable(aw)
        }
        switch (ay.toLowerCase()) {
        case "insert":
            return gcapp.canInsert(aw) && av;
        case "update":
            return gcapp.canUpdate(aw) && av;
        case "delete":
            return gcapp.canDelete(aw) && av;
        default:
            return gcapp.isEditable(aw) && av
        }
    }
    function ai() {
        var ax, aw, av;
        if (gcapp.gclayer.llist) {
            aw = gcapp.gclayer.llist.getSelected();
            av = aw && gcapp.canInsert(aw)
        } else {
            aw = giscloud.ui.map.layerById(giscloud.ui.map.activeLayer);
            av = aw && gcapp.canInsert(aw)
        }
        if (av) {
            return {
                id: aw.id,
                type: aw.tip || aw.type
            }
        }
        return null 
    }
    function p(ax, av) {
        var aw = V.map(giscloud.ui.map.layers, function(ay) {
            var az = {
                layerId: ay.id,
                status: ay.selectable()
            };
            ay.selectable(z(ay, av));
            return az
        });
        if (!ax) {
            m = aw
        }
    }
    function ac() {
        return p(true)
    }
    function aa() {
        V.each(m || [], function(aw, ax) {
            var av = giscloud.ui.map.layerById(ax.layerId);
            if (av) {
                av.selectable(ax.status)
            }
        })
    }
    function at() {
        giscloud.ui.map.reloadMap();
        gcdatagrid.refresh()
    }
    function ak() {
        D(gclang.form_saving);
        giscloud.ui.customForm.disable()
    }
    function O() {
        D(gclang.form_saving_done, 2000);
        giscloud.layers.reset(giscloud.ui.map.mapId, [U.id]).done(at, giscloud.ui.customForm.close, au.resolve);
        giscloud.log.push("feature_add", {
            lid: U.id,
            mid: giscloud.ui.map.mapId
        })
    }
    function aj() {
        q(gclang.form_input_error, 2000);
        giscloud.ui.customForm.enable()
    }
    function al(av) {
        var ax = V("#gc-edit-latlon-input > input")
          , aw = V(av.target).is("button")
          , az = /^\s*(-?\d*.?\d+)\s*[\s,]\s*(-?\d*.?\d+)\s*$/
          , ay = ax.val().match(az);
        if (ay && ay.length === 3) {
            if (!aw) {
                V("#gc-edit-latlon-input > button").prop("disabled", false)
            }
            if (aw || av.type === "keyup" && av.which === 13) {
                H(ay[1], ay[2])
            }
        } else {
            V("#gc-edit-latlon-input > button").prop("disabled", true)
        }
    }
    function H(ay, aA) {
        var aw = giscloud.ui.map.instance.projection, az = new Proj4js.Proj("EPSG:4326"), ax, av = new Proj4js.Point(parseFloat(aA),parseFloat(ay));
        Proj4js.defs.CURRENT = aw;
        ax = new Proj4js.Proj("CURRENT");
        Proj4js.transform(az, ax, av);
        h = new giscloud.geometry.Point(av.x,av.y);
        giscloud.ui.map.graphic.cancelDraw()
    }
    function ab() {
        V("<div/>", {
            id: "gc-edit-latlon-input"
        }).append(V("<input/>", {
            placeholder: "GPS: Lat, Lon"
        }).on("change keyup", al), V("<button/>", {
            text: "OK",
            disabled: true
        }).on("click", al)).appendTo("body").offset(function() {
            var av = V(giscloud.ui.map.container()).offset();
            return {
                top: av.top,
                left: av.left + giscloud.ui.map.width() / 2 + 100
            }
        })
    }
    function a(av) {
        giscloud.ui.customForm.open({
            layerId: U.id
        }).done(function(aw) {
            aw.trigger("setFeatureGeometry.gc-custom-form", av.geometry().toOGC()).trigger("setRestParams.gc-custom-form", {
                use_map_srid: true
            }).on({
                "submitStart.gc-custom-form": ak,
                "submitSuccess.gc-custom-form": O,
                "submitFailure.gc-custom-form": aj,
                "close.gc-custom-form": au.reject
            });
            h = null 
        }).fail(au.reject)
    }
    function u() {
        if (h) {
            a({
                geometry: function() {
                    return h
                }
            })
        }
        au.reject()
    }
    function ad(av) {
        return "<div class='edit-feature-message'>" + gclang.Editing_feature + (av.type !== "point" ? ("<br/>" + E()) : "") + N() + "<a href='#' class='edit-feature-accept-button'>" + gclang.Save_changes + "</a><a href='#' class='edit-feature-cancel-button'>" + gclang.Cancel + "</a></div>"
    }
    function r(ay) {
        var ax = function(az) {
            az.preventDefault();
            giscloud.ui.edit.editCancel()
        }
          , av = function(az) {
            az.preventDefault();
            giscloud.ui.edit.editAccept()
        }
          , aw = giscloud.ui.map.layerById(ay.layerId);
        giscloud.ui.map.unbind("featureClick", e);
        giscloud.ui.map.select(false);
        if (!aw || !z(aw, "update")) {
            return
        }
        U = aw;
        D(ad(aw));
        V(".edit-feature-cancel-button").click(ax);
        V(".edit-feature-accept-button").click(av);
        ap();
        o();
        ag();
        giscloud.ui.map.editFeature(ay.layerId, ay.featureId).always(function() {
            B = false;
            gcapp.gcmap.options.dontShowInfo = false;
            V(".edit-feature-cancel-button").off("click", ax);
            V(".edit-feature-accept-button").off("click", av);
            P();
            d();
            giscloud.ui.alert.hide();
            aa();
            giscloud.log.push("feature_edit", {
                lid: ay.layerId,
                fid: ay.featureId
            })
        }).then(au.resolve, au.reject)
    }
    function e(av) {
        if (typeof g.beforeEdit === "function") {
            V.when(g.beforeEdit(av)).fail(function(aw) {
                if (!aw) {
                    giscloud.ui.edit.editCancel()
                }
            }).done(function(aw) {
                if (aw === false) {
                    giscloud.ui.edit.editCancel()
                } else {
                    if (aw === true) {} else {
                        if (aw !== undefined) {
                            r(aw)
                        } else {
                            r(av)
                        }
                    }
                }
            })
        } else {
            r(av)
        }
    }
    function Q(av) {
        if (av.tool === "SelectTool" || av.tool === "InfoTool") {
            giscloud.ui.edit.editCancel()
        }
    }
    function M(aw) {
        var av;
        giscloud.ui.map.selection.clear();
        gcapp.gcmap.options.dontShowInfo = false;
        B = false;
        aa();
        D(gclang.PleaseWait);
        av = V.map(aw.featureIds || [], function(ax) {
            return giscloud.features.remove(aw.layerId, ax)
        });
        V.when.apply(V, av).done(function() {
            giscloud.layers.reset(giscloud.ui.map.mapId, [aw.layerId]).done(function() {
                D(gclang.Successfully_deleted_, 3000);
                at();
                au.resolve();
                giscloud.log.push("feature_delete", {
                    lid: aw.layerId,
                    fids: aw.featureIds,
                    count: aw.featureIds.length
                })
            })
        }).fail(function() {
            q(gclang.AnErrorOccurred, 3000);
            au.reject()
        })
    }
    function ah() {
        var av;
        if (gcapp.selo.selectionCount() === 0) {
            giscloud.ui.edit.deleteCancel();
            return
        }
        av = {
            layerId: gcapp.selo.selection.lid,
            featureIds: gcapp.selo.selection.fids
        };
        if (typeof g.beforeDelete === "function") {
            V.when(g.beforeDelete(av)).fail(function(aw) {
                if (!aw) {
                    giscloud.ui.edit.deleteCancel()
                }
            }).done(function(aw) {
                if (aw === false) {
                    giscloud.ui.edit.editCancel()
                } else {
                    if (aw === true) {} else {
                        if (aw !== undefined) {
                            M(aw)
                        } else {
                            M(av)
                        }
                    }
                }
            })
        } else {
            M(av)
        }
    }
    function v(av) {
        av.preventDefault();
        V(".snapping-layers-list").toggle()
    }
    function K() {
        var aw = {}
          , av = false;
        V(".snapping-layer-check").each(function(ay, ax) {
            var az = V(ax)
              , aA = az.prop("checked")
              , aB = az.val();
            av = av || aA;
            aw[aB] = aA
        });
        F[U.id] = aw;
        giscloud.ui.map.graphic.snapToLayersGeometry(aw);
        V(".snapping-onoff-check").prop("checked", av)
    }
    function aq(aw) {
        var av, az = (aw.which === 77 || aw.which === 109), ay = V(aw.target).is(".measure-onoff-check"), ax = !V(aw.target).is("input");
        if (az && (ay || ax)) {
            av = V(".measure-onoff-check");
            av.prop("checked", !av.prop("checked"));
            T();
            aw.stopImmediatePropagation()
        }
    }
    function W(aw) {
        var av, az = (aw.which === 83 || aw.which === 115), ay = V(aw.target).is(".snapping-onoff-check,.snapping-layer-check"), ax = !V(aw.target).is("input");
        if (az && (ay || ax)) {
            av = V(".snapping-onoff-check");
            av.prop("checked", !av.prop("checked"));
            G();
            aw.stopImmediatePropagation()
        }
    }
    function T() {
        giscloud.ui.edit.measureDisplay(V(".measure-onoff-check").prop("checked"))
    }
    function G() {
        var av = V(".snapping-onoff-check").prop("checked")
          , ax = F[U.id]
          , aw = true;
        if (av) {
            if (ax) {
                V(".snapping-layer-check").each(function(az, aA) {
                    var ay = V(aA)
                      , aB = ax[ay.val()];
                    if (aB != null ) {
                        ay.prop("checked", aB);
                        aw = aw && !aB
                    }
                });
                giscloud.ui.map.graphic.snapToLayersGeometry(ax)
            }
            if (!ax || aw) {
                V(".snapping-layer-check").each(function(az, aA) {
                    var ay = V(aA)
                      , aB = (ay.val() === U.id.toString());
                    ay.prop("checked", aB)
                });
                K()
            }
            f();
            Y(1500)
        } else {
            Z();
            V(".snapping-layer-check").prop("checked", av);
            giscloud.ui.map.graphic.snapToLayersGeometry(av)
        }
    }
    function ae() {
        if (giscloud.ui.map.graphic.isFeatureCountOkForSnapping()) {
            V(".zoom-in-more-label,.snapping-controls").addClass("enabled").removeClass("disabled")
        } else {
            V(".zoom-in-more-label,.snapping-controls").addClass("disabled").removeClass("enabled")
        }
    }
    function S(av) {
        ar = (av.type === "mouseenter")
    }
    function J() {
        V(".gc-green-alert").on("mouseenter", f).on("mouseleave", Y)
    }
    function R() {
        af = false;
        V(".gc-green-alert").off("mouseenter", f).off("mouseleave", Y)
    }
    function f() {
        if (I != null ) {
            clearTimeout(I);
            I = null 
        }
        if (af) {
            return
        }
        if (V(".snapping-layer-check").is(":checked")) {
            af = true;
            V(".snapping-layers-list").slideDown("fast", J)
        }
    }
    function Z() {
        if (ar) {
            return
        }
        V(".snapping-layers-list").slideUp("fast", R);
        if (I != null ) {
            clearTimeout(I);
            I = null 
        }
    }
    function Y(av) {
        if (I != null ) {
            clearTimeout(I);
            I = null 
        }
        if (isNaN(av)) {
            av = 800
        }
        I = setTimeout(Z, av)
    }
    function o() {
        V(".snapping-onoff-check").change(G);
        V(".snapping-layer-check").change(K);
        V(".snapping-layers-toggle").click(v);
        V(".snapping-controls").mouseenter(f);
        giscloud.ui.map.instance.exposeLeaflet().on("mousedown", Z);
        V("body").on("mouseenter mouseleave", ".gc-green-alert", S);
        V("body").keypress(W)
    }
    function P() {
        V(".snapping-onoff-check").off("change", G);
        V(".snapping-layer-check").off("change", K);
        V(".snapping-layers-toggle").off("click", v);
        V(".snapping-controls").off("mouseenter", f);
        giscloud.ui.map.instance.exposeLeaflet().off("mousedown", Z);
        V("body").off("mouseenter mouseleave", ".gc-green-alert", S);
        V("body").off("keypress", W)
    }
    function ag() {
        var av = V(".snapping-layers-list");
        af = false;
        if (av.height() > 180) {
            av.height(180).addClass("snapping-layers-list-overflowing")
        }
        ae();
        f();
        Y(1500);
        G()
    }
    function ap() {
        V(".measure-onoff-check").on("change", T);
        V("body").keypress(aq)
    }
    function d() {
        V(".measure-onoff-check").off("change", T);
        V("body").off("keypress", aq)
    }
    function E() {
        return "<div class='measure-controls'><div><label style='display: inline; font-size: inherit;'><input type='checkbox' class='measure-onoff-check' " + (giscloud.ui.edit.measureDisplay() ? "checked='checked'/>" : "/>") + "<u>M</u>easure display</label></div></div>"
    }
    function N() {
        var ax = giscloud.ui.map.graphic.snapToLayersGeometry()
          , aw = false
          , av = [];
        V.each(ax, function(ay, aA) {
            var az = giscloud.ui.map.layerById(ay).name;
            aw = aw || aA;
            av.push("<li title='" + az + "'><label><input type='checkbox' class='snapping-layer-check' value='" + ay + "' " + (aA ? "checked='checked'/>" : "/>") + az + "</label></li>")
        });
        return "<div class='snapping-controls'><div><label style='display: inline; font-size: inherit;'><input type='checkbox' class='snapping-onoff-check' " + (aw ? "checked='checked'/>" : "/>") + "<u>S</u>napping</label> <span class='zoom-in-more-label enabled'>(zoom in more)</span><div><ul class='list-unstyled snapping-layers-list' style='display: none'>" + av.join("") + "</ul></div></div></div>"
    }
    function an(av) {
        return "<div class='add-feature-message'>" + gclang["addfeature_message_" + av.type] + (av.type !== "point" ? ("<br/>" + E()) : "") + "<br/>" + N() + "<a href='#' class='add-feature-cancel-button'>" + gclang.Cancel + "</a></div>"
    }
    giscloud.ui.edit = {
        isActive: function() {
            return am || B
        },
        addGeoImages: function() {
            var av = ai();
            if (am || B) {
                return
            }
            if (!av) {
                giscloud.ui.redAlert(__("Please select the layer"), 2000);
                return
            }
            if (av.type != "point") {
                giscloud.ui.redAlert("You can insert geotagged images only in a point layer.", 2000);
                return
            }
            if (window.checkIfUserExceedsStorageLimits && window.checkIfUserExceedsStorageLimits()) {
                return window.showStorageForbiddenMsg()
            }
            U = av;
            V("#geoimages_form").remove();
            return giscloud.ui.modal({
                fid: "geoimages_form",
                title: "Add geotagged images",
                url: "/feature/form_geoimages",
                data: av,
                overlay: false
            })
        },
        addFeature: function() {
            var av = ai()
              , aw = function(ax) {
                ax.preventDefault();
                giscloud.ui.edit.addCancel()
            }
            ;
            if (am || B) {
                return
            }
            if (window.checkIfUserExceedsStorageLimits && window.checkIfUserExceedsStorageLimits()) {
                return window.showStorageForbiddenMsg()
            }
            if (av) {
                U = av;
                D(an(av));
                av.type !== "point" && ap();
                V(".add-feature-cancel-button").click(aw);
                o();
                ag();
                if (av.type === "point") {
                    ab();
                    h = null 
                }
                am = true;
                au = new V.Deferred();
                if (gcapp.gctoolbar.active !== "InfoTool" || gcapp.gctoolbar.active !== "SelectTool") {
                    gcapp.gctoolbar.setTool("InfoTool")
                }
                V(giscloud.ui.map.container()).addClass("gc-edit-cursor");
                gcapp.gcmap.marker.clear();
                gcapp.gcmap.dontShowInfo = true;
                giscloud.ui.map.select(false);
                au.always(function() {
                    V(".add-feature-cancel-button").off("click", aw);
                    d();
                    P();
                    gcapp.gcmap.dontShowInfo = false;
                    giscloud.ui.map.select(true);
                    giscloud.ui.map.graphic.clear();
                    am = false
                });
                giscloud.ui.map.graphic.draw(av.type).then(a, u).always(function() {
                    giscloud.ui.alert.hide();
                    V(giscloud.ui.map.container()).removeClass("gc-edit-cursor");
                    V("#gc-edit-latlon-input").remove()
                })
            } else {
                q(gclang.addfeature_message_select_layer, 3000);
                return (new V.Deferred()).reject().promise()
            }
            return au.promise()
        },
        addCancel: function() {
            giscloud.ui.map.graphic.cancelDraw();
            au.reject()
        },
        editFeature: function(av) {
            g = av || {};
            if (am || B) {
                return
            }
            if (window.checkIfUserExceedsStorageLimits && window.checkIfUserExceedsStorageLimits()) {
                return window.showStorageForbiddenMsg()
            }
            B = true;
            au = new V.Deferred();
            gcapp.gcmap.options.dontShowInfo = true;
            gcapp.gcmap.marker.clear();
            if (gcapp.gctoolbar.active !== "InfoTool" || gcapp.gctoolbar.active !== "SelectTool") {
                gcapp.gctoolbar.setTool("InfoTool")
            }
            gcapp.gctoolbar.addEvent("toolchange", Q);
            au.always(function() {
                gcapp.gctoolbar.removeEvent("toolchange", Q)
            });
            p(null , "edit");
            if (g.layerId && g.featureId) {
                e({
                    layerId: g.layerId,
                    featureId: g.featureId
                })
            } else {
                D((g.message || gclang.editfeature_choose_feature_message) + "<br/><br/><a href='javascript:;' onclick='giscloud.ui.edit.editCancel(); return false;'>" + gclang.Cancel + "</a>");
                giscloud.ui.map.featureClick(e)
            }
            au.always(ao);
            return au.promise()
        },
        editCancel: function() {
            giscloud.ui.map.editCancel();
            B = false;
            gcapp.gcmap.options.dontShowInfo = false;
            giscloud.ui.map.unbind("featureClick", e);
            giscloud.ui.alert.hide();
            aa();
            if (au) {
                au.reject()
            }
        },
        editAccept: function() {
            giscloud.ui.map.editAccept();
            D(gclang.PleaseWait)
        },
        deleteFeature: function(av) {
            g = av || {};
            if (am || B) {
                return
            }
            B = true;
            au = new V.Deferred();
            D((g.message || gclang.deletefeature_choose_feature_message) + "<br/><br/><a href='javascript:;' onclick='giscloud.ui.edit.deleteAccept(); return false;'>" + gclang.Delete_features + "</a><a href='javascript:;' onclick='giscloud.ui.edit.deleteCancel(); return false;'>" + gclang.Cancel + "</a>");
            au.always(ao);
            gcapp.gcmap.options.dontShowInfo = true;
            gcapp.gcmap.marker.clear();
            gcapp.gctoolbar.addEvent("toolchange", ac);
            au.always(function() {
                gcapp.gctoolbar.removeEvent("toolchange", ac)
            });
            if (gcapp.selo.selectionCount() !== 0) {
                if (!z(giscloud.ui.map.layerById(gcapp.selo.selection.lid))) {
                    gcapp.selo.clearSelection()
                }
            }
            p(null , "delete");
            return au.promise()
        },
        deleteAccept: function() {
            ah()
        },
        deleteCancel: function() {
            B = false;
            gcapp.gcmap.options.dontShowInfo = false;
            giscloud.ui.alert.hide();
            aa();
            au.reject()
        },
        enableDisableSnapping: function() {
            ae()
        },
        measureDisplay: function(av) {
            if (av == null ) {
                return giscloud.ui.map.graphic.measureDisplay()
            } else {
                giscloud.ui.map.graphic.measureDisplay(av)
            }
            return this
        }
    }
}(giscloud.exposeJQuery()));
(function(m) {
    var d, q, o, a, p = "<a href='javascript:;' onclick='return giscloud.ui.selectExtent.accept()'>" + gclang.Accept + "</a><a href='javascript:;' onclick='return giscloud.ui.selectExtent.cancel()'>" + gclang.Cancel + "</a>", z = gclang.Select_extent_message + "<br/><br/>" + p;
    function h(C, B) {
        return giscloud.ui.alert.color("green").show(C, B)
    }
    function v() {
        var B = m.map(giscloud.ui.map.layers, function(C) {
            var D = {
                layerId: C.id,
                status: C.selectable()
            };
            C.selectable(false);
            return D
        });
        q = B
    }
    function f() {
        m.each(q, function(C, D) {
            var B = giscloud.ui.map.layerById(D.layerId);
            B && B.selectable(D.status)
        })
    }
    function g() {
        if (a.activeTool) {
            gcapp.gctoolbar.setTool(a.activeTool)
        }
        gcapp.gcmap.options.dontShowInfo = a.dontShowInfo
    }
    function u(B) {
        if (B.tool === "SelectTool" || B.tool === "InfoTool") {
            a.activeTool = null ;
            giscloud.ui.selectExtent.cancel()
        }
    }
    function e() {
        o = giscloud.ui.defaultTools.selectExtent();
        o.viewer = giscloud.ui.map
    }
    function r(B) {
        if (B.extent) {
            d.resolve(B.extent)
        } else {
            d.reject()
        }
    }
    giscloud.ui.selectExtent = {
        start: function() {
            if (!giscloud.ui.map || giscloud.ui.map.loading.state() !== "resolved") {
                giscloud.ui.alert.color("red").show("A map needs to be opened to select an extent.", 2000);
                return m.Deferred().reject()
            }
            d = new m.Deferred();
            a = {
                activeTool: gcapp.gctoolbar.active,
                dontShowInfo: gcapp.gcmap.options.dontShowInfo
            };
            gcapp.gcmap.options.dontShowInfo = true;
            gcapp.gcmap.marker.clear();
            gcapp.gctoolbar.addEvent("toolchange", u);
            d.always(function() {
                g();
                f();
                gcapp.gctoolbar.removeEvent("toolchange", u)
            });
            v();
            h(z);
            if (!o) {
                e()
            }
            o.activate();
            o.bind("deactivation", r);
            return d.promise()
        },
        cancel: function() {
            if (!o || !d) {
                return
            }
            o.unbind("deactivation", r);
            o.deactivate();
            giscloud.ui.alert.hide();
            d.reject()
        },
        accept: function() {
            if (!o) {
                return
            }
            o.deactivate();
            giscloud.ui.alert.hide()
        }
    }
}(giscloud.exposeJQuery()));
(function(g, f) {
    giscloud.ui.id = (function() {
        var h = g.now();
        return function(o, p, m) {
            return [o || "", h++, p || ""].join(m || "")
        }
    }());
    giscloud.ui.dataGrid = {
        refresh: function() {
            gcdatagrid.refresh();
            return this
        },
        show: function() {
            gcapp.dataPanel.expand();
            return this
        },
        hide: function() {
            gcapp.dataPanel.expand();
            return this
        }
    };
    giscloud.ui.layerList = {
        refresh: function(h) {
            if (gcapp.gclayer) {
                gcapp.gclayer.loadLayerList(h)
            }
        },
        selected: function(m) {
            var h;
            if (m === undefined) {
                h = gcapp.gclayer.llist.getSelected();
                return h && h.id * 1 || null 
            } else {
                gcapp.gclayer.llist.selectByID(m);
                return this
            }
        }
    };
    giscloud.ui.homepage = {
        show: function e() {
            if (!gcapp.homepage) {
                return this
            }
            gcapp.homepage.show();
            this.trigger("shown.gc-ui-homepage");
            return this
        },
        hide: function a() {
            if (!gcapp.homepage) {
                return this
            }
            gcapp.homepage.hide();
            this.trigger("hidden.gc-ui-homepage");
            return this
        },
        toggle: function d() {
            if (!gcapp.homepage) {
                return this
            }
            gcapp.homepage.visible(!gcapp.homepage.homepage.is(":visible"));
            return this
        },
        visible: function(h) {
            if (!gcapp.homepage) {
                return this
            }
            if (h == null ) {
                return gcapp.homepage.homepage.is(":visible")
            }
            if (h) {
                this.show()
            } else {
                this.hide()
            }
            return this
        },
        refresh: function() {
            gcapp.homepage.refresh();
            return this
        }
    };
    f.addEventsInterface(giscloud.ui.homepage, function() {
        return gcapp.homepage.homepage || document.body
    });
    giscloud.ui.openMap = function(h) {
        gcproject.mapChange(h);
        return this
    }
    ;
    giscloud.ui.checkLogin = function() {
        if (user && user.id && user.id != -1 && fno || fno.gcinit_auth.logged) {
            return true
        }
        giscloud.ui.alert.color("red").show(gclang.Not_logged_in_warning, 3000);
        return false
    }
    ;
    giscloud.ui.fullScreen = (function() {
        var h = [];
        return function(m) {
            m = m || {};
            if (m === "close") {
                formManager.closeFullpage(h.length && h.pop() || null );
                if (g("div.gc-full-page").length === 0) {
                    h = []
                }
                return giscloud.ui
            }
            if (m.id == null ) {
                m.id = giscloud.ui.id("fullscreen")
            }
            h.push(m.id);
            return formManager.fullpage(m) || giscloud.ui
        }
    }());
    giscloud.ui.newWindow = (function(m) {
        var h = {};
        function o(r, p, q) {
            return ( function() {
                var v, u = 15000;
                if (!r) {
                    p.reject();
                    return
                }
                if (q.focus === "immediately") {
                    r.focus()
                } else {
                    if (q.focus === "afterLoad") {
                        p.done(function() {
                            r.focus()
                        })
                    }
                }
                v = setInterval(function() {
                    var B = r && r.document && m(r.document)
                      , z = q.check ? q.check(B) : true;
                    if (z && B && B.length) {
                        clearInterval(v);
                        v = null ;
                        p.resolve(r)
                    }
                }, 100);
                setTimeout(function() {
                    if (v !== null ) {
                        clearInterval(v);
                        p.reject()
                    }
                }, u)
            }
            ) 
        }
        return ( function(u) {
            var B, r, C, p = new m.Deferred, z = {
                focus: "immediately"
            }, v = window.navigator.userAgent, q = v.indexOf("MSIE");
            u = m.extend(z, u || {});
            if (u.check && typeof u.check === "string") {
                C = u.check.toString();
                u.check = function(D) {
                    return D && !!m(C, D).html()
                }
            }
            if (u.id == null ) {
                u.id = giscloud.ui.id("newWindow")
            } else {
                if (h[u.id] && u.clear) {
                    B = h[u.id];
                    if (!q && B && B.document) {
                        m("html", B.document).remove()
                    }
                }
            }
            if (u.url) {
                r = u.url
            } else {
                r = document.location.origin || (function(D) {
                    return D.protocol + "//" + D.host
                }(document.location));
                if (u.view) {
                    if (!giscloud || !giscloud.app || !giscloud.app.loadView) {
                        throw "newWindow: no view handling method available."
                    }
                    r += "/appinstance/view/" + u.view
                }
            }
            B = window.open(r, u.id, "menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes");
            if (!B) {
                return p.reject().promise()
            }
            h[u.id] = B;
            setTimeout(o(B, p, u), 10);
            return p.promise()
        }
        ) 
    }(g));
    giscloud.ui.apollo = (function() {
        var h, o, m;
        return {
            catalogBrowser: {
                open: function(p) {
                    formManager.closeAll();
                    apollobrowserform = formManager.open({
                        fid: "apollobrowserform",
                        overlay: false,
                        dragable: true,
                        fdata: {
                            dsid: p || null ,
                            width: 783,
                            results_height: 320
                        },
                        title: "ERDAS APOLLO Browser",
                        minimize: true,
                        width: 800,
                        height: "auto",
                        url: fno.liveSite + "datasource/browser_apollo",
                        buttons: [{
                            html: gclang.close,
                            click: "giscloud.ui.apollo.catalogBrowser.close();"
                        }]
                    })
                },
                close: function() {
                    if (apollobrowserform) {
                        apollobrowserform.close();
                        apollobrowserform = null 
                    }
                }
            },
            processingList: {
                open: function() {
                    formManager.closeAll();
                    apolloprocessingform = formManager.open({
                        fid: "apolloprocessingform",
                        overlay: false,
                        dragable: true,
                        fdata: {},
                        title: "Apollo Processing",
                        minimize: true,
                        width: 800,
                        height: "auto",
                        url: fno.liveSite + "datasource/processing_apollo",
                        buttons: [{
                            html: gclang.close,
                            click: "giscloud.ui.apollo.processingList.close();"
                        }]
                    })
                },
                close: function() {
                    if (apolloprocessingform) {
                        apolloprocessingform.close();
                        apolloprocessingform = null 
                    }
                }
            },
            runningProcessingJobsList: {
                open: function() {
                    h = formManager.open({
                        fid: "launchedprocesses",
                        overlay: false,
                        dragable: true,
                        title: "APOLLO Processes",
                        width: 700,
                        height: "auto",
                        url: fno.liveSite + "apollo/processes_list",
                        buttons: [{
                            html: gclang.close,
                            click: "giscloud.ui.apollo.runningProcessingJobsList.close('launchedprocesses');"
                        }]
                    });
                    h.addEvent("close", function() {
                        clearInterval(gcapp.refreshLaunchedInterval);
                        gcapp.processesList = null 
                    });
                    gcapp.refreshLaunchedInterval = setInterval(function() {
                        gcapp.processesList && gcapp.processesList.refresh()
                    }, 2000)
                },
                close: function() {
                    if (h) {
                        h.close();
                        h = null 
                    }
                }
            },
            launchProcessingForm: {
                open: function(p, q, u) {
                    var r = fno.liveSite + "/rest/1/datasources/" + p + "/apollo/processes/" + q + "/form.html";
                    if (u) {
                        r += "?map_id=" + u
                    }
                    o = formManager.open({
                        fid: "launchprocess",
                        overlay: false,
                        dragable: true,
                        title: "Launch process execution",
                        width: 550,
                        height: "auto",
                        url: r,
                        buttons: [{
                            html: gclang.close,
                            click: "formManager.close('launchprocess')"
                        }, {
                            html: "Launch",
                            "class": "bluebutton",
                            click: "giscloud.ui.apollo.launchProcessingForm.submit();"
                        }]
                    });
                    g(document).one("formReady.gc-dyn-form", function(v, z) {
                        m = z;
                        g(m).on("submitStart.gc-custom-form", function() {
                            giscloud.ui.alert.color("green").show("Launching process...");
                            o.disable()
                        }).on("submitFailure.gc-custom-form", function() {
                            giscloud.ui.alert.color("red").show("Failed to start processing.", 2000);
                            o.enable()
                        }).on("submitSuccess.gc-custom-form", function() {
                            giscloud.ui.alert.hide();
                            giscloud.ui.apollo.launchProcessingForm.close();
                            giscloud.ui.apollo.runningProcessingJobsList.open()
                        })
                    })
                },
                submit: function() {
                    if (!m) {
                        return
                    }
                    m.submit()
                },
                close: function() {
                    formManager.close("launchprocess");
                    o = null 
                }
            }
        }
    }())
})(giscloud.exposeJQuery(), giscloud.common());
(function(h, G) {
    var K, d, R, O = null , z = null , E = "key = 'val'", q = [{
        name: "FID",
        alias: "ID",
        order: 1,
        type: "number",
        enabled: true
    }, {
        name: "CREATED",
        alias: "CREATED",
        order: 2,
        type: "timestamp",
        enabled: true
    }, {
        name: "MODIFIED",
        alias: "MODIFIED",
        order: 3,
        type: "timestamp",
        enabled: true
    }];
    function S(Y, Z) {
        h.map(Y.items, function(aa) {
            if (Z[aa.name]) {
                aa.mappedColumn = Z[aa.name]
            }
        })
    }
    function a(Z) {
        var Y;
        if (!Z.form || !Z.form.definition) {
            return Z
        }
        if (typeof Z.form.definition === "string") {
            Y = JSON.parse(Z.form.definition)
        } else {
            Y = Z.form.definition
        }
        if (Z.form.mappings && h.isPlainObject(Z.form.mappings)) {
            S(Y, Z.form.mappings)
        }
        return q.concat(h.map(Y.items, function(ab, aa) {
            if (ab.type === "recording" || ab.type === "audio") {
                return null 
            }
            return {
                name: ab.name,
                alias: ab.title,
                order: aa + q.length + 1,
                type: ab.type,
                enabled: true,
                mappedColumn: ab.mappedColumn
            }
        }))
    }
    function N(Z) {
        var Y;
        if (!(Z instanceof giscloud.Layer)) {
            return Z
        }
        Y = h.map(Z.columns, function(ab, aa) {
            return {
                name: aa,
                alias: ab.alias,
                order: ab.order ? parseInt(ab.order, 10) : 0,
                type: ab.data || "text",
                enabled: ab.enabled
            }
        });
        Y.sort(function(ab, aa) {
            if (!ab || !ab.order) {
                return -1
            }
            if (!aa || !aa.order) {
                return 1
            }
            if (ab.order === aa.order) {
                return 0
            }
            return parseInt(ab.order, 10) > parseInt(aa.order, 10) ? 1 : -1
        });
        return Y
    }
    function e(Y) {
        return giscloud.layers.byId(Y, {
            expand: ["form", "columns", "meta"]
        }).done(function(Z) {
            O = Z
        }).then(a).then(N)
    }
    function J(ab) {
        var aa = "${name} (${filter})"
          , Y = gcdatagrid && gcdatagrid.__filters
          , Z = h("#reportFieldListItemTemplate").clone().attr("id", null );
        Z.find("input[type=checkbox]").val(ab.mappedColumn || ab.name).data("alias", ab.alias).data("type", ab.type).prop("checked", ab.enabled);
        if (Y[ab.name]) {
            Z.find("label").append(document.createTextNode(aa.replace("${name}", ab.mappedColumn || ab.alias || ab.name).replace("${filter}", Y[ab.name].value)))
        } else {
            Z.find("label").append(document.createTextNode(ab.alias || ab.name))
        }
        return Z
    }
    function M() {
        return ["i"].concat(h("#reportFieldsList input[type=checkbox]:checked").map(function(Y, Z) {
            return h(Z).val()
        }).toArray())
    }
    function m() {
        return ["#"].concat(h("#reportFieldsList input[type=checkbox]:checked").map(function(Y, Z) {
            return h(Z).data("alias")
        }).toArray())
    }
    function V() {
        var Y = {
            keys: {},
            indices: {}
        };
        h("#reportFieldsList input[type=checkbox]:checked").each(function(Z, aa) {
            if (h(aa).data("type").indexOf("photo") === 0) {
                Y.indices[Z + 1] = true;
                Y.keys[h(aa).val()] = true
            }
        });
        return Y
    }
    function v() {
        var Y = {
            keys: {},
            indices: {}
        };
        h("#reportFieldsList input[type=checkbox]:checked").each(function(Z, ab) {
            var aa = h(ab).data("type");
            if (aa === "timestamp" || aa === "mdcLocationTime") {
                Y.indices[Z + 1] = true;
                Y.keys[h(ab).val()] = true
            }
        });
        return Y
    }
    function g(Y, Z) {
        var ab, aa;
        if (Y) {
            return giscloud.features.byLayer(Y, {
                sort: "CREATED",
                where: (Z && Z.length) ? Z.join(" AND ") : null 
            })
        }
        ab = gcdatagrid && gcdatagrid.options.qsParams && h.map(gcdatagrid.options.qsParams, function(ad, ac) {
            if (ad != null ) {
                return ac + "=" + encodeURIComponent(ad)
            }
        }).join("&");
        aa = {
            perpage: 2000,
            page: 1,
            order_by: "FID",
            where: Z || []
        };
        if (gcdatagrid && gcdatagrid.options.where) {
            aa.where.push(gcdatagrid.options.where)
        }
        if (h.isArray(aa.where) && aa.where.length > 1) {
            aa.where = aa.where.join(" AND ")
        } else {
            if (h.isArray(aa.where) && aa.where.length === 1) {
                aa.where = aa.where.join()
            }
        }
        return h.post("/modules_gc/layer/clayer.php?" + ab, aa, null , "json").then(function(ac) {
            var ae = ac && ac.data || []
              , ad = ac && ac.meta && ac.meta.columns;
            if (!ad || !ad.length) {
                return ae
            }
            h.each(ae, function(ag, af) {
                var ah = {};
                h.each(ad, function(ai, aj) {
                    var ak;
                    if (aj.field === "FID") {
                        ah.FID = af.__id || af.data[aj.alias]
                    } else {
                        if (aj.field === "CREATED") {
                            ah.CREATED = af.__created || af.data[aj.alias]
                        } else {
                            if (aj.field === "MODIFIED") {
                                ah.MODIFIED = af.__modified || af.data[aj.alias]
                            } else {
                                ak = af.data[aj.alias || aj.field];
                                if (ak != null ) {
                                    ah[aj.field] = ak
                                }
                            }
                        }
                    }
                });
                ae[ag].data = ah
            });
            return ae
        })
    }
    function Q(Z, Y) {
        return h.map(Z, function(ab, aa) {
            var ac = {};
            h.each(Y || [], function(ad, ae) {
                switch (ae) {
                case "i":
                    ac.i = aa;
                    break;
                case "FID":
                    ac.FID = ab.__id;
                    break;
                case "CREATED":
                    ac.CREATED = ab.__created;
                    break;
                case "MODIFIED":
                    ac.MODIFIED = ab.__modified;
                    break;
                default:
                    ac[ae] = ab.data[ae] == null  ? "" : ab.data[ae]
                }
            });
            return ac
        })
    }
    function D(ab, aa) {
        var Y;
        console.log(ab, aa);
        try {
            Y = JSON.parse(ab.substring(7))
        } catch (Z) {
            console.error("Error decoding JSON attachment string", Z);
            return "..."
        }
        return h.map(Y, function(ac) {
            return h("<img/>", {
                "class": "img-thumbnail thumb collapsed",
                src: ["/rest/1/layers", ac.lid, "features", ac.fid || aa, ac.field, "resources", ac.rid].join("/")
            }).get(0).outerHTML
        })
    }
    function I(Y) {
        var Z;
        if (!Y) {
            return ""
        }
        if (Y.indexOf("file://") === 0) {
            Z = Y.replace("file://", "")
        } else {
            if (Y.indexOf("uploads") === -1) {
                Z = "uploads/" + Y
            }
        }
        return h("<img/>", {
            src: "/view/${layerId}/" + Z,
            "class": "img-thumbnail thumb collapsed"
        }).get(0).outerHTML
    }
    function H(Y) {
        return ( function(Z, aa) {
            if (!Z) {
                return Z
            }
            if (Z.indexOf("___json") === 0) {
                return new Handlebars.SafeString(D(Z, aa).join(""))
            }
            return new Handlebars.SafeString(h.map(Z && Z.split && Z.split(",") || [], I).join("").replace(/\$\{layerId\}/g, Y))
        }
        ) 
    }
    function C(Y) {
        return isNaN(Y) ? "" : (new Date(Y * 1000)).toLocaleString()
    }
    function W(ab, ac, Z) {
        var Y, aa;
        if (this === window) {
            return ""
        }
        Y = Z.data.index;
        aa = Z.data.key;
        if (aa) {
            if (ac.keys[aa] === true) {
                return Z.fn(this)
            }
            return Z.inverse(this)
        }
        if (ac.indices[Y] === true) {
            return Z.fn(this)
        }
        return Z.inverse(this)
    }
    function F(ac, Y, aa) {
        var Z, ab;
        if (this === window) {
            return ""
        }
        Z = aa.data.index;
        ab = aa.data.key;
        Y = Y || aa.data.root.timestampColumns;
        if (ab) {
            if (Y.keys[ab] === true) {
                return aa.fn(this)
            }
            return aa.inverse(this)
        }
        if (Y.indices[Z] === true) {
            return aa.fn(this)
        }
        return aa.inverse(this)
    }
    function U(Y, Z) {
        Z.data("DateTimePicker").setMinDate(Y)
    }
    function f(Y, Z) {
        Z.data("DateTimePicker").setMaxDate(Y)
    }
    function T(Y) {
        return Y.sort(function(aa, Z) {
            if (aa.type.indexOf("photo") === 0) {
                return 1
            }
            if (Z.type.indexOf("photo") === 0) {
                return -1
            }
            return 0
        })
    }
    function r(Y) {
        h("#reportFieldsList").append(h.map(Y, J)).sortable({
            axis: "y",
            cursor: "n-resize"
        })
    }
    function o() {
        var Y;
        if (!R) {
            return
        }
        Y = R.data && R.data();
        if (!Y || !Y["bs.modal"] || !Y["bs.modal"].hide) {
            return
        }
        Y["bs.modal"].hide();
        R = null 
    }
    function p(Z, aa) {
        var Y = h.Deferred();
        o();
        R = giscloud.ui.modal({
            title: aa || G.__("Layer Report"),
            overlay: false,
            footer: false
        });
        R.find(".modal-body").load(Z, null , function(ab, ac, ad) {
            if (ac !== "success") {
                Y.rejectWith(R, [ab, ac, ad])
            }
            Y.resolve(h(this))
        });
        return Y
    }
    function u() {
        var ad = gcdatagrid && gcdatagrid.__filters
          , Z = M()
          , ac = m()
          , af = V()
          , aa = v()
          , Y = !!K.val() && K.data("DateTimePicker").getDate()
          , ae = !!d.val() && d.data("DateTimePicker").getDate()
          , ab = [];
        Handlebars.registerHelper("thumbs", H(O.id));
        Handlebars.registerHelper("timestamp", C);
        Handlebars.registerHelper("ifPhoto", W);
        Handlebars.registerHelper("ifTimestamp", F);
        if (ae && ae.toISOString) {
            ae = ae.toDate();
            ae.setHours(24);
            if (!Y || !Y.toISOString) {
                ab.push("__created < '" + ae.toISOString() + "'")
            } else {
                ab.push("__created >= '" + Y.toISOString() + "'");
                ab.push("__created < '" + ae.toISOString() + "'")
            }
        } else {
            if (Y && Y.toISOString) {
                ab.push("__created >= '" + Y.toISOString() + "'")
            }
        }
        return g(null , ab).then(function(ag) {
            return Q(ag, Z)
        }, function() {
            z = null ;
            return null 
        }).then(function(ag) {
            z = {
                title: O.name,
                date: new Date().toLocaleDateString(),
                description: null ,
                start: Y && Y.toDate().toLocaleDateString(),
                end: ae && ae.toLocaleDateString(),
                columns: ac,
                photoColumns: af,
                timestampColumns: aa,
                data: ag
            };
            return z
        })
    }
    function P(Z, Y, ad) {
        var ab, ac = Z.find(Y), aa = new h.Deferred;
        if (ac.length) {
            return aa.resolve(ac).promise()
        }
        ad = (ad !== undefined) ? ad : 15000;
        ab = setInterval(function() {
            var ae = Z.find(Y);
            if (ae.length) {
                if (ab != null ) {
                    clearInterval(ab);
                    ab = null 
                }
                aa.resolve(ae)
            }
        }, 97);
        setTimeout(function() {
            if (ab != null ) {
                clearInterval(ab);
                ab = null 
            }
            aa.reject()
        }, ad);
        return aa.promise()
    }
    function B() {
        giscloud.ui.greenAlert("Creating report...");
        return h.when(giscloud.ui.newWindow({
            id: "report",
            url: "/reports/view",
            focus: "afterLoad",
            check: "body",
            clear: true
        }), u()).then(function(Y) {
            var aa = h(Y.document)
              , Z = aa.find("body");
            return h.when(h.Deferred().resolve(aa), P(Z, "#loader-holder"), P(Z, "#report"))
        }).fail(function() {
            giscloud.ui.redAlert("An error occurred.", 3000)
        }).done(function(aa, Y, Z) {
            var ab = ["Report:", O.name, new Date().toLocaleDateString()].join(" ");
            Y.css("display", "none");
            aa.attr("title", ab);
            Z.handlebars(Z, z);
            Z.find("th").first().addClass("sort-nr sorted sorted-asc");
            Z.css("display", "block");
            o();
            giscloud.ui.greenAlert("The report is ready.", 2000)
        })
    }
    giscloud.ui.reports = {
        create: function(Z, Y) {
            h.when(e(Z), p("/reports/setup", Y && Y.title)).then(T).done(r).done(function() {
                K = h("#reportStartDateInput").datetimepicker({
                    pickTime: false
                }).on("dp.change", function(aa) {
                    U(aa.date, d)
                });
                d = h("#reportEndDateInput").datetimepicker({
                    pickTime: false
                }).on("dp.change", function(aa) {
                    f(aa.date, K)
                });
                h("#createReportButton").click(B);
                h("#cancelReportButton").click(o)
            });
            return this
        }
    }
}(giscloud.exposeJQuery(), giscloud.common()));
var fleetNamespace = giscloud;
(function(a, d, e) {
    fleetNamespace.FuelReading = function(f, g) {
        if (g) {
            d.extend(this, g);
            this.vehicleId = f
        }
        this.remove = function() {
            return giscloud.fuelReadings.remove(this.vehicleId, this.id)
        }
    }
})(window, window.giscloud.exposeJQuery());
(function(d, a, e) {
    fleetNamespace.fuelReadings = {
        byVehicle: function(g) {
            var f = "vehicles/" + g + "/fuelreadings/"
              , h = new d.Deferred();
            a.rest.get(f).done(function(o) {
                var m = [];
                d.each(o.data, function() {
                    m.push(new fleetNamespace.FuelReading(g,this))
                });
                h.resolve(m, o.total)
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        create: function(g, h) {
            var f = "vehicles/" + g + "/fuelreadings/";
            return a.rest.call("POST", f, h, "application/json").then(function(q, p) {
                var o = p && p.match(/fuelreadings\/(\d+)/);
                return o && o[1]
            })
        },
        remove: function(g, h) {
            var f = "vehicles/" + g + "/fuelreadings/" + h;
            return a.rest.call("DELETE", f).promise()
        },
        byId: function(g, m) {
            var f = "vehicles/" + g + "/fuelreadings/" + m
              , h = new d.Deferred();
            a.rest.get(f).done(function(o) {
                h.resolve(new giscloud.FuelReading(g,o))
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(a, d, e) {
    fleetNamespace.Vehicle = function(f) {
        if (f) {
            this.id = f.id;
            this.mark = f.mark;
            this.client_id = f.client_id;
            this.device_id = f.device_id
        }
    }
})(window, window.giscloud.exposeJQuery());
(function(d, a, e) {
    fleetNamespace.vehicles = {
        list: function(g) {
            var f = "vehicles/"
              , h = new d.Deferred();
            if (g && g.query) {
                f += g.query
            }
            a.rest.get(f).done(function(o) {
                var m = [];
                d.each(o.data, function() {
                    m.push(new fleetNamespace.Vehicle(this))
                });
                h.resolve(m, o.total)
            }).fail(function() {
                h.reject()
            });
            return h.promise()
        },
        byId: function(h) {
            var f = "vehicles/" + h
              , g = new d.Deferred();
            a.rest.get(f).done(function(m) {
                g.resolve(new giscloud.Vehicle(m))
            }).fail(function() {
                g.reject()
            });
            return g.promise()
        },
        byMark: function(f) {
            return this.list({
                query: "?query_on=mark&query=" + f
            })
        }
    }
}(giscloud.exposeJQuery(), window.giscloud.common()));
(function(h, f, m, d) {
    var p, g, o, a = [], e = "red";
    giscloud.ui.alert = {
        show: function(u, r, q) {
            if (!p || u === d || typeof u !== "string") {
                return this
            }
            if (g != null ) {
                clearTimeout(g)
            }
            if (q && p.html()) {
                a.push({
                    msg: p.html(),
                    color: e,
                    duration: o
                })
            }
            p.html(u).css("margin-left", -0.5 * p.outerWidth()).fadeIn("fast");
            if (!isNaN(r) && r) {
                g = setTimeout(f.proxy(giscloud.ui.alert.hide, giscloud.ui.alert), r)
            }
            o = r;
            return this
        },
        hide: function() {
            var q;
            if (!p) {
                return this
            }
            if (a.length) {
                q = a.pop();
                p.hide();
                return this.color(q.color).show(q.msg, q.duration)
            } else {
                p.fadeOut("fast")
            }
            return this
        },
        color: function(r, v, u, q) {
            if (!p) {
                return this
            }
            e = p.hasClass("gc-green-alert") ? "green" : "red";
            if (r === "green") {
                p.addClass("gc-green-alert");
                p.removeClass("gc-red-alert")
            } else {
                if (r === "red") {
                    p.addClass("gc-red-alert");
                    p.removeClass("gc-green-alert")
                }
            }
            return this.show(v, u, q)
        },
        red: function(u, r, q) {
            return this.color("red", u, r, q)
        },
        green: function(u, r, q) {
            return this.color("green", u, r, q)
        },
        get: function() {
            if (!p) {
                return this
            }
            return {
                msg: p.html(),
                color: p.hasClass("gc-red-alert") ? "red" : "green"
            }
        }
    };
    giscloud.ui.redAlert = function(r, q) {
        return giscloud.ui.alert.color("red").show(r, q)
    }
    ;
    giscloud.ui.greenAlert = function(r, q) {
        return giscloud.ui.alert.color("green").show(r, q)
    }
    ;
    f(function() {
        p = f("<div class='gc-alert'></div>").appendTo(f("body"))
    })
})(window, giscloud.exposeJQuery(), giscloud.common());
Proj4js = {
    defaultDatum: "WGS84",
    transform: function(f, d, a) {
        if (!f.readyToUse || !d.readyToUse) {
            this.reportError("Proj4js initialization for " + f.srsCode + " not yet complete");
            return a
        }
        if ((f.srsProjNumber == "900913" && d.datumCode != "WGS84") || (d.srsProjNumber == "900913" && f.datumCode != "WGS84")) {
            var e = Proj4js.WGS84;
            this.transform(f, e, a);
            f = e
        }
        if (f.projName == "longlat") {
            a.x *= Proj4js.common.D2R;
            a.y *= Proj4js.common.D2R
        } else {
            if (f.to_meter) {
                a.x *= f.to_meter;
                a.y *= f.to_meter
            }
            f.inverse(a)
        }
        if (f.from_greenwich) {
            a.x += f.from_greenwich
        }
        a = this.datum_transform(f.datum, d.datum, a);
        if (d.from_greenwich) {
            a.x -= d.from_greenwich
        }
        if (d.projName == "longlat") {
            a.x *= Proj4js.common.R2D;
            a.y *= Proj4js.common.R2D
        } else {
            d.forward(a);
            if (d.to_meter) {
                a.x /= d.to_meter;
                a.y /= d.to_meter
            }
        }
        return a
    },
    datum_transform: function(e, d, a) {
        if (e.compare_datums(d)) {
            return a
        }
        if (e.datum_type == Proj4js.common.PJD_NODATUM || d.datum_type == Proj4js.common.PJD_NODATUM) {
            return a
        }
        if (e.datum_type == Proj4js.common.PJD_GRIDSHIFT) {
            alert("ERROR: Grid shift transformations are not implemented yet.")
        }
        if (d.datum_type == Proj4js.common.PJD_GRIDSHIFT) {
            alert("ERROR: Grid shift transformations are not implemented yet.")
        }
        if (e.es != d.es || e.a != d.a || e.datum_type == Proj4js.common.PJD_3PARAM || e.datum_type == Proj4js.common.PJD_7PARAM || d.datum_type == Proj4js.common.PJD_3PARAM || d.datum_type == Proj4js.common.PJD_7PARAM) {
            e.geodetic_to_geocentric(a);
            if (e.datum_type == Proj4js.common.PJD_3PARAM || e.datum_type == Proj4js.common.PJD_7PARAM) {
                e.geocentric_to_wgs84(a)
            }
            if (d.datum_type == Proj4js.common.PJD_3PARAM || d.datum_type == Proj4js.common.PJD_7PARAM) {
                d.geocentric_from_wgs84(a)
            }
            d.geocentric_to_geodetic(a)
        }
        if (d.datum_type == Proj4js.common.PJD_GRIDSHIFT) {
            alert("ERROR: Grid shift transformations are not implemented yet.")
        }
        return a
    },
    reportError: function(a) {},
    extend: function(a, f) {
        a = a || {};
        if (f) {
            for (var e in f) {
                var d = f[e];
                if (d !== undefined) {
                    a[e] = d
                }
            }
        }
        return a
    },
    Class: function() {
        var d = function() {
            this.initialize.apply(this, arguments)
        }
        ;
        var a = {};
        var f;
        for (var e = 0; e < arguments.length; ++e) {
            if (typeof arguments[e] == "function") {
                f = arguments[e].prototype
            } else {
                f = arguments[e]
            }
            Proj4js.extend(a, f)
        }
        d.prototype = a;
        return d
    },
    bind: function(e, d) {
        var a = Array.prototype.slice.apply(arguments, [2]);
        return function() {
            var f = a.concat(Array.prototype.slice.apply(arguments, [0]));
            return e.apply(d, f)
        }
    },
    scriptName: "proj4js-compressed.js",
    defsLookupService: "http://spatialreference.org/ref",
    libPath: null ,
    getScriptLocation: function() {
        if (this.libPath) {
            return this.libPath
        }
        var g = this.scriptName;
        var f = g.length;
        var a = document.getElementsByTagName("script");
        for (var e = 0; e < a.length; e++) {
            var h = a[e].getAttribute("src");
            if (h) {
                var d = h.lastIndexOf(g);
                if ((d > -1) && (d + f == h.length)) {
                    this.libPath = h.slice(0, -f);
                    break
                }
            }
        }
        return this.libPath || ""
    },
    loadScript: function(f, g, e, a) {
        var d = document.createElement("script");
        d.defer = false;
        d.type = "text/javascript";
        d.id = f;
        d.src = f;
        d.onload = g;
        d.onerror = e;
        d.loadCheck = a;
        if (/MSIE/.test(navigator.userAgent)) {
            d.onreadystatechange = this.checkReadyState
        }
        document.getElementsByTagName("head")[0].appendChild(d)
    },
    checkReadyState: function() {
        if (this.readyState == "loaded") {
            if (!this.loadCheck()) {
                this.onerror()
            } else {
                this.onload()
            }
        }
    }
};
Proj4js.Proj = Proj4js.Class({
    readyToUse: false,
    title: null ,
    projName: null ,
    units: null ,
    datum: null ,
    x0: 0,
    y0: 0,
    initialize: function(e) {
        this.srsCodeInput = e;
        if (e.indexOf("urn:") == 0) {
            var a = e.split(":");
            if ((a[1] == "ogc" || a[1] == "x-ogc") && (a[2] == "def") && (a[3] == "crs")) {
                e = a[4] + ":" + a[a.length - 1]
            }
        } else {
            if (e.indexOf("http://") == 0) {
                var d = e.split("#");
                if (d[0].match(/epsg.org/)) {
                    e = "EPSG:" + d[1]
                } else {
                    if (d[0].match(/RIG.xml/)) {
                        e = "IGNF:" + d[1]
                    }
                }
            }
        }
        this.srsCode = e.toUpperCase();
        if (this.srsCode.indexOf("EPSG") == 0) {
            this.srsCode = this.srsCode;
            this.srsAuth = "epsg";
            this.srsProjNumber = this.srsCode.substring(5)
        } else {
            if (this.srsCode.indexOf("IGNF") == 0) {
                this.srsCode = this.srsCode;
                this.srsAuth = "IGNF";
                this.srsProjNumber = this.srsCode.substring(5)
            } else {
                if (this.srsCode.indexOf("CRS") == 0) {
                    this.srsCode = this.srsCode;
                    this.srsAuth = "CRS";
                    this.srsProjNumber = this.srsCode.substring(4)
                } else {
                    this.srsAuth = "";
                    this.srsProjNumber = this.srsCode
                }
            }
        }
        this.loadProjDefinition()
    },
    loadProjDefinition: function() {
        if (Proj4js.defs[this.srsCode]) {
            this.defsLoaded();
            return
        }
        var a = Proj4js.getScriptLocation() + "defs/" + this.srsAuth.toUpperCase() + this.srsProjNumber + ".js";
        Proj4js.loadScript(a, Proj4js.bind(this.defsLoaded, this), Proj4js.bind(this.loadFromService, this), Proj4js.bind(this.checkDefsLoaded, this))
    },
    loadFromService: function() {
        var a = Proj4js.defsLookupService + "/" + this.srsAuth + "/" + this.srsProjNumber + "/proj4js/";
        Proj4js.loadScript(a, Proj4js.bind(this.defsLoaded, this), Proj4js.bind(this.defsFailed, this), Proj4js.bind(this.checkDefsLoaded, this))
    },
    defsLoaded: function() {
        this.parseDefs();
        this.loadProjCode(this.projName)
    },
    checkDefsLoaded: function() {
        if (Proj4js.defs[this.srsCode]) {
            return true
        } else {
            return false
        }
    },
    defsFailed: function() {
        Proj4js.reportError("failed to load projection definition for: " + this.srsCode);
        Proj4js.defs[this.srsCode] = Proj4js.defs.WGS84;
        this.defsLoaded()
    },
    loadProjCode: function(d) {
        if (Proj4js.Proj[d]) {
            this.initTransforms();
            return
        }
        var a = Proj4js.getScriptLocation() + "projCode/" + d + ".js";
        Proj4js.loadScript(a, Proj4js.bind(this.loadProjCodeSuccess, this, d), Proj4js.bind(this.loadProjCodeFailure, this, d), Proj4js.bind(this.checkCodeLoaded, this, d))
    },
    loadProjCodeSuccess: function(a) {
        if (Proj4js.Proj[a].dependsOn) {
            this.loadProjCode(Proj4js.Proj[a].dependsOn)
        } else {
            this.initTransforms()
        }
    },
    loadProjCodeFailure: function(a) {
        Proj4js.reportError("failed to find projection file for: " + a)
    },
    checkCodeLoaded: function(a) {
        if (Proj4js.Proj[a]) {
            return true
        } else {
            return false
        }
    },
    initTransforms: function() {
        Proj4js.extend(this, Proj4js.Proj[this.projName]);
        this.init();
        this.readyToUse = true
    },
    parseDefs: function() {
        this.defData = Proj4js.defs[this.srsCode];
        var f, d;
        if (!this.defData) {
            return
        }
        var a = this.defData.split("+");
        for (var g = 0; g < a.length; g++) {
            var e = a[g].split("=");
            f = e[0].toLowerCase();
            d = e[1];
            switch (f.replace(/\s/gi, "")) {
            case "":
                break;
            case "title":
                this.title = d;
                break;
            case "proj":
                this.projName = d.replace(/\s/gi, "");
                break;
            case "units":
                this.units = d.replace(/\s/gi, "");
                break;
            case "datum":
                this.datumCode = d.replace(/\s/gi, "");
                break;
            case "nadgrids":
                this.nagrids = d.replace(/\s/gi, "");
                break;
            case "ellps":
                this.ellps = d.replace(/\s/gi, "");
                break;
            case "a":
                this.a = parseFloat(d);
                break;
            case "b":
                this.b = parseFloat(d);
                break;
            case "rf":
                this.rf = parseFloat(d);
                break;
            case "lat_0":
                this.lat0 = d * Proj4js.common.D2R;
                break;
            case "lat_1":
                this.lat1 = d * Proj4js.common.D2R;
                break;
            case "lat_2":
                this.lat2 = d * Proj4js.common.D2R;
                break;
            case "lat_ts":
                this.lat_ts = d * Proj4js.common.D2R;
                break;
            case "lon_0":
                this.long0 = d * Proj4js.common.D2R;
                break;
            case "alpha":
                this.alpha = parseFloat(d) * Proj4js.common.D2R;
                break;
            case "lonc":
                this.longc = d * Proj4js.common.D2R;
                break;
            case "x_0":
                this.x0 = parseFloat(d);
                break;
            case "y_0":
                this.y0 = parseFloat(d);
                break;
            case "k_0":
                this.k0 = parseFloat(d);
                break;
            case "k":
                this.k0 = parseFloat(d);
                break;
            case "r_a":
                this.R_A = true;
                break;
            case "zone":
                this.zone = parseInt(d);
                break;
            case "south":
                this.utmSouth = true;
                break;
            case "towgs84":
                this.datum_params = d.split(",");
                break;
            case "to_meter":
                this.to_meter = parseFloat(d);
                break;
            case "from_greenwich":
                this.from_greenwich = d * Proj4js.common.D2R;
                break;
            case "pm":
                d = d.replace(/\s/gi, "");
                this.from_greenwich = Proj4js.PrimeMeridian[d] ? Proj4js.PrimeMeridian[d] : parseFloat(d);
                this.from_greenwich *= Proj4js.common.D2R;
                break;
            case "no_defs":
                break;
            default:
            }
        }
        this.deriveConstants()
    },
    deriveConstants: function() {
        if (this.nagrids == "@null") {
            this.datumCode = "none"
        }
        if (this.datumCode && this.datumCode != "none") {
            var a = Proj4js.Datum[this.datumCode];
            if (a) {
                this.datum_params = a.towgs84 ? a.towgs84.split(",") : null ;
                this.ellps = a.ellipse;
                this.datumName = a.datumName ? a.datumName : this.datumCode
            }
        }
        if (!this.a) {
            var d = Proj4js.Ellipsoid[this.ellps] ? Proj4js.Ellipsoid[this.ellps] : Proj4js.Ellipsoid.WGS84;
            Proj4js.extend(this, d)
        }
        if (this.rf && !this.b) {
            this.b = (1 - 1 / this.rf) * this.a
        }
        if (Math.abs(this.a - this.b) < Proj4js.common.EPSLN) {
            this.sphere = true;
            this.b = this.a
        }
        this.a2 = this.a * this.a;
        this.b2 = this.b * this.b;
        this.es = (this.a2 - this.b2) / this.a2;
        this.e = Math.sqrt(this.es);
        if (this.R_A) {
            this.a *= 1 - this.es * (Proj4js.common.SIXTH + this.es * (Proj4js.common.RA4 + this.es * Proj4js.common.RA6));
            this.a2 = this.a * this.a;
            this.b2 = this.b * this.b;
            this.es = 0
        }
        this.ep2 = (this.a2 - this.b2) / this.b2;
        if (!this.k0) {
            this.k0 = 1
        }
        this.datum = new Proj4js.datum(this)
    }
});
Proj4js.Proj.longlat = {
    init: function() {},
    forward: function(a) {
        return a
    },
    inverse: function(a) {
        return a
    }
};
Proj4js.defs = {
    WGS84: "+title=long/lat:WGS84 +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees",
    "EPSG:4326": "+title=long/lat:WGS84 +proj=longlat +a=6378137.0 +b=6356752.31424518 +ellps=WGS84 +datum=WGS84 +units=degrees",
    "EPSG:4269": "+title=long/lat:NAD83 +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees",
    "EPSG:3785": "+title= Google Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
};
Proj4js.defs.GOOGLE = Proj4js.defs["EPSG:3785"];
Proj4js.defs["EPSG:900913"] = Proj4js.defs["EPSG:3785"];
Proj4js.defs["EPSG:102113"] = Proj4js.defs["EPSG:3785"];
Proj4js.common = {
    PI: 3.141592653589793,
    HALF_PI: 1.5707963267948966,
    TWO_PI: 6.283185307179586,
    FORTPI: 0.7853981633974483,
    R2D: 57.29577951308232,
    D2R: 0.017453292519943295,
    SEC_TO_RAD: 0.00000484813681109536,
    EPSLN: 1e-10,
    MAX_ITER: 20,
    COS_67P5: 0.3826834323650898,
    AD_C: 1.0026,
    PJD_UNKNOWN: 0,
    PJD_3PARAM: 1,
    PJD_7PARAM: 2,
    PJD_GRIDSHIFT: 3,
    PJD_WGS84: 4,
    PJD_NODATUM: 5,
    SRS_WGS84_SEMIMAJOR: 6378137,
    SIXTH: 0.16666666666666666,
    RA4: 0.04722222222222222,
    RA6: 0.022156084656084655,
    RV4: 0.06944444444444445,
    RV6: 0.04243827160493827,
    msfnz: function(e, d, f) {
        var a = e * d;
        return f / (Math.sqrt(1 - a * a))
    },
    tsfnz: function(g, f, e) {
        var a = g * e;
        var d = 0.5 * g;
        a = Math.pow(((1 - a) / (1 + a)), d);
        return ( Math.tan(0.5 * (this.HALF_PI - f)) / a) 
    },
    phi2z: function(h, g) {
        var f = 0.5 * h;
        var a, d;
        var e = this.HALF_PI - 2 * Math.atan(g);
        for (i = 0; i <= 15; i++) {
            a = h * Math.sin(e);
            d = this.HALF_PI - 2 * Math.atan(g * (Math.pow(((1 - a) / (1 + a)), f))) - e;
            e += d;
            if (Math.abs(d) <= 1e-10) {
                return e
            }
        }
        alert("phi2z has NoConvergence");
        return ( -9999) 
    },
    qsfnz: function(e, d) {
        var a;
        if (e > 1e-7) {
            a = e * d;
            return ( (1 - e * e) * (d / (1 - a * a) - (0.5 / e) * Math.log((1 - a) / (1 + a)))) 
        } else {
            return ( 2 * d) 
        }
    },
    asinz: function(a) {
        if (Math.abs(a) > 1) {
            a = (a > 1) ? 1 : -1
        }
        return Math.asin(a)
    },
    e0fn: function(a) {
        return ( 1 - 0.25 * a * (1 + a / 16 * (3 + 1.25 * a))) 
    },
    e1fn: function(a) {
        return ( 0.375 * a * (1 + 0.25 * a * (1 + 0.46875 * a))) 
    },
    e2fn: function(a) {
        return ( 0.05859375 * a * a * (1 + 0.75 * a)) 
    },
    e3fn: function(a) {
        return ( a * a * a * (35 / 3072)) 
    },
    mlfn: function(g, f, e, d, a) {
        return ( g * a - f * Math.sin(2 * a) + e * Math.sin(4 * a) - d * Math.sin(6 * a)) 
    },
    srat: function(a, d) {
        return ( Math.pow((1 - a) / (1 + a), d)) 
    },
    sign: function(a) {
        if (a < 0) {
            return ( -1) 
        } else {
            return ( 1) 
        }
    },
    adjust_lon: function(a) {
        a = (Math.abs(a) < this.PI) ? a : (a - (this.sign(a) * this.TWO_PI));
        return a
    },
    adjust_lat: function(a) {
        a = (Math.abs(a) < this.HALF_PI) ? a : (a - (this.sign(a) * this.PI));
        return a
    },
    latiso: function(f, e, d) {
        if (Math.abs(e) > this.HALF_PI) {
            return +Number.NaN
        }
        if (e == this.HALF_PI) {
            return Number.POSITIVE_INFINITY
        }
        if (e == -1 * this.HALF_PI) {
            return -1 * Number.POSITIVE_INFINITY
        }
        var a = f * d;
        return Math.log(Math.tan((this.HALF_PI + e) / 2)) + f * Math.log((1 - a) / (1 + a)) / 2
    },
    fL: function(d, a) {
        return 2 * Math.atan(d * Math.exp(a)) - this.HALF_PI
    },
    invlatiso: function(g, e) {
        var d = this.fL(1, e);
        var f = 0;
        var a = 0;
        do {
            f = d;
            a = g * Math.sin(f);
            d = this.fL(Math.exp(g * Math.log((1 + a) / (1 - a)) / 2), e)
        } while (Math.abs(d - f) > 1e-12);return d
    },
    sinh: function(a) {
        var d = Math.exp(a);
        d = (d - 1 / d) / 2;
        return d
    },
    cosh: function(a) {
        var d = Math.exp(a);
        d = (d + 1 / d) / 2;
        return d
    },
    tanh: function(a) {
        var d = Math.exp(a);
        d = (d - 1 / d) / (d + 1 / d);
        return d
    },
    asinh: function(a) {
        var d = (a >= 0 ? 1 : -1);
        return d * (Math.log(Math.abs(a) + Math.sqrt(a * a + 1)))
    },
    acosh: function(a) {
        return 2 * Math.log(Math.sqrt((a + 1) / 2) + Math.sqrt((a - 1) / 2))
    },
    atanh: function(a) {
        return Math.log((a - 1) / (a + 1)) / 2
    },
    gN: function(d, h, g) {
        var f = h * g;
        return d / Math.sqrt(1 - f * f)
    }
};
Proj4js.datum = Proj4js.Class({
    initialize: function(d) {
        this.datum_type = Proj4js.common.PJD_WGS84;
        if (d.datumCode && d.datumCode == "none") {
            this.datum_type = Proj4js.common.PJD_NODATUM
        }
        if (d && d.datum_params) {
            for (var a = 0; a < d.datum_params.length; a++) {
                d.datum_params[a] = parseFloat(d.datum_params[a])
            }
            if (d.datum_params[0] != 0 || d.datum_params[1] != 0 || d.datum_params[2] != 0) {
                this.datum_type = Proj4js.common.PJD_3PARAM
            }
            if (d.datum_params.length > 3) {
                if (d.datum_params[3] != 0 || d.datum_params[4] != 0 || d.datum_params[5] != 0 || d.datum_params[6] != 0) {
                    this.datum_type = Proj4js.common.PJD_7PARAM;
                    d.datum_params[3] *= Proj4js.common.SEC_TO_RAD;
                    d.datum_params[4] *= Proj4js.common.SEC_TO_RAD;
                    d.datum_params[5] *= Proj4js.common.SEC_TO_RAD;
                    d.datum_params[6] = (d.datum_params[6] / 1000000) + 1
                }
            }
        }
        if (d) {
            this.a = d.a;
            this.b = d.b;
            this.es = d.es;
            this.ep2 = d.ep2;
            this.datum_params = d.datum_params
        }
    },
    compare_datums: function(a) {
        if (this.datum_type != a.datum_type) {
            return false
        } else {
            if (this.a != a.a || Math.abs(this.es - a.es) > 5e-11) {
                return false
            } else {
                if (this.datum_type == Proj4js.common.PJD_3PARAM) {
                    return ( this.datum_params[0] == a.datum_params[0] && this.datum_params[1] == a.datum_params[1] && this.datum_params[2] == a.datum_params[2]) 
                } else {
                    if (this.datum_type == Proj4js.common.PJD_7PARAM) {
                        return ( this.datum_params[0] == a.datum_params[0] && this.datum_params[1] == a.datum_params[1] && this.datum_params[2] == a.datum_params[2] && this.datum_params[3] == a.datum_params[3] && this.datum_params[4] == a.datum_params[4] && this.datum_params[5] == a.datum_params[5] && this.datum_params[6] == a.datum_params[6]) 
                    } else {
                        if (this.datum_type == Proj4js.common.PJD_GRIDSHIFT) {
                            return strcmp(pj_param(this.params, "snadgrids").s, pj_param(a.params, "snadgrids").s) == 0
                        } else {
                            return true
                        }
                    }
                }
            }
        }
    },
    geodetic_to_geocentric: function(e) {
        var v = e.x;
        var o = e.y;
        var f = e.z ? e.z : 0;
        var g;
        var d;
        var a;
        var r = 0;
        var u;
        var q;
        var m;
        var h;
        if (o < -Proj4js.common.HALF_PI && o > -1.001 * Proj4js.common.HALF_PI) {
            o = -Proj4js.common.HALF_PI
        } else {
            if (o > Proj4js.common.HALF_PI && o < 1.001 * Proj4js.common.HALF_PI) {
                o = Proj4js.common.HALF_PI
            } else {
                if ((o < -Proj4js.common.HALF_PI) || (o > Proj4js.common.HALF_PI)) {
                    Proj4js.reportError("geocent:lat out of range:" + o);
                    return null 
                }
            }
        }
        if (v > Proj4js.common.PI) {
            v -= (2 * Proj4js.common.PI)
        }
        q = Math.sin(o);
        h = Math.cos(o);
        m = q * q;
        u = this.a / (Math.sqrt(1 - this.es * m));
        g = (u + f) * h * Math.cos(v);
        d = (u + f) * h * Math.sin(v);
        a = ((u * (1 - this.es)) + f) * q;
        e.x = g;
        e.y = d;
        e.z = a;
        return r
    },
    geocentric_to_geodetic: function(G) {
        var M = 1e-12;
        var H = (M * M);
        var h = 30;
        var v;
        var o;
        var a;
        var B;
        var d;
        var z;
        var u;
        var K;
        var J;
        var r;
        var E;
        var D;
        var g;
        var I;
        var m = G.x;
        var f = G.y;
        var e = G.z ? G.z : 0;
        var q;
        var F;
        var C;
        g = false;
        v = Math.sqrt(m * m + f * f);
        o = Math.sqrt(m * m + f * f + e * e);
        if (v / this.a < M) {
            g = true;
            q = 0;
            if (o / this.a < M) {
                F = Proj4js.common.HALF_PI;
                C = -this.b;
                return
            }
        } else {
            q = Math.atan2(f, m)
        }
        a = e / o;
        B = v / o;
        d = 1 / Math.sqrt(1 - this.es * (2 - this.es) * B * B);
        K = B * (1 - this.es) * d;
        J = a * d;
        I = 0;
        do {
            I++;
            u = this.a / Math.sqrt(1 - this.es * J * J);
            C = v * K + e * J - u * (1 - this.es * J * J);
            z = this.es * u / (u + C);
            d = 1 / Math.sqrt(1 - z * (2 - z) * B * B);
            r = B * (1 - z) * d;
            E = a * d;
            D = E * K - r * J;
            K = r;
            J = E
        } while (D * D > H && I < h);F = Math.atan(E / Math.abs(r));
        G.x = q;
        G.y = F;
        G.z = C;
        return G
    },
    geocentric_to_geodetic_noniter: function(F) {
        var f = F.x;
        var e = F.y;
        var a = F.z ? F.z : 0;
        var m;
        var E;
        var v;
        var g;
        var B;
        var D;
        var z;
        var r;
        var o;
        var q;
        var I;
        var h;
        var H;
        var G;
        var C;
        var u;
        var d;
        f = parseFloat(f);
        e = parseFloat(e);
        a = parseFloat(a);
        d = false;
        if (f != 0) {
            m = Math.atan2(e, f)
        } else {
            if (e > 0) {
                m = Proj4js.common.HALF_PI
            } else {
                if (e < 0) {
                    m = -Proj4js.common.HALF_PI
                } else {
                    d = true;
                    m = 0;
                    if (a > 0) {
                        E = Proj4js.common.HALF_PI
                    } else {
                        if (a < 0) {
                            E = -Proj4js.common.HALF_PI
                        } else {
                            E = Proj4js.common.HALF_PI;
                            v = -this.b;
                            return
                        }
                    }
                }
            }
        }
        B = f * f + e * e;
        g = Math.sqrt(B);
        D = a * Proj4js.common.AD_C;
        r = Math.sqrt(D * D + B);
        q = D / r;
        h = g / r;
        I = q * q * q;
        z = a + this.b * this.ep2 * I;
        u = g - this.a * this.es * h * h * h;
        o = Math.sqrt(z * z + u * u);
        H = z / o;
        G = u / o;
        C = this.a / Math.sqrt(1 - this.es * H * H);
        if (G >= Proj4js.common.COS_67P5) {
            v = g / G - C
        } else {
            if (G <= -Proj4js.common.COS_67P5) {
                v = g / -G - C
            } else {
                v = a / H + C * (this.es - 1)
            }
        }
        if (d == false) {
            E = Math.atan(H / G)
        }
        F.x = m;
        F.y = E;
        F.z = v;
        return F
    },
    geocentric_to_wgs84: function(d) {
        if (this.datum_type == Proj4js.common.PJD_3PARAM) {
            d.x += this.datum_params[0];
            d.y += this.datum_params[1];
            d.z += this.datum_params[2]
        } else {
            if (this.datum_type == Proj4js.common.PJD_7PARAM) {
                var h = this.datum_params[0];
                var f = this.datum_params[1];
                var q = this.datum_params[2];
                var g = this.datum_params[3];
                var r = this.datum_params[4];
                var o = this.datum_params[5];
                var m = this.datum_params[6];
                var e = m * (d.x - o * d.y + r * d.z) + h;
                var a = m * (o * d.x + d.y - g * d.z) + f;
                var u = m * (-r * d.x + g * d.y + d.z) + q;
                d.x = e;
                d.y = a;
                d.z = u
            }
        }
    },
    geocentric_from_wgs84: function(e) {
        if (this.datum_type == Proj4js.common.PJD_3PARAM) {
            e.x -= this.datum_params[0];
            e.y -= this.datum_params[1];
            e.z -= this.datum_params[2]
        } else {
            if (this.datum_type == Proj4js.common.PJD_7PARAM) {
                var m = this.datum_params[0];
                var f = this.datum_params[1];
                var r = this.datum_params[2];
                var h = this.datum_params[3];
                var u = this.datum_params[4];
                var q = this.datum_params[5];
                var o = this.datum_params[6];
                var g = (e.x - m) / o;
                var d = (e.y - f) / o;
                var a = (e.z - r) / o;
                e.x = g + q * d - u * a;
                e.y = -q * g + d + h * a;
                e.z = u * g - h * d + a
            }
        }
    }
});
Proj4js.Point = Proj4js.Class({
    initialize: function(a, f, e) {
        if (typeof a == "object") {
            this.x = a[0];
            this.y = a[1];
            this.z = a[2] || 0
        } else {
            if (typeof a == "string") {
                var d = a.split(",");
                this.x = parseFloat(d[0]);
                this.y = parseFloat(d[1]);
                this.z = parseFloat(d[2]) || 0
            } else {
                this.x = a;
                this.y = f;
                this.z = e || 0
            }
        }
    },
    clone: function() {
        return new Proj4js.Point(this.x,this.y,this.z)
    },
    toString: function() {
        return ( "x=" + this.x + ",y=" + this.y) 
    },
    toShortString: function() {
        return ( this.x + ", " + this.y) 
    }
});
Proj4js.PrimeMeridian = {
    greenwich: 0,
    lisbon: -9.131906111111,
    paris: 2.337229166667,
    bogota: -74.080916666667,
    madrid: -3.687938888889,
    rome: 12.452333333333,
    bern: 7.439583333333,
    jakarta: 106.807719444444,
    ferro: -17.666666666667,
    brussels: 4.367975,
    stockholm: 18.058277777778,
    athens: 23.7163375,
    oslo: 10.722916666667
};
Proj4js.Ellipsoid = {
    MERIT: {
        a: 6378137,
        rf: 298.257,
        ellipseName: "MERIT 1983"
    },
    SGS85: {
        a: 6378136,
        rf: 298.257,
        ellipseName: "Soviet Geodetic System 85"
    },
    GRS80: {
        a: 6378137,
        rf: 298.257222101,
        ellipseName: "GRS 1980(IUGG, 1980)"
    },
    IAU76: {
        a: 6378140,
        rf: 298.257,
        ellipseName: "IAU 1976"
    },
    airy: {
        a: 6377563.396,
        b: 6356256.91,
        ellipseName: "Airy 1830"
    },
    "APL4.": {
        a: 6378137,
        rf: 298.25,
        ellipseName: "Appl. Physics. 1965"
    },
    NWL9D: {
        a: 6378145,
        rf: 298.25,
        ellipseName: "Naval Weapons Lab., 1965"
    },
    mod_airy: {
        a: 6377340.189,
        b: 6356034.446,
        ellipseName: "Modified Airy"
    },
    andrae: {
        a: 6377104.43,
        rf: 300,
        ellipseName: "Andrae 1876 (Den., Iclnd.)"
    },
    aust_SA: {
        a: 6378160,
        rf: 298.25,
        ellipseName: "Australian Natl & S. Amer. 1969"
    },
    GRS67: {
        a: 6378160,
        rf: 298.247167427,
        ellipseName: "GRS 67(IUGG 1967)"
    },
    bessel: {
        a: 6377397.155,
        rf: 299.1528128,
        ellipseName: "Bessel 1841"
    },
    bess_nam: {
        a: 6377483.865,
        rf: 299.1528128,
        ellipseName: "Bessel 1841 (Namibia)"
    },
    clrk66: {
        a: 6378206.4,
        b: 6356583.8,
        ellipseName: "Clarke 1866"
    },
    clrk80: {
        a: 6378249.145,
        rf: 293.4663,
        ellipseName: "Clarke 1880 mod."
    },
    CPM: {
        a: 6375738.7,
        rf: 334.29,
        ellipseName: "Comm. des Poids et Mesures 1799"
    },
    delmbr: {
        a: 6376428,
        rf: 311.5,
        ellipseName: "Delambre 1810 (Belgium)"
    },
    engelis: {
        a: 6378136.05,
        rf: 298.2566,
        ellipseName: "Engelis 1985"
    },
    evrst30: {
        a: 6377276.345,
        rf: 300.8017,
        ellipseName: "Everest 1830"
    },
    evrst48: {
        a: 6377304.063,
        rf: 300.8017,
        ellipseName: "Everest 1948"
    },
    evrst56: {
        a: 6377301.243,
        rf: 300.8017,
        ellipseName: "Everest 1956"
    },
    evrst69: {
        a: 6377295.664,
        rf: 300.8017,
        ellipseName: "Everest 1969"
    },
    evrstSS: {
        a: 6377298.556,
        rf: 300.8017,
        ellipseName: "Everest (Sabah & Sarawak)"
    },
    fschr60: {
        a: 6378166,
        rf: 298.3,
        ellipseName: "Fischer (Mercury Datum) 1960"
    },
    fschr60m: {
        a: 6378155,
        rf: 298.3,
        ellipseName: "Fischer 1960"
    },
    fschr68: {
        a: 6378150,
        rf: 298.3,
        ellipseName: "Fischer 1968"
    },
    helmert: {
        a: 6378200,
        rf: 298.3,
        ellipseName: "Helmert 1906"
    },
    hough: {
        a: 6378270,
        rf: 297,
        ellipseName: "Hough"
    },
    intl: {
        a: 6378388,
        rf: 297,
        ellipseName: "International 1909 (Hayford)"
    },
    kaula: {
        a: 6378163,
        rf: 298.24,
        ellipseName: "Kaula 1961"
    },
    lerch: {
        a: 6378139,
        rf: 298.257,
        ellipseName: "Lerch 1979"
    },
    mprts: {
        a: 6397300,
        rf: 191,
        ellipseName: "Maupertius 1738"
    },
    new_intl: {
        a: 6378157.5,
        b: 6356772.2,
        ellipseName: "New International 1967"
    },
    plessis: {
        a: 6376523,
        rf: 6355863,
        ellipseName: "Plessis 1817 (France)"
    },
    krass: {
        a: 6378245,
        rf: 298.3,
        ellipseName: "Krassovsky, 1942"
    },
    SEasia: {
        a: 6378155,
        b: 6356773.3205,
        ellipseName: "Southeast Asia"
    },
    walbeck: {
        a: 6376896,
        b: 6355834.8467,
        ellipseName: "Walbeck"
    },
    WGS60: {
        a: 6378165,
        rf: 298.3,
        ellipseName: "WGS 60"
    },
    WGS66: {
        a: 6378145,
        rf: 298.25,
        ellipseName: "WGS 66"
    },
    WGS72: {
        a: 6378135,
        rf: 298.26,
        ellipseName: "WGS 72"
    },
    WGS84: {
        a: 6378137,
        rf: 298.257223563,
        ellipseName: "WGS 84"
    },
    sphere: {
        a: 6370997,
        b: 6370997,
        ellipseName: "Normal Sphere (r=6370997)"
    }
};
Proj4js.Datum = {
    WGS84: {
        towgs84: "0,0,0",
        ellipse: "WGS84",
        datumName: "WGS84"
    },
    GGRS87: {
        towgs84: "-199.87,74.79,246.62",
        ellipse: "GRS80",
        datumName: "Greek_Geodetic_Reference_System_1987"
    },
    NAD83: {
        towgs84: "0,0,0",
        ellipse: "GRS80",
        datumName: "North_American_Datum_1983"
    },
    NAD27: {
        nadgrids: "@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",
        ellipse: "clrk66",
        datumName: "North_American_Datum_1927"
    },
    potsdam: {
        towgs84: "606.0,23.0,413.0",
        ellipse: "bessel",
        datumName: "Potsdam Rauenberg 1950 DHDN"
    },
    carthage: {
        towgs84: "-263.0,6.0,431.0",
        ellipse: "clark80",
        datumName: "Carthage 1934 Tunisia"
    },
    hermannskogel: {
        towgs84: "653.0,-212.0,449.0",
        ellipse: "bessel",
        datumName: "Hermannskogel"
    },
    ire65: {
        towgs84: "482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",
        ellipse: "mod_airy",
        datumName: "Ireland 1965"
    },
    nzgd49: {
        towgs84: "59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",
        ellipse: "intl",
        datumName: "New Zealand Geodetic Datum 1949"
    },
    OSGB36: {
        towgs84: "446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",
        ellipse: "airy",
        datumName: "Airy 1830"
    }
};
Proj4js.WGS84 = new Proj4js.Proj("WGS84");
Proj4js.Datum.OSB36 = Proj4js.Datum.OSGB36;
Proj4js.Proj.aea = {
    init: function() {
        if (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN) {
            Proj4js.reportError("aeaInitEqualLatitudes");
            return
        }
        this.temp = this.b / this.a;
        this.es = 1 - Math.pow(this.temp, 2);
        this.e3 = Math.sqrt(this.es);
        this.sin_po = Math.sin(this.lat1);
        this.cos_po = Math.cos(this.lat1);
        this.t1 = this.sin_po;
        this.con = this.sin_po;
        this.ms1 = Proj4js.common.msfnz(this.e3, this.sin_po, this.cos_po);
        this.qs1 = Proj4js.common.qsfnz(this.e3, this.sin_po, this.cos_po);
        this.sin_po = Math.sin(this.lat2);
        this.cos_po = Math.cos(this.lat2);
        this.t2 = this.sin_po;
        this.ms2 = Proj4js.common.msfnz(this.e3, this.sin_po, this.cos_po);
        this.qs2 = Proj4js.common.qsfnz(this.e3, this.sin_po, this.cos_po);
        this.sin_po = Math.sin(this.lat0);
        this.cos_po = Math.cos(this.lat0);
        this.t3 = this.sin_po;
        this.qs0 = Proj4js.common.qsfnz(this.e3, this.sin_po, this.cos_po);
        if (Math.abs(this.lat1 - this.lat2) > Proj4js.common.EPSLN) {
            this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1)
        } else {
            this.ns0 = this.con
        }
        this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;
        this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0
    },
    forward: function(g) {
        var h = g.x;
        var f = g.y;
        this.sin_phi = Math.sin(f);
        this.cos_phi = Math.cos(f);
        var d = Proj4js.common.qsfnz(this.e3, this.sin_phi, this.cos_phi);
        var o = this.a * Math.sqrt(this.c - this.ns0 * d) / this.ns0;
        var e = this.ns0 * Proj4js.common.adjust_lon(h - this.long0);
        var a = o * Math.sin(e) + this.x0;
        var m = this.rh - o * Math.cos(e) + this.y0;
        g.x = a;
        g.y = m;
        return g
    },
    inverse: function(g) {
        var m, a, d, e, h, f;
        g.x -= this.x0;
        g.y = this.rh - g.y + this.y0;
        if (this.ns0 >= 0) {
            m = Math.sqrt(g.x * g.x + g.y * g.y);
            d = 1
        } else {
            m = -Math.sqrt(g.x * g.x + g.y * g.y);
            d = -1
        }
        e = 0;
        if (m != 0) {
            e = Math.atan2(d * g.x, d * g.y)
        }
        d = m * this.ns0 / this.a;
        a = (this.c - d * d) / this.ns0;
        if (this.e3 >= 1e-10) {
            d = 1 - 0.5 * (1 - this.es) * Math.log((1 - this.e3) / (1 + this.e3)) / this.e3;
            if (Math.abs(Math.abs(d) - Math.abs(a)) > 1e-10) {
                f = this.phi1z(this.e3, a)
            } else {
                if (a >= 0) {
                    f = 0.5 * PI
                } else {
                    f = -0.5 * PI
                }
            }
        } else {
            f = this.phi1z(e3, a)
        }
        h = Proj4js.common.adjust_lon(e / this.ns0 + this.long0);
        g.x = h;
        g.y = f;
        return g
    },
    phi1z: function(o, a) {
        var d, e, f;
        var m = Proj4js.common.asinz(0.5 * a);
        if (o < Proj4js.common.EPSLN) {
            return m
        }
        var h = o * o;
        for (var g = 1; g <= 25; g++) {
            sinphi = Math.sin(m);
            cosphi = Math.cos(m);
            d = o * sinphi;
            e = 1 - d * d;
            f = 0.5 * e * e / cosphi * (a / (1 - h) - sinphi / e + 0.5 / o * Math.log((1 - d) / (1 + d)));
            m = m + f;
            if (Math.abs(f) <= 1e-7) {
                return m
            }
        }
        Proj4js.reportError("aea:phi1z:Convergence error");
        return null 
    }
};
Proj4js.Proj.sterea = {
    dependsOn: "gauss",
    init: function() {
        Proj4js.Proj.gauss.init.apply(this);
        if (!this.rc) {
            Proj4js.reportError("sterea:init:E_ERROR_0");
            return
        }
        this.sinc0 = Math.sin(this.phic0);
        this.cosc0 = Math.cos(this.phic0);
        this.R2 = 2 * this.rc;
        if (!this.title) {
            this.title = "Oblique Stereographic Alternative"
        }
    },
    forward: function(a) {
        a.x = Proj4js.common.adjust_lon(a.x - this.long0);
        Proj4js.Proj.gauss.forward.apply(this, [a]);
        sinc = Math.sin(a.y);
        cosc = Math.cos(a.y);
        cosl = Math.cos(a.x);
        k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);
        a.x = k * cosc * Math.sin(a.x);
        a.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);
        a.x = this.a * a.x + this.x0;
        a.y = this.a * a.y + this.y0;
        return a
    },
    inverse: function(d) {
        var e, a;
        d.x = (d.x - this.x0) / this.a;
        d.y = (d.y - this.y0) / this.a;
        d.x /= this.k0;
        d.y /= this.k0;
        if ((rho = Math.sqrt(d.x * d.x + d.y * d.y)) ) {
            c = 2 * Math.atan2(rho, this.R2);
            sinc = Math.sin(c);
            cosc = Math.cos(c);
            a = Math.asin(cosc * this.sinc0 + d.y * sinc * this.cosc0 / rho);
            e = Math.atan2(d.x * sinc, rho * this.cosc0 * cosc - d.y * this.sinc0 * sinc)
        } else {
            a = this.phic0;
            e = 0
        }
        d.x = e;
        d.y = a;
        Proj4js.Proj.gauss.inverse.apply(this, [d]);
        d.x = Proj4js.common.adjust_lon(d.x + this.long0);
        return d
    }
};
function phi4z(e, o, m, h, g, G, F, E, f) {
    var p, D, B, C, v, u, r, q, d, z;
    f = G;
    for (z = 1; z <= 15; z++) {
        p = Math.sin(f);
        tanphi = Math.tan(f);
        E = tanphi * Math.sqrt(1 - e * p * p);
        D = Math.sin(2 * f);
        C = o * f - m * D + h * Math.sin(4 * f) - g * Math.sin(6 * f);
        v = o - 2 * m * Math.cos(2 * f) + 4 * h * Math.cos(4 * f) - 6 * g * Math.cos(6 * f);
        u = 2 * C + E * (C * C + F) - 2 * G * (E * C + 1);
        r = e * D * (C * C + F - 2 * G * C) / (2 * E);
        q = 2 * (G - C) * (E * v - 2 / D) - 2 * v;
        d = u / (r + q);
        f += d;
        if (Math.abs(d) <= 1e-10) {
            return ( f) 
        }
    }
    Proj4js.reportError("phi4z: No convergence");
    return null 
}
function e4fn(a) {
    var d, e;
    d = 1 + a;
    e = 1 - a;
    return ( Math.sqrt((Math.pow(d, d)) * (Math.pow(e, e)))) 
}
Proj4js.Proj.poly = {
    init: function() {
        var a;
        if (this.lat0 = 0) {
            this.lat0 = 90
        }
        this.temp = this.b / this.a;
        this.es = 1 - Math.pow(this.temp, 2);
        this.e = Math.sqrt(this.es);
        this.e0 = Proj4js.common.e0fn(this.es);
        this.e1 = Proj4js.common.e1fn(this.es);
        this.e2 = Proj4js.common.e2fn(this.es);
        this.e3 = Proj4js.common.e3fn(this.es);
        this.ml0 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0)
    },
    forward: function(f) {
        var a, h;
        var o;
        var r;
        var g, m;
        var e;
        var v, u;
        var d = f.x;
        var q = f.y;
        g = Proj4js.common.adjust_lon(d - this.long0);
        if (Math.abs(q) <= 1e-7) {
            v = this.x0 + this.a * g;
            u = this.y0 - this.a * this.ml0
        } else {
            a = Math.sin(q);
            h = Math.cos(q);
            m = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, q);
            e = Proj4js.common.msfnz(this.e, a, h);
            g = a;
            v = this.x0 + this.a * e * Math.sin(g) / a;
            u = this.y0 + this.a * (m - this.ml0 + e * (1 - Math.cos(g)) / a)
        }
        f.x = v;
        f.y = u;
        return f
    },
    inverse: function(d) {
        var r, h;
        var g;
        var u;
        var o;
        var e, f;
        var q;
        var a, m;
        d.x -= this.x0;
        d.y -= this.y0;
        g = this.ml0 + d.y / this.a;
        q = 0;
        if (Math.abs(g) <= 1e-7) {
            a = d.x / this.a + this.long0;
            m = 0
        } else {
            u = g * g + (d.x / this.a) * (d.x / this.a);
            q = phi4z(this.es, this.e0, this.e1, this.e2, this.e3, this.al, u, o, m);
            if (q != 1) {
                return ( q) 
            }
            a = Proj4js.common.adjust_lon((Proj4js.common.asinz(d.x * o / this.a) / Math.sin(m)) + this.long0)
        }
        d.x = a;
        d.y = m;
        return d
    }
};
Proj4js.Proj.equi = {
    init: function() {
        if (!this.x0) {
            this.x0 = 0
        }
        if (!this.y0) {
            this.y0 = 0
        }
        if (!this.lat0) {
            this.lat0 = 0
        }
        if (!this.long0) {
            this.long0 = 0
        }
    },
    forward: function(f) {
        var g = f.x;
        var e = f.y;
        var d = Proj4js.common.adjust_lon(g - this.long0);
        var a = this.x0 + this.a * d * Math.cos(this.lat0);
        var h = this.y0 + this.a * e;
        this.t1 = a;
        this.t2 = Math.cos(this.lat0);
        f.x = a;
        f.y = h;
        return f
    },
    inverse: function(d) {
        d.x -= this.x0;
        d.y -= this.y0;
        var a = d.y / this.a;
        if (Math.abs(a) > Proj4js.common.HALF_PI) {
            Proj4js.reportError("equi:Inv:DataError")
        }
        var e = Proj4js.common.adjust_lon(this.long0 + d.x / (this.a * Math.cos(this.lat0)));
        d.x = e;
        d.y = a
    }
};
Proj4js.Proj.merc = {
    init: function() {
        if (this.lat_ts) {
            if (this.sphere) {
                this.k0 = Math.cos(this.lat_ts)
            } else {
                this.k0 = Proj4js.common.msfnz(this.es, Math.sin(this.lat_ts), Math.cos(this.lat_ts))
            }
        }
    },
    forward: function(g) {
        var h = g.x;
        var f = g.y;
        if (f * Proj4js.common.R2D > 90 && f * Proj4js.common.R2D < -90 && h * Proj4js.common.R2D > 180 && h * Proj4js.common.R2D < -180) {
            Proj4js.reportError("merc:forward: llInputOutOfRange: " + h + " : " + f);
            return null 
        }
        var a, m;
        if (Math.abs(Math.abs(f) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN) {
            Proj4js.reportError("merc:forward: ll2mAtPoles");
            return null 
        } else {
            if (this.sphere) {
                a = this.x0 + this.a * this.k0 * Proj4js.common.adjust_lon(h - this.long0);
                m = this.y0 + this.a * this.k0 * Math.log(Math.tan(Proj4js.common.FORTPI + 0.5 * f))
            } else {
                var e = Math.sin(f);
                var d = Proj4js.common.tsfnz(this.e, f, e);
                a = this.x0 + this.a * this.k0 * Proj4js.common.adjust_lon(h - this.long0);
                m = this.y0 - this.a * this.k0 * Math.log(d)
            }
            g.x = a;
            g.y = m;
            return g
        }
    },
    inverse: function(f) {
        var a = f.x - this.x0;
        var h = f.y - this.y0;
        var g, e;
        if (this.sphere) {
            e = Proj4js.common.HALF_PI - 2 * Math.atan(Math.exp(-h / this.a * this.k0))
        } else {
            var d = Math.exp(-h / (this.a * this.k0));
            e = Proj4js.common.phi2z(this.e, d);
            if (e == -9999) {
                Proj4js.reportError("merc:inverse: lat = -9999");
                return null 
            }
        }
        g = Proj4js.common.adjust_lon(this.long0 + a / (this.a * this.k0));
        f.x = g;
        f.y = e;
        return f
    }
};
Proj4js.Proj.utm = {
    dependsOn: "tmerc",
    init: function() {
        if (!this.zone) {
            Proj4js.reportError("utm:init: zone must be specified for UTM");
            return
        }
        this.lat0 = 0;
        this.long0 = ((6 * Math.abs(this.zone)) - 183) * Proj4js.common.D2R;
        this.x0 = 500000;
        this.y0 = this.utmSouth ? 10000000 : 0;
        this.k0 = 0.9996;
        Proj4js.Proj.tmerc.init.apply(this);
        this.forward = Proj4js.Proj.tmerc.forward;
        this.inverse = Proj4js.Proj.tmerc.inverse
    }
};
Proj4js.Proj.eqdc = {
    init: function() {
        if (!this.mode) {
            this.mode = 0
        }
        this.temp = this.b / this.a;
        this.es = 1 - Math.pow(this.temp, 2);
        this.e = Math.sqrt(this.es);
        this.e0 = Proj4js.common.e0fn(this.es);
        this.e1 = Proj4js.common.e1fn(this.es);
        this.e2 = Proj4js.common.e2fn(this.es);
        this.e3 = Proj4js.common.e3fn(this.es);
        this.sinphi = Math.sin(this.lat1);
        this.cosphi = Math.cos(this.lat1);
        this.ms1 = Proj4js.common.msfnz(this.e, this.sinphi, this.cosphi);
        this.ml1 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);
        if (this.mode != 0) {
            if (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN) {
                Proj4js.reportError("eqdc:Init:EqualLatitudes")
            }
            this.sinphi = Math.sin(this.lat2);
            this.cosphi = Math.cos(this.lat2);
            this.ms2 = Proj4js.common.msfnz(this.e, this.sinphi, this.cosphi);
            this.ml2 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);
            if (Math.abs(this.lat1 - this.lat2) >= Proj4js.common.EPSLN) {
                this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1)
            } else {
                this.ns = this.sinphi
            }
        } else {
            this.ns = this.sinphi
        }
        this.g = this.ml1 + this.ms1 / this.ns;
        this.ml0 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);
        this.rh = this.a * (this.g - this.ml0)
    },
    forward: function(f) {
        var g = f.x;
        var e = f.y;
        var o = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, e);
        var m = this.a * (this.g - o);
        var d = this.ns * Proj4js.common.adjust_lon(g - this.long0);
        var a = this.x0 + m * Math.sin(d);
        var h = this.y0 + this.rh - m * Math.cos(d);
        f.x = a;
        f.y = h;
        return f
    },
    inverse: function(f) {
        f.x -= this.x0;
        f.y = this.rh - f.y + this.y0;
        var a, m;
        if (this.ns >= 0) {
            var m = Math.sqrt(f.x * f.x + f.y * f.y);
            var a = 1
        } else {
            m = -Math.sqrt(f.x * f.x + f.y * f.y);
            a = -1
        }
        var d = 0;
        if (m != 0) {
            d = Math.atan2(a * f.x, a * f.y)
        }
        var h = this.g - m / this.a;
        var e = this.phi3z(this.ml, this.e0, this.e1, this.e2, this.e3);
        var g = Proj4js.common.adjust_lon(this.long0 + d / this.ns);
        f.x = g;
        f.y = e;
        return f
    },
    phi3z: function(o, m, h, g, f) {
        var e;
        var a;
        e = o;
        for (var d = 0; d < 15; d++) {
            a = (o + h * Math.sin(2 * e) - g * Math.sin(4 * e) + f * Math.sin(6 * e)) / m - e;
            e += a;
            if (Math.abs(a) <= 1e-10) {
                return e
            }
        }
        Proj4js.reportError("PHI3Z-CONV:Latitude failed to converge after 15 iterations");
        return null 
    }
};
Proj4js.Proj.tmerc = {
    init: function() {
        this.e0 = Proj4js.common.e0fn(this.es);
        this.e1 = Proj4js.common.e1fn(this.es);
        this.e2 = Proj4js.common.e2fn(this.es);
        this.e3 = Proj4js.common.e3fn(this.es);
        this.ml0 = this.a * Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0)
    },
    forward: function(d) {
        var a = d.x;
        var u = d.y;
        var g = Proj4js.common.adjust_lon(a - this.long0);
        var e;
        var D, B;
        var C = Math.sin(u);
        var q = Math.cos(u);
        if (this.sphere) {
            var z = q * Math.sin(g);
            if ((Math.abs(Math.abs(z) - 1)) < 1e-10) {
                Proj4js.reportError("tmerc:forward: Point projects into infinity");
                return ( 93) 
            } else {
                D = 0.5 * this.a * this.k0 * Math.log((1 + z) / (1 - z));
                e = Math.acos(q * Math.cos(g) / Math.sqrt(1 - z * z));
                if (u < 0) {
                    e = -e
                }
                B = this.a * this.k0 * (e - this.lat0)
            }
        } else {
            var o = q * g;
            var m = Math.pow(o, 2);
            var r = this.ep2 * Math.pow(q, 2);
            var v = Math.tan(u);
            var E = Math.pow(v, 2);
            e = 1 - this.es * Math.pow(C, 2);
            var f = this.a / Math.sqrt(e);
            var h = this.a * Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, u);
            D = this.k0 * f * o * (1 + m / 6 * (1 - E + r + m / 20 * (5 - 18 * E + Math.pow(E, 2) + 72 * r - 58 * this.ep2))) + this.x0;
            B = this.k0 * (h - this.ml0 + f * v * (m * (0.5 + m / 24 * (5 - E + 9 * r + 4 * Math.pow(r, 2) + m / 30 * (61 - 58 * E + Math.pow(E, 2) + 600 * r - 330 * this.ep2))))) + this.y0
        }
        d.x = D;
        d.y = B;
        return d
    },
    inverse: function(H) {
        var q, m;
        var R;
        var J;
        var z = 6;
        var v, o;
        if (this.sphere) {
            var N = Math.exp(H.x / (this.a * this.k0));
            var M = 0.5 * (N - 1 / N);
            var P = this.lat0 + H.y / (this.a * this.k0);
            var K = Math.cos(P);
            q = Math.sqrt((1 - K * K) / (1 + M * M));
            v = Proj4js.common.asinz(q);
            if (P < 0) {
                v = -v
            }
            if ((M == 0) && (K == 0)) {
                o = this.long0
            } else {
                o = Proj4js.common.adjust_lon(Math.atan2(M, K) + this.long0)
            }
        } else {
            var C = H.x - this.x0;
            var B = H.y - this.y0;
            q = (this.ml0 + B / this.k0) / this.a;
            m = q;
            for (J = 0; true; J++) {
                R = ((q + this.e1 * Math.sin(2 * m) - this.e2 * Math.sin(4 * m) + this.e3 * Math.sin(6 * m)) / this.e0) - m;
                m += R;
                if (Math.abs(R) <= Proj4js.common.EPSLN) {
                    break
                }
                if (J >= z) {
                    Proj4js.reportError("tmerc:inverse: Latitude failed to converge");
                    return ( 95) 
                }
            }
            if (Math.abs(m) < Proj4js.common.HALF_PI) {
                var e = Math.sin(m);
                var S = Math.cos(m);
                var D = Math.tan(m);
                var Q = this.ep2 * Math.pow(S, 2);
                var u = Math.pow(Q, 2);
                var E = Math.pow(D, 2);
                var a = Math.pow(E, 2);
                q = 1 - this.es * Math.pow(e, 2);
                var I = this.a / Math.sqrt(q);
                var F = I * (1 - this.es) / q;
                var O = C / (I * this.k0);
                var G = Math.pow(O, 2);
                v = m - (I * D * G / F) * (0.5 - G / 24 * (5 + 3 * E + 10 * Q - 4 * u - 9 * this.ep2 - G / 30 * (61 + 90 * E + 298 * Q + 45 * a - 252 * this.ep2 - 3 * u)));
                o = Proj4js.common.adjust_lon(this.long0 + (O * (1 - G / 6 * (1 + 2 * E + Q - G / 20 * (5 - 2 * Q + 28 * E - 3 * u + 8 * this.ep2 + 24 * a))) / S))
            } else {
                v = Proj4js.common.HALF_PI * Proj4js.common.sign(B);
                o = this.long0
            }
        }
        H.x = o;
        H.y = v;
        return H
    }
};
Proj4js.defs.GOOGLE = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs";
Proj4js.defs["EPSG:900913"] = Proj4js.defs.GOOGLE;
Proj4js.Proj.gstmerc = {
    init: function() {
        var a = this.b / this.a;
        this.e = Math.sqrt(1 - a * a);
        this.lc = this.long0;
        this.rs = Math.sqrt(1 + this.e * this.e * Math.pow(Math.cos(this.lat0), 4) / (1 - this.e * this.e));
        var e = Math.sin(this.lat0);
        var d = Math.asin(e / this.rs);
        var f = Math.sin(d);
        this.cp = Proj4js.common.latiso(0, d, f) - this.rs * Proj4js.common.latiso(this.e, this.lat0, e);
        this.n2 = this.k0 * this.a * Math.sqrt(1 - this.e * this.e) / (1 - this.e * this.e * e * e);
        this.xs = this.x0;
        this.ys = this.y0 - this.n2 * d;
        if (!this.title) {
            this.title = "Gauss Schreiber transverse mercator"
        }
    },
    forward: function(g) {
        var m = g.x;
        var f = g.y;
        var a = this.rs * (m - this.lc);
        var d = this.cp + (this.rs * Proj4js.common.latiso(this.e, f, Math.sin(f)));
        var h = Math.asin(Math.sin(a) / Proj4js.common.cosh(d));
        var e = Proj4js.common.latiso(0, h, Math.sin(h));
        g.x = this.xs + (this.n2 * e);
        g.y = this.ys + (this.n2 * Math.atan(Proj4js.common.sinh(d) / Math.cos(a)));
        return g
    },
    inverse: function(f) {
        var d = f.x;
        var h = f.y;
        var a = Math.atan(Proj4js.common.sinh((d - this.xs) / this.n2) / Math.cos((h - this.ys) / this.n2));
        var g = Math.asin(Math.sin((h - this.ys) / this.n2) / Proj4js.common.cosh((d - this.xs) / this.n2));
        var e = Proj4js.common.latiso(0, g, Math.sin(g));
        f.x = this.lc + a / this.rs;
        f.y = Proj4js.common.invlatiso(this.e, (e - this.cp) / this.rs);
        return f
    }
};
Proj4js.Proj.ortho = {
    init: function(a) {
        this.sin_p14 = Math.sin(this.lat0);
        this.cos_p14 = Math.cos(this.lat0)
    },
    forward: function(e) {
        var a, f;
        var v;
        var u;
        var h;
        var m;
        var d = e.x;
        var o = e.y;
        v = Proj4js.common.adjust_lon(d - this.long0);
        a = Math.sin(o);
        f = Math.cos(o);
        u = Math.cos(v);
        m = this.sin_p14 * a + this.cos_p14 * f * u;
        h = 1;
        if ((m > 0) || (Math.abs(m) <= Proj4js.common.EPSLN)) {
            var r = this.a * h * f * Math.sin(v);
            var q = this.y0 + this.a * h * (this.cos_p14 * a - this.sin_p14 * f * u)
        } else {
            Proj4js.reportError("orthoFwdPointError")
        }
        e.x = r;
        e.y = q;
        return e
    },
    inverse: function(d) {
        var m;
        var h;
        var f, q;
        var o;
        var e;
        var a, g;
        d.x -= this.x0;
        d.y -= this.y0;
        m = Math.sqrt(d.x * d.x + d.y * d.y);
        if (m > this.a + 1e-7) {
            Proj4js.reportError("orthoInvDataError")
        }
        h = Proj4js.common.asinz(m / this.a);
        f = Math.sin(h);
        q = Math.cos(h);
        a = this.long0;
        if (Math.abs(m) <= Proj4js.common.EPSLN) {
            g = this.lat0
        }
        g = Proj4js.common.asinz(q * this.sin_p14 + (d.y * f * this.cos_p14) / m);
        e = Math.abs(lat0) - Proj4js.common.HALF_PI;
        if (Math.abs(e) <= Proj4js.common.EPSLN) {
            if (this.lat0 >= 0) {
                a = Proj4js.common.adjust_lon(this.long0 + Math.atan2(d.x, -d.y))
            } else {
                a = Proj4js.common.adjust_lon(this.long0 - Math.atan2(-d.x, d.y))
            }
        }
        e = q - this.sin_p14 * Math.sin(g);
        if ((Math.abs(e) >= Proj4js.common.EPSLN) || (Math.abs(x) >= Proj4js.common.EPSLN)) {
            a = Proj4js.common.adjust_lon(this.long0 + Math.atan2((d.x * f * this.cos_p14), (e * m)))
        }
        d.x = a;
        d.y = g;
        return d
    }
};
Proj4js.Proj.somerc = {
    init: function() {
        var d = this.lat0;
        this.lambda0 = this.long0;
        var a = Math.sin(d);
        var g = this.a;
        var f = this.rf;
        var h = 1 / f;
        var o = 2 * h - Math.pow(h, 2);
        var m = this.e = Math.sqrt(o);
        this.R = g * Math.sqrt(1 - o) / (1 - o * Math.pow(a, 2));
        this.alpha = Math.sqrt(1 + o / (1 - o) * Math.pow(Math.cos(d), 4));
        this.b0 = Math.asin(a / this.alpha);
        this.K = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2)) - this.alpha * Math.log(Math.tan(Math.PI / 4 + d / 2)) + this.alpha * m / 2 * Math.log((1 + m * a) / (1 - m * a))
    },
    forward: function(g) {
        var o = Math.log(Math.tan(Math.PI / 4 - g.y / 2));
        var h = this.e / 2 * Math.log((1 + this.e * Math.sin(g.y)) / (1 - this.e * Math.sin(g.y)));
        var e = -this.alpha * (o + h) + this.K;
        var a = 2 * (Math.atan(Math.exp(e)) - Math.PI / 4);
        var d = this.alpha * (g.x - this.lambda0);
        var m = Math.atan(Math.sin(d) / (Math.sin(this.b0) * Math.tan(a) + Math.cos(this.b0) * Math.cos(d)));
        var f = Math.asin(Math.cos(this.b0) * Math.sin(a) - Math.sin(this.b0) * Math.cos(a) * Math.cos(d));
        g.y = this.R / 2 * Math.log((1 + Math.sin(f)) / (1 - Math.sin(f))) + this.y0;
        g.x = this.R * m + this.x0;
        return g
    },
    inverse: function(e) {
        var d = e.x - this.x0;
        var f = e.y - this.y0;
        var u = d / this.R;
        var g = 2 * (Math.atan(Math.exp(f / this.R)) - Math.PI / 4);
        var q = Math.asin(Math.cos(this.b0) * Math.sin(g) + Math.sin(this.b0) * Math.cos(g) * Math.cos(u));
        var r = Math.atan(Math.sin(u) / (Math.cos(this.b0) * Math.cos(u) - Math.sin(this.b0) * Math.tan(g)));
        var o = this.lambda0 + r / this.alpha;
        var m = 0;
        var v = q;
        var a = -1000;
        var h = 0;
        while (Math.abs(v - a) > 1e-7) {
            if (++h > 20) {
                Proj4js.reportError("omercFwdInfinity");
                return
            }
            m = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + q / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(v)) / 2));
            a = v;
            v = 2 * Math.atan(Math.exp(m)) - Math.PI / 2
        }
        e.x = o;
        e.y = v;
        return e
    }
};
Proj4js.Proj.stere = {
    ssfn_: function(a, e, d) {
        e *= d;
        return ( Math.tan(0.5 * (Proj4js.common.HALF_PI + a)) * Math.pow((1 - e) / (1 + e), 0.5 * d)) 
    },
    TOL: 1e-8,
    NITER: 8,
    CONV: 1e-10,
    S_POLE: 0,
    N_POLE: 1,
    OBLIQ: 2,
    EQUIT: 3,
    init: function() {
        this.phits = this.lat_ts ? this.lat_ts : Proj4js.common.HALF_PI;
        var a = Math.abs(this.lat0);
        if ((Math.abs(a) - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN) {
            this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE
        } else {
            this.mode = a > Proj4js.common.EPSLN ? this.OBLIQ : this.EQUIT
        }
        this.phits = Math.abs(this.phits);
        if (this.es) {
            var d;
            switch (this.mode) {
            case this.N_POLE:
            case this.S_POLE:
                if (Math.abs(this.phits - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN) {
                    this.akm1 = 2 * this.k0 / Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e))
                } else {
                    a = Math.sin(this.phits);
                    this.akm1 = Math.cos(this.phits) / Proj4js.common.tsfnz(this.e, this.phits, a);
                    a *= this.e;
                    this.akm1 /= Math.sqrt(1 - a * a)
                }
                break;
            case this.EQUIT:
                this.akm1 = 2 * this.k0;
                break;
            case this.OBLIQ:
                a = Math.sin(this.lat0);
                d = 2 * Math.atan(this.ssfn_(this.lat0, a, this.e)) - Proj4js.common.HALF_PI;
                a *= this.e;
                this.akm1 = 2 * this.k0 * Math.cos(this.lat0) / Math.sqrt(1 - a * a);
                this.sinX1 = Math.sin(d);
                this.cosX1 = Math.cos(d);
                break
            }
        } else {
            switch (this.mode) {
            case this.OBLIQ:
                this.sinph0 = Math.sin(this.lat0);
                this.cosph0 = Math.cos(this.lat0);
            case this.EQUIT:
                this.akm1 = 2 * this.k0;
                break;
            case this.S_POLE:
            case this.N_POLE:
                this.akm1 = Math.abs(this.phits - Proj4js.common.HALF_PI) >= Proj4js.common.EPSLN ? Math.cos(this.phits) / Math.tan(Proj4js.common.FORTPI - 0.5 * this.phits) : 2 * this.k0;
                break
            }
        }
    },
    forward: function(e) {
        var d = e.x;
        d = Proj4js.common.adjust_lon(d - this.long0);
        var h = e.y;
        var q, m;
        if (this.sphere) {
            var a, f, o, g;
            a = Math.sin(h);
            f = Math.cos(h);
            o = Math.cos(d);
            g = Math.sin(d);
            switch (this.mode) {
            case this.EQUIT:
                m = 1 + f * o;
                if (m <= Proj4js.common.EPSLN) {
                    F_ERROR
                }
                m = this.akm1 / m;
                q = m * f * g;
                m *= a;
                break;
            case this.OBLIQ:
                m = 1 + this.sinph0 * a + this.cosph0 * f * o;
                if (m <= Proj4js.common.EPSLN) {
                    F_ERROR
                }
                m = this.akm1 / m;
                q = m * f * g;
                m *= this.cosph0 * a - this.sinph0 * f * o;
                break;
            case this.N_POLE:
                o = -o;
                h = -h;
            case this.S_POLE:
                if (Math.abs(h - Proj4js.common.HALF_PI) < this.TOL) {
                    F_ERROR
                }
                m = this.akm1 * Math.tan(Proj4js.common.FORTPI + 0.5 * h);
                q = g * m;
                m *= o;
                break
            }
        } else {
            o = Math.cos(d);
            g = Math.sin(d);
            a = Math.sin(h);
            if (this.mode == this.OBLIQ || this.mode == this.EQUIT) {
                X = 2 * Math.atan(this.ssfn_(h, a, this.e));
                sinX = Math.sin(X - Proj4js.common.HALF_PI);
                cosX = Math.cos(X)
            }
            switch (this.mode) {
            case this.OBLIQ:
                A = this.akm1 / (this.cosX1 * (1 + this.sinX1 * sinX + this.cosX1 * cosX * o));
                m = A * (this.cosX1 * sinX - this.sinX1 * cosX * o);
                q = A * cosX;
                break;
            case this.EQUIT:
                A = 2 * this.akm1 / (1 + cosX * o);
                m = A * sinX;
                q = A * cosX;
                break;
            case this.S_POLE:
                h = -h;
                o = -o;
                a = -a;
            case this.N_POLE:
                q = this.akm1 * Proj4js.common.tsfnz(this.e, h, a);
                m = -q * o;
                break
            }
            q = q * g
        }
        e.x = q * this.a + this.x0;
        e.y = m * this.a + this.y0;
        return e
    },
    inverse: function(e) {
        var C = (e.x - this.x0) / this.a;
        var v = (e.y - this.y0) / this.a;
        var d, u;
        var m, a, B = 0, f = 0, z, h = 0, q = 0;
        var o;
        if (this.sphere) {
            var r, D, g, E;
            D = Math.sqrt(C * C + v * v);
            r = 2 * Math.atan(D / this.akm1);
            g = Math.sin(r);
            E = Math.cos(r);
            d = 0;
            switch (this.mode) {
            case this.EQUIT:
                if (Math.abs(D) <= Proj4js.common.EPSLN) {
                    u = 0
                } else {
                    u = Math.asin(v * g / D)
                }
                if (E != 0 || C != 0) {
                    d = Math.atan2(C * g, E * D)
                }
                break;
            case this.OBLIQ:
                if (Math.abs(D) <= Proj4js.common.EPSLN) {
                    u = this.phi0
                } else {
                    u = Math.asin(E * sinph0 + v * g * cosph0 / D)
                }
                r = E - sinph0 * Math.sin(u);
                if (r != 0 || C != 0) {
                    d = Math.atan2(C * g * cosph0, r * D)
                }
                break;
            case this.N_POLE:
                v = -v;
            case this.S_POLE:
                if (Math.abs(D) <= Proj4js.common.EPSLN) {
                    u = this.phi0
                } else {
                    u = Math.asin(this.mode == this.S_POLE ? -E : E)
                }
                d = (C == 0 && v == 0) ? 0 : Math.atan2(C, v);
                break
            }
        } else {
            z = Math.sqrt(C * C + v * v);
            switch (this.mode) {
            case this.OBLIQ:
            case this.EQUIT:
                B = 2 * Math.atan2(z * this.cosX1, this.akm1);
                m = Math.cos(B);
                a = Math.sin(B);
                if (z == 0) {
                    f = Math.asin(m * this.sinX1)
                } else {
                    f = Math.asin(m * this.sinX1 + (v * a * this.cosX1 / z))
                }
                B = Math.tan(0.5 * (Proj4js.common.HALF_PI + f));
                C *= a;
                v = z * this.cosX1 * m - v * this.sinX1 * a;
                q = Proj4js.common.HALF_PI;
                h = 0.5 * this.e;
                break;
            case this.N_POLE:
                v = -v;
            case this.S_POLE:
                B = -z / this.akm1;
                f = Proj4js.common.HALF_PI - 2 * Math.atan(B);
                q = -Proj4js.common.HALF_PI;
                h = -0.5 * this.e;
                break
            }
            for (o = this.NITER; o--; f = u) {
                a = this.e * Math.sin(f);
                u = 2 * Math.atan(B * Math.pow((1 + a) / (1 - a), h)) - q;
                if (Math.abs(f - u) < this.CONV) {
                    if (this.mode == this.S_POLE) {
                        u = -u
                    }
                    d = (C == 0 && v == 0) ? 0 : Math.atan2(C, v);
                    e.x = Proj4js.common.adjust_lon(d + this.long0);
                    e.y = u;
                    return e
                }
            }
        }
    }
};
Proj4js.Proj.nzmg = {
    iterations: 1,
    init: function() {
        this.A = new Array();
        this.A[1] = +0.6399175073;
        this.A[2] = -0.1358797613;
        this.A[3] = +0.063294409;
        this.A[4] = -0.02526853;
        this.A[5] = +0.0117879;
        this.A[6] = -0.0055161;
        this.A[7] = +0.0026906;
        this.A[8] = -0.001333;
        this.A[9] = +0.00067;
        this.A[10] = -0.00034;
        this.B_re = new Array();
        this.B_im = new Array();
        this.B_re[1] = +0.7557853228;
        this.B_im[1] = 0;
        this.B_re[2] = +0.249204646;
        this.B_im[2] = +0.003371507;
        this.B_re[3] = -0.001541739;
        this.B_im[3] = +0.04105856;
        this.B_re[4] = -0.10162907;
        this.B_im[4] = +0.01727609;
        this.B_re[5] = -0.26623489;
        this.B_im[5] = -0.36249218;
        this.B_re[6] = -0.6870983;
        this.B_im[6] = -1.1651967;
        this.C_re = new Array();
        this.C_im = new Array();
        this.C_re[1] = +1.3231270439;
        this.C_im[1] = 0;
        this.C_re[2] = -0.577245789;
        this.C_im[2] = -0.007809598;
        this.C_re[3] = +0.508307513;
        this.C_im[3] = -0.112208952;
        this.C_re[4] = -0.15094762;
        this.C_im[4] = +0.18200602;
        this.C_re[5] = +1.01418179;
        this.C_im[5] = +1.64497696;
        this.C_re[6] = +1.9660549;
        this.C_im[6] = +2.5127645;
        this.D = new Array();
        this.D[1] = +1.5627014243;
        this.D[2] = +0.5185406398;
        this.D[3] = -0.03333098;
        this.D[4] = -0.1052906;
        this.D[5] = -0.0368594;
        this.D[6] = +0.007317;
        this.D[7] = +0.0122;
        this.D[8] = +0.00394;
        this.D[9] = -0.0013
    },
    forward: function(e) {
        var d = e.x;
        var B = e.y;
        var E = B - this.lat0;
        var q = d - this.long0;
        var f = E / Proj4js.common.SEC_TO_RAD * 0.00001;
        var a = q;
        var u = 1;
        var o = 0;
        for (n = 1; n <= 10; n++) {
            u = u * f;
            o = o + this.A[n] * u
        }
        var r = o;
        var h = a;
        var v = 1;
        var m = 0;
        var D;
        var g;
        var C = 0;
        var z = 0;
        for (n = 1; n <= 6; n++) {
            D = v * r - m * h;
            g = m * r + v * h;
            v = D;
            m = g;
            C = C + this.B_re[n] * v - this.B_im[n] * m;
            z = z + this.B_im[n] * v + this.B_re[n] * m
        }
        x = (z * this.a) + this.x0;
        y = (C * this.a) + this.y0;
        e.x = x;
        e.y = y;
        return e
    },
    inverse: function(F) {
        var C = F.x;
        var B = F.y;
        var J = C - this.x0;
        var I = B - this.y0;
        var z = I / this.a;
        var g = J / this.a;
        var q = 1;
        var Q = 0;
        var h;
        var N;
        var r = 0;
        var a = 0;
        for (n = 1; n <= 6; n++) {
            h = q * z - Q * g;
            N = Q * z + q * g;
            q = h;
            Q = N;
            r = r + this.C_re[n] * q - this.C_im[n] * Q;
            a = a + this.C_im[n] * q + this.C_re[n] * Q
        }
        for (i = 0; i < this.iterations; i++) {
            var D = r;
            var o = a;
            var H;
            var E;
            var e = z;
            var M = g;
            for (n = 2; n <= 6; n++) {
                H = D * r - o * a;
                E = o * r + D * a;
                D = H;
                o = E;
                e = e + (n - 1) * (this.B_re[n] * D - this.B_im[n] * o);
                M = M + (n - 1) * (this.B_im[n] * D + this.B_re[n] * o)
            }
            D = 1;
            o = 0;
            var d = this.B_re[1];
            var K = this.B_im[1];
            for (n = 2; n <= 6; n++) {
                H = D * r - o * a;
                E = o * r + D * a;
                D = H;
                o = E;
                d = d + n * (this.B_re[n] * D - this.B_im[n] * o);
                K = K + n * (this.B_im[n] * D + this.B_re[n] * o)
            }
            var f = d * d + K * K;
            r = (e * d + M * K) / f;
            a = (M * d - e * K) / f
        }
        var G = r;
        var v = a;
        var O = 1;
        var P = 0;
        for (n = 1; n <= 9; n++) {
            O = O * G;
            P = P + this.D[n] * O
        }
        var u = this.lat0 + (P * Proj4js.common.SEC_TO_RAD * 100000);
        var m = this.long0 + v;
        F.x = m;
        F.y = u;
        return F
    }
};
Proj4js.Proj.mill = {
    init: function() {},
    forward: function(f) {
        var g = f.x;
        var e = f.y;
        var d = Proj4js.common.adjust_lon(g - this.long0);
        var a = this.x0 + this.a * d;
        var h = this.y0 + this.a * Math.log(Math.tan((Proj4js.common.PI / 4) + (e / 2.5))) * 1.25;
        f.x = a;
        f.y = h;
        return f
    },
    inverse: function(d) {
        d.x -= this.x0;
        d.y -= this.y0;
        var e = Proj4js.common.adjust_lon(this.long0 + d.x / this.a);
        var a = 2.5 * (Math.atan(Math.exp(0.8 * d.y / this.a)) - Proj4js.common.PI / 4);
        d.x = e;
        d.y = a;
        return d
    }
};
Proj4js.Proj.gnom = {
    init: function(a) {
        this.sin_p14 = Math.sin(this.lat0);
        this.cos_p14 = Math.cos(this.lat0);
        this.infinity_dist = 1000 * this.a
    },
    forward: function(e) {
        var a, f;
        var r;
        var q;
        var h;
        var m;
        var d = e.x;
        var o = e.y;
        r = Proj4js.common.adjust_lon(d - this.long0);
        a = Math.sin(o);
        f = Math.cos(o);
        q = Math.cos(r);
        m = this.sin_p14 * a + this.cos_p14 * f * q;
        h = 1;
        if ((m > 0) || (Math.abs(m) <= Proj4js.common.EPSLN)) {
            x = this.x0 + this.a * h * f * Math.sin(r) / m;
            y = this.y0 + this.a * h * (this.cos_p14 * a - this.sin_p14 * f * q) / m
        } else {
            Proj4js.reportError("orthoFwdPointError");
            x = this.x0 + this.infinity_dist * f * Math.sin(r);
            y = this.y0 + this.infinity_dist * (this.cos_p14 * a - this.sin_p14 * f * q)
        }
        e.x = x;
        e.y = y;
        return e
    },
    inverse: function(g) {
        var a;
        var m;
        var d, e;
        var o;
        var h, f;
        g.x = (g.x - this.x0) / this.a;
        g.y = (g.y - this.y0) / this.a;
        g.x /= this.k0;
        g.y /= this.k0;
        if ((a = Math.sqrt(g.x * g.x + g.y * g.y)) ) {
            o = Math.atan2(a, this.rc);
            d = Math.sin(o);
            e = Math.cos(o);
            f = Proj4js.common.asinz(e * this.sin_p14 + (g.y * d * this.cos_p14) / a);
            h = Math.atan2(g.x * d, a * this.cos_p14 * e - g.y * this.sin_p14 * d);
            h = Proj4js.common.adjust_lon(this.long0 + h)
        } else {
            f = this.phic0;
            h = 0
        }
        g.x = h;
        g.y = f;
        return g
    }
};
Proj4js.Proj.sinu = {
    init: function() {
        this.R = 6370997
    },
    forward: function(f) {
        var a, h, d;
        var g = f.x;
        var e = f.y;
        d = Proj4js.common.adjust_lon(g - this.long0);
        a = this.R * d * Math.cos(e) + this.x0;
        h = this.R * e + this.y0;
        f.x = a;
        f.y = h;
        return f
    },
    inverse: function(e) {
        var d, a, f;
        e.x -= this.x0;
        e.y -= this.y0;
        d = e.y / this.R;
        if (Math.abs(d) > Proj4js.common.HALF_PI) {
            Proj4js.reportError("sinu:Inv:DataError")
        }
        a = Math.abs(d) - Proj4js.common.HALF_PI;
        if (Math.abs(a) > Proj4js.common.EPSLN) {
            a = this.long0 + e.x / (this.R * Math.cos(d));
            f = Proj4js.common.adjust_lon(a)
        } else {
            f = this.long0
        }
        e.x = f;
        e.y = d;
        return e
    }
};
Proj4js.Proj.vandg = {
    init: function() {
        this.R = 6370997
    },
    forward: function(e) {
        var a = e.x;
        var B = e.y;
        var F = Proj4js.common.adjust_lon(a - this.long0);
        var E, C;
        if (Math.abs(B) <= Proj4js.common.EPSLN) {
            E = this.x0 + this.R * F;
            C = this.y0
        }
        var h = Proj4js.common.asinz(2 * Math.abs(B / Proj4js.common.PI));
        if ((Math.abs(F) <= Proj4js.common.EPSLN) || (Math.abs(Math.abs(B) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN)) {
            E = this.x0;
            if (B >= 0) {
                C = this.y0 + Proj4js.common.PI * this.R * Math.tan(0.5 * h)
            } else {
                C = this.y0 + Proj4js.common.PI * this.R * -Math.tan(0.5 * h)
            }
        }
        var v = 0.5 * Math.abs((Proj4js.common.PI / F) - (F / Proj4js.common.PI));
        var f = v * v;
        var z = Math.sin(h);
        var u = Math.cos(h);
        var r = u / (z + u - 1);
        var q = r * r;
        var o = r * (2 / z - 1);
        var D = o * o;
        var d = Proj4js.common.PI * this.R * (v * (r - D) + Math.sqrt(f * (r - D) * (r - D) - (D + f) * (q - D))) / (D + f);
        if (F < 0) {
            d = -d
        }
        E = this.x0 + d;
        d = Math.abs(d / (Proj4js.common.PI * this.R));
        if (B >= 0) {
            C = this.y0 + Proj4js.common.PI * this.R * Math.sqrt(1 - d * d - 2 * v * d)
        } else {
            C = this.y0 - Proj4js.common.PI * this.R * Math.sqrt(1 - d * d - 2 * v * d)
        }
        e.x = E;
        e.y = C;
        return e
    },
    inverse: function(g) {
        var D;
        var a, v, C, q, o, m;
        var r, h;
        var f;
        var B;
        var e;
        var z;
        var u;
        g.x -= this.x0;
        g.y -= this.y0;
        e = Proj4js.common.PI * this.R;
        a = g.x / e;
        v = g.y / e;
        C = a * a + v * v;
        q = -Math.abs(v) * (1 + C);
        o = q - 2 * v * v + a * a;
        m = -2 * q + 1 + 2 * v * v + C * C;
        u = v * v / m + (2 * o * o * o / m / m / m - 9 * q * o / m / m) / 27;
        f = (q - o * o / 3 / m) / m;
        B = 2 * Math.sqrt(-f / 3);
        e = ((3 * u) / f) / B;
        if (Math.abs(e) > 1) {
            if (e >= 0) {
                e = 1
            } else {
                e = -1
            }
        }
        z = Math.acos(e) / 3;
        if (g.y >= 0) {
            lat = (-B * Math.cos(z + Proj4js.common.PI / 3) - o / 3 / m) * Proj4js.common.PI
        } else {
            lat = -(-B * Math.cos(z + PI / 3) - o / 3 / m) * Proj4js.common.PI
        }
        if (Math.abs(a) < Proj4js.common.EPSLN) {
            lon = this.long0
        }
        lon = Proj4js.common.adjust_lon(this.long0 + Proj4js.common.PI * (C - 1 + Math.sqrt(1 + 2 * (a * a - v * v) + C * C)) / 2 / a);
        g.x = lon;
        g.y = lat;
        return g
    }
};
Proj4js.Proj.cea = {
    init: function() {},
    forward: function(e) {
        var f = e.x;
        var d = e.y;
        dlon = Proj4js.common.adjust_lon(f - this.long0);
        var a = this.x0 + this.a * dlon * Math.cos(this.lat_ts);
        var g = this.y0 + this.a * Math.sin(d) / Math.cos(this.lat_ts);
        e.x = a;
        e.y = g;
        return e
    },
    inverse: function(d) {
        d.x -= this.x0;
        d.y -= this.y0;
        var e = Proj4js.common.adjust_lon(this.long0 + (d.x / this.a) / Math.cos(this.lat_ts));
        var a = Math.asin((d.y / this.a) * Math.cos(this.lat_ts));
        d.x = e;
        d.y = a;
        return d
    }
};
Proj4js.Proj.eqc = {
    init: function() {
        if (!this.x0) {
            this.x0 = 0
        }
        if (!this.y0) {
            this.y0 = 0
        }
        if (!this.lat0) {
            this.lat0 = 0
        }
        if (!this.long0) {
            this.long0 = 0
        }
        if (!this.lat_ts) {
            this.lat_ts = 0
        }
        if (!this.title) {
            this.title = "Equidistant Cylindrical (Plate Carre)"
        }
        this.rc = Math.cos(this.lat_ts)
    },
    forward: function(f) {
        var g = f.x;
        var e = f.y;
        var d = Proj4js.common.adjust_lon(g - this.long0);
        var a = Proj4js.common.adjust_lat(e - this.lat0);
        f.x = this.x0 + (this.a * d * this.rc);
        f.y = this.y0 + (this.a * a);
        return f
    },
    inverse: function(d) {
        var a = d.x;
        var e = d.y;
        d.x = Proj4js.common.adjust_lon(this.long0 + ((a - this.x0) / (this.a * this.rc)));
        d.y = Proj4js.common.adjust_lat(this.lat0 + ((e - this.y0) / (this.a)));
        return d
    }
};
Proj4js.Proj.cass = {
    init: function() {
        if (!this.sphere) {
            this.en = this.pj_enfn(this.es);
            this.m0 = this.pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en)
        }
    },
    C1: 0.16666666666666666,
    C2: 0.008333333333333333,
    C3: 0.041666666666666664,
    C4: 0.3333333333333333,
    C5: 0.06666666666666667,
    forward: function(f) {
        var a, g;
        var d = f.x;
        var e = f.y;
        d = Proj4js.common.adjust_lon(d - this.long0);
        if (this.sphere) {
            a = Math.asin(Math.cos(e) * Math.sin(d));
            g = Math.atan2(Math.tan(e), Math.cos(d)) - this.phi0
        } else {
            this.n = Math.sin(e);
            this.c = Math.cos(e);
            g = this.pj_mlfn(e, this.n, this.c, this.en);
            this.n = 1 / Math.sqrt(1 - this.es * this.n * this.n);
            this.tn = Math.tan(e);
            this.t = this.tn * this.tn;
            this.a1 = d * this.c;
            this.c *= this.es * this.c / (1 - this.es);
            this.a2 = this.a1 * this.a1;
            a = this.n * this.a1 * (1 - this.a2 * this.t * (this.C1 - (8 - this.t + 8 * this.c) * this.a2 * this.C2));
            g -= this.m0 - this.n * this.tn * this.a2 * (0.5 + (5 - this.t + 6 * this.c) * this.a2 * this.C3)
        }
        f.x = this.a * a + this.x0;
        f.y = this.a * g + this.y0;
        return f
    },
    inverse: function(d) {
        d.x -= this.x0;
        d.y -= this.y0;
        var a = d.x / this.a;
        var e = d.y / this.a;
        if (this.sphere) {
            this.dd = e + this.lat0;
            phi = Math.asin(Math.sin(this.dd) * Math.cos(a));
            lam = Math.atan2(Math.tan(a), Math.cos(this.dd))
        } else {
            ph1 = this.pj_inv_mlfn(this.m0 + e, this.es, this.en);
            this.tn = Math.tan(ph1);
            this.t = this.tn * this.tn;
            this.n = Math.sin(ph1);
            this.r = 1 / (1 - this.es * this.n * this.n);
            this.n = Math.sqrt(this.r);
            this.r *= (1 - this.es) * this.n;
            this.dd = a / this.n;
            this.d2 = this.dd * this.dd;
            phi = ph1 - (this.n * this.tn / this.r) * this.d2 * (0.5 - (1 + 3 * this.t) * this.d2 * this.C3);
            lam = this.dd * (1 + this.t * this.d2 * (-this.C4 + (1 + 3 * this.t) * this.d2 * this.C5)) / Math.cos(ph1)
        }
        d.x = Proj4js.common.adjust_lon(this.long0 + lam);
        d.y = phi;
        return d
    },
    pj_enfn: function(d) {
        en = new Array();
        en[0] = this.C00 - d * (this.C02 + d * (this.C04 + d * (this.C06 + d * this.C08)));
        en[1] = d * (this.C22 - d * (this.C04 + d * (this.C06 + d * this.C08)));
        var a = d * d;
        en[2] = a * (this.C44 - d * (this.C46 + d * this.C48));
        a *= d;
        en[3] = a * (this.C66 - d * this.C68);
        en[4] = a * d * this.C88;
        return en
    },
    pj_mlfn: function(f, a, e, d) {
        e *= a;
        a *= a;
        return ( d[0] * f - e * (d[1] + a * (d[2] + a * (d[3] + a * d[4])))) 
    },
    pj_inv_mlfn: function(a, e, d) {
        k = 1 / (1 - e);
        phi = a;
        for (i = Proj4js.common.MAX_ITER; i; --i) {
            s = Math.sin(phi);
            t = 1 - e * s * s;
            t = (this.pj_mlfn(phi, s, Math.cos(phi), d) - a) * (t * Math.sqrt(t)) * k;
            phi -= t;
            if (Math.abs(t) < Proj4js.common.EPSLN) {
                return phi
            }
        }
        Proj4js.reportError("cass:pj_inv_mlfn: Convergence error");
        return phi
    },
    C00: 1,
    C02: 0.25,
    C04: 0.046875,
    C06: 0.01953125,
    C08: 0.01068115234375,
    C22: 0.75,
    C44: 0.46875,
    C46: 0.013020833333333334,
    C48: 0.007120768229166667,
    C66: 0.3645833333333333,
    C68: 0.005696614583333333,
    C88: 0.3076171875
};
Proj4js.Proj.gauss = {
    init: function() {
        sphi = Math.sin(this.lat0);
        cphi = Math.cos(this.lat0);
        cphi *= cphi;
        this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);
        this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));
        this.phic0 = Math.asin(sphi / this.C);
        this.ratexp = 0.5 * this.C * this.e;
        this.K = Math.tan(0.5 * this.phic0 + Proj4js.common.FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + Proj4js.common.FORTPI), this.C) * Proj4js.common.srat(this.e * sphi, this.ratexp))
    },
    forward: function(d) {
        var e = d.x;
        var a = d.y;
        d.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * a + Proj4js.common.FORTPI), this.C) * Proj4js.common.srat(this.e * Math.sin(a), this.ratexp)) - Proj4js.common.HALF_PI;
        d.x = this.C * e;
        return d
    },
    inverse: function(f) {
        var e = 1e-14;
        var g = f.x / this.C;
        var d = f.y;
        num = Math.pow(Math.tan(0.5 * d + Proj4js.common.FORTPI) / this.K, 1 / this.C);
        for (var a = Proj4js.common.MAX_ITER; a > 0; --a) {
            d = 2 * Math.atan(num * Proj4js.common.srat(this.e * Math.sin(f.y), -0.5 * this.e)) - Proj4js.common.HALF_PI;
            if (Math.abs(d - f.y) < e) {
                break
            }
            f.y = d
        }
        if (!a) {
            Proj4js.reportError("gauss:inverse:convergence failed");
            return null 
        }
        f.x = g;
        f.y = d;
        return f
    }
};
Proj4js.Proj.omerc = {
    init: function() {
        if (!this.mode) {
            this.mode = 0
        }
        if (!this.lon1) {
            this.lon1 = 0;
            this.mode = 1
        }
        if (!this.lon2) {
            this.lon2 = 0
        }
        if (!this.lat2) {
            this.lat2 = 0
        }
        var a = this.b / this.a;
        var f = 1 - Math.pow(a, 2);
        var d = Math.sqrt(f);
        this.sin_p20 = Math.sin(this.lat0);
        this.cos_p20 = Math.cos(this.lat0);
        this.con = 1 - this.es * this.sin_p20 * this.sin_p20;
        this.com = Math.sqrt(1 - f);
        this.bl = Math.sqrt(1 + this.es * Math.pow(this.cos_p20, 4) / (1 - f));
        this.al = this.a * this.bl * this.k0 * this.com / this.con;
        if (Math.abs(this.lat0) < Proj4js.common.EPSLN) {
            this.ts = 1;
            this.d = 1;
            this.el = 1
        } else {
            this.ts = Proj4js.common.tsfnz(this.e, this.lat0, this.sin_p20);
            this.con = Math.sqrt(this.con);
            this.d = this.bl * this.com / (this.cos_p20 * this.con);
            if ((this.d * this.d - 1) > 0) {
                if (this.lat0 >= 0) {
                    this.f = this.d + Math.sqrt(this.d * this.d - 1)
                } else {
                    this.f = this.d - Math.sqrt(this.d * this.d - 1)
                }
            } else {
                this.f = this.d
            }
            this.el = this.f * Math.pow(this.ts, this.bl)
        }
        if (this.mode != 0) {
            this.g = 0.5 * (this.f - 1 / this.f);
            this.gama = Proj4js.common.asinz(Math.sin(this.alpha) / this.d);
            this.longc = this.longc - Proj4js.common.asinz(this.g * Math.tan(this.gama)) / this.bl;
            this.con = Math.abs(this.lat0);
            if ((this.con > Proj4js.common.EPSLN) && (Math.abs(this.con - Proj4js.common.HALF_PI) > Proj4js.common.EPSLN)) {
                this.singam = Math.sin(this.gama);
                this.cosgam = Math.cos(this.gama);
                this.sinaz = Math.sin(this.alpha);
                this.cosaz = Math.cos(this.alpha);
                if (this.lat0 >= 0) {
                    this.u = (this.al / this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz)
                } else {
                    this.u = -(this.al / this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz)
                }
            } else {
                Proj4js.reportError("omerc:Init:DataError")
            }
        } else {
            this.sinphi = Math.sin(this.at1);
            this.ts1 = Proj4js.common.tsfnz(this.e, this.lat1, this.sinphi);
            this.sinphi = Math.sin(this.lat2);
            this.ts2 = Proj4js.common.tsfnz(this.e, this.lat2, this.sinphi);
            this.h = Math.pow(this.ts1, this.bl);
            this.l = Math.pow(this.ts2, this.bl);
            this.f = this.el / this.h;
            this.g = 0.5 * (this.f - 1 / this.f);
            this.j = (this.el * this.el - this.l * this.h) / (this.el * this.el + this.l * this.h);
            this.p = (this.l - this.h) / (this.l + this.h);
            this.dlon = this.lon1 - this.lon2;
            if (this.dlon < -Proj4js.common.PI) {
                this.lon2 = this.lon2 - 2 * Proj4js.common.PI
            }
            if (this.dlon > Proj4js.common.PI) {
                this.lon2 = this.lon2 + 2 * Proj4js.common.PI
            }
            this.dlon = this.lon1 - this.lon2;
            this.longc = 0.5 * (this.lon1 + this.lon2) - Math.atan(this.j * Math.tan(0.5 * this.bl * this.dlon) / this.p) / this.bl;
            this.dlon = Proj4js.common.adjust_lon(this.lon1 - this.longc);
            this.gama = Math.atan(Math.sin(this.bl * this.dlon) / this.g);
            this.alpha = Proj4js.common.asinz(this.d * Math.sin(this.gama));
            if (Math.abs(this.lat1 - this.lat2) <= Proj4js.common.EPSLN) {
                Proj4js.reportError("omercInitDataError")
            } else {
                this.con = Math.abs(this.lat1)
            }
            if ((this.con <= Proj4js.common.EPSLN) || (Math.abs(this.con - HALF_PI) <= Proj4js.common.EPSLN)) {
                Proj4js.reportError("omercInitDataError")
            } else {
                if (Math.abs(Math.abs(this.lat0) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN) {
                    Proj4js.reportError("omercInitDataError")
                }
            }
            this.singam = Math.sin(this.gam);
            this.cosgam = Math.cos(this.gam);
            this.sinaz = Math.sin(this.alpha);
            this.cosaz = Math.cos(this.alpha);
            if (this.lat0 >= 0) {
                this.u = (this.al / this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz)
            } else {
                this.u = -(this.al / this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz)
            }
        }
    },
    forward: function(E) {
        var o;
        var e, M;
        var K;
        var J, z, d;
        var g, F, H;
        var D, r, I;
        var B, G;
        var C;
        var a;
        var h;
        var f = E.x;
        var m = E.y;
        e = Math.sin(m);
        a = Proj4js.common.adjust_lon(f - this.longc);
        I = Math.sin(this.bl * a);
        if (Math.abs(Math.abs(m) - Proj4js.common.HALF_PI) > Proj4js.common.EPSLN) {
            h = Proj4js.common.tsfnz(this.e, m, e);
            D = this.el / (Math.pow(h, this.bl));
            C = 0.5 * (D - 1 / D);
            z = 0.5 * (D + 1 / D);
            B = (C * this.singam - I * this.cosgam) / z;
            g = Math.cos(this.bl * a);
            if (Math.abs(g) < 1e-7) {
                r = this.al * this.bl * a
            } else {
                r = this.al * Math.atan((C * this.cosgam + I * this.singam) / g) / this.bl;
                if (g < 0) {
                    r = r + Proj4js.common.PI * this.al / this.bl
                }
            }
        } else {
            if (m >= 0) {
                B = this.singam
            } else {
                B = -this.singam
            }
            r = this.al * m / this.bl
        }
        if (Math.abs(Math.abs(B) - 1) <= Proj4js.common.EPSLN) {
            Proj4js.reportError("omercFwdInfinity")
        }
        G = 0.5 * this.al * Math.log((1 - B) / (1 + B)) / this.bl;
        r = r - this.u;
        var v = this.x0 + G * this.cosaz + r * this.sinaz;
        var u = this.y0 + r * this.cosaz - G * this.sinaz;
        E.x = v;
        E.y = u;
        return E
    },
    inverse: function(B) {
        var M;
        var m;
        var f;
        var e, K;
        var J;
        var H, u, d;
        var g, C, F;
        var D, o, z, v, h;
        var G, r, I;
        var a;
        var E;
        B.x -= this.x0;
        B.y -= this.y0;
        E = 0;
        D = B.x * this.cosaz - B.y * this.sinaz;
        o = B.y * this.cosaz + B.x * this.sinaz;
        o = o + this.u;
        z = Math.exp(-this.bl * D / this.al);
        v = 0.5 * (z - 1 / z);
        u = 0.5 * (z + 1 / z);
        G = Math.sin(this.bl * o / this.al);
        r = (G * this.cosgam + v * this.singam) / u;
        if (Math.abs(Math.abs(r) - 1) <= Proj4js.common.EPSLN) {
            lon = this.longc;
            if (r >= 0) {
                lat = Proj4js.common.HALF_PI
            } else {
                lat = -Proj4js.common.HALF_PI
            }
        } else {
            g = 1 / this.bl;
            h = Math.pow((this.el / Math.sqrt((1 + r) / (1 - r))), g);
            lat = Proj4js.common.phi2z(this.e, h);
            m = this.longc - Math.atan2((v * this.cosgam - G * this.singam), g) / this.bl;
            lon = Proj4js.common.adjust_lon(m)
        }
        B.x = lon;
        B.y = lat;
        return B
    }
};
Proj4js.Proj.lcc = {
    init: function() {
        if (!this.lat2) {
            this.lat2 = this.lat0
        }
        if (!this.k0) {
            this.k0 = 1
        }
        if (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN) {
            Proj4js.reportError("lcc:init: Equal Latitudes");
            return
        }
        var q = this.b / this.a;
        this.e = Math.sqrt(1 - q * q);
        var m = Math.sin(this.lat1);
        var g = Math.cos(this.lat1);
        var p = Proj4js.common.msfnz(this.e, m, g);
        var d = Proj4js.common.tsfnz(this.e, this.lat1, m);
        var h = Math.sin(this.lat2);
        var f = Math.cos(this.lat2);
        var o = Proj4js.common.msfnz(this.e, h, f);
        var a = Proj4js.common.tsfnz(this.e, this.lat2, h);
        var e = Proj4js.common.tsfnz(this.e, this.lat0, Math.sin(this.lat0));
        if (Math.abs(this.lat1 - this.lat2) > Proj4js.common.EPSLN) {
            this.ns = Math.log(p / o) / Math.log(d / a)
        } else {
            this.ns = m
        }
        this.f0 = p / (this.ns * Math.pow(d, this.ns));
        this.rh = this.a * this.f0 * Math.pow(e, this.ns);
        if (!this.title) {
            this.title = "Lambert Conformal Conic"
        }
    },
    forward: function(g) {
        var h = g.x;
        var f = g.y;
        if (f <= 90 && f >= -90 && h <= 180 && h >= -180) {} else {
            Proj4js.reportError("lcc:forward: llInputOutOfRange: " + h + " : " + f);
            return null 
        }
        var a = Math.abs(Math.abs(f) - Proj4js.common.HALF_PI);
        var e, m;
        if (a > Proj4js.common.EPSLN) {
            e = Proj4js.common.tsfnz(this.e, f, Math.sin(f));
            m = this.a * this.f0 * Math.pow(e, this.ns)
        } else {
            a = f * this.ns;
            if (a <= 0) {
                Proj4js.reportError("lcc:forward: No Projection");
                return null 
            }
            m = 0
        }
        var d = this.ns * Proj4js.common.adjust_lon(h - this.long0);
        g.x = this.k0 * (m * Math.sin(d)) + this.x0;
        g.y = this.k0 * (this.rh - m * Math.cos(d)) + this.y0;
        return g
    },
    inverse: function(g) {
        var m, a, e;
        var f, h;
        x = (g.x - this.x0) / this.k0;
        y = (this.rh - (g.y - this.y0) / this.k0);
        if (this.ns > 0) {
            m = Math.sqrt(x * x + y * y);
            a = 1
        } else {
            m = -Math.sqrt(x * x + y * y);
            a = -1
        }
        var d = 0;
        if (m != 0) {
            d = Math.atan2((a * x), (a * y))
        }
        if ((m != 0) || (this.ns > 0)) {
            a = 1 / this.ns;
            e = Math.pow((m / (this.a * this.f0)), a);
            f = Proj4js.common.phi2z(this.e, e);
            if (f == -9999) {
                return null 
            }
        } else {
            f = -Proj4js.common.HALF_PI
        }
        h = Proj4js.common.adjust_lon(d / this.ns + this.long0);
        g.x = h;
        g.y = f;
        return g
    }
};
Proj4js.Proj.laea = {
    S_POLE: 1,
    N_POLE: 2,
    EQUIT: 3,
    OBLIQ: 4,
    init: function() {
        var a = Math.abs(this.lat0);
        if (Math.abs(a - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN) {
            this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE
        } else {
            if (Math.abs(a) < Proj4js.common.EPSLN) {
                this.mode = this.EQUIT
            } else {
                this.mode = this.OBLIQ
            }
        }
        if (this.es > 0) {
            var d;
            this.qp = Proj4js.common.qsfnz(this.e, 1);
            this.mmf = 0.5 / (1 - this.es);
            this.apa = this.authset(this.es);
            switch (this.mode) {
            case this.N_POLE:
            case this.S_POLE:
                this.dd = 1;
                break;
            case this.EQUIT:
                this.rq = Math.sqrt(0.5 * this.qp);
                this.dd = 1 / this.rq;
                this.xmf = 1;
                this.ymf = 0.5 * this.qp;
                break;
            case this.OBLIQ:
                this.rq = Math.sqrt(0.5 * this.qp);
                d = Math.sin(this.lat0);
                this.sinb1 = Proj4js.common.qsfnz(this.e, d) / this.qp;
                this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);
                this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * d * d) * this.rq * this.cosb1);
                this.ymf = (this.xmf = this.rq) / this.dd;
                this.xmf *= this.dd;
                break
            }
        } else {
            if (this.mode == this.OBLIQ) {
                this.sinph0 = Math.sin(this.lat0);
                this.cosph0 = Math.cos(this.lat0)
            }
        }
    },
    forward: function(f) {
        var z, u;
        var B = f.x;
        var o = f.y;
        B = Proj4js.common.adjust_lon(B - this.long0);
        if (this.sphere) {
            var v, h, d;
            d = Math.sin(o);
            h = Math.cos(o);
            v = Math.cos(B);
            switch (this.mode) {
            case this.EQUIT:
                u = (this.mode == this.EQUIT) ? 1 + h * v : 1 + this.sinph0 * d + this.cosph0 * h * v;
                if (u <= Proj4js.common.EPSLN) {
                    Proj4js.reportError("laea:fwd:y less than eps");
                    return null 
                }
                u = Math.sqrt(2 / u);
                z = u * h * Math.sin(B);
                u *= (this.mode == this.EQUIT) ? d : this.cosph0 * d - this.sinph0 * h * v;
                break;
            case this.N_POLE:
                v = -v;
            case this.S_POLE:
                if (Math.abs(o + this.phi0) < Proj4js.common.EPSLN) {
                    Proj4js.reportError("laea:fwd:phi < eps");
                    return null 
                }
                u = Proj4js.common.FORTPI - o * 0.5;
                u = 2 * ((this.mode == this.S_POLE) ? Math.cos(u) : Math.sin(u));
                z = u * Math.sin(B);
                u *= v;
                break
            }
        } else {
            var v, m, d, e, g = 0, a = 0, r = 0;
            v = Math.cos(B);
            m = Math.sin(B);
            d = Math.sin(o);
            e = Proj4js.common.qsfnz(this.e, d);
            if (this.mode == this.OBLIQ || this.mode == this.EQUIT) {
                g = e / this.qp;
                a = Math.sqrt(1 - g * g)
            }
            switch (this.mode) {
            case this.OBLIQ:
                r = 1 + this.sinb1 * g + this.cosb1 * a * v;
                break;
            case this.EQUIT:
                r = 1 + a * v;
                break;
            case this.N_POLE:
                r = Proj4js.common.HALF_PI + o;
                e = this.qp - e;
                break;
            case this.S_POLE:
                r = o - Proj4js.common.HALF_PI;
                e = this.qp + e;
                break
            }
            if (Math.abs(r) < Proj4js.common.EPSLN) {
                Proj4js.reportError("laea:fwd:b < eps");
                return null 
            }
            switch (this.mode) {
            case this.OBLIQ:
            case this.EQUIT:
                r = Math.sqrt(2 / r);
                if (this.mode == this.OBLIQ) {
                    u = this.ymf * r * (this.cosb1 * g - this.sinb1 * a * v)
                } else {
                    u = (r = Math.sqrt(2 / (1 + a * v))) * g * this.ymf
                }
                z = this.xmf * r * a * m;
                break;
            case this.N_POLE:
            case this.S_POLE:
                if (e >= 0) {
                    z = (r = Math.sqrt(e)) * m;
                    u = v * ((this.mode == this.S_POLE) ? r : -r)
                } else {
                    z = u = 0
                }
                break
            }
        }
        f.x = this.a * z + this.x0;
        f.y = this.a * u + this.y0;
        return f
    },
    inverse: function(d) {
        d.x -= this.x0;
        d.y -= this.y0;
        var o = d.x / this.a;
        var h = d.y / this.a;
        if (this.sphere) {
            var z = 0, u, e = 0;
            u = Math.sqrt(o * o + h * h);
            var g = u * 0.5;
            if (g > 1) {
                Proj4js.reportError("laea:Inv:DataError");
                return null 
            }
            g = 2 * Math.asin(g);
            if (this.mode == this.OBLIQ || this.mode == this.EQUIT) {
                e = Math.sin(g);
                z = Math.cos(g)
            }
            switch (this.mode) {
            case this.EQUIT:
                g = (Math.abs(u) <= Proj4js.common.EPSLN) ? 0 : Math.asin(h * e / u);
                o *= e;
                h = z * u;
                break;
            case this.OBLIQ:
                g = (Math.abs(u) <= Proj4js.common.EPSLN) ? this.phi0 : Math.asin(z * sinph0 + h * e * cosph0 / u);
                o *= e * cosph0;
                h = (z - Math.sin(g) * sinph0) * u;
                break;
            case this.N_POLE:
                h = -h;
                g = Proj4js.common.HALF_PI - g;
                break;
            case this.S_POLE:
                g -= Proj4js.common.HALF_PI;
                break
            }
            lam = (h == 0 && (this.mode == this.EQUIT || this.mode == this.OBLIQ)) ? 0 : Math.atan2(o, h)
        } else {
            var r, f, a, m, v = 0;
            switch (this.mode) {
            case this.EQUIT:
            case this.OBLIQ:
                o /= this.dd;
                h *= this.dd;
                m = Math.sqrt(o * o + h * h);
                if (m < Proj4js.common.EPSLN) {
                    d.x = 0;
                    d.y = this.phi0;
                    return d
                }
                f = 2 * Math.asin(0.5 * m / this.rq);
                r = Math.cos(f);
                o *= (f = Math.sin(f));
                if (this.mode == this.OBLIQ) {
                    v = r * this.sinb1 + h * f * this.cosb1 / m;
                    a = this.qp * v;
                    h = m * this.cosb1 * r - h * this.sinb1 * f
                } else {
                    v = h * f / m;
                    a = this.qp * v;
                    h = m * r
                }
                break;
            case this.N_POLE:
                h = -h;
            case this.S_POLE:
                a = (o * o + h * h);
                if (!a) {
                    d.x = 0;
                    d.y = this.phi0;
                    return d
                }
                v = 1 - a / this.qp;
                if (this.mode == this.S_POLE) {
                    v = -v
                }
                break
            }
            lam = Math.atan2(o, h);
            g = this.authlat(Math.asin(v), this.apa)
        }
        d.x = Proj4js.common.adjust_lon(this.long0 + lam);
        d.y = g;
        return d
    },
    P00: 0.3333333333333333,
    P01: 0.17222222222222222,
    P02: 0.10257936507936508,
    P10: 0.06388888888888888,
    P11: 0.0664021164021164,
    P20: 0.016415012942191543,
    authset: function(d) {
        var a;
        var e = new Array();
        e[0] = d * this.P00;
        a = d * d;
        e[0] += a * this.P01;
        e[1] = a * this.P10;
        a *= d;
        e[0] += a * this.P02;
        e[1] += a * this.P11;
        e[2] = a * this.P20;
        return e
    },
    authlat: function(d, e) {
        var a = d + d;
        return ( d + e[0] * Math.sin(a) + e[1] * Math.sin(a + a) + e[2] * Math.sin(a + a + a)) 
    }
};
Proj4js.Proj.aeqd = {
    init: function() {
        this.sin_p12 = Math.sin(this.lat0);
        this.cos_p12 = Math.cos(this.lat0)
    },
    forward: function(e) {
        var d = e.x;
        var q = e.y;
        var h;
        var a = Math.sin(e.y);
        var f = Math.cos(e.y);
        var u = Proj4js.common.adjust_lon(d - this.long0);
        var r = Math.cos(u);
        var m = this.sin_p12 * a + this.cos_p12 * f * r;
        if (Math.abs(Math.abs(m) - 1) < Proj4js.common.EPSLN) {
            h = 1;
            if (m < 0) {
                Proj4js.reportError("aeqd:Fwd:PointError");
                return
            }
        } else {
            var o = Math.acos(m);
            h = o / Math.sin(o)
        }
        e.x = this.x0 + this.a * h * f * Math.sin(u);
        e.y = this.y0 + this.a * h * (this.cos_p12 * a - this.sin_p12 * f * r);
        return e
    },
    inverse: function(d) {
        d.x -= this.x0;
        d.y -= this.y0;
        var m = Math.sqrt(d.x * d.x + d.y * d.y);
        if (m > (2 * Proj4js.common.HALF_PI * this.a)) {
            Proj4js.reportError("aeqdInvDataError");
            return
        }
        var g = m / this.a;
        var f = Math.sin(g);
        var q = Math.cos(g);
        var a = this.long0;
        var h;
        if (Math.abs(m) <= Proj4js.common.EPSLN) {
            h = this.lat0
        } else {
            h = Proj4js.common.asinz(q * this.sin_p12 + (d.y * f * this.cos_p12) / m);
            var e = Math.abs(this.lat0) - Proj4js.common.HALF_PI;
            if (Math.abs(e) <= Proj4js.common.EPSLN) {
                if (lat0 >= 0) {
                    a = Proj4js.common.adjust_lon(this.long0 + Math.atan2(d.x, -d.y))
                } else {
                    a = Proj4js.common.adjust_lon(this.long0 - Math.atan2(-d.x, d.y))
                }
            } else {
                e = q - this.sin_p12 * Math.sin(h);
                if ((Math.abs(e) < Proj4js.common.EPSLN) && (Math.abs(d.x) < Proj4js.common.EPSLN)) {} else {
                    var o = Math.atan2((d.x * f * this.cos_p12), (e * m));
                    a = Proj4js.common.adjust_lon(this.long0 + Math.atan2((d.x * f * this.cos_p12), (e * m)))
                }
            }
        }
        d.x = a;
        d.y = h;
        return d
    }
};
Proj4js.Proj.moll = {
    init: function() {},
    forward: function(e) {
        var a = e.x;
        var o = e.y;
        var h = Proj4js.common.adjust_lon(a - this.long0);
        var g = o;
        var f = Proj4js.common.PI * Math.sin(o);
        for (var m = 0; true; m++) {
            var d = -(g + Math.sin(g) - f) / (1 + Math.cos(g));
            g += d;
            if (Math.abs(d) < Proj4js.common.EPSLN) {
                break
            }
            if (m >= 50) {
                Proj4js.reportError("moll:Fwd:IterationError")
            }
        }
        g /= 2;
        if (Proj4js.common.PI / 2 - Math.abs(o) < Proj4js.common.EPSLN) {
            h = 0
        }
        var r = 0.900316316158 * this.a * h * Math.cos(g) + this.x0;
        var q = 1.4142135623731 * this.a * Math.sin(g) + this.y0;
        e.x = r;
        e.y = q;
        return e
    },
    inverse: function(f) {
        var d;
        var a;
        f.x -= this.x0;
        var a = f.y / (1.4142135623731 * this.a);
        if (Math.abs(a) > 0.999999999999) {
            a = 0.999999999999
        }
        var d = Math.asin(a);
        var g = Proj4js.common.adjust_lon(this.long0 + (f.x / (0.900316316158 * this.a * Math.cos(d))));
        if (g < (-Proj4js.common.PI)) {
            g = -Proj4js.common.PI
        }
        if (g > Proj4js.common.PI) {
            g = Proj4js.common.PI
        }
        a = (2 * d + Math.sin(2 * d)) / Proj4js.common.PI;
        if (Math.abs(a) > 1) {
            a = 1
        }
        var e = Math.asin(a);
        f.x = g;
        f.y = e;
        return f
    }
};
(function(d, e, a, f) {
    giscloud.ui.Search = function(m, C, o) {
        var v = this
          , M = {
            giscloud: true,
            google: false,
            here: false,
            buttons: true,
            selectFeature: true,
            showFeatureInfo: true,
            clearButton: true,
            mobile: d.fno && d.fno.mobilebrowser
        };
        e.extend(M, o);
        function K() {
            if (v._search_options.find(".gc-sr-giscloud").hasClass("active")) {
                if (M.giscloud) {
                    v.gc_input.show().first().focus()
                }
                if (M.google || M.here) {
                    v.go_input.hide()
                }
            } else {
                if (M.google || M.here) {
                    v.go_input.show().focus()
                }
                if (M.giscloud) {
                    v.gc_input.hide()
                }
            }
        }
        function h() {
            var R = m.layers, Q;
            if (!R) {
                return []
            }
            Q = ["tile", "buffer", "raster", "wms", "wmts", "folder", "feature"];
            return e.map(R, function(S) {
                return (S && S.sourceType && e.inArray(S.sourceType, Q) === -1) ? S : null 
            })
        }
        function g(R, Q) {
            return giscloud.ui.alert.color("red").show(R, Q)
        }
        function u(R, Q) {
            return giscloud.ui.alert.color("green").show(R, Q)
        }
        function N(Q) {
            return e.map(Q, function(Z) {
                var S = fn.getMap().epsg * 1 ? fn.getMap().epsg * 1 : 900913;
                if (Z.__here) {
                    var R;
                    if (Z.position) {
                        var T = new giscloud.LonLat(Z.position[1],Z.position[0]);
                        T.transform(4326, S);
                        R = new giscloud.Bounds(T.lon,T.lat,T.lon,T.lat)
                    } else {
                        if (Z.bbox) {
                            var W = new giscloud.LonLat(Z.bbox[0],Z.bbox[1])
                              , Y = new giscloud.LonLat(Z.bbox[2],Z.bbox[3]);
                            W.transform(4326, S);
                            Y.transform(4326, S);
                            R = new giscloud.Bounds(W.lon,W.lat,Y.lon,Y.lat)
                        } else {
                            return
                        }
                    }
                    var U, V = Z.title;
                    if (Z.vicinity) {
                        U = Z.vicinity.replace(/<br\/>/gi, ", ")
                    }
                    return {
                        result: V,
                        desc: U,
                        bounds: R,
                        __here: true
                    }
                }
                var aa = new giscloud.Feature(Z)
                  , V = q(Z.__layer_id, aa.data, Z);
                return {
                    id: aa.id,
                    result: V,
                    data: aa.data,
                    meta: Z.__meta,
                    bounds: aa.bounds,
                    layerId: aa.layerId
                }
            })
        }
        function F(V, W) {
            var U, S, R, Q, T = [];
            for (U = 0,
            Q = W.length; U < Q; U++) {
                for (S = 0,
                R = Object.keys(V).length; S < R; S++) {
                    if (V[S].layerId === W[U]) {
                        T.push(V[S])
                    }
                }
                if (T.length > 0) {
                    return T
                }
            }
        }
        function G(T, Q) {
            var S, U = Object.keys(Q), R = U.indexOf("orderBy");
            if (R === -1) {
                R = U.indexOf("byOrder")
            }
            if (R !== -1) {
                U.splice(R, 1)
            }
            S = F(T, U);
            u(a.__("Results") + ": " + S.length, 2000);
            O(S, "id")
        }
        function J(S) {
            v.spinner.hide();
            var T, R = m.options.RESULT_FIELDS, Q = R ? JSON.parse(R) : null , V = Q ? (Q.orderBy || Q.byOrder) : null , U = Q != null  ? Object.keys(Q).length - 1 : 0;
            if (!S || !S.total) {
                g("No results.", 2000);
                e(".gc-search-box").remove()
            } else {
                T = N(S.data);
                if (T.length > 1 && V === "true" && U > 1) {
                    G(T, Q)
                } else {
                    u(a.__("Results") + ": " + S.total, 2000);
                    O(T, "id")
                }
            }
        }
        function p(S) {
            var Q = S.at
              , R = fn.getMap().epsg * 1 ? fn.getMap().epsg * 1 : 900913;
            Q.transform(R, 4326);
            return e.getJSON(location.protocol + "//places.demo.api.here.com/places/v1/autosuggest", {
                app_code: fno.here_search_app_code,
                app_id: fno.here_search_app_id,
                at: Q.lat + "," + Q.lon,
                pretty: false,
                q: S.query
            })
        }
        function z() {
            var R = v.go_input.val();
            if (!(R.length > 1)) {
                H();
                return
            }
            var Q = m.bounds().center()
              , S = {
                query: R,
                at: Q
            };
            v.spinner.show();
            p(S).done(function(U) {
                var T = {
                    data: U.results,
                    total: U.results.length
                };
                e.each(T.data, function(W, V) {
                    V.__here = true
                });
                J(T)
            })
        }
        function E(S, R) {
            var Q = m.bounds().center()
              , T = {
                query: S,
                columns_meta: true,
                perpage: 100,
                fields: R,
                x: Q.lon,
                y: Q.lat,
                proj4: m.instance.projection,
                srid: m.instance.epsg
            };
            v.spinner.show();
            return e.when(giscloud.rest.get("search.json", T)).then(function(U) {
                return {
                    total: U.total,
                    data: U.data
                }
            }).done(J)
        }
        function P(Q, S) {
            var R = D();
            u(a.__("Searching") + "...");
            E(S, R).done(J).fail(function() {
                g(a.__("Error"))
            })
        }
        function r(R, U, T) {
            var S, Q = [{
                header: R,
                dataIndex: R,
                hidden: true
            }];
            for (S in U) {
                if (S === R) {
                    continue
                }
                if (U.hasOwnProperty(S)) {
                    if (S === "bounds" || S === "layerId" || S === "data" || S === "meta") {
                        continue
                    }
                    Q.push({
                        header: T && T[S] || S,
                        dataIndex: S,
                        hidden: false
                    })
                }
            }
            return Q
        }
        function H() {
            e(".gc-search-box").remove()
        }
        function O(V, R, W) {
            var Q, U, T;
            if (!e.isArray(V) || V.length === 0) {
                return
            }
            if (R == null ) {
                R = "__id"
            }
            Q = r(R, V[0], W);
            var S = false;
            V = e.map(V, function(Z) {
                var Y = e.extend({
                    __id: Z[R]
                }, Z);
                if (Z.__here) {
                    S = true
                }
                if (Y.bounds) {
                    e.extend(Y, {
                        __xmin: Y.bounds.left,
                        __xmax: Y.bounds.right,
                        __ymin: Y.bounds.bottom,
                        __ymax: Y.bounds.top
                    })
                }
                return Y
            });
            e(".gc-search-box").remove();
            U = e("<div/>").addClass("gc-search-box").appendTo(e("#" + C));
            T = e("<ul/>");
            e.each(V, function(ac, ad) {
                var ab, Z, aa, Y = ad.result, ae;
                if (!ad.layerId) {
                    ae = "";
                    if (!Y) {
                        Y = ""
                    }
                } else {
                    ab = m.layerById(ad.layerId);
                    ae = ab ? ab.name : ""
                }
                if (ad.__here) {
                    ae = ad.desc
                }
                Z = e("<li/>").data("resultData", ad).click(B).appendTo(T);
                if (Y.indexOf("___json") > -1 && d.GISCLOUD && d.GISCLOUD.FileFormats) {
                    Y = GISCLOUD.FileFormats.formatRecordValue(Y, ad.layerId, {
                        json: true,
                        lightbox: true
                    });
                    if (e.isArray(Y)) {
                        Y = Y.join(" ")
                    }
                }
                aa = e("<a/>").html(Y + " <span class='comment small'>" + giscloud.xssSafe(ae) + "</span>").appendTo(Z)
            });
            T.appendTo(U);
            v.__open = true
        }
        function B(S) {
            var V = e(S.currentTarget || S.target)
              , Q = V.is("li") ? V : V.closest("li")
              , W = Q.data("resultData")
              , U = W && new giscloud.Bounds(W.__xmin,W.__ymin,W.__xmax,W.__ymax);
            if (U) {
                a.zoomToBounds(m, U)
            }
            if (m.markers.length != 0) {
                for (var T = 0; T < m.markers.length; T++) {
                    m.markers[T].visible(false)
                }
            }
            if (W.__here) {
                var R = new giscloud.FlagMarker();
                R.position(U.center()).content(W.result + (W.desc ? ", " + W.desc : ""));
                m.addMarker(R)
            }
            if (M.showFeatureInfo && W.data) {
                if (d.gcapp && gcapp.selo && gcapp.selo.showRecordInfo) {
                    W.count = 1;
                    W.format = true;
                    gcapp.selo.showRecordInfo(W)
                } else {
                    a.viewerShowFeatureInfo(m, W.layerId, W.__id, W.bounds.center(), M.renderFunction)
                }
            }
            if (M.selectFeature) {
                m.selection.clear();
                m.selectFeature(W.layerId, W.__id, true)
            }
        }
        function q(W, S, aa) {
            var V, Q, Z, Y, T, R, U = m.options.RESULT_FIELDS;
            V = U ? e.parseJSON(U) : null ;
            if (!V) {
                return aa.__match
            }
            Q = V[W];
            Z = [];
            for (T = 0,
            R = Q.length; T < R; T++) {
                Y = Q[T];
                Z.push(S[Y])
            }
            return Z.join(" ")
        }
        function D(S) {
            var Q, R = m.options.SEARCH_FIELDS, T = R ? e.parseJSON(R) : null ;
            if (S) {
                Q = e.map(S, function(V) {
                    var U = V.lid
                      , W = "*";
                    if (T) {
                        if (T[U]) {
                            W = T[U].join(",");
                            return U + "~" + W
                        }
                    } else {
                        return U + "~" + W
                    }
                })
            } else {
                if (T) {
                    Q = e.map(T, function(V, U) {
                        return U + "~" + V.join(",")
                    })
                } else {
                    Q = e.map(m.layers, function(U) {
                        if (e.inArray(U.sourceType, ["pg", "file"]) > -1) {
                            return U.id + "~*"
                        }
                    })
                }
            }
            return Q.join(";")
        }
        this.initialize = function I() {
            var T, S, U, Q, R = e("#" + C);
            if (!R || R.length === 0) {
                return
            }
            R.addClass("gc-toolbar-panel gc-search-panel");
            v.spinner = e("<div/>").addClass("search-spinner").hide().appendTo(R);
            e("<i/>").addClass("fa fa-spinner fa-spin").appendTo(v.spinner);
            if (M.giscloud) {
                if (d.user && d.user.options && user.options.SEARCH_DEFAULT_VALUE) {
                    T = user.options.SEARCH_DEFAULT_VALUE
                } else {
                    T = a.__("Search") + "..."
                }
                v.gc_input = e("<input/>").addClass("quicksearch").attr("type", "text").attr("placeholder", T).appendTo(R);
                v.gc_input.keyup(function(W) {
                    var Y;
                    if (W.keyCode == 13) {
                        Y = h();
                        if (Y.length > 0) {
                            e(giscloud.ui.search).triggerHandler("start", [e(W.target).val()])
                        } else {
                            giscloud.ui.redAlert("No layers for search!", 2000)
                        }
                    }
                })
            }
            if (M.google) {
                v.go_input = e("<input/>").addClass("").attr("id", "gc_google_address_input").attr("type", "text").attr("placeholder", a.__("Enter a location")).hide().appendTo(R)
            }
            if (M.here) {
                v.go_input = e("<input/>").addClass("").attr("id", "gc_here_address_input").attr("type", "text").attr("placeholder", a.__("Enter a location")).hide().appendTo(R);
                var V = null ;
                v.go_input.keyup(function(W) {
                    var Y;
                    if (V) {
                        clearInterval(V)
                    }
                    V = z.delay(700)
                })
            }
            S = '<div class="search-options gc-btn-group" >';
            if (M.giscloud) {
                Q = M.mobile ? "GC" : "GIS Cloud";
                S += '    <button type="button" class="gc-sr-giscloud gc-btn gc-btn-xs gc-btn-default active">' + Q + "</button>"
            }
            if (M.google) {
                Q = M.mobile ? "GM" : "Google Maps";
                S += '    <button type="button" class="gc-sr-google gc-btn gc-btn-xs gc-btn-default">' + Q + "</button>";
                S += "</div>"
            }
            if (M.here) {
                Q = M.mobile ? "GM" : "Places";
                S += '    <button type="button" class="gc-sr-here gc-btn gc-btn-xs gc-btn-default">' + Q + "</button>";
                S += "</div>"
            }
            v._search_options = S = e(S).appendTo(R);
            v._search_options.find(".gc-btn").click(function(W) {
                if (!e(W.currentTarget).hasClass("active")) {
                    H()
                }
                S.find(".gc-btn").removeClass("active");
                e(W.target).addClass("active");
                if (v._search_options.find(".gc-sr-giscloud").hasClass("active") && v.gc_input.val().length > 0) {
                    e(giscloud.ui.search).triggerHandler("start", [v.gc_input.val()])
                }
                if (v._search_options.find(".gc-sr-here").hasClass("active")) {
                    if (v.gc_input) {
                        var Y = v.gc_input.val();
                        if (Y.length > 1) {
                            v.go_input.val(Y);
                            z()
                        }
                    }
                }
                K()
            });
            v.clear_bt = e('<div><i class="fa fa-times" ></i></div>').attr("title", a.__("Clear")).appendTo(R).addClass("gc-quicksearch-clear-bt").click(function(W) {
                W && W.preventDefault && W.preventDefault();
                if (M.google || M.here) {
                    v.go_input.val(null )
                }
                H();
                if (M.giscloud) {
                    e(".quicksearch").val(null );
                    e(".gc-search-box").remove()
                }
            });
            if (M.google || M.here || (d.user && d.user.options && (user.options.MODULE_GOOGLE_SEARCH * 1) === 1)) {
                if (M.google) {
                    U = new giscloud.ui.search.Google({
                        viewer: m
                    })
                }
                if (!M.giscloud) {
                    S.find(".gc-sr-google,.gc-sr-here").addClass("active");
                    K()
                }
            }
            e(giscloud.ui.search).on("start", P);
            e(document).mouseup(function(Y) {
                var W = e(".gc-search-box");
                if (d.gcapp && gcapp.gcsearch && v.__open && !W.is(Y.target) && W.has(Y.target).length === 0 && (user.options.SEARCH_RESULTS_CLOSE_ON_CLICK == null  || user.options.SEARCH_RESULTS_CLOSE_ON_CLICK * 1)) {
                    gcapp.gcsearch.clearSearchResult()
                }
            })
        }
        ;
        return e(this.initialize())
    }
    ;
    giscloud.ui.Search.prototype = {};
    giscloud.ui.search = {
        overrideDefaultBehaviour: function() {
            if (gcapp && gcapp.gcsearch) {
                gcapp.gcsearch.addEvent("start", function(g) {
                    g.preventDefault = true;
                    e(giscloud.ui.search).triggerHandler("search", [g.value])
                });
                gcapp.gcsearch.addEvent("searchchange", function(g) {
                    g.preventDefault = true;
                    if (g.keyCode == 13) {
                        e(giscloud.ui.search).triggerHandler("start", [g.value])
                    }
                });
                gcapp.gcsearch.addEvent("searchclick", function(g) {
                    g.preventDefault = true;
                    e(giscloud.ui.search).triggerHandler("resultClick", [g.data])
                })
            }
        }
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(d, e, a, f) {
    giscloud.ui.search.Google = function(g) {
        var h = this
          , m = (g && g.viewer) || giscloud.ui.map;
        if (!m) {
            return
        }
        h.init = function() {
            var o = this;
            giscloud.__googleMapsApiLoadedGeocoder = function() {
                if (!d.google) {
                    console.log("Google map API is not loaded.")
                }
                var p = setInterval(function() {
                    clearInterval(p);
                    var B = document.getElementById("gc_google_address_input"), z = {}, r, q, v;
                    for (r in m.layers) {
                        q = m.layers[r];
                        if (e.inArray(q.source, ["gmaps"]) >= 0) {
                            v = q.instance._google;
                            break
                        }
                    }
                    B.value = "";
                    var u = o.autocomplete = new google.maps.places.Autocomplete(B,z);
                    google.maps.event.addListener(u, "place_changed", o.onPlaceChanged.bind(o))
                }, 500)
            }
            ;
            if (!d.google) {} else {
                giscloud.__googleMapsApiLoadedGeocoder()
            }
            return o
        }
        ;
        h.onPlaceChanged = function() {
            if (m.markers.length != 0) {
                for (var v = 0; v < m.markers.length; v++) {
                    m.markers[v].visible(false)
                }
            }
            var r = this.autocomplete.getPlace()
              , q = new giscloud.FlagMarker();
            if (!r.geometry || !r.geometry.location) {
                return
            }
            var o = r.geometry.location.lng()
              , B = r.geometry.location.lat()
              , u = new Proj4js.Proj("WGS84")
              , z = new Proj4js.Point(o + "," + B);
            Proj4js.transform(u, m.projection, z);
            a.zoomToBounds(m, new giscloud.Bounds(z.x,z.y,z.x,z.y));
            q.position(new giscloud.LonLat(z.x,z.y)).content(r.formatted_address);
            m.addMarker(q)
        }
        ;
        return h.init()
    }
}(window, giscloud.exposeJQuery(), giscloud.common()));
(function(O) {
    var M, e, u, v, z, H, f, m, T, W, J, F, p, U, P, G, C, B, E, a, Y, r, q, I = 0;
    function o() {
        var aa = O("#mapPanel");
        if (J.loading.state() !== "pending" || J.container()) {
            return O(J.container())
        }
        return O("#mapPanel")
    }
    function Z() {
        if (M) {
            return
        }
        if (window.fno && window.fno.mobilebrowser) {
            return
        }
        p && p.refresh && p.refresh();
        M = setTimeout(function aa() {
            M = null 
        }, 750)
    }
    function N() {
        var ad = o(), ac, ab, aa;
        if (ad && ad.length > 0) {
            ac = o().offset();
            ab = u.offset();
            aa = ab.top - ac.top;
            if (aa > 0) {
                J.height(aa)
            }
        }
    }
    function g() {
        Z();
        if (U !== 0) {
            giscloud.ui.datagridDrawer.size(F.height() * U, true)
        }
        v.css("top", F.height() - B);
        if (!r) {
            N()
        }
    }
    function h() {
        switch (P) {
        case 0:
            S(F.height() / 3);
            P = 1;
            break;
        case 1:
            S(F.height() / 2);
            P = 2;
            break;
        case 2:
            S(2 * F.height() / 3);
            P = 3;
            break
        }
        v.css("top", F.height() - B)
    }
    function V() {
        switch (P) {
        case 1:
            S(0);
            P = 0;
            break;
        case 2:
            S(F.height() / 3);
            P = 1;
            break;
        case 3:
            S(F.height() / 2);
            P = 2;
            break
        }
        v.css("top", F.height() - B)
    }
    function R(aa) {
        if (aa && O(aa.target).hasClass("drag-handle") || O.now() - I < 300) {
            return
        }
        if (B > 0) {
            giscloud.ui.datagridDrawer.collapse()
        } else {
            giscloud.ui.datagridDrawer.expand()
        }
    }
    function Q(aa, ab) {
        a = Y = ab.offset.top;
        E = B
    }
    function K() {
        I = O.now()
    }
    function d(aa, ac) {
        var ab = E + a - ac.offset.top;
        if (D(ab, F.height())) {
            giscloud.ui.datagridDrawer.size(ab);
            Y = ac.offset.top
        } else {
            ac.offset.top = Y;
            ac.position.top = Y
        }
    }
    function D(aa, ab) {
        return aa >= 0 && (ab - aa > 105)
    }
    function S(ad, ac) {
        var ae, ab, ag, af, aa;
        ab = Math.max(ad, 0);
        ag = F.height();
        if (!D(ab, ag)) {
            return
        }
        if (B === 0 && ab > 0) {
            u.removeClass("closed");
            W.addClass("glyphicon-arrow-down").removeClass("glyphicon-arrow-up")
        } else {
            if (B > 0 && ab === 0) {
                u.addClass("closed");
                W.addClass("glyphicon-arrow-up").removeClass("glyphicon-arrow-down")
            }
        }
        af = ab - B;
        B = ab;
        U = B / ag;
        u.height(B);
        if (!ac && !r) {
            N()
        }
        Z();
        q.trigger(O.Event("size.gc-datagrid-drawer", {
            datagridDrawer: giscloud.ui.datagridDrawer,
            size: B
        }))
    }
    giscloud.ui.datagridDrawer = {
        init: function(ab, aa) {
            if (e && ab !== true && ab !== "force") {
                return this
            }
            if (!aa) {
                aa = {}
            }
            u = O(".datagrid-drawer");
            v = O(".datagrid-pulltab");
            H = v.find(".drawer-controls");
            f = v.find(".drag-handle");
            m = v.find(".open-icon");
            T = v.find(".close-icon");
            W = v.find(".toggle-icon");
            z = aa.datagridPad || O("#datagrid_pad");
            F = O("body");
            p = aa.datagrid || (window.gcdatagrid) ? window.gcdatagrid : null ;
            J = aa.viewer || giscloud.ui.map;
            r = aa && aa.leaveMapAlone;
            q = O(u);
            if (u.length === 0 || v.length === 0) {
                return this
            }
            v.css("top", O("body").height()).draggable({
                axis: "y",
                handle: ".drag-handle",
                scroll: false,
                start: Q,
                drag: d,
                stop: K
            });
            if (window.fno && window.fno.mobilebrowser) {
                O(".datagrid-pulltab").addClass("mobile")
            } else {
                O(".datagrid-pulltab").addClass("non-mobile")
            }
            m.on("click", h);
            T.on("click", V);
            H.on("click", R);
            O(window).on("resize", g);
            B = 0;
            P = 0;
            C = Math.floor(Math.max((J.height() || 200) / 2, F.height() / 3));
            U = 0;
            G = false;
            J.initializing.done(function() {
                g()
            });
            e = true;
            if (localStorage.getItem("gc_datagrid_drawer") === "open") {
                this.toggle()
            }
            u.mouseenter(function() {
                u.css("z-index", 1000)
            });
            u.mouseleave(function() {
                if (O(".context-menu-list").length) {
                    return
                }
                u.css("z-index", 998)
            });
            return this
        },
        show: function() {
            if (e) {
                u.show();
                v.show();
                G = true;
                q.trigger(O.Event("show.gc-datagrid-drawer", {
                    datagridDrawer: giscloud.ui.datagridDrawer
                }))
            }
            return this
        },
        hide: function() {
            if (e) {
                u.hide();
                v.hide();
                G = false;
                q.trigger(O.Event("hide.gc-datagrid-drawer", {
                    datagridDrawer: giscloud.ui.datagridDrawer
                }))
            }
            return this
        },
        collapse: function() {
            if (e) {
                C = Math.max(B, 200);
                S(0);
                localStorage.removeItem("gc_datagrid_drawer");
                v.css("top", F.height() - B)
            }
        },
        expand: function() {
            if (e) {
                S(C);
                localStorage.setItem("gc_datagrid_drawer", "open");
                v.css("top", F.height() - B)
            }
        },
        toggle: function() {
            if (e) {
                R()
            }
            return this
        },
        size: function(ab, aa) {
            if (ab == null ) {
                return B
            }
            S(ab, aa);
            return this
        },
        on: function() {
            q.on.apply(q, Array.prototype.slice.apply(arguments));
            return this
        },
        off: function() {
            q.off.apply(q, Array.prototype.slice.apply(arguments));
            return this
        },
        bind: function() {
            return this.on.apply(this, Array.prototype.slice.apply(arguments))
        },
        unbind: function() {
            return this.off.apply(this, Array.prototype.slice.apply(arguments))
        }
    }
}(giscloud.exposeJQuery()));
window.jQuery = window.$ = giscloud.exposeJQuery();
/*! jquery.finger - v0.1.2 - 2014-10-01
* https://github.com/ngryman/jquery.finger
* Copyright (c) 2014 Nicolas Gryman; Licensed MIT */
(function(W, G) {
    function ab(a) {
        a.preventDefault(),
        W.event.remove(q, "click", ab)
    }
    function N(d, a) {
        return (K ? a.originalEvent.touches[0] : a)["page" + d.toUpperCase()]
    }
    function J(a, f, d) {
        var e = W.Event(f, aa);
        W.event.trigger(e, {
            originalEvent: a
        }, a.target),
        e.isDefaultPrevented() && (~f.indexOf("tap") && !K ? W.event.add(q, "click", ab) : a.preventDefault()),
        d && (W.event.remove(q, z + "." + H, R),
        W.event.remove(q, B + "." + H, Y))
    }
    function M(a) {
        var d = a.timeStamp || +new Date;
        E != d && (E = d,
        Q.x = aa.x = N("x", a),
        Q.y = aa.y = N("y", a),
        Q.time = d,
        Q.target = a.target,
        aa.orientation = null ,
        aa.end = !1,
        F = !1,
        P = !1,
        Z = setTimeout(function() {
            P = !0,
            J(a, "press")
        }, W.Finger.pressDuration),
        W.event.add(q, z + "." + H, R),
        W.event.add(q, B + "." + H, Y),
        C.preventDefault && (a.preventDefault(),
        W.event.add(q, "click", ab)))
    }
    function R(a) {
        if (aa.x = N("x", a),
        aa.y = N("y", a),
        aa.dx = aa.x - Q.x,
        aa.dy = aa.y - Q.y,
        aa.adx = Math.abs(aa.dx),
        aa.ady = Math.abs(aa.dy),
        F = aa.adx > C.motionThreshold || aa.ady > C.motionThreshold) {
            for (clearTimeout(Z),
            aa.orientation || (aa.adx > aa.ady ? (aa.orientation = "horizontal",
            aa.direction = aa.dx > 0 ? 1 : -1) : (aa.orientation = "vertical",
            aa.direction = aa.dy > 0 ? 1 : -1)); a.target && a.target !== Q.target; ) {
                a.target = a.target.parentNode
            }
            return a.target !== Q.target ? (a.target = Q.target,
            Y.call(this, W.Event(B + "." + H, a)),
            void 0) : (J(a, "drag"),
            void 0)
        }
    }
    function Y(g) {
        var f, d = g.timeStamp || +new Date, m = d - Q.time;
        if (clearTimeout(Z),
        F || P || g.target !== Q.target) {
            g.target = Q.target,
            C.flickDuration > m && J(g, "flick"),
            aa.end = !0,
            f = "drag"
        } else {
            var h = U === g.target && C.doubleTapInterval > d - I;
            f = h ? "doubletap" : "tap",
            U = h ? null  : Q.target,
            I = d
        }
        J(g, f, !0)
    }
    var F, P, E, Z, U, I, O = /chrome/i.exec(G), V = /android/i.exec(G), K = "ontouchstart" in window && !(O && !V), S = K ? "touchstart" : "mousedown", B = K ? "touchend touchcancel" : "mouseup mouseleave", z = K ? "touchmove" : "mousemove", H = "finger", q = W("html")[0], Q = {}, aa = {}, C = W.Finger = {
        pressDuration: 300,
        doubleTapInterval: 300,
        flickDuration: 150,
        motionThreshold: 5
    };
    W.event.add(q, S + "." + H, M)
})(jQuery, navigator.userAgent);
/*! DataTables 1.10.5
 * ©2008-2014 SpryMedia Ltd - datatables.net/license
 */
(function(d, a, e) {
    (function(f) {
        if (typeof define === "function" && define.amd) {
            define("datatables", ["jquery"], f)
        } else {
            if (typeof exports === "object") {
                module.exports = f(require("jquery"))
            } else {
                if (jQuery && !jQuery.fn.dataTable) {
                    f(jQuery)
                }
            }
        }
    }(function(bU) {
        var ac;
        var W;
        var Y;
        var bz;
        var aQ;
        var bm = {};
        var al = /[\r\n]/g;
        var a9 = /<.*?>/g;
        var aC = /^[\w\+\-]/;
        var bK = /[\w\+\-]$/;
        var aS = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")","g");
        var bV = /[',$£€¥%\u2009\u202F]/g;
        var bQ = function(b6) {
            return !b6 || b6 === true || b6 === "-" ? true : false
        }
        ;
        var T = function(b7) {
            var b6 = parseInt(b7, 10);
            return !isNaN(b6) && isFinite(b7) ? b6 : null 
        }
        ;
        var bS = function(b7, b6) {
            if (!bm[b6]) {
                bm[b6] = new RegExp(v(b6),"g")
            }
            return typeof b7 === "string" && b6 !== "." ? b7.replace(/\./g, "").replace(bm[b6], ".") : b7
        }
        ;
        var az = function(b9, b6, b8) {
            var b7 = typeof b9 === "string";
            if (b6 && b7) {
                b9 = bS(b9, b6)
            }
            if (b8 && b7) {
                b9 = b9.replace(bV, "")
            }
            return bQ(b9) || (!isNaN(parseFloat(b9)) && isFinite(b9))
        }
        ;
        var b1 = function(b6) {
            return bQ(b6) || typeof b6 === "string"
        }
        ;
        var q = function(b9, b6, b8) {
            if (bQ(b9)) {
                return true
            }
            var b7 = b1(b9);
            return !b7 ? null  : az(R(b9), b6, b8) ? true : null 
        }
        ;
        var aJ = function(b7, cb, ca) {
            var b8 = [];
            var b9 = 0
              , b6 = b7.length;
            if (ca !== e) {
                for (; b9 < b6; b9++) {
                    if (b7[b9] && b7[b9][cb]) {
                        b8.push(b7[b9][cb][ca])
                    }
                }
            } else {
                for (; b9 < b6; b9++) {
                    if (b7[b9]) {
                        b8.push(b7[b9][cb])
                    }
                }
            }
            return b8
        }
        ;
        var G = function(b8, b6, cc, cb) {
            var b9 = [];
            var ca = 0
              , b7 = b6.length;
            if (cb !== e) {
                for (; ca < b7; ca++) {
                    if (b8[b6[ca]][cc]) {
                        b9.push(b8[b6[ca]][cc][cb])
                    }
                }
            } else {
                for (; ca < b7; ca++) {
                    b9.push(b8[b6[ca]][cc])
                }
            }
            return b9
        }
        ;
        var bv = function(b6, ca) {
            var b8 = [];
            var b7;
            if (ca === e) {
                ca = 0;
                b7 = b6
            } else {
                b7 = ca;
                ca = b6
            }
            for (var b9 = ca; b9 < b7; b9++) {
                b8.push(b9)
            }
            return b8
        }
        ;
        var at = function(b7) {
            var b8 = [];
            for (var b9 = 0, b6 = b7.length; b9 < b6; b9++) {
                if (b7[b9]) {
                    b8.push(b7[b9])
                }
            }
            return b8
        }
        ;
        var R = function(b6) {
            return b6.replace(a9, "")
        }
        ;
        var aW = function(cc) {
            var b9 = [], cb, ca, b6 = cc.length, b8, b7 = 0;
            again: for (ca = 0; ca < b6; ca++) {
                cb = cc[ca];
                for (b8 = 0; b8 < b7; b8++) {
                    if (b9[b8] === cb) {
                        continue again
                    }
                }
                b9.push(cb);
                b7++
            }
            return b9
        }
        ;
        function ai(ca) {
            var b9 = "a aa ai ao as b fn i m o s ", b6, b8, b7 = {};
            bU.each(ca, function(cb, cc) {
                b6 = cb.match(/^([^A-Z]+?)([A-Z])/);
                if (b6 && b9.indexOf(b6[1] + " ") !== -1) {
                    b8 = cb.replace(b6[0], b6[2].toLowerCase());
                    b7[b8] = cb;
                    if (b6[1] === "o") {
                        ai(ca[cb])
                    }
                }
            });
            ca._hungarianMap = b7
        }
        function ap(b9, b6, b8) {
            if (!b9._hungarianMap) {
                ai(b9)
            }
            var b7;
            bU.each(b6, function(ca, cb) {
                b7 = b9._hungarianMap[ca];
                if (b7 !== e && (b8 || b6[b7] === e)) {
                    if (b7.charAt(0) === "o") {
                        if (!b6[b7]) {
                            b6[b7] = {}
                        }
                        bU.extend(true, b6[b7], b6[ca]);
                        ap(b9[b7], b6[b7], b8)
                    } else {
                        b6[b7] = b6[ca]
                    }
                }
            })
        }
        function a7(b9) {
            var b8 = ac.defaults.oLanguage;
            var b7 = b9.sZeroRecords;
            if (!b9.sEmptyTable && b7 && b8.sEmptyTable === "No data available in table") {
                ag(b9, b9, "sZeroRecords", "sEmptyTable")
            }
            if (!b9.sLoadingRecords && b7 && b8.sLoadingRecords === "Loading...") {
                ag(b9, b9, "sZeroRecords", "sLoadingRecords")
            }
            if (b9.sInfoThousands) {
                b9.sThousands = b9.sInfoThousands
            }
            var b6 = b9.sDecimal;
            if (b6) {
                bG(b6)
            }
        }
        var a1 = function(b8, b7, b6) {
            if (b8[b7] !== e) {
                b8[b6] = b8[b7]
            }
        }
        ;
        function bj(b9) {
            a1(b9, "ordering", "bSort");
            a1(b9, "orderMulti", "bSortMulti");
            a1(b9, "orderClasses", "bSortClasses");
            a1(b9, "orderCellsTop", "bSortCellsTop");
            a1(b9, "order", "aaSorting");
            a1(b9, "orderFixed", "aaSortingFixed");
            a1(b9, "paging", "bPaginate");
            a1(b9, "pagingType", "sPaginationType");
            a1(b9, "pageLength", "iDisplayLength");
            a1(b9, "searching", "bFilter");
            var b8 = b9.aoSearchCols;
            if (b8) {
                for (var b7 = 0, b6 = b8.length; b7 < b6; b7++) {
                    if (b8[b7]) {
                        ap(ac.models.oSearch, b8[b7])
                    }
                }
            }
        }
        function am(b6) {
            a1(b6, "orderable", "bSortable");
            a1(b6, "orderData", "aDataSort");
            a1(b6, "orderSequence", "asSorting");
            a1(b6, "orderDataType", "sortDataType")
        }
        function bt(b7) {
            var b6 = b7.oBrowser;
            var b9 = bU("<div/>").css({
                position: "absolute",
                top: 0,
                left: 0,
                height: 1,
                width: 1,
                overflow: "hidden"
            }).append(bU("<div/>").css({
                position: "absolute",
                top: 1,
                left: 1,
                width: 100,
                overflow: "scroll"
            }).append(bU('<div class="test"/>').css({
                width: "100%",
                height: 10
            }))).appendTo("body");
            var b8 = b9.find(".test");
            b6.bScrollOversize = b8[0].offsetWidth === 100;
            b6.bScrollbarLeft = b8.offset().left !== 1;
            b9.remove()
        }
        function ba(ca, cc, ce, b6, b8, b7) {
            var b9 = b6, cd, cb = false;
            if (ce !== e) {
                cd = ce;
                cb = true
            }
            while (b9 !== b8) {
                if (!ca.hasOwnProperty(b9)) {
                    continue
                }
                cd = cb ? cc(cd, ca[b9], b9, ca) : ca[b9];
                cb = true;
                b9 += b7
            }
            return cd
        }
        function ad(ca, b9) {
            var cb = ac.defaults.column;
            var b6 = ca.aoColumns.length;
            var b8 = bU.extend({}, ac.models.oColumn, cb, {
                nTh: b9 ? b9 : a.createElement("th"),
                sTitle: cb.sTitle ? cb.sTitle : b9 ? b9.innerHTML : "",
                aDataSort: cb.aDataSort ? cb.aDataSort : [b6],
                mData: cb.mData ? cb.mData : b6,
                idx: b6
            });
            ca.aoColumns.push(b8);
            var b7 = ca.aoPreSearchCols;
            b7[b6] = bU.extend({}, ac.models.oSearch, b7[b6]);
            bh(ca, b6, bU(b9).data())
        }
        function bh(b8, ch, cg) {
            var cc = b8.aoColumns[ch];
            var b6 = b8.oClasses;
            var b7 = bU(cc.nTh);
            if (!cc.sWidthOrig) {
                cc.sWidthOrig = b7.attr("width") || null ;
                var ci = (b7.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
                if (ci) {
                    cc.sWidthOrig = ci[1]
                }
            }
            if (cg !== e && cg !== null ) {
                am(cg);
                ap(ac.defaults.column, cg);
                if (cg.mDataProp !== e && !cg.mData) {
                    cg.mData = cg.mDataProp
                }
                if (cg.sType) {
                    cc._sManualType = cg.sType
                }
                if (cg.className && !cg.sClass) {
                    cg.sClass = cg.className
                }
                bU.extend(cc, cg);
                ag(cc, cg, "sWidth", "sWidthOrig");
                if (typeof cg.iDataSort === "number") {
                    cc.aDataSort = [cg.iDataSort]
                }
                ag(cc, cg, "aDataSort")
            }
            var cf = cc.mData;
            var cb = aE(cf);
            var ce = cc.mRender ? aE(cc.mRender) : null ;
            var ca = function(cj) {
                return typeof cj === "string" && cj.indexOf("@") !== -1
            }
            ;
            cc._bAttrSrc = bU.isPlainObject(cf) && (ca(cf.sort) || ca(cf.type) || ca(cf.filter));
            cc.fnGetData = function(cm, ck, cn) {
                var cj = cb(cm, ck, e, cn);
                return ce && ck ? ce(cj, ck, cm, cn) : cj
            }
            ;
            cc.fnSetData = function(cj, cm, ck) {
                return aM(cf)(cj, cm, ck)
            }
            ;
            if (typeof cf !== "number") {
                b8._rowReadObject = true
            }
            if (!b8.oFeatures.bSort) {
                cc.bSortable = false;
                b7.addClass(b6.sSortableNone)
            }
            var b9 = bU.inArray("asc", cc.asSorting) !== -1;
            var cd = bU.inArray("desc", cc.asSorting) !== -1;
            if (!cc.bSortable || (!b9 && !cd)) {
                cc.sSortingClass = b6.sSortableNone;
                cc.sSortingClassJUI = ""
            } else {
                if (b9 && !cd) {
                    cc.sSortingClass = b6.sSortableAsc;
                    cc.sSortingClassJUI = b6.sSortJUIAscAllowed
                } else {
                    if (!b9 && cd) {
                        cc.sSortingClass = b6.sSortableDesc;
                        cc.sSortingClassJUI = b6.sSortJUIDescAllowed
                    } else {
                        cc.sSortingClass = b6.sSortable;
                        cc.sSortingClassJUI = b6.sSortJUI
                    }
                }
            }
        }
        function aY(ca) {
            if (ca.oFeatures.bAutoWidth !== false) {
                var b9 = ca.aoColumns;
                bL(ca);
                for (var b8 = 0, b7 = b9.length; b8 < b7; b8++) {
                    b9[b8].nTh.style.width = b9[b8].sWidth
                }
            }
            var b6 = ca.oScroll;
            if (b6.sY !== "" || b6.sX !== "") {
                u(ca)
            }
            aa(ca, null , "column-sizing", [ca])
        }
        function E(b8, b6) {
            var b7 = C(b8, "bVisible");
            return typeof b7[b6] === "number" ? b7[b6] : null 
        }
        function bY(b8, b6) {
            var b7 = C(b8, "bVisible");
            var b9 = bU.inArray(b6, b7);
            return b9 !== -1 ? b9 : null 
        }
        function a5(b6) {
            return C(b6, "bVisible").length
        }
        function C(b8, b7) {
            var b6 = [];
            bU.map(b8.aoColumns, function(ca, b9) {
                if (ca[b7]) {
                    b6.push(b9)
                }
            });
            return b6
        }
        function I(b9) {
            var ca = b9.aoColumns;
            var ce = b9.aoData;
            var cg = ac.ext.type.detect;
            var cf, cj, cd, b7, cc, cb;
            var b8, ch, ci, b6;
            for (cf = 0,
            cj = ca.length; cf < cj; cf++) {
                b8 = ca[cf];
                b6 = [];
                if (!b8.sType && b8._sManualType) {
                    b8.sType = b8._sManualType
                } else {
                    if (!b8.sType) {
                        for (cd = 0,
                        b7 = cg.length; cd < b7; cd++) {
                            for (cc = 0,
                            cb = ce.length; cc < cb; cc++) {
                                if (b6[cc] === e) {
                                    b6[cc] = bJ(b9, cc, cf, "type")
                                }
                                ci = cg[cd](b6[cc], b9);
                                if (!ci && cd !== cg.length - 1) {
                                    break
                                }
                                if (ci === "html") {
                                    break
                                }
                            }
                            if (ci) {
                                b8.sType = ci;
                                break
                            }
                        }
                        if (!b8.sType) {
                            b8.sType = "string"
                        }
                    }
                }
            }
        }
        function r(b7, ch, b8, cg) {
            var cd, b9, cc, ci, cb, cf, b6;
            var ca = b7.aoColumns;
            if (ch) {
                for (cd = ch.length - 1; cd >= 0; cd--) {
                    b6 = ch[cd];
                    var ce = b6.targets !== e ? b6.targets : b6.aTargets;
                    if (!bU.isArray(ce)) {
                        ce = [ce]
                    }
                    for (cc = 0,
                    ci = ce.length; cc < ci; cc++) {
                        if (typeof ce[cc] === "number" && ce[cc] >= 0) {
                            while (ca.length <= ce[cc]) {
                                ad(b7)
                            }
                            cg(ce[cc], b6)
                        } else {
                            if (typeof ce[cc] === "number" && ce[cc] < 0) {
                                cg(ca.length + ce[cc], b6)
                            } else {
                                if (typeof ce[cc] === "string") {
                                    for (cb = 0,
                                    cf = ca.length; cb < cf; cb++) {
                                        if (ce[cc] == "_all" || bU(ca[cb].nTh).hasClass(ce[cc])) {
                                            cg(cb, b6)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (b8) {
                for (cd = 0,
                b9 = b8.length; cd < b9; cd++) {
                    cg(cd, b8[cd])
                }
            }
        }
        function a3(b7, cg, cf, cc) {
            var ce = b7.aoData.length;
            var b6 = bU.extend(true, {}, ac.models.oRow, {
                src: cf ? "dom" : "data"
            });
            b6._aData = cg;
            b7.aoData.push(b6);
            var cb, b9;
            var ca = b7.aoColumns;
            for (var cd = 0, b8 = ca.length; cd < b8; cd++) {
                if (cf) {
                    bB(b7, ce, cd, bJ(b7, ce, cd))
                }
                ca[cd].sType = null 
            }
            b7.aiDisplayMaster.push(ce);
            if (cf || !b7.oFeatures.bDeferRender) {
                ae(b7, ce, cf, cc)
            }
            return ce
        }
        function b5(b7, b6) {
            var b8;
            if (!(b6 instanceof bU)) {
                b6 = bU(b6)
            }
            return b6.map(function(b9, ca) {
                b8 = bu(b7, ca);
                return a3(b7, b8.data, ca, b8.cells)
            })
        }
        function bH(b6, b7) {
            return (b7._DT_RowIndex !== e) ? b7._DT_RowIndex : null 
        }
        function bf(b6, b7, b8) {
            return bU.inArray(b8, b6.aoData[b7].anCells)
        }
        function bJ(b9, b6, ca, cc) {
            var cd = b9.iDraw;
            var b7 = b9.aoColumns[ca];
            var b8 = b9.aoData[b6]._aData;
            var ce = b7.sDefaultContent;
            var cb = b7.fnGetData(b8, cc, {
                settings: b9,
                row: b6,
                col: ca
            });
            if (cb === e) {
                if (b9.iDrawError != cd && ce === null ) {
                    a2(b9, 0, "Requested unknown parameter " + (typeof b7.mData == "function" ? "{function}" : "'" + b7.mData + "'") + " for row " + b6, 4);
                    b9.iDrawError = cd
                }
                return ce
            }
            if ((cb === b8 || cb === null ) && ce !== null ) {
                cb = ce
            } else {
                if (typeof cb === "function") {
                    return cb.call(b8)
                }
            }
            if (cb === null  && cc == "display") {
                return ""
            }
            return cb
        }
        function bB(b7, b8, cb, ca) {
            var b6 = b7.aoColumns[cb];
            var b9 = b7.aoData[b8]._aData;
            b6.fnSetData(b9, ca, {
                settings: b7,
                row: b8,
                col: cb
            })
        }
        var Z = /\[.*?\]$/;
        var h = /\(\)$/;
        function aA(b6) {
            return bU.map(b6.match(/(\\.|[^\.])+/g), function(b7) {
                return b7.replace(/\\./g, ".")
            })
        }
        function aE(b7) {
            if (bU.isPlainObject(b7)) {
                var b8 = {};
                bU.each(b7, function(b9, ca) {
                    if (ca) {
                        b8[b9] = aE(ca)
                    }
                });
                return function(cb, ca, cd, cc) {
                    var b9 = b8[ca] || b8._;
                    return b9 !== e ? b9(cb, ca, cd, cc) : cb
                }
            } else {
                if (b7 === null ) {
                    return function(b9) {
                        return b9
                    }
                } else {
                    if (typeof b7 === "function") {
                        return function(ca, b9, cc, cb) {
                            return b7(ca, b9, cc, cb)
                        }
                    } else {
                        if (typeof b7 === "string" && (b7.indexOf(".") !== -1 || b7.indexOf("[") !== -1 || b7.indexOf("(") !== -1)) {
                            var b6 = function(ch, ci, b9) {
                                var ck, cd, cf, cc;
                                if (b9 !== "") {
                                    var cj = aA(b9);
                                    for (var cg = 0, cb = cj.length; cg < cb; cg++) {
                                        ck = cj[cg].match(Z);
                                        cd = cj[cg].match(h);
                                        if (ck) {
                                            cj[cg] = cj[cg].replace(Z, "");
                                            if (cj[cg] !== "") {
                                                ch = ch[cj[cg]]
                                            }
                                            cf = [];
                                            cj.splice(0, cg + 1);
                                            cc = cj.join(".");
                                            for (var ce = 0, cm = ch.length; ce < cm; ce++) {
                                                cf.push(b6(ch[ce], ci, cc))
                                            }
                                            var ca = ck[0].substring(1, ck[0].length - 1);
                                            ch = (ca === "") ? cf : cf.join(ca);
                                            break
                                        } else {
                                            if (cd) {
                                                cj[cg] = cj[cg].replace(h, "");
                                                ch = ch[cj[cg]]();
                                                continue
                                            }
                                        }
                                        if (ch === null  || ch[cj[cg]] === e) {
                                            return e
                                        }
                                        ch = ch[cj[cg]]
                                    }
                                }
                                return ch
                            }
                            ;
                            return function(ca, b9) {
                                return b6(ca, b9, b7)
                            }
                        } else {
                            return function(ca, b9) {
                                return ca[b7]
                            }
                        }
                    }
                }
            }
        }
        function aM(b7) {
            if (bU.isPlainObject(b7)) {
                return aM(b7._)
            } else {
                if (b7 === null ) {
                    return function() {}
                } else {
                    if (typeof b7 === "function") {
                        return function(b8, ca, b9) {
                            b7(b8, "set", ca, b9)
                        }
                    } else {
                        if (typeof b7 === "string" && (b7.indexOf(".") !== -1 || b7.indexOf("[") !== -1 || b7.indexOf("(") !== -1)) {
                            var b6 = function(cg, cc, b8) {
                                var cj = aA(b8), ch;
                                var ci = cj[cj.length - 1];
                                var ck, cd, b9, cb;
                                for (var cf = 0, ca = cj.length - 1; cf < ca; cf++) {
                                    ck = cj[cf].match(Z);
                                    cd = cj[cf].match(h);
                                    if (ck) {
                                        cj[cf] = cj[cf].replace(Z, "");
                                        cg[cj[cf]] = [];
                                        ch = cj.slice();
                                        ch.splice(0, cf + 1);
                                        cb = ch.join(".");
                                        for (var ce = 0, cm = cc.length; ce < cm; ce++) {
                                            b9 = {};
                                            b6(b9, cc[ce], cb);
                                            cg[cj[cf]].push(b9)
                                        }
                                        return
                                    } else {
                                        if (cd) {
                                            cj[cf] = cj[cf].replace(h, "");
                                            cg = cg[cj[cf]](cc)
                                        }
                                    }
                                    if (cg[cj[cf]] === null  || cg[cj[cf]] === e) {
                                        cg[cj[cf]] = {}
                                    }
                                    cg = cg[cj[cf]]
                                }
                                if (ci.match(h)) {
                                    cg = cg[ci.replace(h, "")](cc)
                                } else {
                                    cg[ci.replace(Z, "")] = cc
                                }
                            }
                            ;
                            return function(b8, b9) {
                                return b6(b8, b9, b7)
                            }
                        } else {
                            return function(b8, b9) {
                                b8[b7] = b9
                            }
                        }
                    }
                }
            }
        }
        function bW(b6) {
            return aJ(b6.aoData, "_aData")
        }
        function bx(b6) {
            b6.aoData.length = 0;
            b6.aiDisplayMaster.length = 0;
            b6.aiDisplay.length = 0
        }
        function bk(b7, b9, cb) {
            var ca = -1;
            for (var b8 = 0, b6 = b7.length; b8 < b6; b8++) {
                if (b7[b8] == b9) {
                    ca = b8
                } else {
                    if (b7[b8] > b9) {
                        b7[b8]--
                    }
                }
            }
            if (ca != -1 && cb === e) {
                b7.splice(ca, 1)
            }
        }
        function P(b9, b7, b6, ca) {
            var cf = b9.aoData[b7];
            var cb, cd;
            var b8 = function(cg, ch) {
                while (cg.childNodes.length) {
                    cg.removeChild(cg.firstChild)
                }
                cg.innerHTML = bJ(b9, b7, ch, "display")
            }
            ;
            if (b6 === "dom" || ((!b6 || b6 === "auto") && cf.src === "dom")) {
                cf._aData = bu(b9, cf, ca, ca === e ? e : cf._aData).data
            } else {
                var ce = cf.anCells;
                if (ce) {
                    if (ca !== e) {
                        b8(ce[ca], ca)
                    } else {
                        for (cb = 0,
                        cd = ce.length; cb < cd; cb++) {
                            b8(ce[cb], cb)
                        }
                    }
                }
            }
            cf._aSortData = null ;
            cf._aFilterData = null ;
            var cc = b9.aoColumns;
            if (ca !== e) {
                cc[ca].sType = null 
            } else {
                for (cb = 0,
                cd = cc.length; cb < cd; cb++) {
                    cc[cb].sType = null 
                }
                ar(cf)
            }
        }
        function bu(cd, cn, cg, ck) {
            var ch = [], cc = cn.firstChild, b6, b9, b8, cf = 0, ca, cb = cd.aoColumns, ci = cd._rowReadObject;
            ck = ck || ci ? {} : [];
            var cj = function(cq, cs) {
                if (typeof cq === "string") {
                    var cp = cq.indexOf("@");
                    if (cp !== -1) {
                        var co = cq.substring(cp + 1);
                        var cr = aM(cq);
                        cr(ck, cs.getAttribute(co))
                    }
                }
            }
            ;
            var cm = function(co) {
                if (cg === e || cg === cf) {
                    b9 = cb[cf];
                    ca = bU.trim(co.innerHTML);
                    if (b9 && b9._bAttrSrc) {
                        var cp = aM(b9.mData._);
                        cp(ck, ca);
                        cj(b9.mData.sort, co);
                        cj(b9.mData.type, co);
                        cj(b9.mData.filter, co)
                    } else {
                        if (ci) {
                            if (!b9._setter) {
                                b9._setter = aM(b9.mData)
                            }
                            b9._setter(ck, ca)
                        } else {
                            ck[cf] = ca
                        }
                    }
                }
                cf++
            }
            ;
            if (cc) {
                while (cc) {
                    b6 = cc.nodeName.toUpperCase();
                    if (b6 == "TD" || b6 == "TH") {
                        cm(cc);
                        ch.push(cc)
                    }
                    cc = cc.nextSibling
                }
            } else {
                ch = cn.anCells;
                for (var ce = 0, b7 = ch.length; ce < b7; ce++) {
                    cm(ch[ce])
                }
            }
            return {
                data: ck,
                cells: ch
            }
        }
        function ae(b7, ce, b6, cc) {
            var ch = b7.aoData[ce], ca = ch._aData, cg = [], cf, cb, b9, cd, b8;
            if (ch.nTr === null ) {
                cf = b6 || a.createElement("tr");
                ch.nTr = cf;
                ch.anCells = cg;
                cf._DT_RowIndex = ce;
                ar(ch);
                for (cd = 0,
                b8 = b7.aoColumns.length; cd < b8; cd++) {
                    b9 = b7.aoColumns[cd];
                    cb = b6 ? cc[cd] : a.createElement(b9.sCellType);
                    cg.push(cb);
                    if (!b6 || b9.mRender || b9.mData !== cd) {
                        cb.innerHTML = bJ(b7, ce, cd, "display")
                    }
                    if (b9.sClass) {
                        cb.className += " " + b9.sClass
                    }
                    if (b9.bVisible && !b6) {
                        cf.appendChild(cb)
                    } else {
                        if (!b9.bVisible && b6) {
                            cb.parentNode.removeChild(cb)
                        }
                    }
                    if (b9.fnCreatedCell) {
                        b9.fnCreatedCell.call(b7.oInstance, cb, bJ(b7, ce, cd), ca, ce, cd)
                    }
                }
                aa(b7, "aoRowCreatedCallback", null , [cf, ca, ce])
            }
            ch.nTr.setAttribute("role", "row")
        }
        function ar(b9) {
            var b8 = b9.nTr;
            var b7 = b9._aData;
            if (b8) {
                if (b7.DT_RowId) {
                    b8.id = b7.DT_RowId
                }
                if (b7.DT_RowClass) {
                    var b6 = b7.DT_RowClass.split(" ");
                    b9.__rowc = b9.__rowc ? aW(b9.__rowc.concat(b6)) : b6;
                    bU(b8).removeClass(b9.__rowc.join(" ")).addClass(b7.DT_RowClass)
                }
                if (b7.DT_RowAttr) {
                    bU(b8).attr(b7.DT_RowAttr)
                }
                if (b7.DT_RowData) {
                    bU(b8).data(b7.DT_RowData)
                }
            }
        }
        function a0(b6) {
            var ca, cf, ce, ch, b9;
            var cb = b6.nTHead;
            var cc = b6.nTFoot;
            var cd = bU("th, td", cb).length === 0;
            var b8 = b6.oClasses;
            var b7 = b6.aoColumns;
            if (cd) {
                ch = bU("<tr/>").appendTo(cb)
            }
            for (ca = 0,
            cf = b7.length; ca < cf; ca++) {
                b9 = b7[ca];
                ce = bU(b9.nTh).addClass(b9.sClass);
                if (cd) {
                    ce.appendTo(ch)
                }
                if (b6.oFeatures.bSort) {
                    ce.addClass(b9.sSortingClass);
                    if (b9.bSortable !== false) {
                        ce.attr("tabindex", b6.iTabIndex).attr("aria-controls", b6.sTableId);
                        Q(b6, b9.nTh, ca)
                    }
                }
                if (b9.sTitle != ce.html()) {
                    ce.html(b9.sTitle)
                }
                ah(b6, "header")(b6, ce, b9, b8)
            }
            if (cd) {
                aL(b6.aoHeader, cb)
            }
            bU(cb).find(">tr").attr("role", "row");
            bU(cb).find(">tr>th, >tr>td").addClass(b8.sHeaderTH);
            bU(cc).find(">tr>th, >tr>td").addClass(b8.sFooterTH);
            if (cc !== null ) {
                var cg = b6.aoFooter[0];
                for (ca = 0,
                cf = cg.length; ca < cf; ca++) {
                    b9 = b7[ca];
                    b9.nTf = cg[ca].cell;
                    if (b9.sClass) {
                        bU(b9.nTf).addClass(b9.sClass)
                    }
                }
            }
        }
        function bl(b9, ci, cm) {
            var ce, cb, cd, ch, cc, cf, ca, ck;
            var b8 = [];
            var cg = [];
            var b6 = b9.aoColumns.length;
            var b7, cj;
            if (!ci) {
                return
            }
            if (cm === e) {
                cm = false
            }
            for (ce = 0,
            cb = ci.length; ce < cb; ce++) {
                b8[ce] = ci[ce].slice();
                b8[ce].nTr = ci[ce].nTr;
                for (cd = b6 - 1; cd >= 0; cd--) {
                    if (!b9.aoColumns[cd].bVisible && !cm) {
                        b8[ce].splice(cd, 1)
                    }
                }
                cg.push([])
            }
            for (ce = 0,
            cb = b8.length; ce < cb; ce++) {
                ck = b8[ce].nTr;
                if (ck) {
                    while ((ca = ck.firstChild) ) {
                        ck.removeChild(ca)
                    }
                }
                for (cd = 0,
                ch = b8[ce].length; cd < ch; cd++) {
                    b7 = 1;
                    cj = 1;
                    if (cg[ce][cd] === e) {
                        ck.appendChild(b8[ce][cd].cell);
                        cg[ce][cd] = 1;
                        while (b8[ce + b7] !== e && b8[ce][cd].cell == b8[ce + b7][cd].cell) {
                            cg[ce + b7][cd] = 1;
                            b7++
                        }
                        while (b8[ce][cd + cj] !== e && b8[ce][cd].cell == b8[ce][cd + cj].cell) {
                            for (cc = 0; cc < b7; cc++) {
                                cg[ce + cc][cd + cj] = 1
                            }
                            cj++
                        }
                        bU(b8[ce][cd].cell).attr("rowspan", b7).attr("colspan", cj)
                    }
                }
            }
        }
        function bi(b8) {
            var ct = aa(b8, "aoPreDrawCallback", "preDraw", [b8]);
            if (bU.inArray(false, ct) !== -1) {
                J(b8, false);
                return
            }
            var cs, co, cj;
            var cc = [];
            var cv = 0;
            var cg = b8.asStripeClasses;
            var cm = cg.length;
            var ch = b8.aoOpenRows.length;
            var cn = b8.oLanguage;
            var ci = b8.iInitDisplayStart;
            var cr = M(b8) == "ssp";
            var cb = b8.aiDisplay;
            b8.bDrawing = true;
            if (ci !== e && ci !== -1) {
                b8._iDisplayStart = cr ? ci : ci >= b8.fnRecordsDisplay() ? 0 : ci;
                b8.iInitDisplayStart = -1
            }
            var b7 = b8._iDisplayStart;
            var b9 = b8.fnDisplayEnd();
            if (b8.bDeferLoading) {
                b8.bDeferLoading = false;
                b8.iDraw++;
                J(b8, false)
            } else {
                if (!cr) {
                    b8.iDraw++
                } else {
                    if (!b8.bDestroying && !av(b8)) {
                        return
                    }
                }
            }
            if (cb.length !== 0) {
                var ca = cr ? 0 : b7;
                var b6 = cr ? b8.aoData.length : b9;
                for (var cp = ca; cp < b6; cp++) {
                    var ce = cb[cp];
                    var cf = b8.aoData[ce];
                    if (cf.nTr === null ) {
                        ae(b8, ce)
                    }
                    var cu = cf.nTr;
                    if (cm !== 0) {
                        var cq = cg[cv % cm];
                        if (cf._sRowStripe != cq) {
                            bU(cu).removeClass(cf._sRowStripe).addClass(cq);
                            cf._sRowStripe = cq
                        }
                    }
                    aa(b8, "aoRowCallback", null , [cu, cf._aData, cv, cp]);
                    cc.push(cu);
                    cv++
                }
            } else {
                var ck = cn.sZeroRecords;
                if (b8.iDraw == 1 && M(b8) == "ajax") {
                    ck = cn.sLoadingRecords
                } else {
                    if (cn.sEmptyTable && b8.fnRecordsTotal() === 0) {
                        ck = cn.sEmptyTable
                    }
                }
                cc[0] = bU("<tr/>", {
                    "class": cm ? cg[0] : ""
                }).append(bU("<td />", {
                    valign: "top",
                    colSpan: a5(b8),
                    "class": b8.oClasses.sRowEmpty
                }).html(ck))[0]
            }
            aa(b8, "aoHeaderCallback", "header", [bU(b8.nTHead).children("tr")[0], bW(b8), b7, b9, cb]);
            aa(b8, "aoFooterCallback", "footer", [bU(b8.nTFoot).children("tr")[0], bW(b8), b7, b9, cb]);
            var cd = bU(b8.nTBody);
            cd.children().detach();
            cd.append(bU(cc));
            aa(b8, "aoDrawCallback", "draw", [b8]);
            b8.bSorted = false;
            b8.bFiltered = false;
            b8.bDrawing = false
        }
        function ay(ca, b7) {
            var b9 = ca.oFeatures
              , b6 = b9.bSort
              , b8 = b9.bFilter;
            if (b6) {
                K(ca)
            }
            if (b8) {
                H(ca, ca.oPreviousSearch)
            } else {
                ca.aiDisplay = ca.aiDisplayMaster.slice()
            }
            if (b7 !== true) {
                ca._iDisplayStart = 0
            }
            ca._drawHold = b7;
            bi(ca);
            ca._drawHold = false
        }
        function p(ca) {
            var co = ca.oClasses;
            var ck = bU(ca.nTable);
            var cc = bU("<div/>").insertBefore(ck);
            var cb = ca.oFeatures;
            var b7 = bU("<div/>", {
                id: ca.sTableId + "_wrapper",
                "class": co.sWrapper + (ca.nTFoot ? "" : " " + co.sNoFooter)
            });
            ca.nHolding = cc[0];
            ca.nTableWrapper = b7[0];
            ca.nTableReinsertBefore = ca.nTable.nextSibling;
            var cd = ca.sDom.split("");
            var ci, ce, b9, cp, cn, cg;
            for (var cj = 0; cj < cd.length; cj++) {
                ci = null ;
                ce = cd[cj];
                if (ce == "<") {
                    b9 = bU("<div/>")[0];
                    cp = cd[cj + 1];
                    if (cp == "'" || cp == '"') {
                        cn = "";
                        cg = 2;
                        while (cd[cj + cg] != cp) {
                            cn += cd[cj + cg];
                            cg++
                        }
                        if (cn == "H") {
                            cn = co.sJUIHeader
                        } else {
                            if (cn == "F") {
                                cn = co.sJUIFooter
                            }
                        }
                        if (cn.indexOf(".") != -1) {
                            var ch = cn.split(".");
                            b9.id = ch[0].substr(1, ch[0].length - 1);
                            b9.className = ch[1]
                        } else {
                            if (cn.charAt(0) == "#") {
                                b9.id = cn.substr(1, cn.length - 1)
                            } else {
                                b9.className = cn
                            }
                        }
                        cj += cg
                    }
                    b7.append(b9);
                    b7 = bU(b9)
                } else {
                    if (ce == ">") {
                        b7 = b7.parent()
                    } else {
                        if (ce == "l" && cb.bPaginate && cb.bLengthChange) {
                            ci = a6(ca)
                        } else {
                            if (ce == "f" && cb.bFilter) {
                                ci = D(ca)
                            } else {
                                if (ce == "r" && cb.bProcessing) {
                                    ci = bP(ca)
                                } else {
                                    if (ce == "t") {
                                        ci = bO(ca)
                                    } else {
                                        if (ce == "i" && cb.bInfo) {
                                            ci = m(ca)
                                        } else {
                                            if (ce == "p" && cb.bPaginate) {
                                                ci = aP(ca)
                                            } else {
                                                if (ac.ext.feature.length !== 0) {
                                                    var cm = ac.ext.feature;
                                                    for (var cf = 0, b6 = cm.length; cf < b6; cf++) {
                                                        if (ce == cm[cf].cFeature) {
                                                            ci = cm[cf].fnInit(ca);
                                                            break
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (ci) {
                    var b8 = ca.aanFeatures;
                    if (!b8[ce]) {
                        b8[ce] = []
                    }
                    b8[ce].push(ci);
                    b7.append(ci)
                }
            }
            cc.replaceWith(b7)
        }
        function aL(cc, b7) {
            var cj = bU(b7).children("tr");
            var ci, cg;
            var ce, cb, ca, b8, ck, cf, cd, cm, b6;
            var ch;
            var b9 = function(cn, cq, cp) {
                var co = cn[cq];
                while (co[cp]) {
                    cp++
                }
                return cp
            }
            ;
            cc.splice(0, cc.length);
            for (ce = 0,
            b8 = cj.length; ce < b8; ce++) {
                cc.push([])
            }
            for (ce = 0,
            b8 = cj.length; ce < b8; ce++) {
                ci = cj[ce];
                cd = 0;
                cg = ci.firstChild;
                while (cg) {
                    if (cg.nodeName.toUpperCase() == "TD" || cg.nodeName.toUpperCase() == "TH") {
                        cm = cg.getAttribute("colspan") * 1;
                        b6 = cg.getAttribute("rowspan") * 1;
                        cm = (!cm || cm === 0 || cm === 1) ? 1 : cm;
                        b6 = (!b6 || b6 === 0 || b6 === 1) ? 1 : b6;
                        cf = b9(cc, ce, cd);
                        ch = cm === 1 ? true : false;
                        for (ca = 0; ca < cm; ca++) {
                            for (cb = 0; cb < b6; cb++) {
                                cc[ce + cb][cf + ca] = {
                                    cell: cg,
                                    unique: ch
                                };
                                cc[ce + cb].nTr = ci
                            }
                        }
                    }
                    cg = cg.nextSibling
                }
            }
        }
        function bw(cd, b7, cb) {
            var b8 = [];
            if (!cb) {
                cb = cd.aoHeader;
                if (b7) {
                    cb = [];
                    aL(cb, b7)
                }
            }
            for (var ca = 0, b6 = cb.length; ca < b6; ca++) {
                for (var b9 = 0, cc = cb[ca].length; b9 < cc; b9++) {
                    if (cb[ca][b9].unique && (!b8[b9] || !cd.bSortCellsTop)) {
                        b8[b9] = cb[ca][b9].cell
                    }
                }
            }
            return b8
        }
        function aK(b7, b8, cc) {
            aa(b7, "aoServerParams", "serverParams", [b8]);
            if (b8 && bU.isArray(b8)) {
                var b9 = {};
                var ca = /(.*?)\[\]$/;
                bU.each(b8, function(ci, cj) {
                    var ch = cj.name.match(ca);
                    if (ch) {
                        var cg = ch[0];
                        if (!b9[cg]) {
                            b9[cg] = []
                        }
                        b9[cg].push(cj.value)
                    } else {
                        b9[cj.name] = cj.value
                    }
                });
                b8 = b9
            }
            var b6;
            var cd = b7.ajax;
            var ce = b7.oInstance;
            if (bU.isPlainObject(cd) && cd.data) {
                b6 = cd.data;
                var cf = bU.isFunction(b6) ? b6(b8) : b6;
                b8 = bU.isFunction(b6) && cf ? cf : bU.extend(true, b8, cf);
                delete cd.data
            }
            var cb = {
                data: b8,
                success: function(ch) {
                    var cg = ch.error || ch.sError;
                    if (cg) {
                        b7.oApi._fnLog(b7, 0, cg)
                    }
                    b7.json = ch;
                    aa(b7, null , "xhr", [b7, ch]);
                    cc(ch)
                },
                dataType: "json",
                cache: false,
                type: b7.sServerMethod,
                error: function(cj, cg, ci) {
                    var ch = b7.oApi._fnLog;
                    if (cg == "parsererror") {
                        ch(b7, 0, "Invalid JSON response", 1)
                    } else {
                        if (cj.readyState === 4) {
                            ch(b7, 0, "Ajax error", 7)
                        }
                    }
                    J(b7, false)
                }
            };
            b7.oAjaxData = b8;
            aa(b7, null , "preXhr", [b7, b8]);
            if (b7.fnServerData) {
                b7.fnServerData.call(ce, b7.sAjaxSource, bU.map(b8, function(ch, cg) {
                    return {
                        name: cg,
                        value: ch
                    }
                }), cc, b7)
            } else {
                if (b7.sAjaxSource || typeof cd === "string") {
                    b7.jqXHR = bU.ajax(bU.extend(cb, {
                        url: cd || b7.sAjaxSource
                    }))
                } else {
                    if (bU.isFunction(cd)) {
                        b7.jqXHR = cd.call(ce, b8, cc, b7)
                    } else {
                        b7.jqXHR = bU.ajax(bU.extend(cb, cd));
                        cd.data = b6
                    }
                }
            }
        }
        function av(b6) {
            if (b6.bAjaxDataGet) {
                b6.iDraw++;
                J(b6, true);
                aK(b6, b0(b6), function(b7) {
                    ak(b6, b7)
                });
                return false
            }
            return true
        }
        function b0(cb) {
            var cc = cb.aoColumns, ci = cc.length, b8 = cb.oFeatures, b6 = cb.oPreviousSearch, ch = cb.aoPreSearchCols, cf, ce = [], b7, ca, ck, cd = aX(cb), cn = cb._iDisplayStart, cg = b8.bPaginate !== false ? cb._iDisplayLength : -1;
            var b9 = function(co, cp) {
                ce.push({
                    name: co,
                    value: cp
                })
            }
            ;
            b9("sEcho", cb.iDraw);
            b9("iColumns", ci);
            b9("sColumns", aJ(cc, "sName").join(","));
            b9("iDisplayStart", cn);
            b9("iDisplayLength", cg);
            var cj = {
                draw: cb.iDraw,
                columns: [],
                order: [],
                start: cn,
                length: cg,
                search: {
                    value: b6.sSearch,
                    regex: b6.bRegex
                }
            };
            for (cf = 0; cf < ci; cf++) {
                ca = cc[cf];
                ck = ch[cf];
                b7 = typeof ca.mData == "function" ? "function" : ca.mData;
                cj.columns.push({
                    data: b7,
                    name: ca.sName,
                    searchable: ca.bSearchable,
                    orderable: ca.bSortable,
                    search: {
                        value: ck.sSearch,
                        regex: ck.bRegex
                    }
                });
                b9("mDataProp_" + cf, b7);
                if (b8.bFilter) {
                    b9("sSearch_" + cf, ck.sSearch);
                    b9("bRegex_" + cf, ck.bRegex);
                    b9("bSearchable_" + cf, ca.bSearchable)
                }
                if (b8.bSort) {
                    b9("bSortable_" + cf, ca.bSortable)
                }
            }
            if (b8.bFilter) {
                b9("sSearch", b6.sSearch);
                b9("bRegex", b6.bRegex)
            }
            if (b8.bSort) {
                bU.each(cd, function(co, cp) {
                    cj.order.push({
                        column: cp.col,
                        dir: cp.dir
                    });
                    b9("iSortCol_" + co, cp.col);
                    b9("sSortDir_" + co, cp.dir)
                });
                b9("iSortingCols", cd.length)
            }
            var cm = ac.ext.legacy.ajax;
            if (cm === null ) {
                return cb.sAjaxSource ? ce : cj
            }
            return cm ? ce : cj
        }
        function ak(b6, ce) {
            var cb = function(cf, cg) {
                return ce[cf] !== e ? ce[cf] : ce[cg]
            }
            ;
            var b9 = cb("sEcho", "draw");
            var ca = cb("iTotalRecords", "recordsTotal");
            var cd = cb("iTotalDisplayRecords", "recordsFiltered");
            if (b9) {
                if (b9 * 1 < b6.iDraw) {
                    return
                }
                b6.iDraw = b9 * 1
            }
            bx(b6);
            b6._iRecordsTotal = parseInt(ca, 10);
            b6._iRecordsDisplay = parseInt(cd, 10);
            var b7 = bI(b6, ce);
            for (var b8 = 0, cc = b7.length; b8 < cc; b8++) {
                a3(b6, b7[b8])
            }
            b6.aiDisplay = b6.aiDisplayMaster.slice();
            b6.bAjaxDataGet = false;
            bi(b6);
            if (!b6._bInitComplete) {
                aR(b6, ce)
            }
            b6.bAjaxDataGet = true;
            J(b6, false)
        }
        function bI(b8, b7) {
            var b6 = bU.isPlainObject(b8.ajax) && b8.ajax.dataSrc !== e ? b8.ajax.dataSrc : b8.sAjaxDataProp;
            if (b6 === "data") {
                return b7.aaData || b7[b6]
            }
            return b6 !== "" ? aE(b6)(b7) : b7
        }
        function D(b9) {
            var ca = b9.oClasses;
            var b8 = b9.sTableId;
            var cc = b9.oLanguage;
            var cb = b9.oPreviousSearch;
            var b7 = b9.aanFeatures;
            var ch = '<input type="search" class="' + ca.sFilterInput + '"/>';
            var cg = cc.sSearch;
            cg = cg.match(/_INPUT_/) ? cg.replace("_INPUT_", ch) : cg + ch;
            var b6 = bU("<div/>", {
                id: !b7.f ? b8 + "_filter" : null ,
                "class": ca.sFilter
            }).append(bU("<label/>").append(cg));
            var cf = function() {
                var cj = b7.f;
                var ci = !this.value ? "" : this.value;
                if (ci != cb.sSearch) {
                    H(b9, {
                        sSearch: ci,
                        bRegex: cb.bRegex,
                        bSmart: cb.bSmart,
                        bCaseInsensitive: cb.bCaseInsensitive
                    });
                    b9._iDisplayStart = 0;
                    bi(b9)
                }
            }
            ;
            var ce = b9.searchDelay !== null  ? b9.searchDelay : M(b9) === "ssp" ? 400 : 0;
            var cd = bU("input", b6).val(cb.sSearch).attr("placeholder", cc.sSearchPlaceholder).bind("keyup.DT search.DT input.DT paste.DT cut.DT", ce ? aB(cf, ce) : cf).bind("keypress.DT", function(ci) {
                if (ci.keyCode == 13) {
                    return false
                }
            }).attr("aria-controls", b8);
            bU(b9.nTable).on("search.dt.DT", function(cj, ci) {
                if (b9 === ci) {
                    try {
                        if (cd[0] !== a.activeElement) {
                            cd.val(cb.sSearch)
                        }
                    } catch (ck) {}
                }
            });
            return b6[0]
        }
        function H(b9, cd, cc) {
            var b8 = b9.oPreviousSearch;
            var cb = b9.aoPreSearchCols;
            var ca = function(ce) {
                b8.sSearch = ce.sSearch;
                b8.bRegex = ce.bRegex;
                b8.bSmart = ce.bSmart;
                b8.bCaseInsensitive = ce.bCaseInsensitive
            }
            ;
            var b7 = function(ce) {
                return ce.bEscapeRegex !== e ? !ce.bEscapeRegex : ce.bRegex
            }
            ;
            I(b9);
            if (M(b9) != "ssp") {
                aN(b9, cd.sSearch, cc, b7(cd), cd.bSmart, cd.bCaseInsensitive);
                ca(cd);
                for (var b6 = 0; b6 < cb.length; b6++) {
                    an(b9, cb[b6].sSearch, b6, b7(cb[b6]), cb[b6].bSmart, cb[b6].bCaseInsensitive)
                }
                aH(b9)
            } else {
                ca(cd)
            }
            b9.bFiltered = true;
            aa(b9, null , "search", [b9])
        }
        function aH(b9) {
            var b8 = ac.ext.search;
            var cc = b9.aiDisplay;
            var ce, b7;
            for (var cb = 0, cd = b8.length; cb < cd; cb++) {
                var cf = [];
                for (var ca = 0, b6 = cc.length; ca < b6; ca++) {
                    b7 = cc[ca];
                    ce = b9.aoData[b7];
                    if (b8[cb](b9, ce._aFilterData, b7, ce._aData, ca)) {
                        cf.push(b7)
                    }
                }
                cc.length = 0;
                cc.push.apply(cc, cf)
            }
        }
        function an(b7, b6, cb, ce, cf, b9) {
            if (b6 === "") {
                return
            }
            var cc;
            var cd = b7.aiDisplay;
            var b8 = bb(b6, ce, cf, b9);
            for (var ca = cd.length - 1; ca >= 0; ca--) {
                cc = b7.aoData[cd[ca]]._aFilterData[cb];
                if (!b8.test(cc)) {
                    cd.splice(ca, 1)
                }
            }
        }
        function aN(b7, cf, b6, ce, ch, ca) {
            var b9 = bb(cf, ce, ch, ca);
            var b8 = b7.oPreviousSearch.sSearch;
            var cc = b7.aiDisplayMaster;
            var cd, cg, cb;
            if (ac.ext.search.length !== 0) {
                b6 = true
            }
            cg = aT(b7);
            if (cf.length <= 0) {
                b7.aiDisplay = cc.slice()
            } else {
                if (cg || b6 || b8.length > cf.length || cf.indexOf(b8) !== 0 || b7.bSorted) {
                    b7.aiDisplay = cc.slice()
                }
                cd = b7.aiDisplay;
                for (cb = cd.length - 1; cb >= 0; cb--) {
                    if (!b9.test(b7.aoData[cd[cb]]._sFilterRow)) {
                        cd.splice(cb, 1)
                    }
                }
            }
        }
        function bb(b8, b9, ca, b6) {
            b8 = b9 ? b8 : v(b8);
            if (ca) {
                var b7 = bU.map(b8.match(/"[^"]+"|[^ ]+/g) || "", function(cc) {
                    if (cc.charAt(0) === '"') {
                        var cb = cc.match(/^"(.*)"$/);
                        cc = cb ? cb[1] : cc
                    }
                    return cc.replace('"', "")
                });
                b8 = "^(?=.*?" + b7.join(")(?=.*?") + ").*$"
            }
            return new RegExp(b8,b6 ? "i" : "")
        }
        function v(b6) {
            return b6.replace(aS, "\\$1")
        }
        var g = bU("<div>")[0];
        var aG = g.textContent !== e;
        function aT(b7) {
            var b9 = b7.aoColumns;
            var b8;
            var cb, ca, cf, b6, ce, cc, ch;
            var cg = ac.ext.type.search;
            var cd = false;
            for (cb = 0,
            cf = b7.aoData.length; cb < cf; cb++) {
                ch = b7.aoData[cb];
                if (!ch._aFilterData) {
                    ce = [];
                    for (ca = 0,
                    b6 = b9.length; ca < b6; ca++) {
                        b8 = b9[ca];
                        if (b8.bSearchable) {
                            cc = bJ(b7, cb, ca, "filter");
                            if (cg[b8.sType]) {
                                cc = cg[b8.sType](cc)
                            }
                            if (cc === null ) {
                                cc = ""
                            }
                            if (typeof cc !== "string" && cc.toString) {
                                cc = cc.toString()
                            }
                        } else {
                            cc = ""
                        }
                        if (cc.indexOf && cc.indexOf("&") !== -1) {
                            g.innerHTML = cc;
                            cc = aG ? g.textContent : g.innerText
                        }
                        if (cc.replace) {
                            cc = cc.replace(/[\r\n]/g, "")
                        }
                        ce.push(cc)
                    }
                    ch._aFilterData = ce;
                    ch._sFilterRow = ce.join("  ");
                    cd = true
                }
            }
            return cd
        }
        function bN(b6) {
            return {
                search: b6.sSearch,
                smart: b6.bSmart,
                regex: b6.bRegex,
                caseInsensitive: b6.bCaseInsensitive
            }
        }
        function aU(b6) {
            return {
                sSearch: b6.search,
                bSmart: b6.smart,
                bRegex: b6.regex,
                bCaseInsensitive: b6.caseInsensitive
            }
        }
        function m(b7) {
            var b8 = b7.sTableId
              , b6 = b7.aanFeatures.i
              , b9 = bU("<div/>", {
                "class": b7.oClasses.sInfo,
                id: !b6 ? b8 + "_info" : null 
            });
            if (!b6) {
                b7.aoDrawCallback.push({
                    fn: aI,
                    sName: "information"
                });
                b9.attr("role", "status").attr("aria-live", "polite");
                bU(b7.nTable).attr("aria-describedby", b8 + "_info")
            }
            return b9[0]
        }
        function aI(b9) {
            var b6 = b9.aanFeatures.i;
            if (b6.length === 0) {
                return
            }
            var b8 = b9.oLanguage
              , b7 = b9._iDisplayStart + 1
              , ca = b9.fnDisplayEnd()
              , cd = b9.fnRecordsTotal()
              , cc = b9.fnRecordsDisplay()
              , cb = cc ? b8.sInfo : b8.sInfoEmpty;
            if (cc !== cd) {
                cb += " " + b8.sInfoFiltered
            }
            cb += b8.sInfoPostFix;
            cb = bE(b9, cb);
            var ce = b8.fnInfoCallback;
            if (ce !== null ) {
                cb = ce.call(b9.oInstance, b9, b7, ca, cd, cc, cb)
            }
            bU(b6).html(cb)
        }
        function bE(b9, cb) {
            var b7 = b9.fnFormatNumber
              , cc = b9._iDisplayStart + 1
              , b6 = b9._iDisplayLength
              , ca = b9.fnRecordsDisplay()
              , b8 = b6 === -1;
            return cb.replace(/_START_/g, b7.call(b9, cc)).replace(/_END_/g, b7.call(b9, b9.fnDisplayEnd())).replace(/_MAX_/g, b7.call(b9, b9.fnRecordsTotal())).replace(/_TOTAL_/g, b7.call(b9, ca)).replace(/_PAGE_/g, b7.call(b9, b8 ? 1 : Math.ceil(cc / b6))).replace(/_PAGES_/g, b7.call(b9, b8 ? 1 : Math.ceil(ca / b6)))
        }
        function o(cc) {
            var b9, b6, cd = cc.iInitDisplayStart;
            var b8 = cc.aoColumns, cb;
            var ca = cc.oFeatures;
            if (!cc.bInitialised) {
                setTimeout(function() {
                    o(cc)
                }, 200);
                return
            }
            p(cc);
            a0(cc);
            bl(cc, cc.aoHeader);
            bl(cc, cc.aoFooter);
            J(cc, true);
            if (ca.bAutoWidth) {
                bL(cc)
            }
            for (b9 = 0,
            b6 = b8.length; b9 < b6; b9++) {
                cb = b8[b9];
                if (cb.sWidth) {
                    cb.nTh.style.width = bZ(cb.sWidth)
                }
            }
            ay(cc);
            var b7 = M(cc);
            if (b7 != "ssp") {
                if (b7 == "ajax") {
                    aK(cc, [], function(cf) {
                        var ce = bI(cc, cf);
                        for (b9 = 0; b9 < ce.length; b9++) {
                            a3(cc, ce[b9])
                        }
                        cc.iInitDisplayStart = cd;
                        ay(cc);
                        J(cc, false);
                        aR(cc, cf)
                    }, cc)
                } else {
                    J(cc, false);
                    aR(cc)
                }
            }
        }
        function aR(b7, b6) {
            b7._bInitComplete = true;
            if (b6) {
                aY(b7)
            }
            aa(b7, "aoInitComplete", "init", [b7, b6])
        }
        function a8(b7, b8) {
            var b6 = parseInt(b8, 10);
            b7._iDisplayLength = b6;
            bA(b7);
            aa(b7, null , "length", [b7, b6])
        }
        function a6(cb) {
            var cc = cb.oClasses
              , b9 = cb.sTableId
              , b8 = cb.aLengthMenu
              , b6 = bU.isArray(b8[0])
              , ca = b6 ? b8[0] : b8
              , ce = b6 ? b8[1] : b8;
            var cf = bU("<select/>", {
                name: b9 + "_length",
                "aria-controls": b9,
                "class": cc.sLengthSelect
            });
            for (var cd = 0, cg = ca.length; cd < cg; cd++) {
                cf[0][cd] = new Option(ce[cd],ca[cd])
            }
            var b7 = bU("<div><label/></div>").addClass(cc.sLength);
            if (!cb.aanFeatures.l) {
                b7[0].id = b9 + "_length"
            }
            b7.children().append(cb.oLanguage.sLengthMenu.replace("_MENU_", cf[0].outerHTML));
            bU("select", b7).val(cb._iDisplayLength).bind("change.DT", function(ch) {
                a8(cb, bU(this).val());
                bi(cb)
            });
            bU(cb.nTable).bind("length.dt.DT", function(cj, ci, ch) {
                if (cb === ci) {
                    bU("select", b7).val(ch)
                }
            });
            return b7[0]
        }
        function aP(b9) {
            var b8 = b9.sPaginationType
              , cb = ac.ext.pager[b8]
              , b7 = typeof cb === "function"
              , cc = function(cd) {
                bi(cd)
            }
              , ca = bU("<div/>").addClass(b9.oClasses.sPaging + b8)[0]
              , b6 = b9.aanFeatures;
            if (!b7) {
                cb.fnInit(b9, ca, cc)
            }
            if (!b6.p) {
                ca.id = b9.sTableId + "_paginate";
                b9.aoDrawCallback.push({
                    fn: function(cg) {
                        if (b7) {
                            var cd = cg._iDisplayStart, ci = cg._iDisplayLength, ce = cg.fnRecordsDisplay(), cm = ci === -1, cj = cm ? 0 : Math.ceil(cd / ci), cf = cm ? 1 : Math.ceil(ce / ci), ck = cb(cj, cf), ch, cn;
                            for (ch = 0,
                            cn = b6.p.length; ch < cn; ch++) {
                                ah(cg, "pageButton")(cg, b6.p[ch], ch, ck, cj, cf)
                            }
                        } else {
                            cb.fnUpdate(cg, cc)
                        }
                    },
                    sName: "pagination"
                })
            }
            return ca
        }
        function aV(b8, b9, cc) {
            var cb = b8._iDisplayStart
              , b6 = b8._iDisplayLength
              , b7 = b8.fnRecordsDisplay();
            if (b7 === 0 || b6 === -1) {
                cb = 0
            } else {
                if (typeof b9 === "number") {
                    cb = b9 * b6;
                    if (cb > b7) {
                        cb = 0
                    }
                } else {
                    if (b9 == "first") {
                        cb = 0
                    } else {
                        if (b9 == "previous") {
                            cb = b6 >= 0 ? cb - b6 : 0;
                            if (cb < 0) {
                                cb = 0
                            }
                        } else {
                            if (b9 == "next") {
                                if (cb + b6 < b7) {
                                    cb += b6
                                }
                            } else {
                                if (b9 == "last") {
                                    cb = Math.floor((b7 - 1) / b6) * b6
                                } else {
                                    a2(b8, 0, "Unknown paging action: " + b9, 5)
                                }
                            }
                        }
                    }
                }
            }
            var ca = b8._iDisplayStart !== cb;
            b8._iDisplayStart = cb;
            if (ca) {
                aa(b8, null , "page", [b8]);
                if (cc) {
                    bi(b8)
                }
            }
            return ca
        }
        function bP(b6) {
            return bU("<div/>", {
                id: !b6.aanFeatures.r ? b6.sTableId + "_processing" : null ,
                "class": b6.oClasses.sProcessing
            }).html(b6.oLanguage.sProcessing).insertBefore(b6.nTable)[0]
        }
        function J(b7, b6) {
            if (b7.oFeatures.bProcessing) {
                bU(b7.aanFeatures.r).css("display", b6 ? "block" : "none")
            }
            aa(b7, null , "processing", [b7, b6])
        }
        function bO(ck) {
            var cj = bU(ck.nTable);
            cj.attr("role", "grid");
            var b6 = ck.oScroll;
            if (b6.sX === "" && b6.sY === "") {
                return ck.nTable
            }
            var ce = b6.sX;
            var cd = b6.sY;
            var cm = ck.oClasses;
            var ci = cj.children("caption");
            var b7 = ci.length ? ci[0]._captionSide : null ;
            var ca = bU(cj[0].cloneNode(false));
            var co = bU(cj[0].cloneNode(false));
            var cc = cj.children("tfoot");
            var cf = "<div/>";
            var cb = function(cp) {
                return !cp ? null  : bZ(cp)
            }
            ;
            if (b6.sX && cj.attr("width") === "100%") {
                cj.removeAttr("width")
            }
            if (!cc.length) {
                cc = null 
            }
            var ch = bU(cf, {
                "class": cm.sScrollWrapper
            }).append(bU(cf, {
                "class": cm.sScrollHead
            }).css({
                overflow: "hidden",
                position: "relative",
                border: 0,
                width: ce ? cb(ce) : "100%"
            }).append(bU(cf, {
                "class": cm.sScrollHeadInner
            }).css({
                "box-sizing": "content-box",
                width: b6.sXInner || "100%"
            }).append(ca.removeAttr("id").css("margin-left", 0).append(b7 === "top" ? ci : null ).append(cj.children("thead"))))).append(bU(cf, {
                "class": cm.sScrollBody
            }).css({
                overflow: "auto",
                height: cb(cd),
                width: cb(ce)
            }).append(cj));
            if (cc) {
                ch.append(bU(cf, {
                    "class": cm.sScrollFoot
                }).css({
                    overflow: "hidden",
                    border: 0,
                    width: ce ? cb(ce) : "100%"
                }).append(bU(cf, {
                    "class": cm.sScrollFootInner
                }).append(co.removeAttr("id").css("margin-left", 0).append(b7 === "bottom" ? ci : null ).append(cj.children("tfoot")))))
            }
            var b8 = ch.children();
            var cg = b8[0];
            var cn = b8[1];
            var b9 = cc ? b8[2] : null ;
            if (ce) {
                bU(cn).on("scroll.DT", function(cp) {
                    var cq = this.scrollLeft;
                    cg.scrollLeft = cq;
                    if (cc) {
                        b9.scrollLeft = cq
                    }
                })
            }
            ck.nScrollHead = cg;
            ck.nScrollBody = cn;
            ck.nScrollFoot = b9;
            ck.aoDrawCallback.push({
                fn: u,
                sName: "scrolling"
            });
            return ch[0]
        }
        function u(cH) {
            var cC = cH.oScroll, cb = cC.sX, cx = cC.sXInner, b8 = cC.sY, cv = cC.iBarWidth, cA = bU(cH.nScrollHead), cp = cA[0].style, ca = cA.children("div"), b7 = ca[0].style, cK = ca.children("table"), ch = cH.nScrollBody, ct = bU(ch), co = ch.style, cD = bU(cH.nScrollFoot), cs = cD.children("div"), cq = cs.children("table"), cf = bU(cH.nTHead), cr = bU(cH.nTable), cu = cr[0], cd = cu.style, cn = cH.nTFoot ? bU(cH.nTFoot) : null , ce = cH.oBrowser, cj = ce.bScrollOversize, b9, cc, cF, cI, ck, ci, cz = [], cB = [], cw = [], cJ, cg, cL, cm = function(cM) {
                var cN = cM.style;
                cN.paddingTop = "0";
                cN.paddingBottom = "0";
                cN.borderTopWidth = "0";
                cN.borderBottomWidth = "0";
                cN.height = 0
            }
            ;
            cr.children("thead, tfoot").remove();
            ck = cf.clone().prependTo(cr);
            b9 = cf.find("tr");
            cF = ck.find("tr");
            ck.find("th, td").removeAttr("tabindex");
            if (cn) {
                ci = cn.clone().prependTo(cr);
                cc = cn.find("tr");
                cI = ci.find("tr")
            }
            if (!cb) {
                co.width = "100%";
                cA[0].style.width = "100%"
            }
            bU.each(bw(cH, ck), function(cM, cN) {
                cJ = E(cH, cM);
                cN.style.width = cH.aoColumns[cJ].sWidth
            });
            if (cn) {
                bn(function(cM) {
                    cM.style.width = ""
                }, cI)
            }
            if (cC.bCollapse && b8 !== "") {
                co.height = (ct[0].offsetHeight + cf[0].offsetHeight) + "px"
            }
            cL = cr.outerWidth();
            if (cb === "") {
                cd.width = "100%";
                if (cj && (cr.find("tbody").height() > ch.offsetHeight || ct.css("overflow-y") == "scroll")) {
                    cd.width = bZ(cr.outerWidth() - cv)
                }
            } else {
                if (cx !== "") {
                    cd.width = bZ(cx)
                } else {
                    if (cL == ct.width() && ct.height() < cr.height()) {
                        cd.width = bZ(cL - cv);
                        if (cr.outerWidth() > cL - cv) {
                            cd.width = bZ(cL)
                        }
                    } else {
                        cd.width = bZ(cL)
                    }
                }
            }
            cL = cr.outerWidth();
            bn(cm, cF);
            bn(function(cM) {
                cw.push(cM.innerHTML);
                cz.push(bZ(bU(cM).css("width")))
            }, cF);
            bn(function(cN, cM) {
                cN.style.width = cz[cM]
            }, b9);
            bU(cF).height(0);
            if (cn) {
                bn(cm, cI);
                bn(function(cM) {
                    cB.push(bZ(bU(cM).css("width")))
                }, cI);
                bn(function(cN, cM) {
                    cN.style.width = cB[cM]
                }, cc);
                bU(cI).height(0)
            }
            bn(function(cN, cM) {
                cN.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' + cw[cM] + "</div>";
                cN.style.width = cz[cM]
            }, cF);
            if (cn) {
                bn(function(cN, cM) {
                    cN.innerHTML = "";
                    cN.style.width = cB[cM]
                }, cI)
            }
            if (cr.outerWidth() < cL) {
                cg = ((ch.scrollHeight > ch.offsetHeight || ct.css("overflow-y") == "scroll")) ? cL + cv : cL;
                if (cj && (ch.scrollHeight > ch.offsetHeight || ct.css("overflow-y") == "scroll")) {
                    cd.width = bZ(cg - cv)
                }
                if (cb === "" || cx !== "") {
                    a2(cH, 1, "Possible column misalignment", 6)
                }
            } else {
                cg = "100%"
            }
            co.width = bZ(cg);
            cp.width = bZ(cg);
            if (cn) {
                cH.nScrollFoot.style.width = bZ(cg)
            }
            if (!b8) {
                if (cj) {
                    co.height = bZ(cu.offsetHeight + cv)
                }
            }
            if (b8 && cC.bCollapse) {
                co.height = bZ(b8);
                var cG = (cb && cu.offsetWidth > ch.offsetWidth) ? cv : 0;
                if (cu.offsetHeight < ch.offsetHeight) {
                    co.height = bZ(cu.offsetHeight + cG)
                }
            }
            var b6 = cr.outerWidth();
            cK[0].style.width = bZ(b6);
            b7.width = bZ(b6);
            var cy = cr.height() > ch.clientHeight || ct.css("overflow-y") == "scroll";
            var cE = "padding" + (ce.bScrollbarLeft ? "Left" : "Right");
            b7[cE] = cy ? cv + "px" : "0px";
            if (cn) {
                cq[0].style.width = bZ(b6);
                cs[0].style.width = bZ(b6);
                cs[0].style[cE] = cy ? cv + "px" : "0px"
            }
            ct.scroll();
            if ((cH.bSorted || cH.bFiltered) && !cH._drawHold) {
                ch.scrollTop = 0
            }
        }
        function bn(cb, b8, b7) {
            var b9 = 0
              , ca = 0
              , b6 = b8.length;
            var cd, cc;
            while (ca < b6) {
                cd = b8[ca].firstChild;
                cc = b7 ? b7[ca].firstChild : null ;
                while (cd) {
                    if (cd.nodeType === 1) {
                        if (b7) {
                            cb(cd, cc, b9)
                        } else {
                            cb(cd, b9)
                        }
                        b9++
                    }
                    cd = cd.nextSibling;
                    cc = b7 ? cc.nextSibling : null 
                }
                ca++
            }
        }
        var bg = /<.*?>/g;
        function bL(cc) {
            var ck = cc.nTable, b9 = cc.aoColumns, b8 = cc.oScroll, ch = b8.sY, ci = b8.sX, cb = b8.sXInner, cp = b9.length, cn = C(cc, "bVisible"), cm = bU("th", cc.nTHead), cf = ck.style.width || ck.getAttribute("width"), ce = ck.parentNode, co = false, cj, ca, cq, cg, b6;
            for (cj = 0; cj < cn.length; cj++) {
                ca = b9[cn[cj]];
                if (ca.sWidth !== null ) {
                    ca.sWidth = aw(ca.sWidthOrig, ce);
                    co = true
                }
            }
            if (!co && !ci && !ch && cp == a5(cc) && cp == cm.length) {
                for (cj = 0; cj < cp; cj++) {
                    b9[cj].sWidth = bZ(cm.eq(cj).width())
                }
            } else {
                var cd = bU(ck).clone().empty().css("visibility", "hidden").removeAttr("id").append(bU(cc.nTHead).clone(false)).append(bU(cc.nTFoot).clone(false)).append(bU("<tbody><tr/></tbody>"));
                cd.find("tfoot th, tfoot td").css("width", "");
                var b7 = cd.find("tbody tr");
                cm = bw(cc, cd.find("thead")[0]);
                for (cj = 0; cj < cn.length; cj++) {
                    ca = b9[cn[cj]];
                    cm[cj].style.width = ca.sWidthOrig !== null  && ca.sWidthOrig !== "" ? bZ(ca.sWidthOrig) : ""
                }
                if (cc.aoData.length) {
                    for (cj = 0; cj < cn.length; cj++) {
                        cq = cn[cj];
                        ca = b9[cq];
                        bU(aZ(cc, cq)).clone(false).append(ca.sContentPadding).appendTo(b7)
                    }
                }
                cd.appendTo(ce);
                if (ci && cb) {
                    cd.width(cb)
                } else {
                    if (ci) {
                        cd.css("width", "auto");
                        if (cd.width() < ce.offsetWidth) {
                            cd.width(ce.offsetWidth)
                        }
                    } else {
                        if (ch) {
                            cd.width(ce.offsetWidth)
                        } else {
                            if (cf) {
                                cd.width(cf)
                            }
                        }
                    }
                }
                aO(cc, cd[0]);
                if (ci) {
                    var cr = 0;
                    for (cj = 0; cj < cn.length; cj++) {
                        ca = b9[cn[cj]];
                        b6 = bU(cm[cj]).outerWidth();
                        cr += ca.sWidthOrig === null  ? b6 : parseInt(ca.sWidth, 10) + b6 - bU(cm[cj]).width()
                    }
                    cd.width(bZ(cr));
                    ck.style.width = bZ(cr)
                }
                for (cj = 0; cj < cn.length; cj++) {
                    ca = b9[cn[cj]];
                    cg = bU(cm[cj]).width();
                    if (cg) {
                        ca.sWidth = bZ(cg)
                    }
                }
                ck.style.width = bZ(cd.css("width"));
                cd.remove()
            }
            if (cf) {
                ck.style.width = bZ(cf)
            }
            if ((cf || ci) && !cc._reszEvt) {
                bU(d).bind("resize.DT-" + cc.sInstance, aB(function() {
                    aY(cc)
                }));
                cc._reszEvt = true
            }
        }
        function aB(b6, b9) {
            var b8 = b9 !== e ? b9 : 200, b7, ca;
            return function() {
                var cd = this
                  , cc = +new Date()
                  , cb = arguments;
                if (b7 && cc < b7 + b8) {
                    clearTimeout(ca);
                    ca = setTimeout(function() {
                        b7 = e;
                        b6.apply(cd, cb)
                    }, b8)
                } else {
                    b7 = cc;
                    b6.apply(cd, cb)
                }
            }
        }
        function aw(b7, b6) {
            if (!b7) {
                return 0
            }
            var b9 = bU("<div/>").css("width", bZ(b7)).appendTo(b6 || a.body);
            var b8 = b9[0].offsetWidth;
            b9.remove();
            return b8
        }
        function aO(b8, b9) {
            var b6 = b8.oScroll;
            if (b6.sX || b6.sY) {
                var b7 = !b6.sX ? b6.iBarWidth : 0;
                b9.style.width = bZ(bU(b9).outerWidth() - b7)
            }
        }
        function aZ(b7, b9) {
            var b6 = aq(b7, b9);
            if (b6 < 0) {
                return null 
            }
            var b8 = b7.aoData[b6];
            return !b8.nTr ? bU("<td/>").html(bJ(b7, b6, b9, "display"))[0] : b8.anCells[b9]
        }
        function aq(cb, cc) {
            var ca, b6 = -1, b8 = -1;
            for (var b9 = 0, b7 = cb.aoData.length; b9 < b7; b9++) {
                ca = bJ(cb, b9, cc, "display") + "";
                ca = ca.replace(bg, "");
                if (ca.length > b6) {
                    b6 = ca.length;
                    b8 = b9
                }
            }
            return b8
        }
        function bZ(b6) {
            if (b6 === null ) {
                return "0px"
            }
            if (typeof b6 == "number") {
                return b6 < 0 ? "0px" : b6 + "px"
            }
            return b6.match(/\d$/) ? b6 + "px" : b6
        }
        function bq() {
            if (!ac.__scrollbarWidth) {
                var b8 = bU("<p/>").css({
                    width: "100%",
                    height: 200,
                    padding: 0
                })[0];
                var b9 = bU("<div/>").css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    width: 200,
                    height: 150,
                    padding: 0,
                    overflow: "hidden",
                    visibility: "hidden"
                }).append(b8).appendTo("body");
                var b7 = b8.offsetWidth;
                b9.css("overflow", "scroll");
                var b6 = b8.offsetWidth;
                if (b7 === b6) {
                    b6 = b9[0].clientWidth
                }
                b9.remove();
                ac.__scrollbarWidth = b7 - b6
            }
            return ac.__scrollbarWidth
        }
        function aX(b9) {
            var ce, b8, cb, cf, cc = [], ch = [], cj = b9.aoColumns, cd, ci, b6, cg, ca = b9.aaSortingFixed, cm = bU.isPlainObject(ca), b7 = [], ck = function(cn) {
                if (cn.length && !bU.isArray(cn[0])) {
                    b7.push(cn)
                } else {
                    b7.push.apply(b7, cn)
                }
            }
            ;
            if (bU.isArray(ca)) {
                ck(ca)
            }
            if (cm && ca.pre) {
                ck(ca.pre)
            }
            ck(b9.aaSorting);
            if (cm && ca.post) {
                ck(ca.post)
            }
            for (ce = 0; ce < b7.length; ce++) {
                cg = b7[ce][0];
                cd = cj[cg].aDataSort;
                for (cb = 0,
                cf = cd.length; cb < cf; cb++) {
                    ci = cd[cb];
                    b6 = cj[ci].sType || "string";
                    if (b7[ce]._idx === e) {
                        b7[ce]._idx = bU.inArray(b7[ce][1], cj[ci].asSorting)
                    }
                    cc.push({
                        src: cg,
                        col: ci,
                        dir: b7[ce][1],
                        index: b7[ce]._idx,
                        type: b6,
                        formatter: ac.ext.type.order[b6 + "-pre"]
                    })
                }
            }
            return cc
        }
        function K(cb) {
            var co, b9, ck, cn, cp, cj, b6, cg, cc, ct = [], cf = ac.ext.type.order, ch = cb.aoData, cm = cb.aoColumns, b7, cs, ca, ce, ci, cq = 0, cd, b8 = cb.aiDisplayMaster, cr;
            I(cb);
            cr = aX(cb);
            for (co = 0,
            b9 = cr.length; co < b9; co++) {
                cd = cr[co];
                if (cd.formatter) {
                    cq++
                }
                U(cb, cd.col)
            }
            if (M(cb) != "ssp" && cr.length !== 0) {
                for (co = 0,
                ck = b8.length; co < ck; co++) {
                    ct[b8[co]] = co
                }
                if (cq === cr.length) {
                    b8.sort(function(cC, cB) {
                        var cD, cA, cu, cz, cv, cw = cr.length, cy = ch[cC]._aSortData, cx = ch[cB]._aSortData;
                        for (cu = 0; cu < cw; cu++) {
                            cv = cr[cu];
                            cD = cy[cv.col];
                            cA = cx[cv.col];
                            cz = cD < cA ? -1 : cD > cA ? 1 : 0;
                            if (cz !== 0) {
                                return cv.dir === "asc" ? cz : -cz
                            }
                        }
                        cD = ct[cC];
                        cA = ct[cB];
                        return cD < cA ? -1 : cD > cA ? 1 : 0
                    })
                } else {
                    b8.sort(function(cE, cD) {
                        var cF, cC, cv, cu, cA, cw, cB, cx = cr.length, cz = ch[cE]._aSortData, cy = ch[cD]._aSortData;
                        for (cv = 0; cv < cx; cv++) {
                            cw = cr[cv];
                            cF = cz[cw.col];
                            cC = cy[cw.col];
                            cB = cf[cw.type + "-" + cw.dir] || cf["string-" + cw.dir];
                            cA = cB(cF, cC);
                            if (cA !== 0) {
                                return cA
                            }
                        }
                        cF = ct[cE];
                        cC = ct[cD];
                        return cF < cC ? -1 : cF > cC ? 1 : 0
                    })
                }
            }
            cb.bSorted = true
        }
        function bs(ca) {
            var cg;
            var cf;
            var cb = ca.aoColumns;
            var cc = aX(ca);
            var cd = ca.oLanguage.oAria;
            for (var ce = 0, b8 = cb.length; ce < b8; ce++) {
                var b7 = cb[ce];
                var b9 = b7.asSorting;
                var ch = b7.sTitle.replace(/<.*?>/g, "");
                var b6 = b7.nTh;
                b6.removeAttribute("aria-sort");
                if (b7.bSortable) {
                    if (cc.length > 0 && cc[0].col == ce) {
                        b6.setAttribute("aria-sort", cc[0].dir == "asc" ? "ascending" : "descending");
                        cf = b9[cc[0].index + 1] || b9[0]
                    } else {
                        cf = b9[0]
                    }
                    cg = ch + (cf === "asc" ? cd.sSortAscending : cd.sSortDescending)
                } else {
                    cg = ch
                }
                b6.setAttribute("aria-label", cg)
            }
        }
        function by(b9, cb, b6, cf) {
            var b7 = b9.aoColumns[cb];
            var cd = b9.aaSorting;
            var ca = b7.asSorting;
            var ce;
            var cc = function(ch, ci) {
                var cg = ch._idx;
                if (cg === e) {
                    cg = bU.inArray(ch[1], ca)
                }
                return cg + 1 < ca.length ? cg + 1 : ci ? null  : 0
            }
            ;
            if (typeof cd[0] === "number") {
                cd = b9.aaSorting = [cd]
            }
            if (b6 && b9.oFeatures.bSortMulti) {
                var b8 = bU.inArray(cb, aJ(cd, "0"));
                if (b8 !== -1) {
                    ce = cc(cd[b8], true);
                    if (ce === null ) {
                        cd.splice(b8, 1)
                    } else {
                        cd[b8][1] = ca[ce];
                        cd[b8]._idx = ce
                    }
                } else {
                    cd.push([cb, ca[0], 0]);
                    cd[cd.length - 1]._idx = 0
                }
            } else {
                if (cd.length && cd[0][0] == cb) {
                    ce = cc(cd[0]);
                    cd.length = 1;
                    cd[0][1] = ca[ce];
                    cd[0]._idx = ce
                } else {
                    cd.length = 0;
                    cd.push([cb, ca[0]]);
                    cd[0]._idx = 0
                }
            }
            ay(b9);
            if (typeof cf == "function") {
                cf(b9)
            }
        }
        function Q(b8, b7, ca, b9) {
            var b6 = b8.aoColumns[ca];
            br(b7, {}, function(cb) {
                if (b6.bSortable === false) {
                    return
                }
                if (b8.oFeatures.bProcessing) {
                    J(b8, true);
                    setTimeout(function() {
                        by(b8, ca, cb.shiftKey, b9);
                        if (M(b8) !== "ssp") {
                            J(b8, false)
                        }
                    }, 0)
                } else {
                    by(b8, ca, cb.shiftKey, b9)
                }
            })
        }
        function au(cb) {
            var cc = cb.aLastSort;
            var b7 = cb.oClasses.sSortColumn;
            var b9 = aX(cb);
            var ca = cb.oFeatures;
            var b8, b6, cd;
            if (ca.bSort && ca.bSortClasses) {
                for (b8 = 0,
                b6 = cc.length; b8 < b6; b8++) {
                    cd = cc[b8].src;
                    bU(aJ(cb.aoData, "anCells", cd)).removeClass(b7 + (b8 < 2 ? b8 + 1 : 3))
                }
                for (b8 = 0,
                b6 = b9.length; b8 < b6; b8++) {
                    cd = b9[b8].src;
                    bU(aJ(cb.aoData, "anCells", cd)).addClass(b7 + (b8 < 2 ? b8 + 1 : 3))
                }
            }
            cb.aLastSort = b9
        }
        function U(b6, cb) {
            var b7 = b6.aoColumns[cb];
            var cf = ac.ext.order[b7.sSortDataType];
            var cd;
            if (cf) {
                cd = cf.call(b6.oInstance, b6, cb, bY(b6, cb))
            }
            var ce, b9;
            var ca = ac.ext.type.order[b7.sType + "-pre"];
            for (var b8 = 0, cc = b6.aoData.length; b8 < cc; b8++) {
                ce = b6.aoData[b8];
                if (!ce._aSortData) {
                    ce._aSortData = []
                }
                if (!ce._aSortData[cb] || cf) {
                    b9 = cf ? cd[b8] : bJ(b6, b8, cb, "sort");
                    ce._aSortData[cb] = ca ? ca(b9) : b9
                }
            }
        }
        function bD(b6) {
            if (!b6.oFeatures.bStateSave || b6.bDestroying) {
                return
            }
            var b7 = {
                time: +new Date(),
                start: b6._iDisplayStart,
                length: b6._iDisplayLength,
                order: bU.extend(true, [], b6.aaSorting),
                search: bN(b6.oPreviousSearch),
                columns: bU.map(b6.aoColumns, function(b8, b9) {
                    return {
                        visible: b8.bVisible,
                        search: bN(b6.aoPreSearchCols[b9])
                    }
                })
            };
            aa(b6, "aoStateSaveParams", "stateSaveParams", [b6, b7]);
            b6.oSavedState = b7;
            b6.fnStateSaveCallback.call(b6.oInstance, b6, b7)
        }
        function b3(b8, cd) {
            var cb, ce;
            var b9 = b8.aoColumns;
            if (!b8.oFeatures.bStateSave) {
                return
            }
            var b6 = b8.fnStateLoadCallback.call(b8.oInstance, b8);
            if (!b6 || !b6.time) {
                return
            }
            var cc = aa(b8, "aoStateLoadParams", "stateLoadParams", [b8, b6]);
            if (bU.inArray(false, cc) !== -1) {
                return
            }
            var ca = b8.iStateDuration;
            if (ca > 0 && b6.time < +new Date() - (ca * 1000)) {
                return
            }
            if (b9.length !== b6.columns.length) {
                return
            }
            b8.oLoadedState = bU.extend(true, {}, b6);
            b8._iDisplayStart = b6.start;
            b8.iInitDisplayStart = b6.start;
            b8._iDisplayLength = b6.length;
            b8.aaSorting = [];
            bU.each(b6.order, function(cg, cf) {
                b8.aaSorting.push(cf[0] >= b9.length ? [0, cf[1]] : cf)
            });
            bU.extend(b8.oPreviousSearch, aU(b6.search));
            for (cb = 0,
            ce = b6.columns.length; cb < ce; cb++) {
                var b7 = b6.columns[cb];
                b9[cb].bVisible = b7.visible;
                bU.extend(b8.aoPreSearchCols[cb], aU(b7.search))
            }
            aa(b8, "aoStateLoaded", "stateLoaded", [b8, b6])
        }
        function aD(b8) {
            var b7 = ac.settings;
            var b6 = bU.inArray(b8, aJ(b7, "nTable"));
            return b6 !== -1 ? b7[b6] : null 
        }
        function a2(b9, cb, ca, b6) {
            ca = "DataTables warning: " + (b9 !== null  ? "table id=" + b9.sTableId + " - " : "") + ca;
            if (b6) {
                ca += ". For more information about this error, please see http://datatables.net/tn/" + b6
            }
            if (!cb) {
                var b8 = ac.ext;
                var b7 = b8.sErrMode || b8.errMode;
                aa(b9, null , "error", [b9, b6, ca]);
                if (b7 == "alert") {
                    alert(ca)
                } else {
                    if (b7 == "throw") {
                        throw new Error(ca)
                    } else {
                        if (typeof b7 == "function") {
                            b7(b9, b6, ca)
                        }
                    }
                }
            } else {
                if (d.console && console.log) {
                    console.log(ca)
                }
            }
        }
        function ag(b7, b9, b6, b8) {
            if (bU.isArray(b6)) {
                bU.each(b6, function(ca, cb) {
                    if (bU.isArray(cb)) {
                        ag(b7, b9, cb[0], cb[1])
                    } else {
                        ag(b7, b9, cb)
                    }
                });
                return
            }
            if (b8 === e) {
                b8 = b6
            }
            if (b9[b6] !== e) {
                b7[b8] = b9[b6]
            }
        }
        function bc(b6, b8, b7) {
            var b9;
            for (var ca in b8) {
                if (b8.hasOwnProperty(ca)) {
                    b9 = b8[ca];
                    if (bU.isPlainObject(b9)) {
                        if (!bU.isPlainObject(b6[ca])) {
                            b6[ca] = {}
                        }
                        bU.extend(true, b6[ca], b9)
                    } else {
                        if (b7 && ca !== "data" && ca !== "aaData" && bU.isArray(b9)) {
                            b6[ca] = b9.slice()
                        } else {
                            b6[ca] = b9
                        }
                    }
                }
            }
            return b6
        }
        function br(b8, b7, b6) {
            bU(b8).bind("click.DT", b7, function(b9) {
                b8.blur();
                b6(b9)
            }).bind("keypress.DT", b7, function(b9) {
                if (b9.which === 13) {
                    b9.preventDefault();
                    b6(b9)
                }
            }).bind("selectstart.DT", function() {
                return false
            })
        }
        function b2(b9, b7, b6, b8) {
            if (b6) {
                b9[b7].push({
                    fn: b6,
                    sName: b8
                })
            }
        }
        function aa(b8, b9, ca, b7) {
            var b6 = [];
            if (b9) {
                b6 = bU.map(b8[b9].slice().reverse(), function(cc, cb) {
                    return cc.fn.apply(b8.oInstance, b7)
                })
            }
            if (ca !== null ) {
                bU(b8.nTable).trigger(ca + ".dt", b7)
            }
            return b6
        }
        function bA(b8) {
            var b9 = b8._iDisplayStart
              , b7 = b8.fnDisplayEnd()
              , b6 = b8._iDisplayLength;
            if (b9 >= b7) {
                b9 = b7 - b6
            }
            b9 -= (b9 % b6);
            if (b6 === -1 || b9 < 0) {
                b9 = 0
            }
            b8._iDisplayStart = b9
        }
        function ah(b7, b6) {
            var b9 = b7.renderer;
            var b8 = ac.ext.renderer[b6];
            if (bU.isPlainObject(b9) && b9[b6]) {
                return b8[b9[b6]] || b8._
            } else {
                if (typeof b9 === "string") {
                    return b8[b9] || b8._
                }
            }
            return b8._
        }
        function M(b6) {
            if (b6.oFeatures.bServerSide) {
                return "ssp"
            } else {
                if (b6.ajax || b6.sAjaxSource) {
                    return "ajax"
                }
            }
            return "dom"
        }
        ac = function(b8) {
            this.$ = function(cc, cb) {
                return this.api(true).$(cc, cb)
            }
            ;
            this._ = function(cc, cb) {
                return this.api(true).rows(cc, cb).data()
            }
            ;
            this.api = function(cb) {
                return cb ? new Y(aD(this[W.iApiIndex])) : new Y(this)
            }
            ;
            this.fnAddData = function(cd, ce) {
                var cb = this.api(true);
                var cc = bU.isArray(cd) && (bU.isArray(cd[0]) || bU.isPlainObject(cd[0])) ? cb.rows.add(cd) : cb.row.add(cd);
                if (ce === e || ce) {
                    cb.draw()
                }
                return cc.flatten().toArray()
            }
            ;
            this.fnAdjustColumnSizing = function(ce) {
                var cd = this.api(true).columns.adjust();
                var cc = cd.settings()[0];
                var cb = cc.oScroll;
                if (ce === e || ce) {
                    cd.draw(false)
                } else {
                    if (cb.sX !== "" || cb.sY !== "") {
                        u(cc)
                    }
                }
            }
            ;
            this.fnClearTable = function(cc) {
                var cb = this.api(true).clear();
                if (cc === e || cc) {
                    cb.draw()
                }
            }
            ;
            this.fnClose = function(cb) {
                this.api(true).row(cb).child.hide()
            }
            ;
            this.fnDeleteRow = function(cf, ch, cg) {
                var cc = this.api(true);
                var ce = cc.rows(cf);
                var cb = ce.settings()[0];
                var cd = cb.aoData[ce[0][0]];
                ce.remove();
                if (ch) {
                    ch.call(this, cb, cd)
                }
                if (cg === e || cg) {
                    cc.draw()
                }
                return cd
            }
            ;
            this.fnDestroy = function(cb) {
                this.api(true).destroy(cb)
            }
            ;
            this.fnDraw = function(cb) {
                this.api(true).draw(!cb)
            }
            ;
            this.fnFilter = function(cf, cc, cd, ch, cg, cb) {
                var ce = this.api(true);
                if (cc === null  || cc === e) {
                    ce.search(cf, cd, ch, cb)
                } else {
                    ce.column(cc).search(cf, cd, ch, cb)
                }
                ce.draw()
            }
            ;
            this.fnGetData = function(ce, cb) {
                var cd = this.api(true);
                if (ce !== e) {
                    var cc = ce.nodeName ? ce.nodeName.toLowerCase() : "";
                    return cb !== e || cc == "td" || cc == "th" ? cd.cell(ce, cb).data() : cd.row(ce).data() || null 
                }
                return cd.data().toArray()
            }
            ;
            this.fnGetNodes = function(cc) {
                var cb = this.api(true);
                return cc !== e ? cb.row(cc).node() : cb.rows().nodes().flatten().toArray()
            }
            ;
            this.fnGetPosition = function(cd) {
                var cc = this.api(true);
                var ce = cd.nodeName.toUpperCase();
                if (ce == "TR") {
                    return cc.row(cd).index()
                } else {
                    if (ce == "TD" || ce == "TH") {
                        var cb = cc.cell(cd).index();
                        return [cb.row, cb.columnVisible, cb.column]
                    }
                }
                return null 
            }
            ;
            this.fnIsOpen = function(cb) {
                return this.api(true).row(cb).child.isShown()
            }
            ;
            this.fnOpen = function(cc, cb, cd) {
                return this.api(true).row(cc).child(cb, cd).show().child()[0]
            }
            ;
            this.fnPageChange = function(cb, cd) {
                var cc = this.api(true).page(cb);
                if (cd === e || cd) {
                    cc.draw(false)
                }
            }
            ;
            this.fnSetColumnVis = function(cc, cb, ce) {
                var cd = this.api(true).column(cc).visible(cb);
                if (ce === e || ce) {
                    cd.columns.adjust().draw()
                }
            }
            ;
            this.fnSettings = function() {
                return aD(this[W.iApiIndex])
            }
            ;
            this.fnSort = function(cb) {
                this.api(true).order(cb).draw()
            }
            ;
            this.fnSortListener = function(cc, cb, cd) {
                this.api(true).order.listener(cc, cb, cd)
            }
            ;
            this.fnUpdate = function(cf, ce, cb, cg, cd) {
                var cc = this.api(true);
                if (cb === e || cb === null ) {
                    cc.row(ce).data(cf)
                } else {
                    cc.cell(ce, cb).data(cf)
                }
                if (cd === e || cd) {
                    cc.columns.adjust()
                }
                if (cg === e || cg) {
                    cc.draw()
                }
                return 0
            }
            ;
            this.fnVersionCheck = W.fnVersionCheck;
            var b9 = this;
            var b7 = b8 === e;
            var b6 = this.length;
            if (b7) {
                b8 = {}
            }
            this.oApi = this.internal = W.internal;
            for (var ca in ac.ext.internal) {
                if (ca) {
                    this[ca] = ax(ca)
                }
            }
            this.each(function() {
                var cw = {};
                var cs = b6 > 1 ? bc(cw, b8, true) : b8;
                var cC = 0, cA, cB, cF, cz, cb;
                var cn = this.getAttribute("id");
                var ck = false;
                var cq = ac.defaults;
                var cm = bU(this);
                if (this.nodeName.toLowerCase() != "table") {
                    a2(null , 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
                    return
                }
                bj(cq);
                am(cq.column);
                ap(cq, cq, true);
                ap(cq.column, cq.column, true);
                ap(cq, bU.extend(cs, cm.data()));
                var ch = ac.settings;
                for (cC = 0,
                cA = ch.length; cC < cA; cC++) {
                    var ct = ch[cC];
                    if (ct.nTable == this || ct.nTHead.parentNode == this || (ct.nTFoot && ct.nTFoot.parentNode == this)) {
                        var cy = cs.bRetrieve !== e ? cs.bRetrieve : cq.bRetrieve;
                        var cp = cs.bDestroy !== e ? cs.bDestroy : cq.bDestroy;
                        if (b7 || cy) {
                            return ct.oInstance
                        } else {
                            if (cp) {
                                ct.oInstance.fnDestroy();
                                break
                            } else {
                                a2(ct, 0, "Cannot reinitialise DataTable", 3);
                                return
                            }
                        }
                    }
                    if (ct.sTableId == this.id) {
                        ch.splice(cC, 1);
                        break
                    }
                }
                if (cn === null  || cn === "") {
                    cn = "DataTables_Table_" + (ac.ext._unique++);
                    this.id = cn
                }
                var ci = bU.extend(true, {}, ac.models.oSettings, {
                    nTable: this,
                    oApi: b9.internal,
                    oInit: cs,
                    sDestroyWidth: cm[0].style.width,
                    sInstance: cn,
                    sTableId: cn
                });
                ch.push(ci);
                ci.oInstance = (b9.length === 1) ? b9 : cm.dataTable();
                bj(cs);
                if (cs.oLanguage) {
                    a7(cs.oLanguage)
                }
                if (cs.aLengthMenu && !cs.iDisplayLength) {
                    cs.iDisplayLength = bU.isArray(cs.aLengthMenu[0]) ? cs.aLengthMenu[0][0] : cs.aLengthMenu[0]
                }
                cs = bc(bU.extend(true, {}, cq), cs);
                ag(ci.oFeatures, cs, ["bPaginate", "bLengthChange", "bFilter", "bSort", "bSortMulti", "bInfo", "bProcessing", "bAutoWidth", "bSortClasses", "bServerSide", "bDeferRender"]);
                ag(ci, cs, ["asStripeClasses", "ajax", "fnServerData", "fnFormatNumber", "sServerMethod", "aaSorting", "aaSortingFixed", "aLengthMenu", "sPaginationType", "sAjaxSource", "sAjaxDataProp", "iStateDuration", "sDom", "bSortCellsTop", "iTabIndex", "fnStateLoadCallback", "fnStateSaveCallback", "renderer", "searchDelay", ["iCookieDuration", "iStateDuration"], ["oSearch", "oPreviousSearch"], ["aoSearchCols", "aoPreSearchCols"], ["iDisplayLength", "_iDisplayLength"], ["bJQueryUI", "bJUI"]]);
                ag(ci.oScroll, cs, [["sScrollX", "sX"], ["sScrollXInner", "sXInner"], ["sScrollY", "sY"], ["bScrollCollapse", "bCollapse"]]);
                ag(ci.oLanguage, cs, "fnInfoCallback");
                b2(ci, "aoDrawCallback", cs.fnDrawCallback, "user");
                b2(ci, "aoServerParams", cs.fnServerParams, "user");
                b2(ci, "aoStateSaveParams", cs.fnStateSaveParams, "user");
                b2(ci, "aoStateLoadParams", cs.fnStateLoadParams, "user");
                b2(ci, "aoStateLoaded", cs.fnStateLoaded, "user");
                b2(ci, "aoRowCallback", cs.fnRowCallback, "user");
                b2(ci, "aoRowCreatedCallback", cs.fnCreatedRow, "user");
                b2(ci, "aoHeaderCallback", cs.fnHeaderCallback, "user");
                b2(ci, "aoFooterCallback", cs.fnFooterCallback, "user");
                b2(ci, "aoInitComplete", cs.fnInitComplete, "user");
                b2(ci, "aoPreDrawCallback", cs.fnPreDrawCallback, "user");
                var co = ci.oClasses;
                if (cs.bJQueryUI) {
                    bU.extend(co, ac.ext.oJUIClasses, cs.oClasses);
                    if (cs.sDom === cq.sDom && cq.sDom === "lfrtip") {
                        ci.sDom = '<"H"lfr>t<"F"ip>'
                    }
                    if (!ci.renderer) {
                        ci.renderer = "jqueryui"
                    } else {
                        if (bU.isPlainObject(ci.renderer) && !ci.renderer.header) {
                            ci.renderer.header = "jqueryui"
                        }
                    }
                } else {
                    bU.extend(co, ac.ext.classes, cs.oClasses)
                }
                cm.addClass(co.sTable);
                if (ci.oScroll.sX !== "" || ci.oScroll.sY !== "") {
                    ci.oScroll.iBarWidth = bq()
                }
                if (ci.oScroll.sX === true) {
                    ci.oScroll.sX = "100%"
                }
                if (ci.iInitDisplayStart === e) {
                    ci.iInitDisplayStart = cs.iDisplayStart;
                    ci._iDisplayStart = cs.iDisplayStart
                }
                if (cs.iDeferLoading !== null ) {
                    ci.bDeferLoading = true;
                    var cG = bU.isArray(cs.iDeferLoading);
                    ci._iRecordsDisplay = cG ? cs.iDeferLoading[0] : cs.iDeferLoading;
                    ci._iRecordsTotal = cG ? cs.iDeferLoading[1] : cs.iDeferLoading
                }
                var cv = ci.oLanguage;
                bU.extend(true, cv, cs.oLanguage);
                if (cv.sUrl !== "") {
                    bU.ajax({
                        dataType: "json",
                        url: cv.sUrl,
                        success: function(cI) {
                            a7(cI);
                            ap(cq.oLanguage, cI);
                            bU.extend(true, cv, cI);
                            o(ci)
                        },
                        error: function() {
                            o(ci)
                        }
                    });
                    ck = true
                }
                if (cs.asStripeClasses === null ) {
                    ci.asStripeClasses = [co.sStripeOdd, co.sStripeEven]
                }
                var cD = ci.asStripeClasses;
                var cg = bU("tbody tr", this).eq(0);
                if (bU.inArray(true, bU.map(cD, function(cJ, cI) {
                    return cg.hasClass(cJ)
                })) !== -1) {
                    bU("tbody tr", this).removeClass(cD.join(" "));
                    ci.asDestroyStripes = cD.slice()
                }
                var cx = [];
                var cf;
                var cu = this.getElementsByTagName("thead");
                if (cu.length !== 0) {
                    aL(ci.aoHeader, cu[0]);
                    cx = bw(ci)
                }
                if (cs.aoColumns === null ) {
                    cf = [];
                    for (cC = 0,
                    cA = cx.length; cC < cA; cC++) {
                        cf.push(null )
                    }
                } else {
                    cf = cs.aoColumns
                }
                for (cC = 0,
                cA = cf.length; cC < cA; cC++) {
                    ad(ci, cx ? cx[cC] : null )
                }
                r(ci, cs.aoColumnDefs, cf, function(cJ, cI) {
                    bh(ci, cJ, cI)
                });
                if (cg.length) {
                    var cH = function(cI, cJ) {
                        return cI.getAttribute("data-" + cJ) !== null  ? cJ : null 
                    }
                    ;
                    bU.each(bu(ci, cg[0]).cells, function(cL, cI) {
                        var cJ = ci.aoColumns[cL];
                        if (cJ.mData === cL) {
                            var cK = cH(cI, "sort") || cH(cI, "order");
                            var cM = cH(cI, "filter") || cH(cI, "search");
                            if (cK !== null  || cM !== null ) {
                                cJ.mData = {
                                    _: cL + ".display",
                                    sort: cK !== null  ? cL + ".@data-" + cK : e,
                                    type: cK !== null  ? cL + ".@data-" + cK : e,
                                    filter: cM !== null  ? cL + ".@data-" + cM : e
                                };
                                bh(ci, cL)
                            }
                        }
                    })
                }
                var cj = ci.oFeatures;
                if (cs.bStateSave) {
                    cj.bStateSave = true;
                    b3(ci, cs);
                    b2(ci, "aoDrawCallback", bD, "state_save")
                }
                if (cs.aaSorting === e) {
                    var ce = ci.aaSorting;
                    for (cC = 0,
                    cA = ce.length; cC < cA; cC++) {
                        ce[cC][1] = ci.aoColumns[cC].asSorting[0]
                    }
                }
                au(ci);
                if (cj.bSort) {
                    b2(ci, "aoDrawCallback", function() {
                        if (ci.bSorted) {
                            var cI = aX(ci);
                            var cJ = {};
                            bU.each(cI, function(cK, cL) {
                                cJ[cL.src] = cL.dir
                            });
                            aa(ci, null , "order", [ci, cI, cJ]);
                            bs(ci)
                        }
                    })
                }
                b2(ci, "aoDrawCallback", function() {
                    if (ci.bSorted || M(ci) === "ssp" || cj.bDeferRender) {
                        au(ci)
                    }
                }, "sc");
                bt(ci);
                var cd = cm.children("caption").each(function() {
                    this._captionSide = cm.css("caption-side")
                });
                var cE = cm.children("thead");
                if (cE.length === 0) {
                    cE = bU("<thead/>").appendTo(this)
                }
                ci.nTHead = cE[0];
                var cc = cm.children("tbody");
                if (cc.length === 0) {
                    cc = bU("<tbody/>").appendTo(this)
                }
                ci.nTBody = cc[0];
                var cr = cm.children("tfoot");
                if (cr.length === 0 && cd.length > 0 && (ci.oScroll.sX !== "" || ci.oScroll.sY !== "")) {
                    cr = bU("<tfoot/>").appendTo(this)
                }
                if (cr.length === 0 || cr.children().length === 0) {
                    cm.addClass(co.sNoFooter)
                } else {
                    if (cr.length > 0) {
                        ci.nTFoot = cr[0];
                        aL(ci.aoFooter, ci.nTFoot)
                    }
                }
                if (cs.aaData) {
                    for (cC = 0; cC < cs.aaData.length; cC++) {
                        a3(ci, cs.aaData[cC])
                    }
                } else {
                    if (ci.bDeferLoading || M(ci) == "dom") {
                        b5(ci, bU(ci.nTBody).children("tr"))
                    }
                }
                ci.aiDisplay = ci.aiDisplayMaster.slice();
                ci.bInitialised = true;
                if (ck === false) {
                    o(ci)
                }
            });
            b9 = null ;
            return this
        }
        ;
        var aj = [];
        var B = Array.prototype;
        var b4 = function(b8) {
            var b6, ca;
            var b9 = ac.settings;
            var b7 = bU.map(b9, function(cc, cb) {
                return cc.nTable
            });
            if (!b8) {
                return []
            } else {
                if (b8.nTable && b8.oApi) {
                    return [b8]
                } else {
                    if (b8.nodeName && b8.nodeName.toLowerCase() === "table") {
                        b6 = bU.inArray(b8, b7);
                        return b6 !== -1 ? [b9[b6]] : null 
                    } else {
                        if (b8 && typeof b8.settings === "function") {
                            return b8.settings().toArray()
                        } else {
                            if (typeof b8 === "string") {
                                ca = bU(b8)
                            } else {
                                if (b8 instanceof bU) {
                                    ca = b8
                                }
                            }
                        }
                    }
                }
            }
            if (ca) {
                return ca.map(function(cb) {
                    b6 = bU.inArray(this, b7);
                    return b6 !== -1 ? b9[b6] : null 
                }).toArray()
            }
        }
        ;
        Y = function(b8, ca) {
            if (!this instanceof Y) {
                throw "DT API must be constructed as a new object"
            }
            var b9 = [];
            var cb = function(cd) {
                var cc = b4(cd);
                if (cc) {
                    b9.push.apply(b9, cc)
                }
            }
            ;
            if (bU.isArray(b8)) {
                for (var b7 = 0, b6 = b8.length; b7 < b6; b7++) {
                    cb(b8[b7])
                }
            } else {
                cb(b8)
            }
            this.context = aW(b9);
            if (ca) {
                this.push.apply(this, ca.toArray ? ca.toArray() : ca)
            }
            this.selector = {
                rows: null ,
                cols: null ,
                opts: null 
            };
            Y.extend(this, this, aj)
        }
        ;
        ac.Api = Y;
        Y.prototype = {
            concat: B.concat,
            context: [],
            each: function(b8) {
                for (var b7 = 0, b6 = this.length; b7 < b6; b7++) {
                    b8.call(this, this[b7], b7, this)
                }
                return this
            },
            eq: function(b6) {
                var b7 = this.context;
                return b7.length > b6 ? new Y(b7[b6],this[b6]) : null 
            },
            filter: function(b9) {
                var b7 = [];
                if (B.filter) {
                    b7 = B.filter.call(this, b9, this)
                } else {
                    for (var b8 = 0, b6 = this.length; b8 < b6; b8++) {
                        if (b9.call(this, this[b8], b8, this)) {
                            b7.push(this[b8])
                        }
                    }
                }
                return new Y(this.context,b7)
            },
            flatten: function() {
                var b6 = [];
                return new Y(this.context,b6.concat.apply(b6, this.toArray()))
            },
            join: B.join,
            indexOf: B.indexOf || function(b8, b9) {
                for (var b7 = (b9 || 0), b6 = this.length; b7 < b6; b7++) {
                    if (this[b7] === b8) {
                        return b7
                    }
                }
                return -1
            }
            ,
            iterator: function(co, b8, b9, cb) {
                var cm = [], cn, ci, b6, cg, cf, b7 = this.context, ca, cd, ck, ch = this.selector;
                if (typeof co === "string") {
                    cb = b9;
                    b9 = b8;
                    b8 = co;
                    co = false
                }
                for (ci = 0,
                b6 = b7.length; ci < b6; ci++) {
                    var ce = new Y(b7[ci]);
                    if (b8 === "table") {
                        cn = b9.call(ce, b7[ci], ci);
                        if (cn !== e) {
                            cm.push(cn)
                        }
                    } else {
                        if (b8 === "columns" || b8 === "rows") {
                            cn = b9.call(ce, b7[ci], this[ci], ci);
                            if (cn !== e) {
                                cm.push(cn)
                            }
                        } else {
                            if (b8 === "column" || b8 === "column-rows" || b8 === "row" || b8 === "cell") {
                                cd = this[ci];
                                if (b8 === "column-rows") {
                                    ca = a4(b7[ci], ch.opts)
                                }
                                for (cg = 0,
                                cf = cd.length; cg < cf; cg++) {
                                    ck = cd[cg];
                                    if (b8 === "cell") {
                                        cn = b9.call(ce, b7[ci], ck.row, ck.column, ci, cg)
                                    } else {
                                        cn = b9.call(ce, b7[ci], ck, ci, cg, ca)
                                    }
                                    if (cn !== e) {
                                        cm.push(cn)
                                    }
                                }
                            }
                        }
                    }
                }
                if (cm.length || cb) {
                    var cc = new Y(b7,co ? cm.concat.apply([], cm) : cm);
                    var cj = cc.selector;
                    cj.rows = ch.rows;
                    cj.cols = ch.cols;
                    cj.opts = ch.opts;
                    return cc
                }
                return this
            },
            lastIndexOf: B.lastIndexOf || function(b6, b7) {
                return this.indexOf.apply(this.toArray.reverse(), arguments)
            }
            ,
            length: 0,
            map: function(b9) {
                var b7 = [];
                if (B.map) {
                    b7 = B.map.call(this, b9, this)
                } else {
                    for (var b8 = 0, b6 = this.length; b8 < b6; b8++) {
                        b7.push(b9.call(this, this[b8], b8))
                    }
                }
                return new Y(this.context,b7)
            },
            pluck: function(b6) {
                return this.map(function(b7) {
                    return b7[b6]
                })
            },
            pop: B.pop,
            push: B.push,
            reduce: B.reduce || function(b6, b7) {
                return ba(this, b6, b7, 0, this.length, 1)
            }
            ,
            reduceRight: B.reduceRight || function(b6, b7) {
                return ba(this, b6, b7, this.length - 1, -1, -1)
            }
            ,
            reverse: B.reverse,
            selector: null ,
            shift: B.shift,
            sort: B.sort,
            splice: B.splice,
            toArray: function() {
                return B.slice.call(this)
            },
            to$: function() {
                return bU(this)
            },
            toJQuery: function() {
                return bU(this)
            },
            unique: function() {
                return new Y(this.context,aW(this))
            },
            unshift: B.unshift
        };
        Y.extend = function(ce, ca, b7) {
            if (!b7.length || !ca || (!(ca instanceof Y) && !ca.__dt_wrapper)) {
                return
            }
            var cb, cd, b9, b6, b8, cf, cc = function(ch, cg, ci) {
                return function() {
                    var cj = cg.apply(ch, arguments);
                    Y.extend(cj, cj, ci.methodExt);
                    return cj
                }
            }
            ;
            for (cb = 0,
            cd = b7.length; cb < cd; cb++) {
                b8 = b7[cb];
                ca[b8.name] = typeof b8.val === "function" ? cc(ce, b8.val, b8) : bU.isPlainObject(b8.val) ? {} : b8.val;
                ca[b8.name].__dt_wrapper = true;
                Y.extend(ce, ca[b8.name], b8.propExt)
            }
        }
        ;
        Y.register = bz = function(b8, ca) {
            if (bU.isArray(b8)) {
                for (var cd = 0, b9 = b8.length; cd < b9; cd++) {
                    Y.register(b8[cd], ca)
                }
                return
            }
            var ce, ch, cb = b8.split("."), cc = aj, cg, b7;
            var cf = function(cm, cj) {
                for (var ck = 0, ci = cm.length; ck < ci; ck++) {
                    if (cm[ck].name === cj) {
                        return cm[ck]
                    }
                }
                return null 
            }
            ;
            for (ce = 0,
            ch = cb.length; ce < ch; ce++) {
                b7 = cb[ce].indexOf("()") !== -1;
                cg = b7 ? cb[ce].replace("()", "") : cb[ce];
                var b6 = cf(cc, cg);
                if (!b6) {
                    b6 = {
                        name: cg,
                        val: {},
                        methodExt: [],
                        propExt: []
                    };
                    cc.push(b6)
                }
                if (ce === ch - 1) {
                    b6.val = ca
                } else {
                    cc = b7 ? b6.methodExt : b6.propExt
                }
            }
        }
        ;
        Y.registerPlural = aQ = function(b6, b8, b7) {
            Y.register(b6, b7);
            Y.register(b8, function() {
                var b9 = b7.apply(this, arguments);
                if (b9 === this) {
                    return this
                } else {
                    if (b9 instanceof Y) {
                        return b9.length ? bU.isArray(b9[0]) ? new Y(b9.context,b9[0]) : b9[0] : e
                    }
                }
                return b9
            })
        }
        ;
        var f = function(b6, b7) {
            if (typeof b6 === "number") {
                return [b7[b6]]
            }
            var b8 = bU.map(b7, function(ca, b9) {
                return ca.nTable
            });
            return bU(b8).filter(b6).map(function(ca) {
                var b9 = bU.inArray(this, b8);
                return b7[b9]
            }).toArray()
        }
        ;
        bz("tables()", function(b6) {
            return b6 ? new Y(f(b6, this.context)) : this
        });
        bz("table()", function(b6) {
            var b8 = this.tables(b6);
            var b7 = b8.context;
            return b7.length ? new Y(b7[0]) : b8
        });
        aQ("tables().nodes()", "table().node()", function() {
            return this.iterator("table", function(b6) {
                return b6.nTable
            }, 1)
        });
        aQ("tables().body()", "table().body()", function() {
            return this.iterator("table", function(b6) {
                return b6.nTBody
            }, 1)
        });
        aQ("tables().header()", "table().header()", function() {
            return this.iterator("table", function(b6) {
                return b6.nTHead
            }, 1)
        });
        aQ("tables().footer()", "table().footer()", function() {
            return this.iterator("table", function(b6) {
                return b6.nTFoot
            }, 1)
        });
        aQ("tables().containers()", "table().container()", function() {
            return this.iterator("table", function(b6) {
                return b6.nTableWrapper
            }, 1)
        });
        bz("draw()", function(b6) {
            return this.iterator("table", function(b7) {
                ay(b7, b6 === false)
            })
        });
        bz("page()", function(b6) {
            if (b6 === e) {
                return this.page.info().page
            }
            return this.iterator("table", function(b7) {
                aV(b7, b6)
            })
        });
        bz("page.info()", function(ca) {
            if (this.context.length === 0) {
                return e
            }
            var b9 = this.context[0]
              , cb = b9._iDisplayStart
              , b6 = b9._iDisplayLength
              , b7 = b9.fnRecordsDisplay()
              , b8 = b6 === -1;
            return {
                page: b8 ? 0 : Math.floor(cb / b6),
                pages: b8 ? 1 : Math.ceil(b7 / b6),
                start: cb,
                end: b9.fnDisplayEnd(),
                length: b6,
                recordsTotal: b9.fnRecordsTotal(),
                recordsDisplay: b7
            }
        });
        bz("page.len()", function(b6) {
            if (b6 === e) {
                return this.context.length !== 0 ? this.context[0]._iDisplayLength : e
            }
            return this.iterator("table", function(b7) {
                a8(b7, b6)
            })
        });
        var V = function(b8, b6, b9) {
            if (M(b8) == "ssp") {
                ay(b8, b6)
            } else {
                J(b8, true);
                aK(b8, [], function(cc) {
                    bx(b8);
                    var cd = bI(b8, cc);
                    for (var cb = 0, ca = cd.length; cb < ca; cb++) {
                        a3(b8, cd[cb])
                    }
                    ay(b8, b6);
                    J(b8, false)
                })
            }
            if (b9) {
                var b7 = new Y(b8);
                b7.one("draw", function() {
                    b9(b7.ajax.json())
                })
            }
        }
        ;
        bz("ajax.json()", function() {
            var b6 = this.context;
            if (b6.length > 0) {
                return b6[0].json
            }
        });
        bz("ajax.params()", function() {
            var b6 = this.context;
            if (b6.length > 0) {
                return b6[0].oAjaxData
            }
        });
        bz("ajax.reload()", function(b7, b6) {
            return this.iterator("table", function(b8) {
                V(b8, b6 === false, b7)
            })
        });
        bz("ajax.url()", function(b7) {
            var b6 = this.context;
            if (b7 === e) {
                if (b6.length === 0) {
                    return e
                }
                b6 = b6[0];
                return b6.ajax ? bU.isPlainObject(b6.ajax) ? b6.ajax.url : b6.ajax : b6.sAjaxSource
            }
            return this.iterator("table", function(b8) {
                if (bU.isPlainObject(b8.ajax)) {
                    b8.ajax.url = b7
                } else {
                    b8.ajax = b7
                }
            })
        });
        bz("ajax.url().load()", function(b7, b6) {
            return this.iterator("table", function(b8) {
                V(b8, b6 === false, b7)
            })
        });
        var aF = function(b7, cd) {
            var b8 = [], cb, cc, ca, cf, b9, b6, ce = typeof b7;
            if (!b7 || ce === "string" || ce === "function" || b7.length === e) {
                b7 = [b7]
            }
            for (ca = 0,
            cf = b7.length; ca < cf; ca++) {
                cc = b7[ca] && b7[ca].split ? b7[ca].split(",") : [b7[ca]];
                for (b9 = 0,
                b6 = cc.length; b9 < b6; b9++) {
                    cb = cd(typeof cc[b9] === "string" ? bU.trim(cc[b9]) : cc[b9]);
                    if (cb && cb.length) {
                        b8.push.apply(b8, cb)
                    }
                }
            }
            return b8
        }
        ;
        var bT = function(b6) {
            if (!b6) {
                b6 = {}
            }
            if (b6.filter && !b6.search) {
                b6.search = b6.filter
            }
            return {
                search: b6.search || "none",
                order: b6.order || "current",
                page: b6.page || "all"
            }
        }
        ;
        var N = function(b8) {
            for (var b7 = 0, b6 = b8.length; b7 < b6; b7++) {
                if (b8[b7].length > 0) {
                    b8[0] = b8[b7];
                    b8.length = 1;
                    b8.context = [b8.context[b7]];
                    return b8
                }
            }
            b8.length = 0;
            return b8
        }
        ;
        var a4 = function(b8, b6) {
            var b9, cf, ca, cd = [], ce = b8.aiDisplay, cb = b8.aiDisplayMaster;
            var cg = b6.search
              , b7 = b6.order
              , cc = b6.page;
            if (M(b8) == "ssp") {
                return cg === "removed" ? [] : bv(0, cb.length)
            } else {
                if (cc == "current") {
                    for (b9 = b8._iDisplayStart,
                    cf = b8.fnDisplayEnd(); b9 < cf; b9++) {
                        cd.push(ce[b9])
                    }
                } else {
                    if (b7 == "current" || b7 == "applied") {
                        cd = cg == "none" ? cb.slice() : cg == "applied" ? ce.slice() : bU.map(cb, function(ci, ch) {
                            return bU.inArray(ci, ce) === -1 ? ci : null 
                        })
                    } else {
                        if (b7 == "index" || b7 == "original") {
                            for (b9 = 0,
                            cf = b8.aoData.length; b9 < cf; b9++) {
                                if (cg == "none") {
                                    cd.push(b9)
                                } else {
                                    ca = bU.inArray(b9, ce);
                                    if ((ca === -1 && cg == "removed") || (ca >= 0 && cg == "applied")) {
                                        cd.push(b9)
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return cd
        }
        ;
        var S = function(b7, b6, b8) {
            return aF(b6, function(ce) {
                var cb = T(ce);
                var cc, b9;
                if (cb !== null  && !b8) {
                    return [cb]
                }
                var cd = a4(b7, b8);
                if (cb !== null  && bU.inArray(cb, cd) !== -1) {
                    return [cb]
                } else {
                    if (!ce) {
                        return cd
                    }
                }
                if (typeof ce === "function") {
                    return bU.map(cd, function(cf) {
                        var cg = b7.aoData[cf];
                        return ce(cf, cg._aData, cg.nTr) ? cf : null 
                    })
                }
                var ca = at(G(b7.aoData, cd, "nTr"));
                if (ce.nodeName) {
                    if (bU.inArray(ce, ca) !== -1) {
                        return [ce._DT_RowIndex]
                    }
                }
                return bU(ca).filter(ce).map(function() {
                    return this._DT_RowIndex
                }).toArray()
            })
        }
        ;
        bz("rows()", function(b6, b7) {
            if (b6 === e) {
                b6 = ""
            } else {
                if (bU.isPlainObject(b6)) {
                    b7 = b6;
                    b6 = ""
                }
            }
            b7 = bT(b7);
            var b8 = this.iterator("table", function(b9) {
                return S(b9, b6, b7)
            }, 1);
            b8.selector.rows = b6;
            b8.selector.opts = b7;
            return b8
        });
        bz("rows().nodes()", function() {
            return this.iterator("row", function(b6, b7) {
                return b6.aoData[b7].nTr || e
            }, 1)
        });
        bz("rows().data()", function() {
            return this.iterator(true, "rows", function(b6, b7) {
                return G(b6.aoData, b7, "_aData")
            }, 1)
        });
        aQ("rows().cache()", "row().cache()", function(b6) {
            return this.iterator("row", function(b7, b9) {
                var b8 = b7.aoData[b9];
                return b6 === "search" ? b8._aFilterData : b8._aSortData
            }, 1)
        });
        aQ("rows().invalidate()", "row().invalidate()", function(b6) {
            return this.iterator("row", function(b7, b8) {
                P(b7, b8, b6)
            })
        });
        aQ("rows().indexes()", "row().index()", function() {
            return this.iterator("row", function(b6, b7) {
                return b7
            }, 1)
        });
        aQ("rows().remove()", "row().remove()", function() {
            var b6 = this;
            return this.iterator("row", function(cb, cd, ca) {
                var cc = cb.aoData;
                cc.splice(cd, 1);
                for (var b9 = 0, b8 = cc.length; b9 < b8; b9++) {
                    if (cc[b9].nTr !== null ) {
                        cc[b9].nTr._DT_RowIndex = b9
                    }
                }
                var b7 = bU.inArray(cd, cb.aiDisplay);
                bk(cb.aiDisplayMaster, cd);
                bk(cb.aiDisplay, cd);
                bk(b6[ca], cd, false);
                bA(cb)
            })
        });
        bz("rows.add()", function(b8) {
            var b7 = this.iterator("table", function(cc) {
                var cd, cb, b9;
                var ca = [];
                for (cb = 0,
                b9 = b8.length; cb < b9; cb++) {
                    cd = b8[cb];
                    if (cd.nodeName && cd.nodeName.toUpperCase() === "TR") {
                        ca.push(b5(cc, cd)[0])
                    } else {
                        ca.push(a3(cc, cd))
                    }
                }
                return ca
            }, 1);
            var b6 = this.rows(-1);
            b6.pop();
            b6.push.apply(b6, b7.toArray());
            return b6
        });
        bz("row()", function(b6, b7) {
            return N(this.rows(b6, b7))
        });
        bz("row().data()", function(b7) {
            var b6 = this.context;
            if (b7 === e) {
                return b6.length && this.length ? b6[0].aoData[this[0]]._aData : e
            }
            b6[0].aoData[this[0]]._aData = b7;
            P(b6[0], this[0], "data");
            return this
        });
        bz("row().node()", function() {
            var b6 = this.context;
            return b6.length && this.length ? b6[0].aoData[this[0]].nTr || null  : null 
        });
        bz("row.add()", function(b7) {
            if (b7 instanceof bU && b7.length) {
                b7 = b7[0]
            }
            var b6 = this.iterator("table", function(b8) {
                if (b7.nodeName && b7.nodeName.toUpperCase() === "TR") {
                    return b5(b8, b7)[0]
                }
                return a3(b8, b7)
            });
            return this.row(b6[0])
        });
        var ao = function(b9, cd, cc, b6) {
            var cb = [];
            var b8 = function(cf, ce) {
                if (cf.nodeName && cf.nodeName.toLowerCase() === "tr") {
                    cb.push(cf)
                } else {
                    var cg = bU("<tr><td/></tr>").addClass(ce);
                    bU("td", cg).addClass(ce).html(cf)[0].colSpan = a5(b9);
                    cb.push(cg[0])
                }
            }
            ;
            if (bU.isArray(cc) || cc instanceof bU) {
                for (var ca = 0, b7 = cc.length; ca < b7; ca++) {
                    b8(cc[ca], b6)
                }
            } else {
                b8(cc, b6)
            }
            if (cd._details) {
                cd._details.remove()
            }
            cd._details = bU(cb);
            if (cd._detailsShow) {
                cd._details.insertAfter(cd.nTr)
            }
        }
        ;
        var O = function(b8, b6) {
            var b7 = b8.context;
            if (b7.length) {
                var b9 = b7[0].aoData[b6 !== e ? b6 : b8[0]];
                if (b9._details) {
                    b9._details.remove();
                    b9._detailsShow = e;
                    b9._details = e
                }
            }
        }
        ;
        var bp = function(b8, b7) {
            var b6 = b8.context;
            if (b6.length && b8.length) {
                var b9 = b6[0].aoData[b8[0]];
                if (b9._details) {
                    b9._detailsShow = b7;
                    if (b7) {
                        b9._details.insertAfter(b9.nTr)
                    } else {
                        b9._details.detach()
                    }
                    bM(b6[0])
                }
            }
        }
        ;
        var bM = function(cb) {
            var ca = new Y(cb);
            var b9 = ".dt.DT_details";
            var b8 = "draw" + b9;
            var b6 = "column-visibility" + b9;
            var b7 = "destroy" + b9;
            var cc = cb.aoData;
            ca.off(b8 + " " + b6 + " " + b7);
            if (aJ(cc, "_details").length > 0) {
                ca.on(b8, function(ce, cd) {
                    if (cb !== cd) {
                        return
                    }
                    ca.rows({
                        page: "current"
                    }).eq(0).each(function(cf) {
                        var cg = cc[cf];
                        if (cg._detailsShow) {
                            cg._details.insertAfter(cg.nTr)
                        }
                    })
                });
                ca.on(b6, function(ci, cf, cd, ch) {
                    if (cb !== cf) {
                        return
                    }
                    var ck, cj = a5(cf);
                    for (var cg = 0, ce = cc.length; cg < ce; cg++) {
                        ck = cc[cg];
                        if (ck._details) {
                            ck._details.children("td[colspan]").attr("colspan", cj)
                        }
                    }
                });
                ca.on(b7, function(cg, ce) {
                    if (cb !== ce) {
                        return
                    }
                    for (var cf = 0, cd = cc.length; cf < cd; cf++) {
                        if (cc[cf]._details) {
                            O(ca, cf)
                        }
                    }
                })
            }
        }
        ;
        var z = "";
        var F = z + "row().child";
        var bd = F + "()";
        bz(bd, function(b8, b6) {
            var b7 = this.context;
            if (b8 === e) {
                return b7.length && this.length ? b7[0].aoData[this[0]]._details : e
            } else {
                if (b8 === true) {
                    this.child.show()
                } else {
                    if (b8 === false) {
                        O(this)
                    } else {
                        if (b7.length && this.length) {
                            ao(b7[0], b7[0].aoData[this[0]], b8, b6)
                        }
                    }
                }
            }
            return this
        });
        bz([F + ".show()", bd + ".show()"], function(b6) {
            bp(this, true);
            return this
        });
        bz([F + ".hide()", bd + ".hide()"], function() {
            bp(this, false);
            return this
        });
        bz([F + ".remove()", bd + ".remove()"], function() {
            O(this);
            return this
        });
        bz(F + ".isShown()", function() {
            var b6 = this.context;
            if (b6.length && this.length) {
                return b6[0].aoData[this[0]]._detailsShow || false
            }
            return false
        });
        var bo = /^(.+):(name|visIdx|visible)$/;
        var be = function(cb, ca, b9, b8, cc) {
            var b7 = [];
            for (var cd = 0, b6 = cc.length; cd < b6; cd++) {
                b7.push(bJ(cb, cc[cd], ca))
            }
            return b7
        }
        ;
        var bR = function(b9, b6, ca) {
            var b8 = b9.aoColumns
              , cb = aJ(b8, "sName")
              , b7 = aJ(b8, "nTh");
            return aF(b6, function(cg) {
                var cd = T(cg);
                if (cg === "") {
                    return bv(b8.length)
                }
                if (cd !== null ) {
                    return [cd >= 0 ? cd : b8.length + cd]
                }
                if (typeof cg === "function") {
                    var ch = a4(b9, ca);
                    return bU.map(b8, function(cj, ci) {
                        return cg(ci, be(b9, ci, 0, 0, ch), b7[ci]) ? ci : null 
                    })
                }
                var ce = typeof cg === "string" ? cg.match(bo) : "";
                if (ce) {
                    switch (ce[2]) {
                    case "visIdx":
                    case "visible":
                        var cc = parseInt(ce[1], 10);
                        if (cc < 0) {
                            var cf = bU.map(b8, function(ci, cj) {
                                return ci.bVisible ? cj : null 
                            });
                            return [cf[cf.length + cc]]
                        }
                        return [E(b9, cc)];
                    case "name":
                        return bU.map(cb, function(ci, cj) {
                            return ci === ce[1] ? cj : null 
                        })
                    }
                } else {
                    return bU(b7).filter(cg).map(function() {
                        return bU.inArray(this, b7)
                    }).toArray()
                }
            })
        }
        ;
        var ab = function(b8, b9, b6, cd) {
            var cf = b8.aoColumns, b7 = cf[b9], cb = b8.aoData, ci, ch, ca, cg, ce;
            if (b6 === e) {
                return b7.bVisible
            }
            if (b7.bVisible === b6) {
                return
            }
            if (b6) {
                var cc = bU.inArray(true, aJ(cf, "bVisible"), b9 + 1);
                for (ca = 0,
                cg = cb.length; ca < cg; ca++) {
                    ce = cb[ca].nTr;
                    ch = cb[ca].anCells;
                    if (ce) {
                        ce.insertBefore(ch[b9], ch[cc] || null )
                    }
                }
            } else {
                bU(aJ(b8.aoData, "anCells", b9)).detach()
            }
            b7.bVisible = b6;
            bl(b8, b8.aoHeader);
            bl(b8, b8.aoFooter);
            if (cd === e || cd) {
                aY(b8);
                if (b8.oScroll.sX || b8.oScroll.sY) {
                    u(b8)
                }
            }
            aa(b8, null , "column-visibility", [b8, b9, b6]);
            bD(b8)
        }
        ;
        bz("columns()", function(b6, b7) {
            if (b6 === e) {
                b6 = ""
            } else {
                if (bU.isPlainObject(b6)) {
                    b7 = b6;
                    b6 = ""
                }
            }
            b7 = bT(b7);
            var b8 = this.iterator("table", function(b9) {
                return bR(b9, b6, b7)
            }, 1);
            b8.selector.cols = b6;
            b8.selector.opts = b7;
            return b8
        });
        aQ("columns().header()", "column().header()", function(b6, b7) {
            return this.iterator("column", function(b9, b8) {
                return b9.aoColumns[b8].nTh
            }, 1)
        });
        aQ("columns().footer()", "column().footer()", function(b6, b7) {
            return this.iterator("column", function(b9, b8) {
                return b9.aoColumns[b8].nTf
            }, 1)
        });
        aQ("columns().data()", "column().data()", function() {
            return this.iterator("column-rows", be, 1)
        });
        aQ("columns().dataSrc()", "column().dataSrc()", function() {
            return this.iterator("column", function(b7, b6) {
                return b7.aoColumns[b6].mData
            }, 1)
        });
        aQ("columns().cache()", "column().cache()", function(b6) {
            return this.iterator("column-rows", function(ca, b9, b8, b7, cb) {
                return G(ca.aoData, cb, b6 === "search" ? "_aFilterData" : "_aSortData", b9)
            }, 1)
        });
        aQ("columns().nodes()", "column().nodes()", function() {
            return this.iterator("column-rows", function(b9, b8, b7, b6, ca) {
                return G(b9.aoData, ca, "anCells", b8)
            }, 1)
        });
        aQ("columns().visible()", "column().visible()", function(b7, b6) {
            return this.iterator("column", function(b9, b8) {
                if (b7 === e) {
                    return b9.aoColumns[b8].bVisible
                }
                ab(b9, b8, b7, b6)
            })
        });
        aQ("columns().indexes()", "column().index()", function(b6) {
            return this.iterator("column", function(b8, b7) {
                return b6 === "visible" ? bY(b8, b7) : b7
            }, 1)
        });
        bz("columns.adjust()", function() {
            return this.iterator("table", function(b6) {
                aY(b6)
            }, 1)
        });
        bz("column.index()", function(b8, b6) {
            if (this.context.length !== 0) {
                var b7 = this.context[0];
                if (b8 === "fromVisible" || b8 === "toData") {
                    return E(b7, b6)
                } else {
                    if (b8 === "fromData" || b8 === "toVisible") {
                        return bY(b7, b6)
                    }
                }
            }
        });
        bz("column()", function(b6, b7) {
            return N(this.columns(b6, b7))
        });
        var bF = function(b9, ca, b6) {
            var cd = b9.aoData;
            var ck = a4(b9, b6);
            var ci = at(G(cd, ck, "anCells"));
            var ch = bU([].concat.apply([], ci));
            var cj;
            var b8 = b9.aoColumns.length;
            var ce, cc, cf, cb, b7, cg;
            return aF(ca, function(cm) {
                var cn = typeof cm === "function";
                if (cm === null  || cm === e || cn) {
                    ce = [];
                    for (cc = 0,
                    cf = ck.length; cc < cf; cc++) {
                        cj = ck[cc];
                        for (cb = 0; cb < b8; cb++) {
                            b7 = {
                                row: cj,
                                column: cb
                            };
                            if (cn) {
                                cg = b9.aoData[cj];
                                if (cm(b7, bJ(b9, cj, cb), cg.anCells[cb])) {
                                    ce.push(b7)
                                }
                            } else {
                                ce.push(b7)
                            }
                        }
                    }
                    return ce
                }
                if (bU.isPlainObject(cm)) {
                    return [cm]
                }
                return ch.filter(cm).map(function(co, cp) {
                    cj = cp.parentNode._DT_RowIndex;
                    return {
                        row: cj,
                        column: bU.inArray(cp, cd[cj].anCells)
                    }
                }).toArray()
            })
        }
        ;
        bz("cells()", function(b9, b6, b7) {
            if (bU.isPlainObject(b9)) {
                if (typeof b9.row !== e) {
                    b7 = b6;
                    b6 = null 
                } else {
                    b7 = b9;
                    b9 = null 
                }
            }
            if (bU.isPlainObject(b6)) {
                b7 = b6;
                b6 = null 
            }
            if (b6 === null  || b6 === e) {
                return this.iterator("table", function(ch) {
                    return bF(ch, b9, bT(b7))
                })
            }
            var ca = this.columns(b6, b7);
            var cg = this.rows(b9, b7);
            var cd, cc, ce, cb, b8;
            var cf = this.iterator("table", function(ci, ch) {
                cd = [];
                for (cc = 0,
                ce = cg[ch].length; cc < ce; cc++) {
                    for (cb = 0,
                    b8 = ca[ch].length; cb < b8; cb++) {
                        cd.push({
                            row: cg[ch][cc],
                            column: ca[ch][cb]
                        })
                    }
                }
                return cd
            }, 1);
            bU.extend(cf.selector, {
                cols: b6,
                rows: b9,
                opts: b7
            });
            return cf
        });
        aQ("cells().nodes()", "cell().node()", function() {
            return this.iterator("cell", function(b8, b9, b7) {
                var b6 = b8.aoData[b9].anCells;
                return b6 ? b6[b7] : e
            }, 1)
        });
        bz("cells().data()", function() {
            return this.iterator("cell", function(b7, b8, b6) {
                return bJ(b7, b8, b6)
            }, 1)
        });
        aQ("cells().cache()", "cell().cache()", function(b6) {
            b6 = b6 === "search" ? "_aFilterData" : "_aSortData";
            return this.iterator("cell", function(b8, b9, b7) {
                return b8.aoData[b9][b6][b7]
            }, 1)
        });
        aQ("cells().render()", "cell().render()", function(b6) {
            return this.iterator("cell", function(b8, b9, b7) {
                return bJ(b8, b9, b7, b6)
            }, 1)
        });
        aQ("cells().indexes()", "cell().index()", function() {
            return this.iterator("cell", function(b7, b8, b6) {
                return {
                    row: b8,
                    column: b6,
                    columnVisible: bY(b7, b6)
                }
            }, 1)
        });
        aQ("cells().invalidate()", "cell().invalidate()", function(b6) {
            return this.iterator("cell", function(b8, b9, b7) {
                P(b8, b9, b6, b7)
            })
        });
        bz("cell()", function(b6, b8, b7) {
            return N(this.cells(b6, b8, b7))
        });
        bz("cell().data()", function(b8) {
            var b7 = this.context;
            var b6 = this[0];
            if (b8 === e) {
                return b7.length && b6.length ? bJ(b7[0], b6[0].row, b6[0].column) : e
            }
            bB(b7[0], b6[0].row, b6[0].column, b8);
            P(b7[0], b6[0].row, "data", b6[0].column);
            return this
        });
        bz("order()", function(b6, b8) {
            var b7 = this.context;
            if (b6 === e) {
                return b7.length !== 0 ? b7[0].aaSorting : e
            }
            if (typeof b6 === "number") {
                b6 = [[b6, b8]]
            } else {
                if (!bU.isArray(b6[0])) {
                    b6 = Array.prototype.slice.call(arguments)
                }
            }
            return this.iterator("table", function(b9) {
                b9.aaSorting = b6.slice()
            })
        });
        bz("order.listener()", function(b7, b6, b8) {
            return this.iterator("table", function(b9) {
                Q(b9, b7, b6, b8)
            })
        });
        bz(["columns().order()", "column().order()"], function(b6) {
            var b7 = this;
            return this.iterator("table", function(ca, b9) {
                var b8 = [];
                bU.each(b7[b9], function(cc, cb) {
                    b8.push([cb, b6])
                });
                ca.aaSorting = b8
            })
        });
        bz("search()", function(b7, b9, ca, b8) {
            var b6 = this.context;
            if (b7 === e) {
                return b6.length !== 0 ? b6[0].oPreviousSearch.sSearch : e
            }
            return this.iterator("table", function(cb) {
                if (!cb.oFeatures.bFilter) {
                    return
                }
                H(cb, bU.extend({}, cb.oPreviousSearch, {
                    sSearch: b7 + "",
                    bRegex: b9 === null  ? false : b9,
                    bSmart: ca === null  ? true : ca,
                    bCaseInsensitive: b8 === null  ? true : b8
                }), 1)
            })
        });
        aQ("columns().search()", "column().search()", function(b6, b8, b9, b7) {
            return this.iterator("column", function(cc, cb) {
                var ca = cc.aoPreSearchCols;
                if (b6 === e) {
                    return ca[cb].sSearch
                }
                if (!cc.oFeatures.bFilter) {
                    return
                }
                bU.extend(ca[cb], {
                    sSearch: b6 + "",
                    bRegex: b8 === null  ? false : b8,
                    bSmart: b9 === null  ? true : b9,
                    bCaseInsensitive: b7 === null  ? true : b7
                });
                H(cc, cc.oPreviousSearch, 1)
            })
        });
        bz("state()", function() {
            return this.context.length ? this.context[0].oSavedState : null 
        });
        bz("state.clear()", function() {
            return this.iterator("table", function(b6) {
                b6.fnStateSaveCallback.call(b6.oInstance, b6, {})
            })
        });
        bz("state.loaded()", function() {
            return this.context.length ? this.context[0].oLoadedState : null 
        });
        bz("state.save()", function() {
            return this.iterator("table", function(b6) {
                bD(b6)
            })
        });
        ac.versionCheck = ac.fnVersionCheck = function(b8) {
            var cc = ac.version.split(".");
            var b9 = b8.split(".");
            var b7, cb;
            for (var ca = 0, b6 = b9.length; ca < b6; ca++) {
                b7 = parseInt(cc[ca], 10) || 0;
                cb = parseInt(b9[ca], 10) || 0;
                if (b7 === cb) {
                    continue
                }
                return b7 > cb
            }
            return true
        }
        ;
        ac.isDataTable = ac.fnIsDataTable = function(b8) {
            var b6 = bU(b8).get(0);
            var b7 = false;
            bU.each(ac.settings, function(b9, ca) {
                if (ca.nTable === b6 || bU("table", ca.nScrollHead)[0] === b6 || bU("table", ca.nScrollFoot)[0] === b6) {
                    b7 = true
                }
            });
            return b7
        }
        ;
        ac.tables = ac.fnTables = function(b6) {
            return bU.map(ac.settings, function(b7) {
                if (!b6 || (b6 && bU(b7.nTable).is(":visible"))) {
                    return b7.nTable
                }
            })
        }
        ;
        ac.util = {
            throttle: aB,
            escapeRegex: v
        };
        ac.camelToHungarian = ap;
        bz("$()", function(b6, b8) {
            var b9 = this.rows(b8).nodes()
              , b7 = bU(b9);
            return bU([].concat(b7.filter(b6).toArray(), b7.find(b6).toArray()))
        });
        bU.each(["on", "one", "off"], function(b7, b6) {
            bz(b6 + "()", function() {
                var b8 = Array.prototype.slice.call(arguments);
                if (!b8[0].match(/\.dt\b/)) {
                    b8[0] += ".dt"
                }
                var b9 = bU(this.tables().nodes());
                b9[b6].apply(b9, b8);
                return this
            })
        });
        bz("clear()", function() {
            return this.iterator("table", function(b6) {
                bx(b6)
            })
        });
        bz("settings()", function() {
            return new Y(this.context,this.context)
        });
        bz("data()", function() {
            return this.iterator("table", function(b6) {
                return aJ(b6.aoData, "_aData")
            }).flatten()
        });
        bz("destroy()", function(b6) {
            b6 = b6 || false;
            return this.iterator("table", function(b7) {
                var cg = b7.nTableWrapper.parentNode;
                var b8 = b7.oClasses;
                var ci = b7.nTable;
                var cb = b7.nTBody;
                var cd = b7.nTHead;
                var ce = b7.nTFoot;
                var cj = bU(ci);
                var ca = bU(cb);
                var cc = bU(b7.nTableWrapper);
                var ck = bU.map(b7.aoData, function(cm) {
                    return cm.nTr
                });
                var b9, ch;
                b7.bDestroying = true;
                aa(b7, "aoDestroyCallback", "destroy", [b7]);
                if (!b6) {
                    new Y(b7).columns().visible(true)
                }
                cc.unbind(".DT").find(":not(tbody *)").unbind(".DT");
                bU(d).unbind(".DT-" + b7.sInstance);
                if (ci != cd.parentNode) {
                    cj.children("thead").detach();
                    cj.append(cd)
                }
                if (ce && ci != ce.parentNode) {
                    cj.children("tfoot").detach();
                    cj.append(ce)
                }
                cj.detach();
                cc.detach();
                b7.aaSorting = [];
                b7.aaSortingFixed = [];
                au(b7);
                bU(ck).removeClass(b7.asStripeClasses.join(" "));
                bU("th, td", cd).removeClass(b8.sSortable + " " + b8.sSortableAsc + " " + b8.sSortableDesc + " " + b8.sSortableNone);
                if (b7.bJUI) {
                    bU("th span." + b8.sSortIcon + ", td span." + b8.sSortIcon, cd).detach();
                    bU("th, td", cd).each(function() {
                        var cm = bU("div." + b8.sSortJUIWrapper, this);
                        bU(this).append(cm.contents());
                        cm.detach()
                    })
                }
                if (!b6 && cg) {
                    cg.insertBefore(ci, b7.nTableReinsertBefore)
                }
                ca.children().detach();
                ca.append(ck);
                cj.css("width", b7.sDestroyWidth).removeClass(b8.sTable);
                ch = b7.asDestroyStripes.length;
                if (ch) {
                    ca.children().each(function(cm) {
                        bU(this).addClass(b7.asDestroyStripes[cm % ch])
                    })
                }
                var cf = bU.inArray(b7, ac.settings);
                if (cf !== -1) {
                    ac.settings.splice(cf, 1)
                }
            })
        });
        ac.version = "1.10.5";
        ac.settings = [];
        ac.models = {};
        ac.models.oSearch = {
            bCaseInsensitive: true,
            sSearch: "",
            bRegex: false,
            bSmart: true
        };
        ac.models.oRow = {
            nTr: null ,
            anCells: null ,
            _aData: [],
            _aSortData: null ,
            _aFilterData: null ,
            _sFilterRow: null ,
            _sRowStripe: "",
            src: null 
        };
        ac.models.oColumn = {
            idx: null ,
            aDataSort: null ,
            asSorting: null ,
            bSearchable: null ,
            bSortable: null ,
            bVisible: null ,
            _sManualType: null ,
            _bAttrSrc: false,
            fnCreatedCell: null ,
            fnGetData: null ,
            fnSetData: null ,
            mData: null ,
            mRender: null ,
            nTh: null ,
            nTf: null ,
            sClass: null ,
            sContentPadding: null ,
            sDefaultContent: null ,
            sName: null ,
            sSortDataType: "std",
            sSortingClass: null ,
            sSortingClassJUI: null ,
            sTitle: null ,
            sType: null ,
            sWidth: null ,
            sWidthOrig: null 
        };
        ac.defaults = {
            aaData: null ,
            aaSorting: [[0, "asc"]],
            aaSortingFixed: [],
            ajax: null ,
            aLengthMenu: [10, 25, 50, 100],
            aoColumns: null ,
            aoColumnDefs: null ,
            aoSearchCols: [],
            asStripeClasses: null ,
            bAutoWidth: true,
            bDeferRender: false,
            bDestroy: false,
            bFilter: true,
            bInfo: true,
            bJQueryUI: false,
            bLengthChange: true,
            bPaginate: true,
            bProcessing: false,
            bRetrieve: false,
            bScrollCollapse: false,
            bServerSide: false,
            bSort: true,
            bSortMulti: true,
            bSortCellsTop: false,
            bSortClasses: true,
            bStateSave: false,
            fnCreatedRow: null ,
            fnDrawCallback: null ,
            fnFooterCallback: null ,
            fnFormatNumber: function(b6) {
                return b6.toString().replace(/\B(?=(\d{3})+(?!\d))/g, this.oLanguage.sThousands)
            },
            fnHeaderCallback: null ,
            fnInfoCallback: null ,
            fnInitComplete: null ,
            fnPreDrawCallback: null ,
            fnRowCallback: null ,
            fnServerData: null ,
            fnServerParams: null ,
            fnStateLoadCallback: function(b6) {
                try {
                    return JSON.parse((b6.iStateDuration === -1 ? sessionStorage : localStorage).getItem("DataTables_" + b6.sInstance + "_" + location.pathname))
                } catch (b7) {}
            },
            fnStateLoadParams: null ,
            fnStateLoaded: null ,
            fnStateSaveCallback: function(b6, b7) {
                try {
                    (b6.iStateDuration === -1 ? sessionStorage : localStorage).setItem("DataTables_" + b6.sInstance + "_" + location.pathname, JSON.stringify(b7))
                } catch (b8) {}
            },
            fnStateSaveParams: null ,
            iStateDuration: 7200,
            iDeferLoading: null ,
            iDisplayLength: 10,
            iDisplayStart: 0,
            iTabIndex: 0,
            oClasses: {},
            oLanguage: {
                oAria: {
                    sSortAscending: ": activate to sort column ascending",
                    sSortDescending: ": activate to sort column descending"
                },
                oPaginate: {
                    sFirst: "First",
                    sLast: "Last",
                    sNext: "Next",
                    sPrevious: "Previous"
                },
                sEmptyTable: "No data available in table",
                sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
                sInfoEmpty: "Showing 0 to 0 of 0 entries",
                sInfoFiltered: "(filtered from _MAX_ total entries)",
                sInfoPostFix: "",
                sDecimal: "",
                sThousands: ",",
                sLengthMenu: "Show _MENU_ entries",
                sLoadingRecords: "Loading...",
                sProcessing: "Processing...",
                sSearch: "Search:",
                sSearchPlaceholder: "",
                sUrl: "",
                sZeroRecords: "No matching records found"
            },
            oSearch: bU.extend({}, ac.models.oSearch),
            sAjaxDataProp: "data",
            sAjaxSource: null ,
            sDom: "lfrtip",
            searchDelay: null ,
            sPaginationType: "simple_numbers",
            sScrollX: "",
            sScrollXInner: "",
            sScrollY: "",
            sServerMethod: "GET",
            renderer: null 
        };
        ai(ac.defaults);
        ac.defaults.column = {
            aDataSort: null ,
            iDataSort: -1,
            asSorting: ["asc", "desc"],
            bSearchable: true,
            bSortable: true,
            bVisible: true,
            fnCreatedCell: null ,
            mData: null ,
            mRender: null ,
            sCellType: "td",
            sClass: "",
            sContentPadding: "",
            sDefaultContent: null ,
            sName: "",
            sSortDataType: "std",
            sTitle: null ,
            sType: null ,
            sWidth: null 
        };
        ai(ac.defaults.column);
        ac.models.oSettings = {
            oFeatures: {
                bAutoWidth: null ,
                bDeferRender: null ,
                bFilter: null ,
                bInfo: null ,
                bLengthChange: null ,
                bPaginate: null ,
                bProcessing: null ,
                bServerSide: null ,
                bSort: null ,
                bSortMulti: null ,
                bSortClasses: null ,
                bStateSave: null 
            },
            oScroll: {
                bCollapse: null ,
                iBarWidth: 0,
                sX: null ,
                sXInner: null ,
                sY: null 
            },
            oLanguage: {
                fnInfoCallback: null 
            },
            oBrowser: {
                bScrollOversize: false,
                bScrollbarLeft: false
            },
            ajax: null ,
            aanFeatures: [],
            aoData: [],
            aiDisplay: [],
            aiDisplayMaster: [],
            aoColumns: [],
            aoHeader: [],
            aoFooter: [],
            oPreviousSearch: {},
            aoPreSearchCols: [],
            aaSorting: null ,
            aaSortingFixed: [],
            asStripeClasses: null ,
            asDestroyStripes: [],
            sDestroyWidth: 0,
            aoRowCallback: [],
            aoHeaderCallback: [],
            aoFooterCallback: [],
            aoDrawCallback: [],
            aoRowCreatedCallback: [],
            aoPreDrawCallback: [],
            aoInitComplete: [],
            aoStateSaveParams: [],
            aoStateLoadParams: [],
            aoStateLoaded: [],
            sTableId: "",
            nTable: null ,
            nTHead: null ,
            nTFoot: null ,
            nTBody: null ,
            nTableWrapper: null ,
            bDeferLoading: false,
            bInitialised: false,
            aoOpenRows: [],
            sDom: null ,
            searchDelay: null ,
            sPaginationType: "two_button",
            iStateDuration: 0,
            aoStateSave: [],
            aoStateLoad: [],
            oSavedState: null ,
            oLoadedState: null ,
            sAjaxSource: null ,
            sAjaxDataProp: null ,
            bAjaxDataGet: true,
            jqXHR: null ,
            json: e,
            oAjaxData: e,
            fnServerData: null ,
            aoServerParams: [],
            sServerMethod: null ,
            fnFormatNumber: null ,
            aLengthMenu: null ,
            iDraw: 0,
            bDrawing: false,
            iDrawError: -1,
            _iDisplayLength: 10,
            _iDisplayStart: 0,
            _iRecordsTotal: 0,
            _iRecordsDisplay: 0,
            bJUI: null ,
            oClasses: {},
            bFiltered: false,
            bSorted: false,
            bSortCellsTop: null ,
            oInit: null ,
            aoDestroyCallback: [],
            fnRecordsTotal: function() {
                return M(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length
            },
            fnRecordsDisplay: function() {
                return M(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length
            },
            fnDisplayEnd: function() {
                var b6 = this._iDisplayLength
                  , cb = this._iDisplayStart
                  , b8 = cb + b6
                  , b7 = this.aiDisplay.length
                  , b9 = this.oFeatures
                  , ca = b9.bPaginate;
                if (b9.bServerSide) {
                    return ca === false || b6 === -1 ? cb + b7 : Math.min(cb + b6, this._iRecordsDisplay)
                } else {
                    return !ca || b8 > b7 || b6 === -1 ? b7 : b8
                }
            },
            oInstance: null ,
            sInstance: null ,
            iTabIndex: 0,
            nScrollHead: null ,
            nScrollFoot: null ,
            aLastSort: [],
            oPlugins: {}
        };
        ac.ext = W = {
            buttons: {},
            classes: {},
            errMode: "alert",
            feature: [],
            search: [],
            internal: {},
            legacy: {
                ajax: null 
            },
            pager: {},
            renderer: {
                pageButton: {},
                header: {}
            },
            order: {},
            type: {
                detect: [],
                search: {},
                order: {}
            },
            _unique: 0,
            fnVersionCheck: ac.fnVersionCheck,
            iApiIndex: 0,
            oJUIClasses: {},
            sVersion: ac.version
        };
        bU.extend(W, {
            afnFiltering: W.search,
            aTypes: W.type.detect,
            ofnSearch: W.type.search,
            oSort: W.type.order,
            afnSortData: W.order,
            aoFeatures: W.feature,
            oApi: W.internal,
            oStdClasses: W.classes,
            oPagination: W.pager
        });
        bU.extend(ac.ext.classes, {
            sTable: "dataTable",
            sNoFooter: "no-footer",
            sPageButton: "paginate_button",
            sPageButtonActive: "current",
            sPageButtonDisabled: "disabled",
            sStripeOdd: "odd",
            sStripeEven: "even",
            sRowEmpty: "dataTables_empty",
            sWrapper: "dataTables_wrapper",
            sFilter: "dataTables_filter",
            sInfo: "dataTables_info",
            sPaging: "dataTables_paginate paging_",
            sLength: "dataTables_length",
            sProcessing: "dataTables_processing",
            sSortAsc: "sorting_asc",
            sSortDesc: "sorting_desc",
            sSortable: "sorting",
            sSortableAsc: "sorting_asc_disabled",
            sSortableDesc: "sorting_desc_disabled",
            sSortableNone: "sorting_disabled",
            sSortColumn: "sorting_",
            sFilterInput: "",
            sLengthSelect: "",
            sScrollWrapper: "dataTables_scroll",
            sScrollHead: "dataTables_scrollHead",
            sScrollHeadInner: "dataTables_scrollHeadInner",
            sScrollBody: "dataTables_scrollBody",
            sScrollFoot: "dataTables_scrollFoot",
            sScrollFootInner: "dataTables_scrollFootInner",
            sHeaderTH: "",
            sFooterTH: "",
            sSortJUIAsc: "",
            sSortJUIDesc: "",
            sSortJUI: "",
            sSortJUIAscAllowed: "",
            sSortJUIDescAllowed: "",
            sSortJUIWrapper: "",
            sSortIcon: "",
            sJUIHeader: "",
            sJUIFooter: ""
        });
        (function() {
            var b7 = "";
            b7 = "";
            var b8 = b7 + "ui-state-default";
            var b9 = b7 + "css_right ui-icon ui-icon-";
            var b6 = b7 + "fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix";
            bU.extend(ac.ext.oJUIClasses, ac.ext.classes, {
                sPageButton: "fg-button ui-button " + b8,
                sPageButtonActive: "ui-state-disabled",
                sPageButtonDisabled: "ui-state-disabled",
                sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
                sSortAsc: b8 + " sorting_asc",
                sSortDesc: b8 + " sorting_desc",
                sSortable: b8 + " sorting",
                sSortableAsc: b8 + " sorting_asc_disabled",
                sSortableDesc: b8 + " sorting_desc_disabled",
                sSortableNone: b8 + " sorting_disabled",
                sSortJUIAsc: b9 + "triangle-1-n",
                sSortJUIDesc: b9 + "triangle-1-s",
                sSortJUI: b9 + "carat-2-n-s",
                sSortJUIAscAllowed: b9 + "carat-1-n",
                sSortJUIDescAllowed: b9 + "carat-1-s",
                sSortJUIWrapper: "DataTables_sort_wrapper",
                sSortIcon: "DataTables_sort_icon",
                sScrollHead: "dataTables_scrollHead " + b8,
                sScrollFoot: "dataTables_scrollFoot " + b8,
                sHeaderTH: b8,
                sFooterTH: b8,
                sJUIHeader: b6 + " ui-corner-tl ui-corner-tr",
                sJUIFooter: b6 + " ui-corner-bl ui-corner-br"
            })
        }());
        var bX = ac.ext.pager;
        function bC(cb, b6) {
            var b7 = []
              , b9 = bX.numbers_length
              , ca = Math.floor(b9 / 2)
              , b8 = 1;
            if (b6 <= b9) {
                b7 = bv(0, b6)
            } else {
                if (cb <= ca) {
                    b7 = bv(0, b9 - 2);
                    b7.push("ellipsis");
                    b7.push(b6 - 1)
                } else {
                    if (cb >= b6 - 1 - ca) {
                        b7 = bv(b6 - (b9 - 2), b6);
                        b7.splice(0, 0, "ellipsis");
                        b7.splice(0, 0, 0)
                    } else {
                        b7 = bv(cb - 1, cb + 2);
                        b7.push("ellipsis");
                        b7.push(b6 - 1);
                        b7.splice(0, 0, "ellipsis");
                        b7.splice(0, 0, 0)
                    }
                }
            }
            b7.DT_el = "span";
            return b7
        }
        bU.extend(bX, {
            simple: function(b7, b6) {
                return ["previous", "next"]
            },
            full: function(b7, b6) {
                return ["first", "previous", "next", "last"]
            },
            simple_numbers: function(b7, b6) {
                return ["previous", bC(b7, b6), "next"]
            },
            full_numbers: function(b7, b6) {
                return ["first", "previous", bC(b7, b6), "next", "last"]
            },
            _numbers: bC,
            numbers_length: 7
        });
        bU.extend(true, ac.ext.renderer, {
            pageButton: {
                _: function(cc, cj, ci, ch, cg, ca) {
                    var cd = cc.oClasses;
                    var b9 = cc.oLanguage.oPaginate;
                    var b8, b7, b6 = 0;
                    var ce = function(cm, cr) {
                        var cp, ck, cq, co;
                        var cs = function(ct) {
                            aV(cc, ct.data.action, true)
                        }
                        ;
                        for (cp = 0,
                        ck = cr.length; cp < ck; cp++) {
                            co = cr[cp];
                            if (bU.isArray(co)) {
                                var cn = bU("<" + (co.DT_el || "div") + "/>").appendTo(cm);
                                ce(cn, co)
                            } else {
                                b8 = "";
                                b7 = "";
                                switch (co) {
                                case "ellipsis":
                                    cm.append("<span>&hellip;</span>");
                                    break;
                                case "first":
                                    b8 = b9.sFirst;
                                    b7 = co + (cg > 0 ? "" : " " + cd.sPageButtonDisabled);
                                    break;
                                case "previous":
                                    b8 = b9.sPrevious;
                                    b7 = co + (cg > 0 ? "" : " " + cd.sPageButtonDisabled);
                                    break;
                                case "next":
                                    b8 = b9.sNext;
                                    b7 = co + (cg < ca - 1 ? "" : " " + cd.sPageButtonDisabled);
                                    break;
                                case "last":
                                    b8 = b9.sLast;
                                    b7 = co + (cg < ca - 1 ? "" : " " + cd.sPageButtonDisabled);
                                    break;
                                default:
                                    b8 = co + 1;
                                    b7 = cg === co ? cd.sPageButtonActive : "";
                                    break
                                }
                                if (b8) {
                                    cq = bU("<a>", {
                                        "class": cd.sPageButton + " " + b7,
                                        "aria-controls": cc.sTableId,
                                        "data-dt-idx": b6,
                                        tabindex: cc.iTabIndex,
                                        id: ci === 0 && typeof co === "string" ? cc.sTableId + "_" + co : null 
                                    }).html(b8).appendTo(cm);
                                    br(cq, {
                                        action: co
                                    }, cs);
                                    b6++
                                }
                            }
                        }
                    }
                    ;
                    var cb;
                    try {
                        cb = bU(a.activeElement).data("dt-idx")
                    } catch (cf) {}
                    ce(bU(cj).empty(), ch);
                    if (cb) {
                        bU(cj).find("[data-dt-idx=" + cb + "]").focus()
                    }
                }
            }
        });
        bU.extend(ac.ext.type.detect, [function(b8, b7) {
            var b6 = b7.oLanguage.sDecimal;
            return az(b8, b6) ? "num" + b6 : null 
        }
        , function(b8, b7) {
            if (b8 && !(b8 instanceof Date) && (!aC.test(b8) || !bK.test(b8))) {
                return null 
            }
            var b6 = Date.parse(b8);
            return (b6 !== null  && !isNaN(b6)) || bQ(b8) ? "date" : null 
        }
        , function(b8, b7) {
            var b6 = b7.oLanguage.sDecimal;
            return az(b8, b6, true) ? "num-fmt" + b6 : null 
        }
        , function(b8, b7) {
            var b6 = b7.oLanguage.sDecimal;
            return q(b8, b6) ? "html-num" + b6 : null 
        }
        , function(b8, b7) {
            var b6 = b7.oLanguage.sDecimal;
            return q(b8, b6, true) ? "html-num-fmt" + b6 : null 
        }
        , function(b7, b6) {
            return bQ(b7) || (typeof b7 === "string" && b7.indexOf("<") !== -1) ? "html" : null 
        }
        ]);
        bU.extend(ac.ext.type.search, {
            html: function(b6) {
                return bQ(b6) ? b6 : typeof b6 === "string" ? b6.replace(al, " ").replace(a9, "") : ""
            },
            string: function(b6) {
                return bQ(b6) ? b6 : typeof b6 === "string" ? b6.replace(al, " ") : b6
            }
        });
        var af = function(b9, b6, b8, b7) {
            if (b9 !== 0 && (!b9 || b9 === "-")) {
                return -Infinity
            }
            if (b6) {
                b9 = bS(b9, b6)
            }
            if (b9.replace) {
                if (b8) {
                    b9 = b9.replace(b8, "")
                }
                if (b7) {
                    b9 = b9.replace(b7, "")
                }
            }
            return b9 * 1
        }
        ;
        function bG(b6) {
            bU.each({
                num: function(b7) {
                    return af(b7, b6)
                },
                "num-fmt": function(b7) {
                    return af(b7, b6, bV)
                },
                "html-num": function(b7) {
                    return af(b7, b6, a9)
                },
                "html-num-fmt": function(b7) {
                    return af(b7, b6, a9, bV)
                }
            }, function(b7, b8) {
                W.type.order[b7 + b6 + "-pre"] = b8;
                if (b7.match(/^html\-/)) {
                    W.type.search[b7 + b6] = W.type.search.html
                }
            })
        }
        bU.extend(W.type.order, {
            "date-pre": function(b6) {
                return Date.parse(b6) || 0
            },
            "html-pre": function(b6) {
                return bQ(b6) ? "" : b6.replace ? b6.replace(/<.*?>/g, "").toLowerCase() : b6 + ""
            },
            "string-pre": function(b6) {
                return bQ(b6) ? "" : typeof b6 === "string" ? b6.toLowerCase() : !b6.toString ? "" : b6.toString()
            },
            "string-asc": function(b6, b7) {
                return ( (b6 < b7) ? -1 : ((b6 > b7) ? 1 : 0)) 
            },
            "string-desc": function(b6, b7) {
                return ( (b6 < b7) ? 1 : ((b6 > b7) ? -1 : 0)) 
            }
        });
        bG("");
        bU.extend(true, ac.ext.renderer, {
            header: {
                _: function(b9, b6, b8, b7) {
                    bU(b9.nTable).on("order.dt.DT", function(cd, ca, cc, cb) {
                        if (b9 !== ca) {
                            return
                        }
                        var ce = b8.idx;
                        b6.removeClass(b8.sSortingClass + " " + b7.sSortAsc + " " + b7.sSortDesc).addClass(cb[ce] == "asc" ? b7.sSortAsc : cb[ce] == "desc" ? b7.sSortDesc : b8.sSortingClass)
                    })
                },
                jqueryui: function(b9, b6, b8, b7) {
                    bU("<div/>").addClass(b7.sSortJUIWrapper).append(b6.contents()).append(bU("<span/>").addClass(b7.sSortIcon + " " + b8.sSortingClassJUI)).appendTo(b6);
                    bU(b9.nTable).on("order.dt.DT", function(cd, ca, cc, cb) {
                        if (b9 !== ca) {
                            return
                        }
                        var ce = b8.idx;
                        b6.removeClass(b7.sSortAsc + " " + b7.sSortDesc).addClass(cb[ce] == "asc" ? b7.sSortAsc : cb[ce] == "desc" ? b7.sSortDesc : b8.sSortingClass);
                        b6.find("span." + b7.sSortIcon).removeClass(b7.sSortJUIAsc + " " + b7.sSortJUIDesc + " " + b7.sSortJUI + " " + b7.sSortJUIAscAllowed + " " + b7.sSortJUIDescAllowed).addClass(cb[ce] == "asc" ? b7.sSortJUIAsc : cb[ce] == "desc" ? b7.sSortJUIDesc : b8.sSortingClassJUI)
                    })
                }
            }
        });
        ac.render = {
            number: function(b8, b7, b6, b9) {
                return {
                    display: function(cd) {
                        var cb = cd < 0 ? "-" : "";
                        cd = Math.abs(parseFloat(cd));
                        var cc = parseInt(cd, 10);
                        var ca = b6 ? b7 + (cd - cc).toFixed(b6).substring(2) : "";
                        return cb + (b9 || "") + cc.toString().replace(/\B(?=(\d{3})+(?!\d))/g, b8) + ca
                    }
                }
            }
        };
        function ax(b6) {
            return function() {
                var b7 = [aD(this[ac.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
                return ac.ext.internal[b6].apply(this, b7)
            }
        }
        bU.extend(ac.ext.internal, {
            _fnExternApiFunc: ax,
            _fnBuildAjax: aK,
            _fnAjaxUpdate: av,
            _fnAjaxParameters: b0,
            _fnAjaxUpdateDraw: ak,
            _fnAjaxDataSrc: bI,
            _fnAddColumn: ad,
            _fnColumnOptions: bh,
            _fnAdjustColumnSizing: aY,
            _fnVisibleToColumnIndex: E,
            _fnColumnIndexToVisible: bY,
            _fnVisbleColumns: a5,
            _fnGetColumns: C,
            _fnColumnTypes: I,
            _fnApplyColumnDefs: r,
            _fnHungarianMap: ai,
            _fnCamelToHungarian: ap,
            _fnLanguageCompat: a7,
            _fnBrowserDetect: bt,
            _fnAddData: a3,
            _fnAddTr: b5,
            _fnNodeToDataIndex: bH,
            _fnNodeToColumnIndex: bf,
            _fnGetCellData: bJ,
            _fnSetCellData: bB,
            _fnSplitObjNotation: aA,
            _fnGetObjectDataFn: aE,
            _fnSetObjectDataFn: aM,
            _fnGetDataMaster: bW,
            _fnClearTable: bx,
            _fnDeleteIndex: bk,
            _fnInvalidate: P,
            _fnGetRowElements: bu,
            _fnCreateTr: ae,
            _fnBuildHead: a0,
            _fnDrawHead: bl,
            _fnDraw: bi,
            _fnReDraw: ay,
            _fnAddOptionsHtml: p,
            _fnDetectHeader: aL,
            _fnGetUniqueThs: bw,
            _fnFeatureHtmlFilter: D,
            _fnFilterComplete: H,
            _fnFilterCustom: aH,
            _fnFilterColumn: an,
            _fnFilter: aN,
            _fnFilterCreateSearch: bb,
            _fnEscapeRegex: v,
            _fnFilterData: aT,
            _fnFeatureHtmlInfo: m,
            _fnUpdateInfo: aI,
            _fnInfoMacros: bE,
            _fnInitialise: o,
            _fnInitComplete: aR,
            _fnLengthChange: a8,
            _fnFeatureHtmlLength: a6,
            _fnFeatureHtmlPaginate: aP,
            _fnPageChange: aV,
            _fnFeatureHtmlProcessing: bP,
            _fnProcessingDisplay: J,
            _fnFeatureHtmlTable: bO,
            _fnScrollDraw: u,
            _fnApplyToChildren: bn,
            _fnCalculateColumnWidths: bL,
            _fnThrottle: aB,
            _fnConvertToWidth: aw,
            _fnScrollingWidthAdjust: aO,
            _fnGetWidestNode: aZ,
            _fnGetMaxLenString: aq,
            _fnStringToCss: bZ,
            _fnScrollBarWidth: bq,
            _fnSortFlatten: aX,
            _fnSort: K,
            _fnSortAria: bs,
            _fnSortListener: by,
            _fnSortAttachListener: Q,
            _fnSortingClasses: au,
            _fnSortData: U,
            _fnSaveState: bD,
            _fnLoadState: b3,
            _fnSettingsFromNode: aD,
            _fnLog: a2,
            _fnMap: ag,
            _fnBindAction: br,
            _fnCallbackReg: b2,
            _fnCallbackFire: aa,
            _fnLengthOverflow: bA,
            _fnRenderer: ah,
            _fnDataSource: M,
            _fnRowAttributes: ar,
            _fnCalculateEnd: function() {}
        });
        bU.fn.dataTable = ac;
        bU.fn.dataTableSettings = ac.settings;
        bU.fn.dataTableExt = ac.ext;
        bU.fn.DataTable = function(b6) {
            return bU(this).dataTable(b6).api()
        }
        ;
        bU.each(ac, function(b7, b6) {
            bU.fn.DataTable[b7] = b6
        });
        return bU.fn.dataTable
    }))
}(window, document));
/*! Responsive 1.0.4
 * 2014 SpryMedia Ltd - datatables.net/license
 */
(function(e, a, f) {
    var d = function(o, m) {
        var h = function(p, q) {
            if (!m.versionCheck || !m.versionCheck("1.10.1")) {
                throw "DataTables Responsive requires DataTables 1.10.1 or newer"
            }
            this.s = {
                dt: new m.Api(p),
                columns: []
            };
            if (this.s.dt.settings()[0].responsive) {
                return
            }
            if (q && typeof q.details === "string") {
                q.details = {
                    type: q.details
                }
            }
            this.c = o.extend(true, {}, h.defaults, m.defaults.responsive, q);
            p.responsive = this;
            this._constructor()
        }
        ;
        h.prototype = {
            _constructor: function() {
                var r = this;
                var q = this.s.dt;
                q.settings()[0]._responsive = this;
                o(e).on("resize.dtr orientationchange.dtr", q.settings()[0].oApi._fnThrottle(function() {
                    r._resize()
                }));
                q.on("destroy.dtr", function() {
                    o(e).off("resize.dtr orientationchange.dtr draw.dtr")
                });
                this.c.breakpoints.sort(function(v, u) {
                    return v.width < u.width ? 1 : v.width > u.width ? -1 : 0
                });
                this._classLogic();
                this._resizeAuto();
                this._resize();
                var p = this.c.details;
                if (p.type) {
                    r._detailsInit();
                    this._detailsVis();
                    q.on("column-visibility.dtr", function() {
                        r._detailsVis()
                    });
                    q.on("draw.dtr", function() {
                        q.rows().iterator("row", function(v, u) {
                            var B = q.row(u);
                            if (B.child.isShown()) {
                                var z = r.c.details.renderer(q, u);
                                B.child(z, "child").show()
                            }
                        })
                    });
                    o(q.table().node()).addClass("dtr-" + p.type)
                }
            },
            _columnsVisiblity: function(C) {
                var p = this.s.dt;
                var u = this.s.columns;
                var v, E;
                var B = o.map(u, function(F) {
                    return F.auto && F.minWidth === null  ? false : F.auto === true ? "-" : o.inArray(C, F.includeIn) !== -1
                });
                var D = 0;
                for (v = 0,
                E = B.length; v < E; v++) {
                    if (B[v] === true) {
                        D += u[v].minWidth
                    }
                }
                var z = p.table().container().offsetWidth;
                var q = z - D;
                for (v = 0,
                E = B.length; v < E; v++) {
                    if (u[v].control) {
                        q -= u[v].minWidth
                    }
                }
                for (v = 0,
                E = B.length; v < E; v++) {
                    if (B[v] === "-" && !u[v].control) {
                        B[v] = q - u[v].minWidth < 0 ? false : true;
                        q -= u[v].minWidth
                    }
                }
                var r = false;
                for (v = 0,
                E = u.length; v < E; v++) {
                    if (!u[v].control && !u[v].never && !B[v]) {
                        r = true;
                        break
                    }
                }
                for (v = 0,
                E = u.length; v < E; v++) {
                    if (u[v].control) {
                        B[v] = r
                    }
                }
                if (o.inArray(true, B) === -1) {
                    B[0] = true
                }
                return B
            },
            _classLogic: function() {
                var v = this;
                var p = {};
                var u = this.c.breakpoints;
                var q = this.s.dt.columns().eq(0).map(function(B) {
                    var C = this.column(B).header().className;
                    return {
                        className: C,
                        includeIn: [],
                        auto: false,
                        control: false,
                        never: C.match(/\bnever\b/) ? true : false
                    }
                });
                var z = function(D, B) {
                    var C = q[D].includeIn;
                    if (o.inArray(B, C) === -1) {
                        C.push(B)
                    }
                }
                ;
                var r = function(H, E, D, B) {
                    var G, F, C;
                    if (!D) {
                        q[H].includeIn.push(E)
                    } else {
                        if (D === "max-") {
                            G = v._find(E).width;
                            for (F = 0,
                            C = u.length; F < C; F++) {
                                if (u[F].width <= G) {
                                    z(H, u[F].name)
                                }
                            }
                        } else {
                            if (D === "min-") {
                                G = v._find(E).width;
                                for (F = 0,
                                C = u.length; F < C; F++) {
                                    if (u[F].width >= G) {
                                        z(H, u[F].name)
                                    }
                                }
                            } else {
                                if (D === "not-") {
                                    for (F = 0,
                                    C = u.length; F < C; F++) {
                                        if (u[F].name.indexOf(B) === -1) {
                                            z(H, u[F].name)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                ;
                q.each(function(C, F) {
                    var H = C.className.split(" ");
                    var E = false;
                    for (var B = 0, D = H.length; B < D; B++) {
                        var G = o.trim(H[B]);
                        if (G === "all") {
                            E = true;
                            C.includeIn = o.map(u, function(I) {
                                return I.name
                            });
                            return
                        } else {
                            if (G === "none" || G === "never") {
                                E = true;
                                return
                            } else {
                                if (G === "control") {
                                    E = true;
                                    C.control = true;
                                    return
                                }
                            }
                        }
                        o.each(u, function(M, I) {
                            var K = I.name.split("-");
                            var N = new RegExp("(min\\-|max\\-|not\\-)?(" + K[0] + ")(\\-[_a-zA-Z0-9])?");
                            var J = G.match(N);
                            if (J) {
                                E = true;
                                if (J[2] === K[0] && J[3] === "-" + K[1]) {
                                    r(F, I.name, J[1], J[2] + J[3])
                                } else {
                                    if (J[2] === K[0] && !J[3]) {
                                        r(F, I.name, J[1], J[2])
                                    }
                                }
                            }
                        })
                    }
                    if (!E) {
                        C.auto = true
                    }
                });
                this.s.columns = q
            },
            _detailsInit: function() {
                var u = this;
                var r = this.s.dt;
                var q = this.c.details;
                if (q.type === "inline") {
                    q.target = "td:first-child"
                }
                var v = q.target;
                var p = typeof v === "string" ? v : "td";
                o(r.table().body()).on("click", p, function(C) {
                    if (!o(r.table().node()).hasClass("collapsed")) {
                        return
                    }
                    if (!r.row(o(this).closest("tr")).length) {
                        return
                    }
                    if (typeof v === "number") {
                        var z = v < 0 ? r.columns().eq(0).length + v : v;
                        if (r.cell(this).index().column !== z) {
                            return
                        }
                    }
                    var D = r.row(o(this).closest("tr"));
                    if (D.child.isShown()) {
                        D.child(false);
                        o(D.node()).removeClass("parent")
                    } else {
                        var B = u.c.details.renderer(r, D[0]);
                        D.child(B, "child").show();
                        o(D.node()).addClass("parent")
                    }
                })
            },
            _detailsVis: function() {
                var r = this;
                var q = this.s.dt;
                var u = q.columns().indexes().filter(function(v) {
                    var z = q.column(v);
                    if (z.visible()) {
                        return null 
                    }
                    return o(z.header()).hasClass("never") ? null  : v
                });
                var p = true;
                if (u.length === 0 || (u.length === 1 && this.s.columns[u[0]].control)) {
                    p = false
                }
                if (p) {
                    o(q.table().node()).addClass("collapsed");
                    q.rows().eq(0).each(function(v) {
                        var B = q.row(v);
                        if (B.child()) {
                            var z = r.c.details.renderer(q, B[0]);
                            if (z === false) {
                                B.child.hide()
                            } else {
                                B.child(z, "child").show()
                            }
                        }
                    })
                } else {
                    o(q.table().node()).removeClass("collapsed");
                    q.rows().eq(0).each(function(v) {
                        q.row(v).child.hide()
                    })
                }
            },
            _find: function(q) {
                var u = this.c.breakpoints;
                for (var r = 0, p = u.length; r < p; r++) {
                    if (u[r].name === q) {
                        return u[r]
                    }
                }
            },
            _resize: function() {
                var z = this.s.dt;
                var u = o(e).width();
                var v = this.c.breakpoints;
                var p = v[0].name;
                for (var r = v.length - 1; r >= 0; r--) {
                    if (u <= v[r].width) {
                        p = v[r].name;
                        break
                    }
                }
                var q = this._columnsVisiblity(p);
                z.columns().eq(0).each(function(C, B) {
                    z.column(C).visible(q[B])
                })
            },
            _resizeAuto: function() {
                var q = this.s.dt;
                var u = this.s.columns;
                if (!this.c.auto) {
                    return
                }
                if (o.inArray(true, o.map(u, function(E) {
                    return E.auto
                })) === -1) {
                    return
                }
                var B = q.table().node().offsetWidth;
                var p = q.columns;
                var D = q.table().node().cloneNode(false);
                var z = o(q.table().header().cloneNode(false)).appendTo(D);
                var r = o(q.table().body().cloneNode(false)).appendTo(D);
                q.rows({
                    page: "current"
                }).indexes().flatten().each(function(E) {
                    var F = q.row(E).node().cloneNode(true);
                    if (q.columns(":hidden").flatten().length) {
                        o(F).append(q.cells(E, ":hidden").nodes().to$().clone())
                    }
                    o(F).appendTo(r)
                });
                var C = q.columns().header().to$().clone(false);
                o("<tr/>").append(C).appendTo(z);
                var v = o("<div/>").css({
                    width: 1,
                    height: 1,
                    overflow: "hidden"
                }).append(D).insertBefore(q.table().node());
                q.columns().eq(0).each(function(E) {
                    u[E].minWidth = C[E].offsetWidth || 0
                });
                v.remove()
            }
        };
        h.breakpoints = [{
            name: "desktop",
            width: Infinity
        }, {
            name: "tablet-l",
            width: 1024
        }, {
            name: "tablet-p",
            width: 768
        }, {
            name: "mobile-l",
            width: 480
        }, {
            name: "mobile-p",
            width: 320
        }];
        h.defaults = {
            breakpoints: h.breakpoints,
            auto: true,
            details: {
                renderer: function(p, q) {
                    var r = p.cells(q, ":hidden").eq(0).map(function(v) {
                        var D = o(p.column(v.column).header());
                        var u = p.cell(v).index();
                        if (D.hasClass("control") || D.hasClass("never")) {
                            return ""
                        }
                        var C = p.settings()[0];
                        var z = C.oApi._fnGetCellData(C, u.row, u.column, "display");
                        var B = D.text();
                        if (B) {
                            B = B + ":"
                        }
                        return '<li data-dtr-index="' + u.column + '"><span class="dtr-title">' + B + '</span> <span class="dtr-data">' + z + "</span></li>"
                    }).toArray().join("");
                    return r ? o('<ul data-dtr-index="' + q + '"/>').append(r) : false
                },
                target: 0,
                type: "inline"
            }
        };
        var g = o.fn.dataTable.Api;
        g.register("responsive()", function() {
            return this
        });
        g.register("responsive.index()", function(p) {
            p = o(p);
            return {
                column: p.data("dtr-index"),
                row: p.parent().data("dtr-index")
            }
        });
        g.register("responsive.rebuild()", function() {
            return this.iterator("table", function(p) {
                if (p._responsive) {
                    p._responsive._classLogic()
                }
            })
        });
        g.register("responsive.recalc()", function() {
            return this.iterator("table", function(p) {
                if (p._responsive) {
                    p._responsive._resizeAuto();
                    p._responsive._resize()
                }
            })
        });
        h.version = "1.0.4";
        o.fn.dataTable.Responsive = h;
        o.fn.DataTable.Responsive = h;
        o(a).on("init.dt.dtr", function(r, q, p) {
            if (o(q.nTable).hasClass("responsive") || o(q.nTable).hasClass("dt-responsive") || q.oInit.responsive || m.defaults.responsive) {
                var u = q.oInit.responsive;
                if (u !== false) {
                    new h(q,o.isPlainObject(u) ? u : {})
                }
            }
        });
        return h
    }
    ;
    if (typeof define === "function" && define.amd) {
        define(["jquery", "datatables"], d)
    } else {
        if (typeof exports === "object") {
            d(require("jquery"), require("datatables"))
        } else {
            if (jQuery && !jQuery.fn.dataTable.Responsive) {
                d(jQuery, jQuery.fn.dataTable)
            }
        }
    }
})(window, document);
/*! ColReorder 1.1.2
 * ©2010-2014 SpryMedia Ltd - datatables.net/license
 */
(function(g, a, m) {
    function h(r) {
        var q = [];
        for (var p = 0, o = r.length; p < o; p++) {
            q[r[p]] = p
        }
        return q
    }
    function f(p, r, q) {
        var o = p.splice(r, 1)[0];
        p.splice(q, 0, o)
    }
    function d(r, z, v) {
        var q = [];
        for (var p = 0, o = r.childNodes.length; p < o; p++) {
            if (r.childNodes[p].nodeType == 1) {
                q.push(r.childNodes[p])
            }
        }
        var u = q[z];
        if (v !== null ) {
            r.insertBefore(u, q[v])
        } else {
            r.appendChild(u)
        }
    }
    $.fn.dataTableExt.oApi.fnColReorder = function(r, G, u) {
        var v = $.fn.dataTable.Api ? true : false;
        var H, E, F, K, z = r.aoColumns.length, q, o;
        var I = function(Q, R, P) {
            if (!Q[R]) {
                return
            }
            var N = Q[R].split(".");
            var O = N.shift();
            if (isNaN(O * 1)) {
                return
            }
            Q[R] = P[O * 1] + "." + N.join(".")
        }
        ;
        if (G == u) {
            return
        }
        if (G < 0 || G >= z) {
            this.oApi._fnLog(r, 1, "ColReorder 'from' index is out of bounds: " + G);
            return
        }
        if (u < 0 || u >= z) {
            this.oApi._fnLog(r, 1, "ColReorder 'to' index is out of bounds: " + u);
            return
        }
        var C = [];
        for (H = 0,
        E = z; H < E; H++) {
            C[H] = H
        }
        f(C, G, u);
        var J = h(C);
        for (H = 0,
        E = r.aaSorting.length; H < E; H++) {
            r.aaSorting[H][0] = J[r.aaSorting[H][0]]
        }
        if (r.aaSortingFixed !== null ) {
            for (H = 0,
            E = r.aaSortingFixed.length; H < E; H++) {
                r.aaSortingFixed[H][0] = J[r.aaSortingFixed[H][0]]
            }
        }
        for (H = 0,
        E = z; H < E; H++) {
            o = r.aoColumns[H];
            for (F = 0,
            K = o.aDataSort.length; F < K; F++) {
                o.aDataSort[F] = J[o.aDataSort[F]]
            }
            if (v) {
                o.idx = J[o.idx]
            }
        }
        if (v) {
            $.each(r.aLastSort, function(N, O) {
                r.aLastSort[N].src = J[O.src]
            })
        }
        for (H = 0,
        E = z; H < E; H++) {
            o = r.aoColumns[H];
            if (typeof o.mData == "number") {
                o.mData = J[o.mData];
                r.oApi._fnColumnOptions(r, H, {})
            } else {
                if ($.isPlainObject(o.mData)) {
                    I(o.mData, "_", J);
                    I(o.mData, "filter", J);
                    I(o.mData, "sort", J);
                    I(o.mData, "type", J);
                    r.oApi._fnColumnOptions(r, H, {})
                }
            }
        }
        if (r.aoColumns[G].bVisible) {
            var D = this.oApi._fnColumnIndexToVisible(r, G);
            var p = null ;
            H = u < G ? u : u + 1;
            while (p === null  && H < z) {
                p = this.oApi._fnColumnIndexToVisible(r, H);
                H++
            }
            q = r.nTHead.getElementsByTagName("tr");
            for (H = 0,
            E = q.length; H < E; H++) {
                d(q[H], D, p)
            }
            if (r.nTFoot !== null ) {
                q = r.nTFoot.getElementsByTagName("tr");
                for (H = 0,
                E = q.length; H < E; H++) {
                    d(q[H], D, p)
                }
            }
            for (H = 0,
            E = r.aoData.length; H < E; H++) {
                if (r.aoData[H].nTr !== null ) {
                    d(r.aoData[H].nTr, D, p)
                }
            }
        }
        f(r.aoColumns, G, u);
        f(r.aoPreSearchCols, G, u);
        for (H = 0,
        E = r.aoData.length; H < E; H++) {
            var M = r.aoData[H];
            if (v) {
                if (M.anCells) {
                    f(M.anCells, G, u)
                }
                if (M.src !== "dom" && $.isArray(M._aData)) {
                    f(M._aData, G, u)
                }
            } else {
                if ($.isArray(M._aData)) {
                    f(M._aData, G, u)
                }
                f(M._anHidden, G, u)
            }
        }
        for (H = 0,
        E = r.aoHeader.length; H < E; H++) {
            f(r.aoHeader[H], G, u)
        }
        if (r.aoFooter !== null ) {
            for (H = 0,
            E = r.aoFooter.length; H < E; H++) {
                f(r.aoFooter[H], G, u)
            }
        }
        if (v) {
            var B = new $.fn.dataTable.Api(r);
            B.rows().invalidate()
        }
        for (H = 0,
        E = z; H < E; H++) {
            $(r.aoColumns[H].nTh).off("click.DT");
            this.oApi._fnSortAttachListener(r, r.aoColumns[H].nTh, H)
        }
        $(r.oInstance).trigger("column-reorder", [r, {
            iFrom: G,
            iTo: u,
            aiInvertMapping: J
        }])
    }
    ;
    var e = function(q, p) {
        var o = function(v, u) {
            var z;
            if (q.fn.dataTable.Api) {
                z = new q.fn.dataTable.Api(v).settings()[0]
            } else {
                if (v.fnSettings) {
                    z = v.fnSettings()
                } else {
                    if (typeof v === "string") {
                        if (q.fn.dataTable.fnIsDataTable(q(v)[0])) {
                            z = q(v).eq(0).dataTable().fnSettings()
                        }
                    } else {
                        if (v.nodeName && v.nodeName.toLowerCase() === "table") {
                            if (q.fn.dataTable.fnIsDataTable(v.nodeName)) {
                                z = q(v.nodeName).dataTable().fnSettings()
                            }
                        } else {
                            if (v instanceof jQuery) {
                                if (q.fn.dataTable.fnIsDataTable(v[0])) {
                                    z = v.eq(0).dataTable().fnSettings()
                                }
                            } else {
                                z = v
                            }
                        }
                    }
                }
            }
            var r = q.fn.dataTable.camelToHungarian;
            if (r) {
                r(o.defaults, o.defaults, true);
                r(o.defaults, u || {})
            }
            this.s = {
                dt: null ,
                init: q.extend(true, {}, o.defaults, u),
                fixed: 0,
                fixedRight: 0,
                dropCallback: null ,
                mouse: {
                    startX: -1,
                    startY: -1,
                    offsetX: -1,
                    offsetY: -1,
                    target: -1,
                    targetIndex: -1,
                    fromIndex: -1
                },
                aoTargets: []
            };
            this.dom = {
                drag: null ,
                pointer: null 
            };
            this.s.dt = z.oInstance.fnSettings();
            this.s.dt._colReorder = this;
            this._fnConstruct();
            z.oApi._fnCallbackReg(z, "aoDestroyCallback", q.proxy(this._fnDestroy, this), "ColReorder");
            return this
        }
        ;
        o.prototype = {
            fnReset: function() {
                var u = [];
                for (var v = 0, r = this.s.dt.aoColumns.length; v < r; v++) {
                    u.push(this.s.dt.aoColumns[v]._ColReorder_iOrigCol)
                }
                this._fnOrderColumns(u);
                return this
            },
            fnGetCurrentOrder: function() {
                return this.fnOrder()
            },
            fnOrder: function(z) {
                if (z === m) {
                    var u = [];
                    for (var v = 0, r = this.s.dt.aoColumns.length; v < r; v++) {
                        u.push(this.s.dt.aoColumns[v]._ColReorder_iOrigCol)
                    }
                    return u
                }
                this._fnOrderColumns(h(z));
                return this
            },
            _fnConstruct: function() {
                var C = this;
                var r = this.s.dt.aoColumns.length;
                var B;
                if (this.s.init.iFixedColumns) {
                    this.s.fixed = this.s.init.iFixedColumns
                }
                this.s.fixedRight = this.s.init.iFixedColumnsRight ? this.s.init.iFixedColumnsRight : 0;
                if (this.s.init.fnReorderCallback) {
                    this.s.dropCallback = this.s.init.fnReorderCallback
                }
                for (B = 0; B < r; B++) {
                    if (B > this.s.fixed - 1 && B < r - this.s.fixedRight) {
                        this._fnMouseListener(B, this.s.dt.aoColumns[B].nTh)
                    }
                    this.s.dt.aoColumns[B]._ColReorder_iOrigCol = B
                }
                this.s.dt.oApi._fnCallbackReg(this.s.dt, "aoStateSaveParams", function(D, E) {
                    C._fnStateSave.call(C, E)
                }, "ColReorder_State");
                var u = null ;
                if (this.s.init.aiOrder) {
                    u = this.s.init.aiOrder.slice()
                }
                if (this.s.dt.oLoadedState && typeof this.s.dt.oLoadedState.ColReorder != "undefined" && this.s.dt.oLoadedState.ColReorder.length == this.s.dt.aoColumns.length) {
                    u = this.s.dt.oLoadedState.ColReorder
                }
                if (u) {
                    if (!C.s.dt._bInitComplete) {
                        var z = false;
                        this.s.dt.aoDrawCallback.push({
                            fn: function() {
                                if (!C.s.dt._bInitComplete && !z) {
                                    z = true;
                                    var D = h(u);
                                    C._fnOrderColumns.call(C, D)
                                }
                            },
                            sName: "ColReorder_Pre"
                        })
                    } else {
                        var v = h(u);
                        C._fnOrderColumns.call(C, v)
                    }
                } else {
                    this._fnSetColumnIndexes()
                }
            },
            _fnOrderColumns: function(u) {
                if (u.length != this.s.dt.aoColumns.length) {
                    this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, "ColReorder - array reorder does not match known number of columns. Skipping.");
                    return
                }
                for (var v = 0, r = u.length; v < r; v++) {
                    var z = q.inArray(v, u);
                    if (v != z) {
                        f(u, z, v);
                        this.s.dt.oInstance.fnColReorder(z, v)
                    }
                }
                if (this.s.dt.oScroll.sX !== "" || this.s.dt.oScroll.sY !== "") {
                    this.s.dt.oInstance.fnAdjustColumnSizing()
                }
                this.s.dt.oInstance.oApi._fnSaveState(this.s.dt);
                this._fnSetColumnIndexes()
            },
            _fnStateSave: function(D) {
                var z, u, F, C;
                var r = this.s.dt;
                var v = r.aoColumns;
                D.ColReorder = [];
                if (D.aaSorting) {
                    for (z = 0; z < D.aaSorting.length; z++) {
                        D.aaSorting[z][0] = v[D.aaSorting[z][0]]._ColReorder_iOrigCol
                    }
                    var B = q.extend(true, [], D.aoSearchCols);
                    for (z = 0,
                    u = v.length; z < u; z++) {
                        C = v[z]._ColReorder_iOrigCol;
                        D.aoSearchCols[C] = B[z];
                        D.abVisCols[C] = v[z].bVisible;
                        D.ColReorder.push(C)
                    }
                } else {
                    if (D.order) {
                        for (z = 0; z < D.order.length; z++) {
                            D.order[z][0] = v[D.order[z][0]]._ColReorder_iOrigCol
                        }
                        var E = q.extend(true, [], D.columns);
                        for (z = 0,
                        u = v.length; z < u; z++) {
                            C = v[z]._ColReorder_iOrigCol;
                            D.columns[C] = E[z];
                            D.ColReorder.push(C)
                        }
                    }
                }
            },
            _fnMouseListener: function(r, v) {
                var u = this;
                q(v).on("mousedown.ColReorder", function(z) {
                    z.preventDefault();
                    u._fnMouseDown.call(u, z, v)
                })
            },
            _fnMouseDown: function(B, z) {
                var u = this;
                var v = q(B.target).closest("th, td");
                var C = v.offset();
                var r = parseInt(q(z).attr("data-column-index"), 10);
                if (r === m) {
                    return
                }
                this.s.mouse.startX = B.pageX;
                this.s.mouse.startY = B.pageY;
                this.s.mouse.offsetX = B.pageX - C.left;
                this.s.mouse.offsetY = B.pageY - C.top;
                this.s.mouse.target = this.s.dt.aoColumns[r].nTh;
                this.s.mouse.targetIndex = r;
                this.s.mouse.fromIndex = r;
                this._fnRegions();
                q(a).on("mousemove.ColReorder", function(D) {
                    u._fnMouseMove.call(u, D)
                }).on("mouseup.ColReorder", function(D) {
                    u._fnMouseUp.call(u, D)
                })
            },
            _fnMouseMove: function(B) {
                var z = this;
                if (this.dom.drag === null ) {
                    if (Math.pow(Math.pow(B.pageX - this.s.mouse.startX, 2) + Math.pow(B.pageY - this.s.mouse.startY, 2), 0.5) < 5) {
                        return
                    }
                    this._fnCreateDragNode()
                }
                this.dom.drag.css({
                    left: B.pageX - this.s.mouse.offsetX,
                    top: B.pageY - this.s.mouse.offsetY
                });
                var C = false;
                var u = this.s.mouse.toIndex;
                for (var v = 1, r = this.s.aoTargets.length; v < r; v++) {
                    if (B.pageX < this.s.aoTargets[v - 1].x + ((this.s.aoTargets[v].x - this.s.aoTargets[v - 1].x) / 2)) {
                        this.dom.pointer.css("left", this.s.aoTargets[v - 1].x);
                        this.s.mouse.toIndex = this.s.aoTargets[v - 1].to;
                        C = true;
                        break
                    }
                }
                if (!C) {
                    this.dom.pointer.css("left", this.s.aoTargets[this.s.aoTargets.length - 1].x);
                    this.s.mouse.toIndex = this.s.aoTargets[this.s.aoTargets.length - 1].to
                }
                if (this.s.init.bRealtime && u !== this.s.mouse.toIndex) {
                    this.s.dt.oInstance.fnColReorder(this.s.mouse.fromIndex, this.s.mouse.toIndex);
                    this.s.mouse.fromIndex = this.s.mouse.toIndex;
                    this._fnRegions()
                }
            },
            _fnMouseUp: function(u) {
                var r = this;
                q(a).off("mousemove.ColReorder mouseup.ColReorder");
                if (this.dom.drag !== null ) {
                    this.dom.drag.remove();
                    this.dom.pointer.remove();
                    this.dom.drag = null ;
                    this.dom.pointer = null ;
                    this.s.dt.oInstance.fnColReorder(this.s.mouse.fromIndex, this.s.mouse.toIndex);
                    this._fnSetColumnIndexes();
                    if (this.s.dt.oScroll.sX !== "" || this.s.dt.oScroll.sY !== "") {
                        this.s.dt.oInstance.fnAdjustColumnSizing()
                    }
                    if (this.s.dropCallback !== null ) {
                        this.s.dropCallback.call(this)
                    }
                    this.s.dt.oInstance.oApi._fnSaveState(this.s.dt)
                }
            },
            _fnRegions: function() {
                var u = this.s.dt.aoColumns;
                this.s.aoTargets.splice(0, this.s.aoTargets.length);
                this.s.aoTargets.push({
                    x: q(this.s.dt.nTable).offset().left,
                    to: 0
                });
                var z = 0;
                for (var v = 0, r = u.length; v < r; v++) {
                    if (v != this.s.mouse.fromIndex) {
                        z++
                    }
                    if (u[v].bVisible) {
                        this.s.aoTargets.push({
                            x: q(u[v].nTh).offset().left + q(u[v].nTh).outerWidth(),
                            to: z
                        })
                    }
                }
                if (this.s.fixedRight !== 0) {
                    this.s.aoTargets.splice(this.s.aoTargets.length - this.s.fixedRight)
                }
                if (this.s.fixed !== 0) {
                    this.s.aoTargets.splice(0, this.s.fixed)
                }
            },
            _fnCreateDragNode: function() {
                var C = this.s.dt.oScroll.sX !== "" || this.s.dt.oScroll.sY !== "";
                var v = this.s.dt.aoColumns[this.s.mouse.targetIndex].nTh;
                var u = v.parentNode;
                var z = u.parentNode;
                var r = z.parentNode;
                var B = q(v).clone();
                this.dom.drag = q(r.cloneNode(false)).addClass("DTCR_clonedTable").append(z.cloneNode(false).appendChild(u.cloneNode(false).appendChild(B[0]))).css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    width: q(v).outerWidth(),
                    height: q(v).outerHeight()
                }).appendTo("body");
                this.dom.pointer = q("<div></div>").addClass("DTCR_pointer").css({
                    position: "absolute",
                    top: C ? q("div.dataTables_scroll", this.s.dt.nTableWrapper).offset().top : q(this.s.dt.nTable).offset().top,
                    height: C ? q("div.dataTables_scroll", this.s.dt.nTableWrapper).height() : q(this.s.dt.nTable).height()
                }).appendTo("body")
            },
            _fnDestroy: function() {
                var u, r;
                for (u = 0,
                r = this.s.dt.aoDrawCallback.length; u < r; u++) {
                    if (this.s.dt.aoDrawCallback[u].sName === "ColReorder_Pre") {
                        this.s.dt.aoDrawCallback.splice(u, 1);
                        break
                    }
                }
                q(this.s.dt.nTHead).find("*").off(".ColReorder");
                q.each(this.s.dt.aoColumns, function(v, z) {
                    q(z.nTh).removeAttr("data-column-index")
                });
                this.s.dt._colReorder = null ;
                this.s = null 
            },
            _fnSetColumnIndexes: function() {
                q.each(this.s.dt.aoColumns, function(r, u) {
                    q(u.nTh).attr("data-column-index", r)
                })
            }
        };
        o.defaults = {
            aiOrder: null ,
            bRealtime: false,
            iFixedColumns: 0,
            iFixedColumnsRight: 0,
            fnReorderCallback: null 
        };
        o.version = "1.1.2";
        q.fn.dataTable.ColReorder = o;
        q.fn.DataTable.ColReorder = o;
        if (typeof q.fn.dataTable == "function" && typeof q.fn.dataTableExt.fnVersionCheck == "function" && q.fn.dataTableExt.fnVersionCheck("1.9.3")) {
            q.fn.dataTableExt.aoFeatures.push({
                fnInit: function(r) {
                    var v = r.oInstance;
                    if (!r._colReorder) {
                        var z = r.oInit;
                        var u = z.colReorder || z.oColReorder || {};
                        new o(r,u)
                    } else {
                        v.oApi._fnLog(r, 1, "ColReorder attempted to initialise twice. Ignoring second")
                    }
                    return null 
                },
                cFeature: "R",
                sFeature: "ColReorder"
            })
        } else {
            alert("Warning: ColReorder requires DataTables 1.9.3 or greater - www.datatables.net/download")
        }
        if (q.fn.dataTable.Api) {
            q.fn.dataTable.Api.register("colReorder.reset()", function() {
                return this.iterator("table", function(r) {
                    r._colReorder.fnReset()
                })
            });
            q.fn.dataTable.Api.register("colReorder.order()", function(r) {
                if (r) {
                    return this.iterator("table", function(u) {
                        u._colReorder.fnOrder(r)
                    })
                }
                return this.context.length ? this.context[0]._colReorder.fnOrder() : null 
            })
        }
        return o
    }
    ;
    if (typeof define === "function" && define.amd) {
        define(["jquery", "datatables"], e)
    } else {
        if (typeof exports === "object") {
            e(require("jquery"), require("datatables"))
        } else {
            if (jQuery && !jQuery.fn.dataTable.ColReorder) {
                e(jQuery, jQuery.fn.dataTable)
            }
        }
    }
})(window, document);
/*! TableTools 2.2.3
 * 2009-2014 SpryMedia Ltd - datatables.net/license
 *
 * ZeroClipboard 1.0.4
 * Author: Joseph Huckaby - MIT licensed
 */
var TableTools;
(function(e, a, f) {
    var d = function(m, h) {
        var g = {
            version: "1.0.4-TableTools2",
            clients: {},
            moviePath: "",
            nextId: 1,
            $: function(o) {
                if (typeof (o) == "string") {
                    o = a.getElementById(o)
                }
                if (!o.addClass) {
                    o.hide = function() {
                        this.style.display = "none"
                    }
                    ;
                    o.show = function() {
                        this.style.display = ""
                    }
                    ;
                    o.addClass = function(p) {
                        this.removeClass(p);
                        this.className += " " + p
                    }
                    ;
                    o.removeClass = function(p) {
                        this.className = this.className.replace(new RegExp("\\s*" + p + "\\s*"), " ").replace(/^\s+/, "").replace(/\s+$/, "")
                    }
                    ;
                    o.hasClass = function(p) {
                        return !!this.className.match(new RegExp("\\s*" + p + "\\s*"))
                    }
                }
                return o
            },
            setMoviePath: function(o) {
                this.moviePath = o
            },
            dispatch: function(r, p, q) {
                var o = this.clients[r];
                if (o) {
                    o.receiveEvent(p, q)
                }
            },
            register: function(p, o) {
                this.clients[p] = o
            },
            getDOMObjectPosition: function(p) {
                var o = {
                    left: 0,
                    top: 0,
                    width: p.width ? p.width : p.offsetWidth,
                    height: p.height ? p.height : p.offsetHeight
                };
                if (p.style.width !== "") {
                    o.width = p.style.width.replace("px", "")
                }
                if (p.style.height !== "") {
                    o.height = p.style.height.replace("px", "")
                }
                while (p) {
                    o.left += p.offsetLeft;
                    o.top += p.offsetTop;
                    p = p.offsetParent
                }
                return o
            },
            Client: function(o) {
                this.handlers = {};
                this.id = g.nextId++;
                this.movieId = "ZeroClipboard_TableToolsMovie_" + this.id;
                g.register(this.id, this);
                if (o) {
                    this.glue(o)
                }
            }
        };
        g.Client.prototype = {
            id: 0,
            ready: false,
            movie: null ,
            clipText: "",
            fileName: "",
            action: "copy",
            handCursorEnabled: true,
            cssEffects: true,
            handlers: null ,
            sized: false,
            glue: function(q, r) {
                this.domElement = g.$(q);
                var u = 99;
                if (this.domElement.style.zIndex) {
                    u = parseInt(this.domElement.style.zIndex, 10) + 1
                }
                var p = g.getDOMObjectPosition(this.domElement);
                this.div = a.createElement("div");
                var o = this.div.style;
                o.position = "absolute";
                o.left = "0px";
                o.top = "0px";
                o.width = (p.width) + "px";
                o.height = p.height + "px";
                o.zIndex = u;
                if (typeof r != "undefined" && r !== "") {
                    this.div.title = r
                }
                if (p.width !== 0 && p.height !== 0) {
                    this.sized = true
                }
                if (this.domElement) {
                    this.domElement.appendChild(this.div);
                    this.div.innerHTML = this.getHTML(p.width, p.height).replace(/&/g, "&amp;")
                }
            },
            positionElement: function() {
                var q = g.getDOMObjectPosition(this.domElement);
                var p = this.div.style;
                p.position = "absolute";
                p.width = q.width + "px";
                p.height = q.height + "px";
                if (q.width !== 0 && q.height !== 0) {
                    this.sized = true
                } else {
                    return
                }
                var o = this.div.childNodes[0];
                o.width = q.width;
                o.height = q.height
            },
            getHTML: function(r, o) {
                var q = "";
                var p = "id=" + this.id + "&width=" + r + "&height=" + o;
                if (navigator.userAgent.match(/MSIE/)) {
                    var u = location.href.match(/^https/i) ? "https://" : "http://";
                    q += '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="' + u + 'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0" width="' + r + '" height="' + o + '" id="' + this.movieId + '" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="' + g.moviePath + '" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="' + p + '"/><param name="wmode" value="transparent"/></object>'
                } else {
                    q += '<embed id="' + this.movieId + '" src="' + g.moviePath + '" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="' + r + '" height="' + o + '" name="' + this.movieId + '" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="' + p + '" wmode="transparent" />'
                }
                return q
            },
            hide: function() {
                if (this.div) {
                    this.div.style.left = "-2000px"
                }
            },
            show: function() {
                this.reposition()
            },
            destroy: function() {
                if (this.domElement && this.div) {
                    this.hide();
                    this.div.innerHTML = "";
                    var o = a.getElementsByTagName("body")[0];
                    try {
                        o.removeChild(this.div)
                    } catch (p) {}
                    this.domElement = null ;
                    this.div = null 
                }
            },
            reposition: function(q) {
                if (q) {
                    this.domElement = g.$(q);
                    if (!this.domElement) {
                        this.hide()
                    }
                }
                if (this.domElement && this.div) {
                    var p = g.getDOMObjectPosition(this.domElement);
                    var o = this.div.style;
                    o.left = "" + p.left + "px";
                    o.top = "" + p.top + "px"
                }
            },
            clearText: function() {
                this.clipText = "";
                if (this.ready) {
                    this.movie.clearText()
                }
            },
            appendText: function(o) {
                this.clipText += o;
                if (this.ready) {
                    this.movie.appendText(o)
                }
            },
            setText: function(o) {
                this.clipText = o;
                if (this.ready) {
                    this.movie.setText(o)
                }
            },
            setCharSet: function(o) {
                this.charSet = o;
                if (this.ready) {
                    this.movie.setCharSet(o)
                }
            },
            setBomInc: function(o) {
                this.incBom = o;
                if (this.ready) {
                    this.movie.setBomInc(o)
                }
            },
            setFileName: function(o) {
                this.fileName = o;
                if (this.ready) {
                    this.movie.setFileName(o)
                }
            },
            setAction: function(o) {
                this.action = o;
                if (this.ready) {
                    this.movie.setAction(o)
                }
            },
            addEventListener: function(o, p) {
                o = o.toString().toLowerCase().replace(/^on/, "");
                if (!this.handlers[o]) {
                    this.handlers[o] = []
                }
                this.handlers[o].push(p)
            },
            setHandCursor: function(o) {
                this.handCursorEnabled = o;
                if (this.ready) {
                    this.movie.setHandCursor(o)
                }
            },
            setCSSEffects: function(o) {
                this.cssEffects = !!o
            },
            receiveEvent: function(r, u) {
                var q;
                r = r.toString().toLowerCase().replace(/^on/, "");
                switch (r) {
                case "load":
                    this.movie = a.getElementById(this.movieId);
                    if (!this.movie) {
                        q = this;
                        setTimeout(function() {
                            q.receiveEvent("load", null )
                        }, 1);
                        return
                    }
                    if (!this.ready && navigator.userAgent.match(/Firefox/) && navigator.userAgent.match(/Windows/)) {
                        q = this;
                        setTimeout(function() {
                            q.receiveEvent("load", null )
                        }, 100);
                        this.ready = true;
                        return
                    }
                    this.ready = true;
                    this.movie.clearText();
                    this.movie.appendText(this.clipText);
                    this.movie.setFileName(this.fileName);
                    this.movie.setAction(this.action);
                    this.movie.setCharSet(this.charSet);
                    this.movie.setBomInc(this.incBom);
                    this.movie.setHandCursor(this.handCursorEnabled);
                    break;
                case "mouseover":
                    if (this.domElement && this.cssEffects) {
                        if (this.recoverActive) {
                            this.domElement.addClass("active")
                        }
                    }
                    break;
                case "mouseout":
                    if (this.domElement && this.cssEffects) {
                        this.recoverActive = false;
                        if (this.domElement.hasClass("active")) {
                            this.domElement.removeClass("active");
                            this.recoverActive = true
                        }
                    }
                    break;
                case "mousedown":
                    if (this.domElement && this.cssEffects) {
                        this.domElement.addClass("active")
                    }
                    break;
                case "mouseup":
                    if (this.domElement && this.cssEffects) {
                        this.domElement.removeClass("active");
                        this.recoverActive = false
                    }
                    break
                }
                if (this.handlers[r]) {
                    for (var p = 0, o = this.handlers[r].length; p < o; p++) {
                        var v = this.handlers[r][p];
                        if (typeof (v) == "function") {
                            v(this, u)
                        } else {
                            if ((typeof (v) == "object") && (v.length == 2)) {
                                v[0][v[1]](this, u)
                            } else {
                                if (typeof (v) == "string") {
                                    e[v](this, u)
                                }
                            }
                        }
                    }
                }
            }
        };
        e.ZeroClipboard_TableTools = g;
        (function(q, p, o) {
            TableTools = function(r, v) {
                if (!this instanceof TableTools) {
                    alert("Warning: TableTools must be initialised with the keyword 'new'")
                }
                var u = q.fn.dataTable.Api ? new q.fn.dataTable.Api(r).settings()[0] : r.fnSettings();
                this.s = {
                    that: this,
                    dt: u,
                    print: {
                        saveStart: -1,
                        saveLength: -1,
                        saveScroll: -1,
                        funcEnd: function() {}
                    },
                    buttonCounter: 0,
                    select: {
                        type: "",
                        selected: [],
                        preRowSelect: null ,
                        postSelected: null ,
                        postDeselected: null ,
                        all: false,
                        selectedClass: ""
                    },
                    custom: {},
                    swfPath: "",
                    buttonSet: [],
                    master: false,
                    tags: {}
                };
                this.dom = {
                    container: null ,
                    table: null ,
                    print: {
                        hidden: [],
                        message: null 
                    },
                    collection: {
                        collection: null ,
                        background: null 
                    }
                };
                this.classes = q.extend(true, {}, TableTools.classes);
                if (this.s.dt.bJUI) {
                    q.extend(true, this.classes, TableTools.classes_themeroller)
                }
                this.fnSettings = function() {
                    return this.s
                }
                ;
                if (typeof v == "undefined") {
                    v = {}
                }
                TableTools._aInstances.push(this);
                this._fnConstruct(v);
                return this
            }
            ;
            TableTools.prototype = {
                fnGetSelected: function(v) {
                    var u = [], C = this.s.dt.aoData, B = this.s.dt.aiDisplay, z, r;
                    if (v) {
                        for (z = 0,
                        r = B.length; z < r; z++) {
                            if (C[B[z]]._DTTT_selected) {
                                u.push(C[B[z]].nTr)
                            }
                        }
                    } else {
                        for (z = 0,
                        r = C.length; z < r; z++) {
                            if (C[z]._DTTT_selected) {
                                u.push(C[z].nTr)
                            }
                        }
                    }
                    return u
                },
                fnGetSelectedData: function() {
                    var u = [];
                    var z = this.s.dt.aoData;
                    var v, r;
                    for (v = 0,
                    r = z.length; v < r; v++) {
                        if (z[v]._DTTT_selected) {
                            u.push(this.s.dt.oInstance.fnGetData(v))
                        }
                    }
                    return u
                },
                fnGetSelectedIndexes: function(v) {
                    var u = [], C = this.s.dt.aoData, B = this.s.dt.aiDisplay, z, r;
                    if (v) {
                        for (z = 0,
                        r = B.length; z < r; z++) {
                            if (C[B[z]]._DTTT_selected) {
                                u.push(B[z])
                            }
                        }
                    } else {
                        for (z = 0,
                        r = C.length; z < r; z++) {
                            if (C[z]._DTTT_selected) {
                                u.push(z)
                            }
                        }
                    }
                    return u
                },
                fnIsSelected: function(u) {
                    var r = this.s.dt.oInstance.fnGetPosition(u);
                    return (this.s.dt.aoData[r]._DTTT_selected === true) ? true : false
                },
                fnSelectAll: function(r) {
                    this._fnRowSelect(r ? this.s.dt.aiDisplay : this.s.dt.aoData)
                },
                fnSelectNone: function(r) {
                    this._fnRowDeselect(this.fnGetSelectedIndexes(r))
                },
                fnSelect: function(r) {
                    if (this.s.select.type == "single") {
                        this.fnSelectNone();
                        this._fnRowSelect(r)
                    } else {
                        this._fnRowSelect(r)
                    }
                },
                fnDeselect: function(r) {
                    this._fnRowDeselect(r)
                },
                fnGetTitle: function(v) {
                    var r = "";
                    if (typeof v.sTitle != "undefined" && v.sTitle !== "") {
                        r = v.sTitle
                    } else {
                        var u = o.getElementsByTagName("title");
                        if (u.length > 0) {
                            r = u[0].innerHTML
                        }
                    }
                    if ("\u00A1".toString().length < 4) {
                        return r.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "")
                    } else {
                        return r.replace(/[^a-zA-Z0-9_\.,\-_ !\(\)]/g, "")
                    }
                },
                fnCalcColRatios: function(C) {
                    var B = this.s.dt.aoColumns, u = this._fnColumnTargets(C.mColumns), z = [], D = 0, E = 0, v, r;
                    for (v = 0,
                    r = u.length; v < r; v++) {
                        if (u[v]) {
                            D = B[v].nTh.offsetWidth;
                            E += D;
                            z.push(D)
                        }
                    }
                    for (v = 0,
                    r = z.length; v < r; v++) {
                        z[v] = z[v] / E
                    }
                    return z.join("\t")
                },
                fnGetTableData: function(r) {
                    if (this.s.dt) {
                        return this._fnGetDataTablesData(r)
                    }
                },
                fnSetText: function(r, u) {
                    this._fnFlashSetText(r, u)
                },
                fnResizeButtons: function() {
                    for (var r in g.clients) {
                        if (r) {
                            var u = g.clients[r];
                            if (typeof u.domElement != "undefined" && u.domElement.parentNode) {
                                u.positionElement()
                            }
                        }
                    }
                },
                fnResizeRequired: function() {
                    for (var r in g.clients) {
                        if (r) {
                            var u = g.clients[r];
                            if (typeof u.domElement != "undefined" && u.domElement.parentNode == this.dom.container && u.sized === false) {
                                return true
                            }
                        }
                    }
                    return false
                },
                fnPrint: function(r, u) {
                    if (u === f) {
                        u = {}
                    }
                    if (r === f || r) {
                        this._fnPrintStart(u)
                    } else {
                        this._fnPrintEnd()
                    }
                },
                fnInfo: function(r, v) {
                    var u = q("<div/>").addClass(this.classes.print.info).html(r).appendTo("body");
                    setTimeout(function() {
                        u.fadeOut("normal", function() {
                            u.remove()
                        })
                    }, v)
                },
                fnContainer: function() {
                    return this.dom.container
                },
                _fnConstruct: function(u) {
                    var r = this;
                    this._fnCustomiseSettings(u);
                    this.dom.container = o.createElement(this.s.tags.container);
                    this.dom.container.className = this.classes.container;
                    if (this.s.select.type != "none") {
                        this._fnRowSelectConfig()
                    }
                    this._fnButtonDefinations(this.s.buttonSet, this.dom.container);
                    this.s.dt.aoDestroyCallback.push({
                        sName: "TableTools",
                        fn: function() {
                            q(r.s.dt.nTBody).off("click.DTTT_Select", "tr");
                            q(r.dom.container).empty();
                            var v = q.inArray(r, TableTools._aInstances);
                            if (v !== -1) {
                                TableTools._aInstances.splice(v, 1)
                            }
                        }
                    })
                },
                _fnCustomiseSettings: function(r) {
                    if (typeof this.s.dt._TableToolsInit == "undefined") {
                        this.s.master = true;
                        this.s.dt._TableToolsInit = true
                    }
                    this.dom.table = this.s.dt.nTable;
                    this.s.custom = q.extend({}, TableTools.DEFAULTS, r);
                    this.s.swfPath = this.s.custom.sSwfPath;
                    if (typeof g != "undefined") {
                        g.moviePath = this.s.swfPath
                    }
                    this.s.select.type = this.s.custom.sRowSelect;
                    this.s.select.preRowSelect = this.s.custom.fnPreRowSelect;
                    this.s.select.postSelected = this.s.custom.fnRowSelected;
                    this.s.select.postDeselected = this.s.custom.fnRowDeselected;
                    if (this.s.custom.sSelectedClass) {
                        this.classes.select.row = this.s.custom.sSelectedClass
                    }
                    this.s.tags = this.s.custom.oTags;
                    this.s.buttonSet = this.s.custom.aButtons
                },
                _fnButtonDefinations: function(B, D) {
                    var u;
                    for (var z = 0, r = B.length; z < r; z++) {
                        if (typeof B[z] == "string") {
                            if (typeof TableTools.BUTTONS[B[z]] == "undefined") {
                                alert("TableTools: Warning - unknown button type: " + B[z]);
                                continue
                            }
                            u = q.extend({}, TableTools.BUTTONS[B[z]], true)
                        } else {
                            if (typeof TableTools.BUTTONS[B[z].sExtends] == "undefined") {
                                alert("TableTools: Warning - unknown button type: " + B[z].sExtends);
                                continue
                            }
                            var C = q.extend({}, TableTools.BUTTONS[B[z].sExtends], true);
                            u = q.extend(C, B[z], true)
                        }
                        var v = this._fnCreateButton(u, q(D).hasClass(this.classes.collection.container));
                        if (v) {
                            D.appendChild(v)
                        }
                    }
                },
                _fnCreateButton: function(v, r) {
                    var u = this._fnButtonBase(v, r);
                    if (v.sAction.match(/flash/)) {
                        if (!this._fnHasFlash()) {
                            return false
                        }
                        this._fnFlashConfig(u, v)
                    } else {
                        if (v.sAction == "text") {
                            this._fnTextConfig(u, v)
                        } else {
                            if (v.sAction == "div") {
                                this._fnTextConfig(u, v)
                            } else {
                                if (v.sAction == "collection") {
                                    this._fnTextConfig(u, v);
                                    this._fnCollectionConfig(u, v)
                                }
                            }
                        }
                    }
                    if (this.s.dt.iTabIndex !== -1) {
                        q(u).attr("tabindex", this.s.dt.iTabIndex).attr("aria-controls", this.s.dt.sTableId).on("keyup.DTTT", function(z) {
                            if (z.keyCode === 13) {
                                z.stopPropagation();
                                q(this).trigger("click")
                            }
                        }).on("mousedown.DTTT", function(z) {
                            if (!v.sAction.match(/flash/)) {
                                z.preventDefault()
                            }
                        })
                    }
                    return u
                },
                _fnButtonBase: function(D, u) {
                    var v, B, E;
                    if (u) {
                        v = D.sTag && D.sTag !== "default" ? D.sTag : this.s.tags.collection.button;
                        B = D.sLinerTag && D.sLinerTag !== "default" ? D.sLiner : this.s.tags.collection.liner;
                        E = this.classes.collection.buttons.normal
                    } else {
                        v = D.sTag && D.sTag !== "default" ? D.sTag : this.s.tags.button;
                        B = D.sLinerTag && D.sLinerTag !== "default" ? D.sLiner : this.s.tags.liner;
                        E = this.classes.buttons.normal
                    }
                    var z = o.createElement(v)
                      , r = o.createElement(B)
                      , C = this._fnGetMasterSettings();
                    z.className = E + " " + D.sButtonClass;
                    z.setAttribute("id", "ToolTables_" + this.s.dt.sInstance + "_" + C.buttonCounter);
                    z.appendChild(r);
                    r.innerHTML = D.sButtonText;
                    C.buttonCounter++;
                    return z
                },
                _fnGetMasterSettings: function() {
                    if (this.s.master) {
                        return this.s
                    } else {
                        var v = TableTools._aInstances;
                        for (var u = 0, r = v.length; u < r; u++) {
                            if (this.dom.table == v[u].s.dt.nTable) {
                                return v[u].s
                            }
                        }
                    }
                },
                _fnCollectionConfig: function(r, u) {
                    var v = o.createElement(this.s.tags.collection.container);
                    v.style.display = "none";
                    v.className = this.classes.collection.container;
                    u._collection = v;
                    o.body.appendChild(v);
                    this._fnButtonDefinations(u.aButtons, v)
                },
                _fnCollectionShow: function(B, E) {
                    var H = this
                      , J = q(B).offset()
                      , C = E._collection
                      , u = J.left
                      , r = J.top + q(B).outerHeight()
                      , G = q(p).height()
                      , D = q(o).height()
                      , F = q(p).width()
                      , I = q(o).width();
                    C.style.position = "absolute";
                    C.style.left = u + "px";
                    C.style.top = r + "px";
                    C.style.display = "block";
                    q(C).css("opacity", 0);
                    var v = o.createElement("div");
                    v.style.position = "absolute";
                    v.style.left = "0px";
                    v.style.top = "0px";
                    v.style.height = ((G > D) ? G : D) + "px";
                    v.style.width = ((F > I) ? F : I) + "px";
                    v.className = this.classes.collection.background;
                    q(v).css("opacity", 0);
                    o.body.appendChild(v);
                    o.body.appendChild(C);
                    var z = q(C).outerWidth();
                    var K = q(C).outerHeight();
                    if (u + z > I) {
                        C.style.left = (I - z) + "px"
                    }
                    if (r + K > D) {
                        C.style.top = (r - K - q(B).outerHeight()) + "px"
                    }
                    this.dom.collection.collection = C;
                    this.dom.collection.background = v;
                    setTimeout(function() {
                        q(C).animate({
                            opacity: 1
                        }, 500);
                        q(v).animate({
                            opacity: 0.25
                        }, 500)
                    }, 10);
                    this.fnResizeButtons();
                    q(v).click(function() {
                        H._fnCollectionHide.call(H, null , null )
                    })
                },
                _fnCollectionHide: function(r, u) {
                    if (u !== null  && u.sExtends == "collection") {
                        return
                    }
                    if (this.dom.collection.collection !== null ) {
                        q(this.dom.collection.collection).animate({
                            opacity: 0
                        }, 500, function(v) {
                            this.style.display = "none"
                        });
                        q(this.dom.collection.background).animate({
                            opacity: 0
                        }, 500, function(v) {
                            this.parentNode.removeChild(this)
                        });
                        this.dom.collection.collection = null ;
                        this.dom.collection.background = null 
                    }
                },
                _fnRowSelectConfig: function() {
                    if (this.s.master) {
                        var z = this, u, r, v = this.s.dt, B = this.s.dt.aoOpenRows;
                        q(v.nTable).addClass(this.classes.select.table);
                        if (this.s.select.type === "os") {
                            q(v.nTBody).on("mousedown.DTTT_Select", "tr", function(C) {
                                if (C.shiftKey) {
                                    q(v.nTBody).css("-moz-user-select", "none").one("selectstart.DTTT_Select", "tr", function() {
                                        return false
                                    })
                                }
                            });
                            q(v.nTBody).on("mouseup.DTTT_Select", "tr", function(C) {
                                q(v.nTBody).css("-moz-user-select", "")
                            })
                        }
                        q(v.nTBody).on("click.DTTT_Select", this.s.custom.sRowSelector, function(H) {
                            var I = this.nodeName.toLowerCase() === "tr" ? this : q(this).parents("tr")[0];
                            var C = z.s.select;
                            var J = z.s.dt.oInstance.fnGetPosition(I);
                            if (I.parentNode != v.nTBody) {
                                return
                            }
                            if (v.oInstance.fnGetData(I) === null ) {
                                return
                            }
                            if (C.type == "os") {
                                if (H.ctrlKey || H.metaKey) {
                                    if (z.fnIsSelected(I)) {
                                        z._fnRowDeselect(I, H)
                                    } else {
                                        z._fnRowSelect(I, H)
                                    }
                                } else {
                                    if (H.shiftKey) {
                                        var F = z.s.dt.aiDisplay.slice();
                                        var E = q.inArray(C.lastRow, F);
                                        var D = q.inArray(J, F);
                                        if (z.fnGetSelected().length === 0 || E === -1) {
                                            F.splice(q.inArray(J, F) + 1, F.length)
                                        } else {
                                            if (E > D) {
                                                var G = D;
                                                D = E;
                                                E = G
                                            }
                                            F.splice(D + 1, F.length);
                                            F.splice(0, E)
                                        }
                                        if (!z.fnIsSelected(I)) {
                                            z._fnRowSelect(F, H)
                                        } else {
                                            F.splice(q.inArray(J, F), 1);
                                            z._fnRowDeselect(F, H)
                                        }
                                    } else {
                                        if (z.fnIsSelected(I) && z.fnGetSelected().length === 1) {
                                            z._fnRowDeselect(I, H)
                                        } else {
                                            z.fnSelectNone();
                                            z._fnRowSelect(I, H)
                                        }
                                    }
                                }
                            } else {
                                if (z.fnIsSelected(I)) {
                                    z._fnRowDeselect(I, H)
                                } else {
                                    if (C.type == "single") {
                                        z.fnSelectNone();
                                        z._fnRowSelect(I, H)
                                    } else {
                                        if (C.type == "multi") {
                                            z._fnRowSelect(I, H)
                                        }
                                    }
                                }
                            }
                            C.lastRow = J
                        });
                        v.oApi._fnCallbackReg(v, "aoRowCreatedCallback", function(E, D, C) {
                            if (v.aoData[C]._DTTT_selected) {
                                q(E).addClass(z.classes.select.row)
                            }
                        }, "TableTools-SelectAll")
                    }
                },
                _fnRowSelect: function(E, D) {
                    var B = this, C = this._fnSelectData(E), v = C.length === 0 ? null  : C[0].nTr, u = [], z, r;
                    for (z = 0,
                    r = C.length; z < r; z++) {
                        if (C[z].nTr) {
                            u.push(C[z].nTr)
                        }
                    }
                    if (this.s.select.preRowSelect !== null  && !this.s.select.preRowSelect.call(this, D, u, true)) {
                        return
                    }
                    for (z = 0,
                    r = C.length; z < r; z++) {
                        C[z]._DTTT_selected = true;
                        if (C[z].nTr) {
                            q(C[z].nTr).addClass(B.classes.select.row)
                        }
                    }
                    if (this.s.select.postSelected !== null ) {
                        this.s.select.postSelected.call(this, u)
                    }
                    TableTools._fnEventDispatch(this, "select", u, true)
                },
                _fnRowDeselect: function(E, D) {
                    var z = this, B = this._fnSelectData(E), u = B.length === 0 ? null  : B[0].nTr, C = [], v, r;
                    for (v = 0,
                    r = B.length; v < r; v++) {
                        if (B[v].nTr) {
                            C.push(B[v].nTr)
                        }
                    }
                    if (this.s.select.preRowSelect !== null  && !this.s.select.preRowSelect.call(this, D, C, false)) {
                        return
                    }
                    for (v = 0,
                    r = B.length; v < r; v++) {
                        B[v]._DTTT_selected = false;
                        if (B[v].nTr) {
                            q(B[v].nTr).removeClass(z.classes.select.row)
                        }
                    }
                    if (this.s.select.postDeselected !== null ) {
                        this.s.select.postDeselected.call(this, C)
                    }
                    TableTools._fnEventDispatch(this, "select", C, false)
                },
                _fnSelectData: function(z) {
                    var u = [], B, v, r;
                    if (z.nodeName) {
                        B = this.s.dt.oInstance.fnGetPosition(z);
                        u.push(this.s.dt.aoData[B])
                    } else {
                        if (typeof z.length !== "undefined") {
                            for (v = 0,
                            r = z.length; v < r; v++) {
                                if (z[v].nodeName) {
                                    B = this.s.dt.oInstance.fnGetPosition(z[v]);
                                    u.push(this.s.dt.aoData[B])
                                } else {
                                    if (typeof z[v] === "number") {
                                        u.push(this.s.dt.aoData[z[v]])
                                    } else {
                                        u.push(z[v])
                                    }
                                }
                            }
                            return u
                        } else {
                            u.push(z)
                        }
                    }
                    return u
                },
                _fnTextConfig: function(r, v) {
                    var u = this;
                    if (v.fnInit !== null ) {
                        v.fnInit.call(this, r, v)
                    }
                    if (v.sToolTip !== "") {
                        r.title = v.sToolTip
                    }
                    q(r).hover(function() {
                        if (v.fnMouseover !== null ) {
                            v.fnMouseover.call(this, r, v, null )
                        }
                    }, function() {
                        if (v.fnMouseout !== null ) {
                            v.fnMouseout.call(this, r, v, null )
                        }
                    });
                    if (v.fnSelect !== null ) {
                        TableTools._fnEventListen(this, "select", function(z) {
                            v.fnSelect.call(u, r, v, z)
                        })
                    }
                    q(r).click(function(z) {
                        if (v.fnClick !== null ) {
                            v.fnClick.call(u, r, v, null , z)
                        }
                        if (v.fnComplete !== null ) {
                            v.fnComplete.call(u, r, v, null , null )
                        }
                        u._fnCollectionHide(r, v)
                    })
                },
                _fnHasFlash: function() {
                    try {
                        var r = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                        if (r) {
                            return true
                        }
                    } catch (u) {
                        if (navigator.mimeTypes && navigator.mimeTypes["application/x-shockwave-flash"] !== f && navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin) {
                            return true
                        }
                    }
                    return false
                },
                _fnFlashConfig: function(u, z) {
                    var v = this;
                    var r = new g.Client();
                    if (z.fnInit !== null ) {
                        z.fnInit.call(this, u, z)
                    }
                    r.setHandCursor(true);
                    if (z.sAction == "flash_save") {
                        r.setAction("save");
                        r.setCharSet((z.sCharSet == "utf16le") ? "UTF16LE" : "UTF8");
                        r.setBomInc(z.bBomInc);
                        r.setFileName(z.sFileName.replace("*", this.fnGetTitle(z)))
                    } else {
                        if (z.sAction == "flash_pdf") {
                            r.setAction("pdf");
                            r.setFileName(z.sFileName.replace("*", this.fnGetTitle(z)))
                        } else {
                            r.setAction("copy")
                        }
                    }
                    r.addEventListener("mouseOver", function(B) {
                        if (z.fnMouseover !== null ) {
                            z.fnMouseover.call(v, u, z, r)
                        }
                    });
                    r.addEventListener("mouseOut", function(B) {
                        if (z.fnMouseout !== null ) {
                            z.fnMouseout.call(v, u, z, r)
                        }
                    });
                    r.addEventListener("mouseDown", function(B) {
                        if (z.fnClick !== null ) {
                            z.fnClick.call(v, u, z, r)
                        }
                    });
                    r.addEventListener("complete", function(B, C) {
                        if (z.fnComplete !== null ) {
                            z.fnComplete.call(v, u, z, r, C)
                        }
                        v._fnCollectionHide(u, z)
                    });
                    this._fnFlashGlue(r, u, z.sToolTip)
                },
                _fnFlashGlue: function(r, v, z) {
                    var u = this;
                    var B = v.getAttribute("id");
                    if (o.getElementById(B)) {
                        r.glue(v, z)
                    } else {
                        setTimeout(function() {
                            u._fnFlashGlue(r, v, z)
                        }, 100)
                    }
                },
                _fnFlashSetText: function(B, u) {
                    var z = this._fnChunkData(u, 8192);
                    B.clearText();
                    for (var v = 0, r = z.length; v < r; v++) {
                        B.appendText(z[v])
                    }
                },
                _fnColumnTargets: function(B) {
                    var E = [];
                    var C = this.s.dt;
                    var z, r;
                    var v = C.aoColumns;
                    var D = v.length;
                    if (typeof B == "function") {
                        var u = B.call(this, C);
                        for (z = 0,
                        r = D; z < r; z++) {
                            E.push(q.inArray(z, u) !== -1 ? true : false)
                        }
                    } else {
                        if (typeof B == "object") {
                            for (z = 0,
                            r = D; z < r; z++) {
                                E.push(false)
                            }
                            for (z = 0,
                            r = B.length; z < r; z++) {
                                E[B[z]] = true
                            }
                        } else {
                            if (B == "visible") {
                                for (z = 0,
                                r = D; z < r; z++) {
                                    E.push(v[z].bVisible ? true : false)
                                }
                            } else {
                                if (B == "hidden") {
                                    for (z = 0,
                                    r = D; z < r; z++) {
                                        E.push(v[z].bVisible ? false : true)
                                    }
                                } else {
                                    if (B == "sortable") {
                                        for (z = 0,
                                        r = D; z < r; z++) {
                                            E.push(v[z].bSortable ? true : false)
                                        }
                                    } else {
                                        for (z = 0,
                                        r = D; z < r; z++) {
                                            E.push(true)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return E
                },
                _fnNewline: function(r) {
                    if (r.sNewLine == "auto") {
                        return navigator.userAgent.match(/Windows/) ? "\r\n" : "\n"
                    } else {
                        return r.sNewLine
                    }
                },
                _fnGetDataTablesData: function(D) {
                    var N, K, M, Q;
                    var v, B = [], r = "", u;
                    var J = this.s.dt, z, G;
                    var C = new RegExp(D.sFieldBoundary,"g");
                    var I = this._fnColumnTargets(D.mColumns);
                    var O = (typeof D.bSelectedOnly != "undefined") ? D.bSelectedOnly : false;
                    if (D.bHeader) {
                        v = [];
                        for (N = 0,
                        K = J.aoColumns.length; N < K; N++) {
                            if (I[N]) {
                                r = J.aoColumns[N].sTitle.replace(/\n/g, " ").replace(/<.*?>/g, "").replace(/^\s+|\s+$/g, "");
                                r = this._fnHtmlDecode(r);
                                v.push(this._fnBoundData(r, D.sFieldBoundary, C))
                            }
                        }
                        B.push(v.join(D.sFieldSeperator))
                    }
                    O = true;
                    var E;
                    var P = this.fnGetSelectedIndexes();
                    O = this.s.select.type !== "none" && O && P.length !== 0;
                    if (O) {
                        E = P
                    } else {
                        if (h.Api) {
                            E = new h.Api(J).rows(D.oSelectorOpts).indexes().flatten().toArray()
                        } else {
                            E = J.oInstance.$("tr", D.oSelectorOpts).map(function(S, R) {
                                return J.oInstance.fnGetPosition(R)
                            }).get()
                        }
                    }
                    for (M = 0,
                    Q = E.length; M < Q; M++) {
                        z = J.aoData[E[M]].nTr;
                        v = [];
                        for (N = 0,
                        K = J.aoColumns.length; N < K; N++) {
                            if (I[N]) {
                                var H = J.oApi._fnGetCellData(J, E[M], N, "display");
                                if (D.fnCellRender) {
                                    r = D.fnCellRender(H, N, z, E[M]) + ""
                                } else {
                                    if (typeof H == "string") {
                                        r = H.replace(/\n/g, " ");
                                        r = r.replace(/<img.*?\s+alt\s*=\s*(?:"([^"]+)"|'([^']+)'|([^\s>]+)).*?>/gi, "$1$2$3");
                                        r = r.replace(/<.*?>/g, "")
                                    } else {
                                        r = H + ""
                                    }
                                }
                                r = r.replace(/^\s+/, "").replace(/\s+$/, "");
                                r = this._fnHtmlDecode(r);
                                v.push(this._fnBoundData(r, D.sFieldBoundary, C))
                            }
                        }
                        B.push(v.join(D.sFieldSeperator));
                        if (D.bOpenRows) {
                            u = q.grep(J.aoOpenRows, function(R) {
                                return R.nParent === z
                            });
                            if (u.length === 1) {
                                r = this._fnBoundData(q("td", u[0].nTr).html(), D.sFieldBoundary, C);
                                B.push(r)
                            }
                        }
                    }
                    if (D.bFooter && J.nTFoot !== null ) {
                        v = [];
                        for (N = 0,
                        K = J.aoColumns.length; N < K; N++) {
                            if (I[N] && J.aoColumns[N].nTf !== null ) {
                                r = J.aoColumns[N].nTf.innerHTML.replace(/\n/g, " ").replace(/<.*?>/g, "");
                                r = this._fnHtmlDecode(r);
                                v.push(this._fnBoundData(r, D.sFieldBoundary, C))
                            }
                        }
                        B.push(v.join(D.sFieldSeperator))
                    }
                    var F = B.join(this._fnNewline(D));
                    return F
                },
                _fnBoundData: function(r, v, u) {
                    if (v === "") {
                        return r
                    } else {
                        return v + r.replace(u, v + v) + v
                    }
                },
                _fnChunkData: function(r, v) {
                    var z = [];
                    var B = r.length;
                    for (var u = 0; u < B; u += v) {
                        if (u + v < B) {
                            z.push(r.substring(u, u + v))
                        } else {
                            z.push(r.substring(u, B))
                        }
                    }
                    return z
                },
                _fnHtmlDecode: function(r) {
                    if (r.indexOf("&") === -1) {
                        return r
                    }
                    var u = o.createElement("div");
                    return r.replace(/&([^\s]*?);/g, function(v, z) {
                        if (v.substr(1, 1) === "#") {
                            return String.fromCharCode(Number(z.substr(1)))
                        } else {
                            u.innerHTML = v;
                            return u.childNodes[0].nodeValue
                        }
                    })
                },
                _fnPrintStart: function(C) {
                    var B = this;
                    var v = this.s.dt;
                    this._fnPrintHideNodes(v.nTable);
                    this.s.print.saveStart = v._iDisplayStart;
                    this.s.print.saveLength = v._iDisplayLength;
                    if (C.bShowAll) {
                        v._iDisplayStart = 0;
                        v._iDisplayLength = -1;
                        if (v.oApi._fnCalculateEnd) {
                            v.oApi._fnCalculateEnd(v)
                        }
                        v.oApi._fnDraw(v)
                    }
                    if (v.oScroll.sX !== "" || v.oScroll.sY !== "") {
                        this._fnPrintScrollStart(v);
                        q(this.s.dt.nTable).bind("draw.DTTT_Print", function() {
                            B._fnPrintScrollStart(v)
                        })
                    }
                    var u = v.aanFeatures;
                    for (var D in u) {
                        if (D != "i" && D != "t" && D.length == 1) {
                            for (var z = 0, r = u[D].length; z < r; z++) {
                                this.dom.print.hidden.push({
                                    node: u[D][z],
                                    display: "block"
                                });
                                u[D][z].style.display = "none"
                            }
                        }
                    }
                    q(o.body).addClass(this.classes.print.body);
                    if (C.sInfo !== "") {
                        this.fnInfo(C.sInfo, 3000)
                    }
                    if (C.sMessage) {
                        q("<div/>").addClass(this.classes.print.message).html(C.sMessage).prependTo("body")
                    }
                    this.s.print.saveScroll = q(p).scrollTop();
                    p.scrollTo(0, 0);
                    q(o).bind("keydown.DTTT", function(E) {
                        if (E.keyCode == 27) {
                            E.preventDefault();
                            B._fnPrintEnd.call(B, E)
                        }
                    })
                },
                _fnPrintEnd: function(B) {
                    var v = this;
                    var r = this.s.dt;
                    var z = this.s.print;
                    var u = this.dom.print;
                    this._fnPrintShowNodes();
                    if (r.oScroll.sX !== "" || r.oScroll.sY !== "") {
                        q(this.s.dt.nTable).unbind("draw.DTTT_Print");
                        this._fnPrintScrollEnd()
                    }
                    p.scrollTo(0, z.saveScroll);
                    q("div." + this.classes.print.message).remove();
                    q(o.body).removeClass("DTTT_Print");
                    r._iDisplayStart = z.saveStart;
                    r._iDisplayLength = z.saveLength;
                    if (r.oApi._fnCalculateEnd) {
                        r.oApi._fnCalculateEnd(r)
                    }
                    r.oApi._fnDraw(r);
                    q(o).unbind("keydown.DTTT")
                },
                _fnPrintScrollStart: function() {
                    var v = this.s.dt, B = v.nScrollHead.getElementsByTagName("div")[0], r = B.getElementsByTagName("table")[0], C = v.nTable.parentNode, u, z;
                    u = v.nTable.getElementsByTagName("thead");
                    if (u.length > 0) {
                        v.nTable.removeChild(u[0])
                    }
                    if (v.nTFoot !== null ) {
                        z = v.nTable.getElementsByTagName("tfoot");
                        if (z.length > 0) {
                            v.nTable.removeChild(z[0])
                        }
                    }
                    u = v.nTHead.cloneNode(true);
                    v.nTable.insertBefore(u, v.nTable.childNodes[0]);
                    if (v.nTFoot !== null ) {
                        z = v.nTFoot.cloneNode(true);
                        v.nTable.insertBefore(z, v.nTable.childNodes[1])
                    }
                    if (v.oScroll.sX !== "") {
                        v.nTable.style.width = q(v.nTable).outerWidth() + "px";
                        C.style.width = q(v.nTable).outerWidth() + "px";
                        C.style.overflow = "visible"
                    }
                    if (v.oScroll.sY !== "") {
                        C.style.height = q(v.nTable).outerHeight() + "px";
                        C.style.overflow = "visible"
                    }
                },
                _fnPrintScrollEnd: function() {
                    var r = this.s.dt
                      , u = r.nTable.parentNode;
                    if (r.oScroll.sX !== "") {
                        u.style.width = r.oApi._fnStringToCss(r.oScroll.sX);
                        u.style.overflow = "auto"
                    }
                    if (r.oScroll.sY !== "") {
                        u.style.height = r.oApi._fnStringToCss(r.oScroll.sY);
                        u.style.overflow = "auto"
                    }
                },
                _fnPrintShowNodes: function() {
                    var v = this.dom.print.hidden;
                    for (var u = 0, r = v.length; u < r; u++) {
                        v[u].node.style.display = v[u].display
                    }
                    v.splice(0, v.length)
                },
                _fnPrintHideNodes: function(u) {
                    var z = this.dom.print.hidden;
                    var C = u.parentNode;
                    var D = C.childNodes;
                    for (var v = 0, r = D.length; v < r; v++) {
                        if (D[v] != u && D[v].nodeType == 1) {
                            var B = q(D[v]).css("display");
                            if (B != "none") {
                                z.push({
                                    node: D[v],
                                    display: B
                                });
                                D[v].style.display = "none"
                            }
                        }
                    }
                    if (C.nodeName.toUpperCase() != "BODY") {
                        this._fnPrintHideNodes(C)
                    }
                }
            };
            TableTools._aInstances = [];
            TableTools._aListeners = [];
            TableTools.fnGetMasters = function() {
                var u = [];
                for (var v = 0, r = TableTools._aInstances.length; v < r; v++) {
                    if (TableTools._aInstances[v].s.master) {
                        u.push(TableTools._aInstances[v])
                    }
                }
                return u
            }
            ;
            TableTools.fnGetInstance = function(v) {
                if (typeof v != "object") {
                    v = o.getElementById(v)
                }
                for (var u = 0, r = TableTools._aInstances.length; u < r; u++) {
                    if (TableTools._aInstances[u].s.master && TableTools._aInstances[u].dom.table == v) {
                        return TableTools._aInstances[u]
                    }
                }
                return null 
            }
            ;
            TableTools._fnEventListen = function(v, u, r) {
                TableTools._aListeners.push({
                    that: v,
                    type: u,
                    fn: r
                })
            }
            ;
            TableTools._fnEventDispatch = function(D, B, C, z) {
                var v = TableTools._aListeners;
                for (var u = 0, r = v.length; u < r; u++) {
                    if (D.dom.table == v[u].that.dom.table && v[u].type == B) {
                        v[u].fn(C, z)
                    }
                }
            }
            ;
            TableTools.buttonBase = {
                sAction: "text",
                sTag: "default",
                sLinerTag: "default",
                sButtonClass: "DTTT_button_text",
                sButtonText: "Button text",
                sTitle: "",
                sToolTip: "",
                sCharSet: "utf8",
                bBomInc: false,
                sFileName: "*.csv",
                sFieldBoundary: "",
                sFieldSeperator: "\t",
                sNewLine: "auto",
                mColumns: "all",
                bHeader: true,
                bFooter: true,
                bOpenRows: false,
                bSelectedOnly: false,
                oSelectorOpts: f,
                fnMouseover: null ,
                fnMouseout: null ,
                fnClick: null ,
                fnSelect: null ,
                fnComplete: null ,
                fnInit: null ,
                fnCellRender: null 
            };
            TableTools.BUTTONS = {
                csv: q.extend({}, TableTools.buttonBase, {
                    sAction: "flash_save",
                    sButtonClass: "DTTT_button_csv",
                    sButtonText: "CSV",
                    sFieldBoundary: '"',
                    sFieldSeperator: ",",
                    fnClick: function(u, v, r) {
                        this.fnSetText(r, this.fnGetTableData(v))
                    }
                }),
                xls: q.extend({}, TableTools.buttonBase, {
                    sAction: "flash_save",
                    sCharSet: "utf16le",
                    bBomInc: true,
                    sButtonClass: "DTTT_button_xls",
                    sButtonText: "Excel",
                    fnClick: function(u, v, r) {
                        this.fnSetText(r, this.fnGetTableData(v))
                    }
                }),
                copy: q.extend({}, TableTools.buttonBase, {
                    sAction: "flash_copy",
                    sButtonClass: "DTTT_button_copy",
                    sButtonText: "Copy",
                    fnClick: function(u, v, r) {
                        this.fnSetText(r, this.fnGetTableData(v))
                    },
                    fnComplete: function(z, B, v, C) {
                        var r = C.split("\n").length;
                        if (B.bHeader) {
                            r--
                        }
                        if (this.s.dt.nTFoot !== null  && B.bFooter) {
                            r--
                        }
                        var u = (r == 1) ? "" : "s";
                        this.fnInfo("<h6>Table copied</h6><p>Copied " + r + " row" + u + " to the clipboard.</p>", 1500)
                    }
                }),
                pdf: q.extend({}, TableTools.buttonBase, {
                    sAction: "flash_pdf",
                    sNewLine: "\n",
                    sFileName: "*.pdf",
                    sButtonClass: "DTTT_button_pdf",
                    sButtonText: "PDF",
                    sPdfOrientation: "portrait",
                    sPdfSize: "A4",
                    sPdfMessage: "",
                    fnClick: function(u, v, r) {
                        this.fnSetText(r, "title:" + this.fnGetTitle(v) + "\nmessage:" + v.sPdfMessage + "\ncolWidth:" + this.fnCalcColRatios(v) + "\norientation:" + v.sPdfOrientation + "\nsize:" + v.sPdfSize + "\n--/TableToolsOpts--\n" + this.fnGetTableData(v))
                    }
                }),
                print: q.extend({}, TableTools.buttonBase, {
                    sInfo: "<h6>Print view</h6><p>Please use your browser's print function to print this table. Press escape when finished.</p>",
                    sMessage: null ,
                    bShowAll: true,
                    sToolTip: "View print view",
                    sButtonClass: "DTTT_button_print",
                    sButtonText: "Print",
                    fnClick: function(r, u) {
                        this.fnPrint(true, u)
                    }
                }),
                text: q.extend({}, TableTools.buttonBase),
                select: q.extend({}, TableTools.buttonBase, {
                    sButtonText: "Select button",
                    fnSelect: function(r, u) {
                        if (this.fnGetSelected().length !== 0) {
                            q(r).removeClass(this.classes.buttons.disabled)
                        } else {
                            q(r).addClass(this.classes.buttons.disabled)
                        }
                    },
                    fnInit: function(r, u) {
                        q(r).addClass(this.classes.buttons.disabled)
                    }
                }),
                select_single: q.extend({}, TableTools.buttonBase, {
                    sButtonText: "Select button",
                    fnSelect: function(u, v) {
                        var r = this.fnGetSelected().length;
                        if (r == 1) {
                            q(u).removeClass(this.classes.buttons.disabled)
                        } else {
                            q(u).addClass(this.classes.buttons.disabled)
                        }
                    },
                    fnInit: function(r, u) {
                        q(r).addClass(this.classes.buttons.disabled)
                    }
                }),
                select_all: q.extend({}, TableTools.buttonBase, {
                    sButtonText: "Select all",
                    fnClick: function(r, u) {
                        this.fnSelectAll()
                    },
                    fnSelect: function(r, u) {
                        if (this.fnGetSelected().length == this.s.dt.fnRecordsDisplay()) {
                            q(r).addClass(this.classes.buttons.disabled)
                        } else {
                            q(r).removeClass(this.classes.buttons.disabled)
                        }
                    }
                }),
                select_none: q.extend({}, TableTools.buttonBase, {
                    sButtonText: "Deselect all",
                    fnClick: function(r, u) {
                        this.fnSelectNone()
                    },
                    fnSelect: function(r, u) {
                        if (this.fnGetSelected().length !== 0) {
                            q(r).removeClass(this.classes.buttons.disabled)
                        } else {
                            q(r).addClass(this.classes.buttons.disabled)
                        }
                    },
                    fnInit: function(r, u) {
                        q(r).addClass(this.classes.buttons.disabled)
                    }
                }),
                ajax: q.extend({}, TableTools.buttonBase, {
                    sAjaxUrl: "/xhr.php",
                    sButtonText: "Ajax button",
                    fnClick: function(u, v) {
                        var r = this.fnGetTableData(v);
                        q.ajax({
                            url: v.sAjaxUrl,
                            data: [{
                                name: "tableData",
                                value: r
                            }],
                            success: v.fnAjaxComplete,
                            dataType: "json",
                            type: "POST",
                            cache: false,
                            error: function() {
                                alert("Error detected when sending table data to server")
                            }
                        })
                    },
                    fnAjaxComplete: function(r) {
                        alert("Ajax complete")
                    }
                }),
                div: q.extend({}, TableTools.buttonBase, {
                    sAction: "div",
                    sTag: "div",
                    sButtonClass: "DTTT_nonbutton",
                    sButtonText: "Text button"
                }),
                collection: q.extend({}, TableTools.buttonBase, {
                    sAction: "collection",
                    sButtonClass: "DTTT_button_collection",
                    sButtonText: "Collection",
                    fnClick: function(r, u) {
                        this._fnCollectionShow(r, u)
                    }
                })
            };
            TableTools.buttons = TableTools.BUTTONS;
            TableTools.classes = {
                container: "DTTT_container",
                buttons: {
                    normal: "DTTT_button",
                    disabled: "DTTT_disabled"
                },
                collection: {
                    container: "DTTT_collection",
                    background: "DTTT_collection_background",
                    buttons: {
                        normal: "DTTT_button",
                        disabled: "DTTT_disabled"
                    }
                },
                select: {
                    table: "DTTT_selectable",
                    row: "DTTT_selected selected"
                },
                print: {
                    body: "DTTT_Print",
                    info: "DTTT_print_info",
                    message: "DTTT_PrintMessage"
                }
            };
            TableTools.classes_themeroller = {
                container: "DTTT_container ui-buttonset ui-buttonset-multi",
                buttons: {
                    normal: "DTTT_button ui-button ui-state-default"
                },
                collection: {
                    container: "DTTT_collection ui-buttonset ui-buttonset-multi"
                }
            };
            TableTools.DEFAULTS = {
                sSwfPath: "../swf/copy_csv_xls_pdf.swf",
                sRowSelect: "none",
                sRowSelector: "tr",
                sSelectedClass: null ,
                fnPreRowSelect: null ,
                fnRowSelected: null ,
                fnRowDeselected: null ,
                aButtons: ["copy", "csv", "xls", "pdf", "print"],
                oTags: {
                    container: "div",
                    button: "a",
                    liner: "span",
                    collection: {
                        container: "div",
                        button: "a",
                        liner: "span"
                    }
                }
            };
            TableTools.defaults = TableTools.DEFAULTS;
            TableTools.prototype.CLASS = "TableTools";
            TableTools.version = "2.2.3";
            if (q.fn.dataTable.Api) {
                q.fn.dataTable.Api.register("tabletools()", function() {
                    var r = null ;
                    if (this.context.length > 0) {
                        r = TableTools.fnGetInstance(this.context[0].nTable)
                    }
                    return r
                })
            }
            if (typeof q.fn.dataTable == "function" && typeof q.fn.dataTableExt.fnVersionCheck == "function" && q.fn.dataTableExt.fnVersionCheck("1.9.0")) {
                q.fn.dataTableExt.aoFeatures.push({
                    fnInit: function(v) {
                        var u = v.oInit;
                        var r = u ? u.tableTools || u.oTableTools || {} : {};
                        return new TableTools(v.oInstance,r).dom.container
                    },
                    cFeature: "T",
                    sFeature: "TableTools"
                })
            } else {
                alert("Warning: TableTools requires DataTables 1.9.0 or newer - www.datatables.net/download")
            }
            q.fn.DataTable.TableTools = TableTools
        })(jQuery, e, a);
        if (typeof m.fn.dataTable == "function" && typeof m.fn.dataTableExt.fnVersionCheck == "function" && m.fn.dataTableExt.fnVersionCheck("1.9.0")) {
            m.fn.dataTableExt.aoFeatures.push({
                fnInit: function(q) {
                    var p = typeof q.oInit.oTableTools != "undefined" ? q.oInit.oTableTools : {};
                    var o = new TableTools(q.oInstance,p);
                    TableTools._aInstances.push(o);
                    return o.dom.container
                },
                cFeature: "T",
                sFeature: "TableTools"
            })
        } else {
            alert("Warning: TableTools 2 requires DataTables 1.9.0 or newer - www.datatables.net/download")
        }
        m.fn.dataTable.TableTools = TableTools;
        m.fn.DataTable.TableTools = TableTools;
        return TableTools
    }
    ;
    if (typeof define === "function" && define.amd) {
        define(["jquery", "datatables"], d)
    } else {
        if (typeof exports === "object") {
            d(require("jquery"), require("datatables"))
        } else {
            if (jQuery && !jQuery.fn.dataTable.TableTools) {
                d(jQuery, jQuery.fn.dataTable)
            }
        }
    }
})(window, document);
(function(a) {
    a.fn.columnFilter = function(g) {
        var e, H, r, p;
        var K = "From {from} to {to}";
        var f = new Array();
        var o = new Array();
        var I = null ;
        var G = function() {}
        ;
        function M(N, Q, T, W, U) {
            if (typeof Q == "undefined") {
                return new Array()
            }
            if (typeof T == "undefined") {
                T = true
            }
            if (typeof W == "undefined") {
                W = true
            }
            if (typeof U == "undefined") {
                U = true
            }
            var Z;
            if (W == true) {
                Z = N.aiDisplay
            } else {
                Z = N.aiDisplayMaster
            }
            var Y = new Array();
            for (var P = 0, S = Z.length; P < S; P++) {
                var R = Z[P];
                var O = E.fnGetData(R);
                var V = O[Q];
                if (U == true && V.length == 0) {
                    continue
                } else {
                    if (T == true && jQuery.inArray(V, Y) > -1) {
                        continue
                    } else {
                        Y.push(V)
                    }
                }
            }
            return Y.sort()
        }
        function F(N) {
            if (q.bUseColVis) {
                return N
            } else {
                return E.fnSettings().oApi._fnVisibleToColumnIndex(E.fnSettings(), N)
            }
        }
        function v(W, V, Y, O, S, Z) {
            var P = "text_filter form-control";
            if (O) {
                P = "number_filter form-control"
            }
            r = r.replace(/(^\s*)|(\s*$)/g, "");
            var Q = W.fnSettings().aoPreSearchCols[H].sSearch;
            var N = "search_init ";
            var R = r;
            if (Q != "" && Q != "^") {
                if (O && Q.charAt(0) == "^") {
                    R = Q.substr(1)
                } else {
                    R = Q
                }
                N = ""
            }
            var U = a('<input type="text" class="' + N + P + '" value="' + R + '" rel="' + H + '"/>');
            if (Z != undefined && Z != -1) {
                U.attr("maxlength", Z)
            }
            p.html(U);
            if (O) {
                p.wrapInner('<span class="filter_column filter_number" />')
            } else {
                p.wrapInner('<span class="filter_column filter_text" />')
            }
            e[H] = r;
            var T = H;
            if (O && !W.fnSettings().oFeatures.bServerSide) {
                U.keyup(function() {
                    W.fnFilter("^" + this.value, F(T), true, false);
                    G()
                })
            } else {
                U.keyup(function() {
                    if (W.fnSettings().oFeatures.bServerSide && S != 0) {
                        var aa = W.fnSettings().aoPreSearchCols[T].sSearch;
                        var ab = a(this).data("dt-iLastFilterLength");
                        if (typeof ab == "undefined") {
                            ab = 0
                        }
                        var ac = this.value.length;
                        if (Math.abs(ac - ab) < S) {
                            return
                        } else {
                            a(this).data("dt-iLastFilterLength", ac)
                        }
                    }
                    W.fnFilter(this.value, F(T), V, Y);
                    G()
                })
            }
            U.focus(function() {
                if (a(this).hasClass("search_init")) {
                    a(this).removeClass("search_init");
                    this.value = ""
                }
            });
            U.blur(function() {
                if (this.value == "") {
                    a(this).addClass("search_init");
                    this.value = e[T]
                }
            })
        }
        function m(N) {
            p.html(z(0));
            var Q = N.attr("id") + "_range_from_" + H;
            var S = a('<input type="text" class="number_range_filter form-control" id="' + Q + '" rel="' + H + '"/>');
            p.append(S);
            p.append(z(1));
            var P = N.attr("id") + "_range_to_" + H;
            var R = a('<input type="text" class="number_range_filter form-control" id="' + P + '" rel="' + H + '"/>');
            p.append(R);
            p.append(z(2));
            p.wrapInner('<span class="filter_column filter_number_range form-control" />');
            var O = H;
            o.push(H);
            N.dataTableExt.afnFiltering.push(function(Y, V, U) {
                if (N.attr("id") != Y.sTableId) {
                    return true
                }
                if (document.getElementById(Q) == null ) {
                    return true
                }
                var W = document.getElementById(Q).value * 1;
                var T = document.getElementById(P).value * 1;
                var Z = V[F(O)] == "-" ? 0 : V[F(O)] * 1;
                if (W == "" && T == "") {
                    return true
                } else {
                    if (W == "" && Z <= T) {
                        return true
                    } else {
                        if (W <= Z && "" == T) {
                            return true
                        } else {
                            if (W <= Z && Z <= T) {
                                return true
                            }
                        }
                    }
                }
                return false
            });
            a("#" + Q + ",#" + P, p).keyup(function() {
                var U = document.getElementById(Q).value * 1;
                var T = document.getElementById(P).value * 1;
                if (U != 0 && T != 0 && U > T) {
                    return
                }
                N.fnDraw();
                G()
            })
        }
        function B(N) {
            var P = K.split(/[}{]/);
            p.html("");
            var R = N.attr("id") + "_range_from_" + H;
            var T = a('<input type="text" class="date_range_filter form-control" id="' + R + '" rel="' + H + '"/>');
            T.datepicker();
            var Q = N.attr("id") + "_range_to_" + H;
            var S = a('<input type="text" class="date_range_filter form-control" id="' + Q + '" rel="' + H + '"/>');
            for (ti = 0; ti < P.length; ti++) {
                if (P[ti] == q.sDateFromToken) {
                    p.append(T)
                } else {
                    if (P[ti] == q.sDateToToken) {
                        p.append(S)
                    } else {
                        p.append(P[ti])
                    }
                }
            }
            p.wrapInner('<span class="filter_column filter_date_range" />');
            S.datepicker();
            var O = H;
            o.push(H);
            N.dataTableExt.afnFiltering.push(function(ab, Y, W) {
                if (N.attr("id") != ab.sTableId) {
                    return true
                }
                var V = T.datepicker("getDate");
                var U = S.datepicker("getDate");
                if (V == null  && U == null ) {
                    return true
                }
                var aa = null ;
                try {
                    if (Y[F(O)] == null  || Y[F(O)] == "") {
                        return false
                    }
                    aa = a.datepicker.parseDate(a.datepicker.regional[""].dateFormat, Y[F(O)])
                } catch (Z) {
                    return false
                }
                if (aa == null ) {
                    return false
                }
                if (V == null  && aa <= U) {
                    return true
                } else {
                    if (V <= aa && U == null ) {
                        return true
                    } else {
                        if (V <= aa && aa <= U) {
                            return true
                        }
                    }
                }
                return false
            });
            a("#" + R + ",#" + Q, p).change(function() {
                N.fnDraw();
                G()
            })
        }
        function C(ab, S, W, O, ac, Z, R, Q) {
            if (S == null ) {
                S = M(ab.fnSettings(), W, true, false, true)
            }
            var Y = W;
            var V = ab.fnSettings().aoPreSearchCols[H].sSearch;
            if (V == null  || V == "") {
                V = R
            }
            var N = '<select class="search_init select_filter form-control" rel="' + H + '"><option value="" class="search_init">' + ac + "</option>";
            if (Q) {
                N = '<select class="search_init select_filter form-control" rel="' + H + '" multiple>'
            }
            var U = 0;
            var P = S.length;
            for (U = 0; U < P; U++) {
                if (typeof (S[U]) != "object") {
                    var T = "";
                    if (escape(S[U]) == V || escape(S[U]) == escape(V)) {
                        T = "selected "
                    }
                    N += "<option " + T + ' value="' + escape(S[U]) + '">' + S[U] + "</option>"
                } else {
                    var T = "";
                    if (Z) {
                        if (S[U].value == V) {
                            T = "selected "
                        }
                        N += "<option " + T + 'value="' + S[U].value + '">' + S[U].label + "</option>"
                    } else {
                        if (escape(S[U].value) == V) {
                            T = "selected "
                        }
                        N += "<option " + T + 'value="' + escape(S[U].value) + '">' + S[U].label + "</option>"
                    }
                }
            }
            var aa = a(N + "</select>");
            O.html(aa);
            O.wrapInner('<span class="filter_column filter_select" />');
            if (Q) {
                aa.change(function() {
                    if (a(this).val() != "") {
                        a(this).removeClass("search_init")
                    } else {
                        a(this).addClass("search_init")
                    }
                    var af = a(this).val();
                    var ad = [];
                    if (af == null  || af == []) {
                        var ae = "^(.*)$"
                    } else {
                        a.each(af, function(ag, ah) {
                            ad.push(d(ah))
                        });
                        var ae = "^(" + ad.join("|") + ")$"
                    }
                    ab.fnFilter(ae, Y, true, false)
                })
            } else {
                aa.change(function() {
                    if (a(this).val() != "") {
                        a(this).removeClass("search_init")
                    } else {
                        a(this).addClass("search_init")
                    }
                    if (Z) {
                        ab.fnFilter(a(this).val(), W, Z)
                    } else {
                        ab.fnFilter(unescape(a(this).val()), W)
                    }
                    G()
                });
                if (V != null  && V != "") {
                    ab.fnFilter(unescape(V), W)
                }
            }
        }
        function h(N, O, P, R, S) {
            var Q = N.fnSettings();
            if ((O == null  || typeof (O) == "function") && Q.sAjaxSource != "" && !Q.oFeatures.bServerSide) {
                Q.aoDrawCallback.push({
                    fn: (function(T, V, U) {
                        return function(W) {
                            if (W.iDraw == 2 && W.sAjaxSource != null  && W.sAjaxSource != "" && !W.oFeatures.bServerSide) {
                                return C(N, O && O(W.aoData, W), F(T), V, U, P, R, S)
                            }
                        }
                    })(H, p, r),
                    sName: "column_filter_" + H
                })
            }
            C(N, typeof (O) == "function" ? null  : O, F(H), p, r, P, R, S)
        }
        function d(N) {
            return N.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
        }
        function J(R) {
            var Q = H;
            var S = '<div class="dropdown select_filter form-control"><a class="dropdown-toggle" data-toggle="dropdown" href="#">' + r + '<b class="caret"></b></a><ul class="dropdown-menu" role="menu"><li data-value=""><a>Show All</a></li>', P, O = R.length;
            for (P = 0; P < O; P++) {
                S += '<li data-value="' + R[P] + '"><a>' + R[P] + "</a></li>"
            }
            var N = a(S + "</ul></div>");
            p.html(N);
            p.wrapInner('<span class="filterColumn filter_select" />');
            N.find("li").click(function() {
                E.fnFilter(a(this).data("value"), Q)
            })
        }
        function D(ad, O) {
            if (O == null ) {
                O = M(ad.fnSettings(), H, true, true, true)
            }
            var T = H;
            var aa = "", af, ae = O.length;
            var Q = r.replace("%", "Perc").replace("&", "AND").replace("$", "DOL").replace("£", "STERL").replace("@", "AT").replace(/\s/g, "_");
            Q = Q.replace(/[^a-zA-Z 0-9]+/g, "");
            var ab = r;
            if (q.sFilterButtonText != null  || q.sFilterButtonText != undefined) {
                ab = q.sFilterButtonText
            }
            var ah = 10;
            var Y = 12;
            var W = Math.floor(ae / Y);
            if (ae % Y > 0) {
                W = W + 1
            }
            var P = 100 / W - 2;
            var U = ah * W;
            if (W == 1) {
                P = 20
            }
            var ai = '<div style="float:left; min-width: ' + P + '%; " >';
            var aj = "</div>";
            var V = ad.attr("id") + Q;
            var S = "chkBtnOpen" + V;
            var R = V + "-flt-toggle";
            aa += '<button id="' + S + '" class="checkbox_filter btn btn-default" > ' + ab + "</button>";
            aa += '<div id="' + R + '" title="' + r + '" rel="' + H + '" class="toggle-check ui-widget-content ui-corner-all"  style="width: ' + (U) + '%; " >';
            aa += ai;
            for (af = 0; af < ae; af++) {
                if (af % Y == 0 && af != 0) {
                    aa += aj + ai
                }
                var ag = O[af];
                var N = O[af];
                if (typeof (O[af]) == "object") {
                    ag = O[af].label;
                    N = O[af].value
                }
                aa += '<input class="search_init checkbox_filter btn btn-default" type="checkbox" id= "' + V + "_cb_" + N + '" name= "' + Q + '" value="' + N + '" >' + ag + "<br/>";
                var Z = a(aa);
                p.html(Z);
                p.wrapInner('<span class="filter_column filter_checkbox" />');
                Z.change(function() {
                    var al = "";
                    var am = "|";
                    var ak = a('input:checkbox[name="' + Q + '"]:checked').size();
                    a('input:checkbox[name="' + Q + '"]:checked').each(function(an) {
                        if ((an == 0 && ak == 1) || (an != 0 && an == ak - 1)) {
                            am = ""
                        }
                        al = al.replace(/^\s+|\s+$/g, "");
                        al = al + a(this).val() + am;
                        am = "|"
                    });
                    if (al != "") {
                        a('input:checkbox[name="' + Q + '"]').removeClass("search_init")
                    } else {
                        a('input:checkbox[name="' + Q + '"]').addClass("search_init")
                    }
                    ad.fnFilter(al, T, true, false);
                    G()
                })
            }
            a("#" + S).button();
            a("#" + R).dialog({
                autoOpen: false,
                hide: "blind",
                buttons: [{
                    text: "Reset",
                    click: function() {
                        a('input:checkbox[name="' + Q + '"]:checked').each(function(ak) {
                            a(this).attr("checked", false);
                            a(this).addClass("search_init")
                        });
                        ad.fnFilter("", T, true, false);
                        G();
                        return false
                    }
                }, {
                    text: "Close",
                    click: function() {
                        a(this).dialog("close")
                    }
                }]
            });
            a("#" + S).click(function() {
                a("#" + R).dialog("open");
                var ak = a(this);
                a("#" + R).dialog("widget").position({
                    my: "top",
                    at: "bottom",
                    of: ak
                });
                return false
            });
            var ac = G;
            G = function() {
                var ak = a("#" + S);
                a("#" + R).dialog("widget").position({
                    my: "top",
                    at: "bottom",
                    of: ak
                });
                ac()
            }
        }
        function z(N) {
            switch (N) {
            case 0:
                return K.substring(0, K.indexOf("{from}"));
            case 1:
                return K.substring(K.indexOf("{from}") + 6, K.indexOf("{to}"));
            default:
                return K.substring(K.indexOf("{to}") + 4)
            }
        }
        var E = this;
        var u = {
            sPlaceHolder: "foot",
            sRangeSeparator: "~",
            iFilteringDelay: 500,
            aoColumns: null ,
            sRangeFormat: "From {from} to {to}",
            sDateFromToken: "from",
            sDateToToken: "to"
        };
        var q = a.extend(u, g);
        return this.each(function() {
            if (!E.fnSettings().oFeatures.bFilter) {
                return
            }
            e = new Array();
            var R = E.fnSettings().aoFooter[0];
            var S = E.fnSettings().nTFoot;
            var P = "tr";
            if (q.sPlaceHolder == "head:after") {
                var Q = a("tr:first", E.fnSettings().nTHead).detach();
                if (E.fnSettings().bSortCellsTop) {
                    Q.prependTo(a(E.fnSettings().nTHead));
                    R = E.fnSettings().aoHeader[1]
                } else {
                    Q.appendTo(a(E.fnSettings().nTHead));
                    R = E.fnSettings().aoHeader[0]
                }
                P = "tr:last";
                S = E.fnSettings().nTHead
            } else {
                if (q.sPlaceHolder == "head:before") {
                    if (E.fnSettings().bSortCellsTop) {
                        var Q = a("tr:first", E.fnSettings().nTHead).detach();
                        Q.appendTo(a(E.fnSettings().nTHead));
                        R = E.fnSettings().aoHeader[1]
                    } else {
                        R = E.fnSettings().aoHeader[0]
                    }
                    P = "tr:first";
                    S = E.fnSettings().nTHead
                }
            }
            a(R).each(function(T) {
                H = T;
                var U = {
                    type: "text",
                    bRegex: false,
                    bSmart: true,
                    iMaxLenght: -1,
                    iFilterLength: 0
                };
                if (q.aoColumns != null ) {
                    if (q.aoColumns.length < H || q.aoColumns[H] == null ) {
                        return
                    }
                    U = q.aoColumns[H]
                }
                r = a(a(this)[0].cell).text();
                if (U.sSelector == null ) {
                    p = a(a(this)[0].cell)
                } else {
                    p = a(U.sSelector);
                    if (p.length == 0) {
                        p = a(a(this)[0].cell)
                    }
                }
                if (U != null ) {
                    if (U.sRangeFormat != null ) {
                        K = U.sRangeFormat
                    } else {
                        K = q.sRangeFormat
                    }
                    switch (U.type) {
                    case "null":
                        break;
                    case "number":
                        v(E, true, false, true, U.iFilterLength, U.iMaxLenght);
                        break;
                    case "select":
                        if (U.bRegex != true) {
                            U.bRegex = false
                        }
                        h(E, U.values, U.bRegex, U.selected, U.multiple);
                        break;
                    case "number-range":
                        m(E);
                        break;
                    case "date-range":
                        B(E);
                        break;
                    case "checkbox":
                        D(E, U.values);
                        break;
                    case "twitter-dropdown":
                    case "dropdown":
                        J(U.values);
                        break;
                    case "text":
                    default:
                        bRegex = (U.bRegex == null  ? false : U.bRegex);
                        bSmart = (U.bSmart == null  ? false : U.bSmart);
                        v(E, bRegex, bSmart, false, U.iFilterLength, U.iMaxLenght);
                        break
                    }
                }
            });
            for (j = 0; j < o.length; j++) {
                var O = function() {
                    var T = E.attr("id");
                    return a("#" + T + "_range_from_" + o[j]).val() + q.sRangeSeparator + a("#" + T + "_range_to_" + o[j]).val()
                }
                ;
                f.push(O)
            }
            if (E.fnSettings().oFeatures.bServerSide) {
                var N = E.fnSettings().fnServerData;
                E.fnSettings().fnServerData = function(T, V, Y) {
                    for (j = 0; j < o.length; j++) {
                        var U = o[j];
                        for (k = 0; k < V.length; k++) {
                            if (V[k].name == "sSearch_" + U) {
                                V[k].value = f[j]()
                            }
                        }
                    }
                    V.push({
                        name: "sRangeSeparator",
                        value: q.sRangeSeparator
                    });
                    if (N != null ) {
                        try {
                            N(T, V, Y, E.fnSettings())
                        } catch (W) {
                            N(T, V, Y)
                        }
                    } else {
                        a.getJSON(T, V, function(Z) {
                            Y(Z)
                        })
                    }
                }
            }
        })
    }
})(jQuery);
/*! ColVis 1.1.1
 * ©2010-2014 SpryMedia Ltd - datatables.net/license
 */
(function(e, a, f) {
    var d = function(m, h) {
        var g = function(p, o) {
            if (!this.CLASS || this.CLASS != "ColVis") {
                alert("Warning: ColVis must be initialised with the keyword 'new'")
            }
            if (typeof o == "undefined") {
                o = {}
            }
            if (m.fn.dataTable.camelToHungarian) {
                m.fn.dataTable.camelToHungarian(g.defaults, o)
            }
            this.s = {
                dt: null ,
                oInit: o,
                hidden: true,
                abOriginal: []
            };
            this.dom = {
                wrapper: null ,
                button: null ,
                collection: null ,
                background: null ,
                catcher: null ,
                buttons: [],
                groupButtons: [],
                restore: null 
            };
            g.aInstances.push(this);
            this.s.dt = m.fn.dataTable.Api ? new m.fn.dataTable.Api(p).settings()[0] : p;
            this._fnConstruct(o);
            return this
        }
        ;
        g.prototype = {
            button: function() {
                return this.dom.wrapper
            },
            fnRebuild: function() {
                this.rebuild()
            },
            rebuild: function() {
                for (var o = this.dom.buttons.length - 1; o >= 0; o--) {
                    this.dom.collection.removeChild(this.dom.buttons[o])
                }
                this.dom.buttons.splice(0, this.dom.buttons.length);
                if (this.dom.restore) {
                    this.dom.restore.parentNode(this.dom.restore)
                }
                this._fnAddGroups();
                this._fnAddButtons();
                this._fnDrawCallback()
            },
            _fnConstruct: function(r) {
                this._fnApplyCustomisation(r);
                var q = this;
                var p, o;
                this.dom.wrapper = a.createElement("div");
                this.dom.wrapper.className = "ColVis";
                this.dom.button = m("<button />", {
                    "class": !this.s.dt.bJUI ? "ColVis_Button ColVis_MasterButton" : "ColVis_Button ColVis_MasterButton ui-button ui-state-default"
                }).append("<span>" + this.s.buttonText + "</span>").bind(this.s.activate == "mouseover" ? "mouseover" : "click", function(u) {
                    u.preventDefault();
                    q._fnCollectionShow()
                }).appendTo(this.dom.wrapper)[0];
                this.dom.catcher = this._fnDomCatcher();
                this.dom.collection = this._fnDomCollection();
                this.dom.background = this._fnDomBackground();
                this._fnAddGroups();
                this._fnAddButtons();
                for (p = 0,
                o = this.s.dt.aoColumns.length; p < o; p++) {
                    this.s.abOriginal.push(this.s.dt.aoColumns[p].bVisible)
                }
                this.s.dt.aoDrawCallback.push({
                    fn: function() {
                        q._fnDrawCallback.call(q)
                    },
                    sName: "ColVis"
                });
                m(this.s.dt.oInstance).bind("column-reorder", function(B, z, v) {
                    for (p = 0,
                    o = q.s.aiExclude.length; p < o; p++) {
                        q.s.aiExclude[p] = v.aiInvertMapping[q.s.aiExclude[p]]
                    }
                    var u = q.s.abOriginal.splice(v.iFrom, 1)[0];
                    q.s.abOriginal.splice(v.iTo, 0, u);
                    q.fnRebuild()
                });
                this._fnDrawCallback()
            },
            _fnApplyCustomisation: function(u) {
                m.extend(true, this.s, g.defaults, u);
                if (!this.s.showAll && this.s.bShowAll) {
                    this.s.showAll = this.s.sShowAll
                }
                if (!this.s.restore && this.s.bRestore) {
                    this.s.restore = this.s.sRestore
                }
                var o = this.s.groups;
                var r = this.s.aoGroups;
                if (o) {
                    for (var q = 0, p = o.length; q < p; q++) {
                        if (o[q].title) {
                            r[q].sTitle = o[q].title
                        }
                        if (o[q].columns) {
                            r[q].aiColumns = o[q].columns
                        }
                    }
                }
            },
            _fnDrawCallback: function() {
                var p = this.s.dt.aoColumns;
                var v = this.dom.buttons;
                var o = this.s.aoGroups;
                var u;
                for (var r = 0, C = v.length; r < C; r++) {
                    u = v[r];
                    if (u.__columnIdx !== f) {
                        m("input", u).prop("checked", p[u.__columnIdx].bVisible)
                    }
                }
                var B = function(G) {
                    for (var E = 0, F = G.length; E < F; E++) {
                        if (p[G[E]].bVisible === false) {
                            return false
                        }
                    }
                    return true
                }
                ;
                var z = function(F) {
                    for (var E = 0, G = F.length; E < G; E++) {
                        if (p[F[E]].bVisible === true) {
                            return false
                        }
                    }
                    return true
                }
                ;
                for (var q = 0, D = o.length; q < D; q++) {
                    if (B(o[q].aiColumns)) {
                        m("input", this.dom.groupButtons[q]).prop("checked", true);
                        m("input", this.dom.groupButtons[q]).prop("indeterminate", false)
                    } else {
                        if (z(o[q].aiColumns)) {
                            m("input", this.dom.groupButtons[q]).prop("checked", false);
                            m("input", this.dom.groupButtons[q]).prop("indeterminate", false)
                        } else {
                            m("input", this.dom.groupButtons[q]).prop("indeterminate", true)
                        }
                    }
                }
            },
            _fnAddGroups: function() {
                var q;
                if (typeof this.s.aoGroups != "undefined") {
                    for (var p = 0, o = this.s.aoGroups.length; p < o; p++) {
                        q = this._fnDomGroupButton(p);
                        this.dom.groupButtons.push(q);
                        this.dom.buttons.push(q);
                        this.dom.collection.appendChild(q)
                    }
                }
            },
            _fnAddButtons: function() {
                var r, q = this.s.dt.aoColumns;
                if (m.inArray("all", this.s.aiExclude) === -1) {
                    for (var p = 0, o = q.length; p < o; p++) {
                        if (m.inArray(p, this.s.aiExclude) === -1) {
                            r = this._fnDomColumnButton(p);
                            r.__columnIdx = p;
                            this.dom.buttons.push(r)
                        }
                    }
                }
                if (this.s.order === "alpha") {
                    this.dom.buttons.sort(function(v, u) {
                        var B = q[v.__columnIdx].sTitle;
                        var z = q[u.__columnIdx].sTitle;
                        return B === z ? 0 : B < z ? -1 : 1
                    })
                }
                if (this.s.restore) {
                    r = this._fnDomRestoreButton();
                    r.className += " ColVis_Restore";
                    this.dom.buttons.push(r)
                }
                if (this.s.showAll) {
                    r = this._fnDomShowXButton(this.s.showAll, true);
                    r.className += " ColVis_ShowAll";
                    this.dom.buttons.push(r)
                }
                if (this.s.showNone) {
                    r = this._fnDomShowXButton(this.s.showNone, false);
                    r.className += " ColVis_ShowNone";
                    this.dom.buttons.push(r)
                }
                m(this.dom.collection).append(this.dom.buttons)
            },
            _fnDomRestoreButton: function() {
                var p = this
                  , o = this.s.dt;
                return m('<li class="ColVis_Special ' + (o.bJUI ? "ui-button ui-state-default" : "") + '">' + this.s.restore + "</li>").click(function(u) {
                    for (var r = 0, q = p.s.abOriginal.length; r < q; r++) {
                        p.s.dt.oInstance.fnSetColumnVis(r, p.s.abOriginal[r], false)
                    }
                    p._fnAdjustOpenRows();
                    p.s.dt.oInstance.fnAdjustColumnSizing(false);
                    p.s.dt.oInstance.fnDraw(false)
                })[0]
            },
            _fnDomShowXButton: function(r, q) {
                var p = this
                  , o = this.s.dt;
                return m('<li class="ColVis_Special ' + (o.bJUI ? "ui-button ui-state-default" : "") + '">' + r + "</li>").click(function(z) {
                    for (var v = 0, u = p.s.abOriginal.length; v < u; v++) {
                        if (p.s.aiExclude.indexOf(v) === -1) {
                            p.s.dt.oInstance.fnSetColumnVis(v, q, false)
                        }
                    }
                    p._fnAdjustOpenRows();
                    p.s.dt.oInstance.fnAdjustColumnSizing(false);
                    p.s.dt.oInstance.fnDraw(false)
                })[0]
            },
            _fnDomGroupButton: function(p) {
                var r = this
                  , q = this.s.dt
                  , o = this.s.aoGroups[p];
                return m('<li class="ColVis_Special ' + (q.bJUI ? "ui-button ui-state-default" : "") + '"><label><input type="checkbox" /><span>' + o.sTitle + "</span></label></li>").click(function(v) {
                    var z = !m("input", this).is(":checked");
                    if (v.target.nodeName.toLowerCase() !== "li") {
                        z = !z
                    }
                    for (var u = 0; u < o.aiColumns.length; u++) {
                        r.s.dt.oInstance.fnSetColumnVis(o.aiColumns[u], z)
                    }
                })[0]
            },
            _fnDomColumnButton: function(o) {
                var r = this
                  , p = this.s.dt.aoColumns[o]
                  , q = this.s.dt;
                var u = this.s.fnLabel === null  ? p.sTitle : this.s.fnLabel(o, p.sTitle, p.nTh);
                return m("<li " + (q.bJUI ? 'class="ui-button ui-state-default"' : "") + '><label><input type="checkbox" /><span>' + u + "</span></label></li>").click(function(v) {
                    var z = !m("input", this).is(":checked");
                    if (v.target.nodeName.toLowerCase() !== "li") {
                        z = !z
                    }
                    var B = m.fn.dataTableExt.iApiIndex;
                    m.fn.dataTableExt.iApiIndex = r._fnDataTablesApiIndex.call(r);
                    if (q.oFeatures.bServerSide) {
                        r.s.dt.oInstance.fnSetColumnVis(o, z, false);
                        r.s.dt.oInstance.fnAdjustColumnSizing(false);
                        if (q.oScroll.sX !== "" || q.oScroll.sY !== "") {
                            r.s.dt.oInstance.oApi._fnScrollDraw(r.s.dt)
                        }
                        r._fnDrawCallback()
                    } else {
                        r.s.dt.oInstance.fnSetColumnVis(o, z)
                    }
                    m.fn.dataTableExt.iApiIndex = B;
                    if (v.target.nodeName.toLowerCase() === "input" && r.s.fnStateChange !== null ) {
                        r.s.fnStateChange.call(r, o, z)
                    }
                })[0]
            },
            _fnDataTablesApiIndex: function() {
                for (var p = 0, o = this.s.dt.oInstance.length; p < o; p++) {
                    if (this.s.dt.oInstance[p] == this.s.dt.nTable) {
                        return p
                    }
                }
                return 0
            },
            _fnDomCollection: function() {
                return m("<ul />", {
                    "class": !this.s.dt.bJUI ? "ColVis_collection" : "ColVis_collection ui-buttonset ui-buttonset-multi"
                }).css({
                    display: "none",
                    opacity: 0,
                    position: !this.s.bCssPosition ? "absolute" : ""
                })[0]
            },
            _fnDomCatcher: function() {
                var p = this
                  , o = a.createElement("div");
                o.className = "ColVis_catcher";
                m(o).click(function() {
                    p._fnCollectionHide.call(p, null , null )
                });
                return o
            },
            _fnDomBackground: function() {
                var p = this;
                var o = m("<div></div>").addClass("ColVis_collectionBackground").css("opacity", 0).click(function() {
                    p._fnCollectionHide.call(p, null , null )
                });
                if (this.s.activate == "mouseover") {
                    o.mouseover(function() {
                        p.s.overcollection = false;
                        p._fnCollectionHide.call(p, null , null )
                    })
                }
                return o[0]
            },
            _fnCollectionShow: function() {
                var C = this, z, u, B;
                var E = m(this.dom.button).offset();
                var v = this.dom.collection;
                var q = this.dom.background;
                var p = parseInt(E.left, 10);
                var o = parseInt(E.top + m(this.dom.button).outerHeight(), 10);
                if (!this.s.bCssPosition) {
                    v.style.top = o + "px";
                    v.style.left = p + "px"
                }
                m(v).css({
                    display: "block",
                    opacity: 0
                });
                q.style.bottom = "0px";
                q.style.right = "0px";
                var G = this.dom.catcher.style;
                G.height = m(this.dom.button).outerHeight() + "px";
                G.width = m(this.dom.button).outerWidth() + "px";
                G.top = E.top + "px";
                G.left = p + "px";
                a.body.appendChild(q);
                a.body.appendChild(v);
                a.body.appendChild(this.dom.catcher);
                m(v).animate({
                    opacity: 1
                }, C.s.iOverlayFade);
                m(q).animate({
                    opacity: 0.1
                }, C.s.iOverlayFade, "linear", function() {
                    if (m.browser && m.browser.msie && m.browser.version == "6.0") {
                        C._fnDrawCallback()
                    }
                });
                if (!this.s.bCssPosition) {
                    B = (this.s.sAlign == "left") ? p : p - m(v).outerWidth() + m(this.dom.button).outerWidth();
                    v.style.left = B + "px";
                    var r = m(v).outerWidth();
                    var F = m(v).outerHeight();
                    var D = m(a).width();
                    if (B + r > D) {
                        v.style.left = (D - r) + "px"
                    }
                }
                this.s.hidden = false
            },
            _fnCollectionHide: function() {
                var o = this;
                if (!this.s.hidden && this.dom.collection !== null ) {
                    this.s.hidden = true;
                    m(this.dom.collection).animate({
                        opacity: 0
                    }, o.s.iOverlayFade, function(p) {
                        this.style.display = "none"
                    });
                    m(this.dom.background).animate({
                        opacity: 0
                    }, o.s.iOverlayFade, function(p) {
                        a.body.removeChild(o.dom.background);
                        a.body.removeChild(o.dom.catcher)
                    })
                }
            },
            _fnAdjustOpenRows: function() {
                var r = this.s.dt.aoOpenRows;
                var p = this.s.dt.oApi._fnVisbleColumns(this.s.dt);
                for (var q = 0, o = r.length; q < o; q++) {
                    r[q].nTr.getElementsByTagName("td")[0].colSpan = p
                }
            }
        };
        g.fnRebuild = function(p) {
            var q = null ;
            if (typeof p != "undefined") {
                q = p.fnSettings().nTable
            }
            for (var r = 0, o = g.aInstances.length; r < o; r++) {
                if (typeof p == "undefined" || q == g.aInstances[r].s.dt.nTable) {
                    g.aInstances[r].fnRebuild()
                }
            }
        }
        ;
        g.defaults = {
            active: "click",
            buttonText: "Show / hide columns",
            aiExclude: [],
            bRestore: false,
            sRestore: "Restore original",
            bShowAll: false,
            sShowAll: "Show All",
            sAlign: "left",
            fnStateChange: null ,
            iOverlayFade: 500,
            fnLabel: null ,
            bCssPosition: false,
            aoGroups: [],
            order: "column"
        };
        g.aInstances = [];
        g.prototype.CLASS = "ColVis";
        g.VERSION = "1.1.1";
        g.prototype.VERSION = g.VERSION;
        if (typeof m.fn.dataTable == "function" && typeof m.fn.dataTableExt.fnVersionCheck == "function" && m.fn.dataTableExt.fnVersionCheck("1.7.0")) {
            m.fn.dataTableExt.aoFeatures.push({
                fnInit: function(q) {
                    var o = q.oInit;
                    var p = new g(q,o.colVis || o.oColVis || {});
                    return p.button()
                },
                cFeature: "C",
                sFeature: "ColVis"
            })
        } else {
            alert("Warning: ColVis requires DataTables 1.7 or greater - www.datatables.net/download")
        }
        m.fn.dataTable.ColVis = g;
        m.fn.DataTable.ColVis = g;
        return g
    }
    ;
    if (typeof define === "function" && define.amd) {
        define(["jquery", "datatables"], d)
    } else {
        if (typeof exports === "object") {
            d(require("jquery"), require("datatables"))
        } else {
            if (jQuery && !jQuery.fn.dataTable.ColVis) {
                d(jQuery, jQuery.fn.dataTable)
            }
        }
    }
})(window, document);
/*! ColResize 0.0.10
 */
(function(e, a, f) {
    var d = function(h, g) {
        h.fn.dataTableExt.oApi.fnColResize = function(q, o) {
            var p = h.fn.dataTable.Api ? true : false;
            h(q.oInstance).trigger("column-resize", [q, {
                iCol: o
            }])
        }
        ;
        var m = function(p, o) {
            var q;
            if (h.fn.dataTable.Api) {
                q = new h.fn.dataTable.Api(p).settings()[0]
            } else {
                if (p.fnSettings) {
                    q = p.fnSettings()
                } else {
                    if (typeof p === "string") {
                        if (h.fn.dataTable.fnIsDataTable(h(p)[0])) {
                            q = h(p).eq(0).dataTable().fnSettings()
                        }
                    } else {
                        if (p.nodeName && p.nodeName.toLowerCase() === "table") {
                            if (h.fn.dataTable.fnIsDataTable(p.nodeName)) {
                                q = h(p.nodeName).dataTable().fnSettings()
                            }
                        } else {
                            if (p instanceof jQuery) {
                                if (h.fn.dataTable.fnIsDataTable(p[0])) {
                                    q = p.eq(0).dataTable().fnSettings()
                                }
                            } else {
                                q = p
                            }
                        }
                    }
                }
            }
            if (h.fn.dataTable.camelToHungarian) {
                h.fn.dataTable.camelToHungarian(m.defaults, o || {})
            }
            this.s = {
                dt: null ,
                init: h.extend(true, {}, m.defaults, o),
                mouse: {
                    startX: -1,
                    startY: -1,
                    targetIndex: -1,
                    targetColumn: -1,
                    neighbourIndex: -1,
                    neighbourColumn: -1
                },
                isMousedown: false
            };
            this.dom = {
                resizeCol: null ,
                resizeColNeighbour: null ,
                restoreEvents: []
            };
            this.s.dt = q.oInstance.fnSettings();
            this.s.dt._colResize = this;
            this._fnConstruct();
            q.oApi._fnCallbackReg(q, "aoDestroyCallback", h.proxy(this._fnDestroy, this), "ColResize");
            return this
        }
        ;
        m.prototype = {
            fnReset: function() {
                var p = [];
                for (var q = 0, o = this.s.dt.aoColumns.length; q < o; q++) {
                    this.s.dt.aoColumns[q].width = this.s.dt.aoColumns[q]._ColResize_iOrigWidth
                }
                this.s.dt.adjust().draw();
                return this
            },
            _fnConstruct: function() {
                var q = this;
                var o = q.s.dt.aoColumns.length;
                var p;
                q._fnSetupMouseListeners();
                for (p = 0; p < o; p++) {
                    this.s.dt.aoColumns[p]._ColResize_iOrigWidth = this.s.dt.aoColumns[p].width
                }
                this._fnSetColumnIndexes();
                this.s.dt.oApi._fnCallbackReg(this.s.dt, "aoStateSaveParams", function(r, u) {
                    q._fnStateSave.call(q, u)
                }, "ColResize_State");
                this._fnStateLoad()
            },
            _fnStateSave: function(o) {
                this.s.dt.aoColumns.forEach(function(q, p) {
                    o.columns[p].width = q.sWidthOrig
                })
            },
            _fnStateLoad: function() {
                var p = this
                  , q = this.s.dt.oLoadedState;
                if (q && q.columns) {
                    var r = q.columns
                      , o = this.s.dt.aoColumns;
                    if (r.length > 0 && r.length === o.length) {
                        r.forEach(function(z, v) {
                            var u = p.s.dt.aoColumns[v];
                            if (z.width) {
                                u.sWidthOrig = u.sWidth = z.width
                            }
                        })
                    }
                }
            },
            _fnDelayEvents: function(v, u, q, p) {
                var r = this;
                var o = h._data(h(u).get(0), "events");
                h.each(o, function(z, B) {
                    if (z == q) {
                        h.each(B, function(D, C) {
                            if (C) {
                                if (p) {
                                    r.dom.restoreEvents.push({
                                        until: v,
                                        obj: u,
                                        type: C.type,
                                        namespace: C.namespace,
                                        handler: C.handler
                                    });
                                    if (C.namespace == p) {
                                        h(u).off(q + "." + p)
                                    }
                                } else {
                                    r.dom.restoreEvents.push({
                                        until: v,
                                        obj: u,
                                        type: C.type,
                                        namespace: null ,
                                        handler: C.handler
                                    });
                                    h(u).off(q)
                                }
                            }
                        })
                    }
                })
            },
            _fnRestoreEvents: function(q) {
                var p = this;
                var o;
                for (o = p.dom.restoreEvents.length; o--; ) {
                    if (p.dom.restoreEvents[o].until == f || p.dom.restoreEvents[o].until == null  || p.dom.restoreEvents[o].until == q) {
                        if (p.dom.restoreEvents[o].namespace) {
                            h(p.dom.restoreEvents[o].obj).off(p.dom.restoreEvents[o].type + "." + p.dom.restoreEvents[o].namespace).on(p.dom.restoreEvents[o].type + "." + p.dom.restoreEvents[o].namespace, p.dom.restoreEvents[o].handler);
                            p.dom.restoreEvents.splice(o, 1)
                        } else {
                            h(p.dom.restoreEvents[o].obj).off(p.dom.restoreEvents[o].type).on(p.dom.restoreEvents[o].type, p.dom.restoreEvents[o].handler);
                            p.dom.restoreEvents.splice(o, 1)
                        }
                    }
                }
            },
            _fnSetupMouseListeners: function() {
                var o = this;
                h(o.s.dt.nTableWrapper).off("mouseenter.ColResize").on("mouseenter.ColResize", "th", function(p) {
                    p.preventDefault();
                    o._fnMouseEnter.call(o, p, this)
                });
                h(o.s.dt.nTableWrapper).off("mouseleave.ColResize").on("mouseleave.ColResize", "th", function(p) {
                    p.preventDefault();
                    o._fnMouseLeave.call(o, p, this)
                })
            },
            _fnMouseListener: function(o, q) {
                var p = this;
                h(q).off("mouseenter.ColResize").on("mouseenter.ColResize", function(r) {
                    r.preventDefault();
                    p._fnMouseEnter.call(p, r, q)
                });
                h(q).off("mouseleave.ColResize").on("mouseleave.ColResize", function(r) {
                    r.preventDefault();
                    p._fnMouseLeave.call(p, r, q)
                })
            },
            _fnMouseEnter: function(q, p) {
                var o = this;
                if (!o.s.isMousedown) {
                    h(p).off("mousemove.ColResizeHandle").on("mousemove.ColResizeHandle", function(r) {
                        r.preventDefault();
                        o._fnResizeHandleCheck.call(o, r, p)
                    })
                }
            },
            _fnMouseLeave: function(p, o) {
                h(o).off("mousemove.ColResizeHandle")
            },
            _fnMouseDown: function(v, u) {
                var q = this;
                q.s.isMousedown = true;
                var r = h(v.target).closest("th, td");
                var z = r.offset();
                this.s.mouse.startX = v.pageX;
                this.s.mouse.startY = v.pageY;
                var o = q.dom.resizeCol[0].cellIndex;
                if (q.dom.resizeColNeighbour[0] === f) {
                    var p = 0
                } else {
                    var p = q.dom.resizeColNeighbour[0].cellIndex
                }
                if (o === f) {
                    return
                }
                this.s.mouse.targetIndex = o;
                this.s.mouse.targetColumn = this.s.dt.aoColumns[o];
                this.s.mouse.neighbourIndex = p;
                this.s.mouse.neighbourColumn = this.s.dt.aoColumns[p];
                h(a).off("mousemove.ColResize").on("mousemove.ColResize", function(B) {
                    q._fnMouseMove.call(q, B)
                }).off("mouseup.ColResize").on("mouseup.ColResize", function(B) {
                    q._fnMouseUp.call(q, B)
                })
            },
            _fnMouseMove: function(J) {
                var r = this;
                var q = h(r.s.mouse.targetColumn.nTh).offset();
                var E = (J.pageX - q.left);
                var p = E;
                var I = h(r.s.mouse.targetColumn.nTh).outerWidth() - E - 1;
                var v = J.pageX - r.s.mouse.startX;
                var C = Math.max(parseInt(h(r.s.mouse.targetColumn.nTh).css("min-width")), 10);
                var F = h(r.s.mouse.targetColumn.nTh).width();
                if ((v > 0 && I <= 0) || (v < 0 && I >= 0)) {
                    if (!r.s.init.tableWidthFixed) {
                        var B = Math.max(C, F + v);
                        var u = B - F;
                        var z = parseInt(r.dom.resizeCol.attr("data-column-index"));
                        r.s.mouse.targetColumn.sWidthOrig = r.s.mouse.targetColumn.sWidth = r.s.mouse.targetColumn.width = B + "px";
                        var D = h(r.s.dt.nTableWrapper).find("th[data-column-index='" + z + "']");
                        D.parents("table").each(function() {
                            if (!h(this).parent().hasClass("DTFC_LeftBodyLiner")) {
                                var O = h(this).width() + u;
                                h(this).width(O)
                            } else {
                                var O = h(r.s.dt.nTableWrapper).find(".DTFC_LeftHeadWrapper").children("table").width();
                                h(this).parents(".DTFC_LeftWrapper").width(O);
                                h(this).parent().width(O + 15);
                                h(this).width(O)
                            }
                        });
                        D.width(r.s.mouse.targetColumn.width)
                    } else {
                        if (r.s.mouse.neighbourColumn) {
                            var G = Math.max(parseInt(h(r.s.mouse.neighbourColumn.nTh).css("min-width")), 10);
                            var H = h(r.s.mouse.neighbourColumn.nTh).width();
                            var B = Math.max(C, F + v);
                            var M = Math.max(G, H - v);
                            var u = B - F;
                            var o = M - H;
                            var z = parseInt(r.dom.resizeCol.attr("data-column-index"));
                            var K = parseInt(r.dom.resizeColNeighbour.attr("data-column-index"));
                            r.s.mouse.neighbourColumn.sWidthOrig = r.s.mouse.neighbourColumn.sWidth = r.s.mouse.neighbourColumn.width = M + "px";
                            r.s.mouse.targetColumn.sWidthOrig = r.s.mouse.targetColumn.sWidth = r.s.mouse.targetColumn.width = B + "px";
                            var N = h(r.s.dt.nTableWrapper).find("th[data-column-index='" + K + "']");
                            var D = h(r.s.dt.nTableWrapper).find("th[data-column-index='" + z + "']");
                            if (v > 0) {
                                N.width(r.s.mouse.neighbourColumn.width);
                                D.width(r.s.mouse.targetColumn.width)
                            } else {
                                D.width(r.s.mouse.targetColumn.width);
                                N.width(r.s.mouse.neighbourColumn.width)
                            }
                        }
                    }
                }
                r.s.mouse.startX = J.pageX
            },
            _fnResizeHandleCheck: function(z, p) {
                var u = this;
                var q = h(p).offset();
                var B = (z.pageX - q.left);
                var v = (z.pageY - q.top);
                var F = B;
                var E = h(p).outerWidth() - B - 1;
                var o = this.s.init.handleWidth / 2;
                var D = F < o;
                var C = E < o;
                if (h(p).prev("th").length == 0) {
                    if (this.s.init.rtl) {
                        C = false
                    } else {
                        D = false
                    }
                }
                if (h(p).next("th").length == 0 && this.s.init.tableWidthFixed) {
                    if (this.s.init.rtl) {
                        D = false
                    } else {
                        C = false
                    }
                }
                var r = D || C;
                if (u.s.init.rtl) {
                    if (D) {
                        u.dom.resizeCol = h(p);
                        u.dom.resizeColNeighbour = h(p).next()
                    } else {
                        if (C) {
                            u.dom.resizeCol = h(p).prev();
                            u.dom.resizeColNeighbour = h(p)
                        }
                    }
                } else {
                    if (C) {
                        u.dom.resizeCol = h(p);
                        u.dom.resizeColNeighbour = h(p).next()
                    } else {
                        if (D) {
                            u.dom.resizeCol = h(p).prev();
                            u.dom.resizeColNeighbour = h(p)
                        }
                    }
                }
                if (this.s.init.tableWidthFixed) {
                    r &= this.s.init.exclude.indexOf(parseInt(h(u.dom.resizeCol).attr("data-column-index"))) == -1 && this.s.init.exclude.indexOf(parseInt(h(u.dom.resizeColNeighbour).attr("data-column-index"))) == -1
                } else {
                    r &= this.s.init.exclude.indexOf(parseInt(h(u.dom.resizeCol).attr("data-column-index"))) == -1
                }
                h(p).off("mousedown.ColResize");
                if (r) {
                    h(p).css("cursor", "ew-resize");
                    u._fnDelayEvents(null , p, "mousedown", "ColReorder");
                    u._fnDelayEvents("click", p, "click", "DT");
                    h(p).off("mousedown.ColResize").on("mousedown.ColResize", function(G) {
                        G.preventDefault();
                        u._fnMouseDown.call(u, G, p)
                    }).off("click.ColResize").on("click.ColResize", function(G) {
                        u._fnClick.call(u, G)
                    })
                } else {
                    h(p).css("cursor", "pointer");
                    h(p).off("mousedown.ColResize click.ColResize");
                    u._fnRestoreEvents();
                    if (!u.s.isMousedown) {
                        this._fnRestoreEvents("click")
                    }
                }
            },
            _fnClick: function(p) {
                var o = this;
                o.s.isMousedown = false;
                p.stopImmediatePropagation()
            },
            _fnMouseUp: function(q) {
                var o = this;
                o.s.isMousedown = false;
                o.s.mouse.targetColumn.width = o.dom.resizeCol.width();
                h(a).off("mousemove.ColResize mouseup.ColResize");
                if (o.s.init.adjustAfterResize) {
                    this.s.dt.oInstance.fnAdjustColumnSizing()
                }
                var r = h(o.s.dt.nTableWrapper).find(".DTFC_LeftWrapper");
                var p = r.width();
                r.children(".DTFC_LeftHeadWrapper").children("table").width(p);
                if (o.s.init.resizeCallback) {
                    o.s.init.resizeCallback.call(o, o.s.mouse.targetColumn)
                }
            },
            _fnDestroy: function() {
                var p, o;
                for (p = 0,
                o = this.s.dt.aoDrawCallback.length; p < o; p++) {
                    if (this.s.dt.aoDrawCallback[p].sName === "ColResize_Pre") {
                        this.s.dt.aoDrawCallback.splice(p, 1);
                        break
                    }
                }
                h(this.s.dt.nTHead).find("*").off(".ColResize");
                h.each(this.s.dt.aoColumns, function(q, r) {
                    h(r.nTh).removeAttr("data-column-index")
                });
                this.s.dt._colResize = null ;
                this.s = null 
            },
            _fnSetColumnIndexes: function() {
                h.each(this.s.dt.aoColumns, function(o, p) {
                    h(p.nTh).attr("data-column-index", o)
                })
            }
        };
        m.defaults = {
            resizeCallback: null ,
            exclude: [],
            tableWidthFixed: true,
            handleWidth: 10,
            rtl: false,
            adjustAfterResize: true
        };
        m.version = "0.0.10";
        h.fn.dataTable.ColResize = m;
        h.fn.DataTable.ColResize = m;
        if (typeof h.fn.dataTable == "function" && typeof h.fn.dataTableExt.fnVersionCheck == "function" && h.fn.dataTableExt.fnVersionCheck("1.9.3")) {
            h.fn.dataTableExt.aoFeatures.push({
                fnInit: function(o) {
                    var q = o.oInstance;
                    if (!o._colResize) {
                        var r = o.oInit;
                        var p = r.colResize || r.oColResize || {};
                        new m(o,p)
                    } else {
                        q.oApi._fnLog(o, 1, "ColResize attempted to initialise twice. Ignoring second")
                    }
                    return null 
                },
                cFeature: "Z",
                sFeature: "ColResize"
            })
        } else {
            alert("Warning: ColResize requires DataTables 1.9.3 or greater - www.datatables.net/download")
        }
        if (h.fn.dataTable.Api) {
            h.fn.dataTable.Api.register("colResize.reset()", function() {
                return this.iterator("table", function(o) {
                    o._colResize.fnReset()
                })
            })
        }
        return m
    }
    ;
    if (typeof define === "function" && define.amd) {
        define(["jquery", "datatables"], d)
    } else {
        if (typeof exports === "object") {
            d(require("jquery"), require("datatables"))
        } else {
            if (jQuery && !jQuery.fn.dataTable.ColResize) {
                d(jQuery, jQuery.fn.dataTable)
            }
        }
    }
})(window, document);
$.fn.dataTableExt.oPagination.input = {
    fnInit: function(a, p, h) {
        var r = document.createElement("span");
        var o = document.createElement("span");
        var e = document.createElement("span");
        var m = document.createElement("span");
        var f = document.createElement("input");
        var g = document.createElement("span");
        var q = document.createElement("span");
        r.innerHTML = a.oLanguage.oPaginate.sFirst;
        o.innerHTML = a.oLanguage.oPaginate.sPrevious;
        e.innerHTML = a.oLanguage.oPaginate.sNext;
        m.innerHTML = a.oLanguage.oPaginate.sLast;
        r.className = "paginate_button first disabled";
        o.className = "paginate_button previous disabled";
        e.className = "paginate_button next";
        m.className = "paginate_button last";
        q.className = "paginate_of";
        g.className = "paginate_page";
        f.className = "paginate_input";
        if (a.sTableId !== "") {
            p.setAttribute("id", a.sTableId + "_paginate");
            o.setAttribute("id", a.sTableId + "_previous");
            o.setAttribute("id", a.sTableId + "_previous");
            e.setAttribute("id", a.sTableId + "_next");
            m.setAttribute("id", a.sTableId + "_last")
        }
        f.type = "text";
        g.innerHTML = "Page ";
        p.appendChild(r);
        p.appendChild(o);
        p.appendChild(g);
        p.appendChild(f);
        p.appendChild(q);
        p.appendChild(e);
        p.appendChild(m);
        $(r).click(function() {
            var u = Math.ceil(a._iDisplayStart / a._iDisplayLength) + 1;
            if (u != 1) {
                a.oApi._fnPageChange(a, "first");
                h(a);
                $(r).addClass("disabled");
                $(o).addClass("disabled");
                $(e).removeClass("disabled");
                $(m).removeClass("disabled")
            }
        });
        $(o).click(function() {
            var u = Math.ceil(a._iDisplayStart / a._iDisplayLength) + 1;
            if (u != 1) {
                a.oApi._fnPageChange(a, "previous");
                h(a);
                if (u == 2) {
                    $(r).addClass("disabled");
                    $(o).addClass("disabled")
                }
                $(e).removeClass("disabled");
                $(m).removeClass("disabled")
            }
        });
        $(e).click(function() {
            var u = Math.ceil(a._iDisplayStart / a._iDisplayLength) + 1;
            if (u != Math.ceil((a.fnRecordsDisplay() / a._iDisplayLength))) {
                a.oApi._fnPageChange(a, "next");
                h(a);
                if (u == (Math.ceil((a.fnRecordsDisplay() - 1) / a._iDisplayLength) - 1)) {
                    $(e).addClass("disabled");
                    $(m).addClass("disabled")
                }
                $(r).removeClass("disabled");
                $(o).removeClass("disabled")
            }
        });
        $(m).click(function() {
            var u = Math.ceil(a._iDisplayStart / a._iDisplayLength) + 1;
            if (u != Math.ceil((a.fnRecordsDisplay() / a._iDisplayLength))) {
                a.oApi._fnPageChange(a, "last");
                h(a);
                $(r).removeClass("disabled");
                $(o).removeClass("disabled");
                $(e).addClass("disabled");
                $(m).addClass("disabled")
            }
        });
        $(f).keyup(function(v) {
            if (v.which == 38 || v.which == 39) {
                this.value++
            } else {
                if ((v.which == 37 || v.which == 40) && this.value > 1) {
                    this.value--
                }
            }
            if (this.value === "" || this.value.match(/[^0-9]/)) {
                this.value = this.value.replace(/[^\d]/g, "");
                return
            }
            var u = a._iDisplayLength * (this.value - 1);
            if (u < 0) {
                u = 0
            }
            if (u > a.fnRecordsDisplay()) {
                u = (Math.ceil((a.fnRecordsDisplay() - 1) / a._iDisplayLength) - 1) * a._iDisplayLength
            }
            if (u === 0) {
                $(r).addClass("disabled");
                $(o).addClass("disabled");
                $(e).removeClass("disabled");
                $(m).removeClass("disabled")
            } else {
                if (u == ((Math.ceil((a.fnRecordsDisplay() - 1) / a._iDisplayLength) - 1) * a._iDisplayLength)) {
                    $(e).addClass("disabled");
                    $(m).addClass("disabled");
                    $(r).removeClass("disabled");
                    $(o).removeClass("disabled")
                } else {
                    $(r).removeClass("disabled");
                    $(o).removeClass("disabled");
                    $(e).removeClass("disabled");
                    $(m).removeClass("disabled")
                }
            }
            a._iDisplayStart = u;
            h(a)
        });
        $("span", p).bind("mousedown", function() {
            return false
        });
        $("span", p).bind("selectstart", function() {
            return false
        });
        var d = Math.ceil((a.fnRecordsDisplay()) / a._iDisplayLength);
        if (d <= 1) {
            $(p).hide()
        }
    },
    fnUpdate: function(a, m) {
        if (!a.aanFeatures.p) {
            return
        }
        var d = Math.ceil((a.fnRecordsDisplay()) / a._iDisplayLength);
        var p = Math.ceil(a._iDisplayStart / a._iDisplayLength) + 1;
        var g = a.aanFeatures.p;
        if (d <= 1) {
            $(g).hide()
        } else {
            for (var f = 0, e = g.length; f < e; f++) {
                var o = g[f].getElementsByTagName("span");
                var h = g[f].getElementsByTagName("input");
                o[3].innerHTML = " of " + d;
                h[0].value = p
            }
        }
    }
};
(function(K, C) {
    var S = {
        ajax: {
            type: "POST",
            url: null 
        },
        ajaxData: {},
        perPage: 10,
        page: 1,
        startPropName: "page",
        perPagePropName: "perpage",
        orderByPropName: "order_by",
        totalCoutPropName: "total",
        orginalOrderBy: null ,
        iconsForPaginate: false,
        searching: false,
        unSelect: false,
        info: false,
        resizeColumns: false,
        orderColumns: false,
        dom: "lfrtip",
        skipInitAjaxCall: false,
        responsive: true,
        rowSelectable: false,
        pagingSelectList: false,
        rowSelectableOpts: {
            singleRowSelect: false,
            useShift: true,
            useCtrl: true
        },
        getDataFunction: null ,
        getDataFunctionContext: null ,
        getDataCallback: null ,
        language: {
            processing: "<i class='fa fa-refresh gc-grid-load fa-spin'></i>"
        },
        draw: 0,
        triggerDraw: true,
        wrapperClass: "gc-datagrid",
        tableClasses: ["table", "table-striped", "table-hover", "dt-responsive"]
    }
      , J = function J(ab, ac, ae, ad) {
        ac = B.call(this, ac);
        if (this.options.skipInitAjaxCall === true && this.options.draw === 0) {
            this.options.draw++;
            return
        } else {
            ad.jqXHR = K.ajax({
                type: ad.ajax.type,
                url: ab || ad.ajax.url,
                data: ac
            }).then(K.proxy(function(af) {
                if (af.result && af.result == "no") {
                    giscloud.ui.alert.red().show(af.msg, 10000);
                    this.trigger(K.Event(this.EVENTS[9] + "." + this.eventNamespace), {
                        errorMsg: af.msg
                    });
                    return
                }
                if (af.result === "no") {
                    this.container.parents(".dataTables_wrapper").find(".gc-grid-load").remove();
                    return
                }
                af.recordsTotal = af[this.options.totalCoutPropName];
                af.recordsDisplay = af.data.length;
                af.recordsFiltered = af[this.options.totalCoutPropName];
                af.draw = this.options.draw;
                af.displayLength = af.data.length;
                ae(af);
                E.apply(this, [null , ad, af]);
                if (this.options.height) {
                    this.height(this.options.height, false, true)
                }
            }, this), function(af, ah, ag) {
                giscloud.ui.redAlert("Problem with data mapping", 3000);
                throw {
                    error: ah,
                    data: ag
                }
            })
        }
    }
      , B = function B(ac) {
        var af = this
          , ad = this.options
          , ae = this.dataTable ? this.dataTable.page.info().page : 0
          , ab = K.map(ac, function(ah) {
            var ag = {};
            switch (ah.name) {
            case "start":
                ag.name = ad.startPropName;
                ag.value = ae + 1;
                break;
            case "length":
                ag.name = ad.perPagePropName;
                ag.value = ah.value ? ah.value : ad.perPage;
                break;
            case "order":
                ag.name = ad.orderByPropName;
                ag.value = ah.value.length > 0 ? ah.value : ad.orginalOrderBy;
                break;
            case "draw":
                af.options.draw = ah.value;
                break
            }
            return K.isEmptyObject(ag) ? null  : ag
        });
        K.each(af.options.ajaxData || {}, function(ah, aj) {
            var ai = {
                name: ah,
                value: aj
            }, ag;
            ag = K.map(ab, function(ak) {
                if (ai.name == ak.name) {
                    return true
                }
            })[0] || false;
            if (ag === false) {
                ab.push(ai)
            }
        });
        this.trigger(K.Event(this.EVENTS[10] + "." + this.eventNamespace), [ab]);
        return ab
    }
      , u = function u(ab) {
        return ( function ac(ad, ah, aj, ai) {
            var ag = ab.options.getDataFunction
              , af = ab.options.getDataFunctionContext || ab
              , ae = ag.call(af, ab);
            if (!K.isFunction(ae.state)) {
                ae = K.Deferred().resolve(ae)
            }
            ae.done(K.proxy(function(ak) {
                K.extend(ak, {
                    recordsTotal: ak.total,
                    recordsDisplay: ak.data.length,
                    recordsFiltered: ak.total,
                    draw: ai.iDraw,
                    displayLength: ak.data.length
                });
                aj(ak)
            }, this))
        }
        ) 
    }
      , f = function f(ae) {
        var ad = K(ae.currentTarget), ac = function ac() {
            var ag = {
                jqSelectedEls: this.container.find("tr.selected"),
                jqSelectedEl: ad,
                data: this.dataTable.row(ad.get(0)).data(),
                datagrid: this
            };
            ag.allSelectedData = K.map(this.container.find("tr.selected"), K.proxy(function(ah) {
                return this.dataTable.row(ah).data()
            }, this));
            return ag
        }
        , ab, af;
        if (ad.hasClass("child")) {
            return
        }
        if (ad.hasClass("selected") && this.options.unSelect === true) {
            ad.removeClass("selected");
            ab = ac.call(this);
            this.trigger(K.Event(this.EVENTS[1] + "." + this.eventNamespace), ab)
        } else {
            af = this.container.find("tr.selected");
            if (this.options.rowSelectableOpts.singleRowSelect === true) {
                af.removeClass("selected")
            } else {
                if (ae.ctrlKey !== this.options.rowSelectableOpts.useCtrl && ae.shiftKey !== this.options.rowSelectableOpts.useShift) {
                    af.removeClass("selected")
                }
                if (ae.shiftKey === this.options.rowSelectableOpts.useShift) {
                    if (af.nextAll().filter(ad).length > 0) {
                        af.last().nextUntil(ad).addClass("selected")
                    } else {
                        ad.first().nextUntil(af).addClass("selected")
                    }
                }
            }
            ad.addClass("selected");
            ab = ac.call(this);
            this.trigger(K.Event(this.EVENTS[0] + "." + this.eventNamespace), ab);
            ad = null 
        }
    }
      , E = function E(ae, ac, ad) {
        var ab = {
            settings: ac,
            data: ad
        };
        this.trigger(K.Event(this.EVENTS[2] + "." + this.eventNamespace), ab)
    }
      , q = function q(ac) {
        var ab = {
            jqEl: K(ac.currentTarget),
            data: this.dataTable.row(ac.currentTarget).data()
        };
        if (ab.jqEl.hasClass("child")) {
            return
        }
        ab.jqEl.addClass("selected");
        this.trigger(K.Event(this.EVENTS[3] + "." + this.eventNamespace), ab)
    }
      , Z = function Z() {
        if (this.options.iconsForPaginate) {
            this.container.parents(".dataTables_wrapper").find(".dataTables_paginate").addClass("icons");
            this.container.parents(".dataTables_wrapper").find(".dataTables_paginate").find(".first, .previous, .next, .last").text("")
        }
        if (this.fnSettings._iRecordsTotal > this.fnSettings._iDisplayLength) {
            this.container.parents(".dataTables_wrapper").find(".dataTables_paginate").show()
        }
    }
      , F = function F() {
        var ae = this.dataTable.columns()[0], ac = K(this.fnSettings.nTableWrapper), ab = K(this.fnSettings.nScrollHead).find(".dataTables_scrollHeadInner"), ad, af;
        this.trigger(K.Event(this.EVENTS[5] + "." + this.eventNamespace), this);
        if (this.options.height) {
            this.height(this.options.height, false, true)
        }
        Z.apply(this);
        if (this.options.resizeColumns === true && this.options.scrollX) {
            this.container.css("width", "auto");
            ab.css("width", "auto");
            ab.find("table.table").css("width", "auto");
            this.dataTableObj._fnCalculateColumnWidths(this.fnSettings);
            K.map(ae, K.proxy(function(ag) {
                ad = this.fnSettings.aoColumns[ag];
                af = ac.find("table.dataTable thead tr th:nth-child(" + (ag + 1) + "), table.dataTable tfoot tr th:nth-child(" + (ag + 1) + ")");
                if (this.dataTable.column(ag).visible() && ad.sWidth) {
                    af.width(ad.sWidth)
                }
            }, this))
        }
        this.container.parents(".dataTables_wrapper").find("input.paginate_input").bindFirst("keyup", function(ag) {
            if (ag.which == 38 || ag.which == 39 || ag.which == 37 || ag.which == 40) {
                ag.stopImmediatePropagation()
            }
        });
        this.container.closest("." + this.options.wrapperClass).css("height", "auto")
    }
      , aa = function aa() {
        var ac = this.dataTable.page.info().pages + ""
          , ab = this.container.parents(".dataTables_wrapper").find(".dataTables_paginate");
        if (this.options.pagingSelectList === false) {
            this.container.parents(".dataTables_wrapper").find(".dataTables_length").hide()
        }
        if (this.options.triggerDraw === true) {
            this.trigger(K.Event(this.EVENTS[5] + "." + this.eventNamespace), this)
        }
        if (this.options.triggerDraw === true) {
            this.trigger(K.Event(this.EVENTS[7] + "." + this.eventNamespace), this)
        }
        this.options.triggerDraw = true;
        if (this.options.scrollY !== undefined && this.options.scrollY !== "0px") {
            K(this.fnSettings.nScrollBody).height(this.options.scrollY)
        }
        this.container.parents(".dataTables_wrapper").find("input.paginate_input").attr("size", ac.length);
        Z.apply(this)
    }
      , P = function P() {
        if (this.options.responsive === true) {
            this.dataTable.responsive.rebuild();
            this.dataTable.responsive.recalc()
        }
    }
      , r = function r(ab) {
        this.trigger(K.Event(this.EVENTS[8] + "." + this.eventNamespace), {
            datagrid: this,
            columnElement: ab.target,
            columnIndex: K(ab.target).attr("data-column-index")
        })
    }
      , N = function N() {
        var ab = {
            "class": this.options.wrapperClass
        };
        if (window.navigator.userAgent.indexOf("MSIE") > -1 && this.options.rowSelectable) {
            K.extend(ab, {
                onselectstart: "return false"
            })
        }
        return K("<div>", ab)
    }
      , e = function e() {
        this.trigger(K.Event(this.EVENTS[6] + "." + this.eventNamespace), {
            datagrid: this,
            page: this.dataTable.page()
        })
    }
    ;
    giscloud.ui.Datagrid = function M(ac, ad) {
        this.EVENTS = ["row-select", "row-unselect", "data-loaded", "row-dblclick", "column-data-edit-done", "initial-done", "page-change", "draw-done", "header-click", "error-loading-data", "before-data-loading"];
        this.eventNamespace = "gc-datagrid";
        this.dataTable = null ;
        this.fnSettings = null ;
        this.container = null ;
        this.colReorder = null ;
        this.initialize = function ab() {
            var ae = {};
            if (K.isPlainObject(ad)) {
                this.options = K.extend(true, {}, S, ad)
            } else {
                if (K.isPlainObject(ac)) {
                    this.options = K.extend(true, {}, S, ac)
                } else {
                    this.options = K.extend(true, {}, S)
                }
            }
            if (K.isPlainObject(ac)) {
                this.container = K(this.options.container)
            } else {
                this.container = K(ac)
            }
            if (this.container === null  || !this.container.length) {
                throw "giscloud.ui.Datagrid: invalid container"
            }
            if (this.options.url) {
                this.options = K.extend(this.options, {
                    processing: true,
                    serverSide: this.options.serverSide || false,
                    ajax: {
                        url: this.options.url,
                        type: this.options.ajaxType || S.ajax.type,
                        data: K.proxy(function() {
                            return this.options.ajaxData
                        }, this)
                    }
                })
            } else {
                delete this.options.ajax
            }
            if (this.options.paging && this.options.perPage) {
                this.options = K.extend(this.options, {
                    pageLength: this.options.perPage || S.perPage
                });
                ae[this.options.perPagePropName] = this.options.perPage;
                ae[this.options.startPropName] = this.options.page
            }
            if (this.options.responsive && this.options.resizeColumns && !C.isMobileBrowser) {
                this.options.responsive = false
            }
            if (this.options.responsive === false) {
                K.grep(this.options.tableClasses, function(af) {
                    return af !== "dt-responsive"
                })
            }
            if (K.isFunction(this.options.getDataCallback)) {
                this.options.fnServerData = this.options.getDataCallback
            } else {
                if (K.isFunction(this.options.getDataFunction)) {
                    this.options.fnServerData = u(this)
                } else {
                    this.options.fnServerData = K.proxy(J, this)
                }
            }
            if (this.options.resizeColumns === true) {
                this.options.dom = "Z" + this.options.dom;
                K.extend(this.options, {
                    scrollX: "100%",
                    colResize: {
                        tableWidthFixed: false,
                        adjustAfterResize: false
                    }
                });
                this.container.css("margin", "0px")
            }
            if (this.options.orderColumns === true) {
                this.options.dom = "R" + this.options.dom;
                this.colReorder = new K.fn.dataTable.ColReorder(this.dataTable)
            }
            if (this.options.height) {
                this.options.scrollY = "0px";
                this.options.scrollCollapse = true
            }
            if (this.options.orginalOrderBy) {
                ae[this.options.orderByPropName] = this.options.orginalOrderBy
            }
            this.options.ajaxData = K.extend(this.options.ajaxData, ae);
            this.container.addClass(this.options.tableClasses.join(" "));
            this.container.wrap(K.proxy(N, this));
            if (this.options.height) {
                this.container.closest("." + this.options.wrapperClass).height(this.options.height)
            }
            C.addEventsInterface(this, this.container);
            this.dataTable = this.container.DataTable(this.options);
            this.dataTableObj = this.container.dataTable();
            this.fnSettings = this.dataTableObj.fnSettings();
            if (this.options.rowSelectable === true) {
                this.container.closest("." + this.options.wrapperClass).addClass("selectable");
                this.container.find("tbody").on("click", "tr", K.proxy(f, this));
                if (C.isMobileBrowser) {
                    this.container.find("tbody").on("doubletap", "tr", K.proxy(q, this))
                } else {
                    this.container.find("tbody").on("dblclick", "tr", K.proxy(q, this))
                }
            }
            K(this.fnSettings.nTableWrapper).on("click", "thead th", K.proxy(r, this));
            this.dataTable.on("xhr.dt", K.proxy(E, this));
            this.dataTable.on("init.dt", K.proxy(F, this));
            this.dataTable.on("page.dt", K.proxy(e, this));
            this.dataTable.on("draw.dt", K.proxy(aa, this));
            if (this.options.ajax === undefined || this.options.ajax.url == null ) {
                this.container.trigger("init.dt", [this.fnSettings, {}])
            }
            return this
        }
        ;
        return this.initialize()
    }
    ;
    giscloud.ui.Datagrid.prototype = {
        refreshData: function m(ab, ac) {
            if (ab) {
                K.extend(this.options.ajaxData, ab)
            }
            this.dataTable.ajax.reload(null , ac);
            return this
        },
        selectAll: function W() {
            var ab = {};
            ab.jqEls = this.container.find("tr").addClass("selected");
            ab.allSelectedData = K.map(ab.jqEls, K.proxy(function(ac) {
                return this.dataTable.row(ac).data()
            }, this));
            return ab
        },
        unselectAll: function T() {
            this.container.find("tr.selected").removeClass("selected");
            return this
        },
        toggleSelectAll: function d() {
            var ab;
            if (this.container.find("tr.selected").length > 0) {
                ab = this.unselectAll()
            } else {
                ab = this.selectAll()
            }
            return ab
        },
        select: function R(ab) {
            var ac = {
                data: [],
                jqEls: null 
            };
            if (ab === undefined) {
                ac.jqEls = this.container.find("tr.selected");
                ac.data = K.map(ac.jqEls, K.proxy(function(ad) {
                    return this.dataTable.row(ad).data()
                }, this))
            } else {
                ac.jqEls = this.container.find("tbody tr:eq(" + ab + ")").trigger("click");
                ac.data = K.map(ac.jqEls, K.proxy(function(ad) {
                    return this.dataTable.row(ad).data()
                }, this))
            }
            return ac
        },
        getSelected: function z(ae) {
            var ad = {
                data: [],
                jqEls: null 
            }, ac, ab;
            if (ae !== undefined) {
                ac = this.dataTable.column(ae).dataSrc();
                if (this.container.find("tr.selected").length > 0) {
                    ab = {};
                    ab[ac] = this.dataTable.cell(this.container.find("tr.selected"), ae).data();
                    ad.data.push(ab)
                }
                ad.jqEls = K(this.dataTable.cell(this.container.find("tr.selected"), 0).node())
            } else {
                ad.jqEls = this.container.find("tr.selected");
                ad.data = K.map(ad.jqEls, K.proxy(function(af) {
                    return this.dataTable.row(af).data()
                }, this))
            }
            return ad
        },
        filterView: function H(ab) {
            this.dataTable.search(ab).draw();
            return this
        },
        searchData: function p(ad) {
            var ac, ab;
            ab = this.dataTable.rows().eq(0).filter(K.proxy(function(ae) {
                ac = this.dataTable.columns().eq(0).filter(K.proxy(function(af) {
                    return this.dataTable.rows().cell(ae, af).data() === ad ? true : false
                }, this));
                return (ac.length === 0) ? false : true
            }, this));
            return this.dataTable.rows(ab).data()
        },
        editInline: function U(ad, ac) {
            var ae = ad, af;
            if (this.container.has(ad) === false || ad.get(0).tagName !== "TD") {
                throw "giscloud.ui.Datagrid: element is not a child of datatable or tag is not TD"
            }
            function ab(am, al, aj) {
                var ah, ak = al, ai, ag;
                if (ak === undefined) {
                    this.refreshData(null , false);
                    return
                }
                ag = this.dataTable.cell(ae.get(0));
                if (ac) {
                    ae.data("editInPlace", false)
                }
                ah = {
                    jqEl: ae,
                    newValue: ak,
                    orgValue: aj,
                    rowData: this.dataTable.row(ag.index().row).data()
                };
                ai = K.Event(this.EVENTS[4]);
                this.trigger(ai, ah);
                if (ai.result === false) {
                    ak = ag.render("display")
                } else {
                    ag.data(ak)
                }
                return ak
            }
            if (ae.data("editInPlace") === undefined) {
                af = ae.editInPlace({
                    callback: K.proxy(ab, this),
                    bg_over: "",
                    bg_out: "",
                    preinit: function() {
                        return ae.data("editInPlace")
                    }
                })
            } else {
                ae.data("editInPlace", true);
                af = ae
            }
            ae.on("focusout", ab.bind(this));
            ae.trigger("click");
            return af
        },
        finishEditInline: function O(ab) {
            ab.data("editInPlace", false);
            if (ab !== undefined) {
                ab.trigger("focusout")
            } else {
                this.container.find("input.inplace_value").trigger("focusout")
            }
            return this
        },
        setData: function D(ab) {
            this.dataTableObj.fnClearTable();
            this.addData(ab);
            this.draw();
            return this
        },
        addData: function v(ab) {
            this.dataTableObj.fnAddData(ab);
            this.dataTableObj.fnDraw();
            P.apply(this)
        },
        pageIndex: function h(ab) {
            if (this.options.paging === false) {
                throw "giscloud.ui.Datagrid: no pagination is defined"
            }
            if (ab === undefined) {
                ab = this.dataTable.page.info().page
            } else {
                this.dataTableObj.fnPageChange(ab)
            }
            return ab
        },
        resetColumnSize: function o() {
            var ab = K(this.fnSettings.nScrollHead).find(".dataTables_scrollHeadInner");
            if (this.options.scrollX) {
                this.container.css("width", "auto");
                ab.css("width", "auto");
                ab.find("table.table").css("width", "auto")
            }
            this.dataTable.columns.adjust().draw(false)
        },
        draw: function Y(ab) {
            if (ab) {
                this.options.triggerDraw = ab
            }
            this.dataTable.draw(false);
            return this
        },
        height: function g(ad, af, ac) {
            var ae = ad, ab;
            if (ae === undefined) {
                return this.options.scrollY
            } else {
                this.options.height = ae;
                if (ac === true) {
                    if (K(this.fnSettings.nTableWrapper).find(".dataTables_paginate:visible").length > 0) {
                        ae = ae - K(this.fnSettings.nTableWrapper).find(".dataTables_paginate").outerHeight(true)
                    }
                    ae = ae - K(this.fnSettings.nTableWrapper).find(".dataTables_scrollHead").outerHeight(true);
                    ae = ae - K(this.fnSettings.nTableWrapper).find(".ColVis").outerHeight(true)
                }
                this.fnSettings.oScroll.sY = ae + "px";
                this.options.scrollY = ae + "px";
                K(this.fnSettings.nScrollBody).height(ae);
                this.fnSettings.bAjaxDataGet = false;
                ab = this.fnSettings.oScroll.bCollapse = ((this.options.scrollX && this.options.scrollY) ? false : this.fnSettings.oScroll.bCollapse);
                this.draw(af);
                P.apply(this);
                this.fnSettings.oScroll.bCollapse = ab;
                this.fnSettings.bAjaxDataGet = true
            }
            return this
        },
        width: function a(ab, ac) {
            if (ab !== undefined) {
                this.dataTableObj.width(ab);
                if (ac !== false) {
                    this.dataTable.columns.adjust()
                }
            }
            return this.dataTableObj.width()
        },
        processing: function G(ab) {
            if (ab === "show") {
                K(this.fnSettings.nTableWrapper).find(".dataTables_processing").show()
            } else {
                K(this.fnSettings.nTableWrapper).find(".dataTables_processing").hide()
            }
            return this
        },
        getColumnObject: function V(ab) {
            return K.grep(this.fnSettings.aoColumns, function(ac) {
                return ac.idx === ab
            })
        },
        clearSort: function I() {
            this.fnSettings.aaSorting = [];
            this.fnSettings.aiDisplay.sort(function(ab, ac) {
                return ab - ac
            });
            this.fnSettings.aiDisplayMaster.sort(function(ab, ac) {
                return ab - ac
            });
            this.fnSettings.oApi._fnReDraw(this.fnSettings);
            return this
        },
        destroy: function Q(ab) {
            this.dataTable.destroy(ab)
        }
    };
    K.fn.DataTable.ext.errMode = "throw";
    K.fn.bindFirst = function(ac, ae) {
        var ab, ad;
        this.on(ac, ae);
        this.each(function() {
            ab = K._data(this, "events")[ac.split(".")[0]];
            ad = ab.pop();
            ab.splice(0, 0, ad)
        });
        return this
    }
}(giscloud.exposeJQuery(), giscloud.common()));
(function(P, G) {
    var U = {
        viewer: giscloud.ui.map,
        infotool: null ,
        activeLayerId: null ,
        orderBy: null ,
        setActiveLayerText: "Please set active layer first.",
        addionalRestParams: {
            filter_by_expression: true,
            format: true
        },
        useViewerForSelection: false,
        datagridOpts: {
            serverSide: true,
            paging: true,
            perPage: 10,
            orderColumns: false,
            lengthChange: false,
            deferLoading: null ,
            scrollY: "0px",
            ordering: false,
            aaSorting: [],
            pagingSelectList: false,
            processing: true,
            scrollCollapse: true,
            rowSelectable: true,
            getDataCallback: null ,
            language: {
                processing: "<p class='gc-grid-load'>Loading...</p>"
            },
            rowSelectableOpts: {
                singleRowSelect: false
            }
        }
    }
      , E = function E(Z) {
        throw Z || "Error has occurred"
    }
      , p = function p(ah, ak, ac, aa) {
        var ag = M.apply(this, [aa.sTableId]), ad = this.options.activeLayerId, aj = aa.iDraw, ai = J.apply(this, [ag.id]), ab = {
            perPage: this.options.datagridOpts.perPage,
            page: null 
        }, af, ae = "", Z;
        if (ad === null  || ad === giscloud.ui.FeatureDatagrid.activeLayerConstant.ALL) {
            ad = ag.id
        }
        Z = I.apply(this, [ad]);
        ab.page = Z.dataTable.page() + 1;
        this.trigger(P.Event(this.EVENTS[2] + "." + this.eventNamespace), {
            layer: ag,
            page: ab.page,
            object: this
        });
        if (this.options.addionalRestParams && P.isPlainObject(this.options.addionalRestParams)) {
            ab = P.extend(ab, this.options.addionalRestParams)
        }
        if (ai != null ) {
            ab = P.extend(ab, {
                order_by: ai
            })
        }
        if (this.options.datagridOpts.ordering) {
            af = P.grep(ak, function(al) {
                return al.name === "order"
            })[0];
            if (af) {
                P.each(af.value, function(al, am) {
                    if (al > 0) {
                        ae += ","
                    }
                    ae += Z.getColumnObject(am.column)[0].name + ":" + am.dir
                })
            }
            if (ae) {
                ab.order_by = ae
            }
        }
        giscloud.features.byLayer(ad, ab).fail(E).done(P.proxy(function(am, ao) {
            var an = u.apply(this, [aa.sTableId])
              , al = {};
            an.currentFeatures = am;
            al.data = g.apply(this, [am]);
            al = P.extend(al, {
                recordsTotal: ao,
                recordsDisplay: al.data.length,
                recordsFiltered: ao,
                draw: aj,
                displayLength: al.data.length
            });
            this.trigger(P.Event(this.EVENTS[3] + "." + this.eventNamespace), {
                layer: ag,
                features: an.currentFeatures,
                page: ab.page,
                object: this
            });
            ac(al);
            C.apply(this)
        }, this))
    }
      , V = function V() {
        if (this.container.find(".tabPanel").is(":visible") === false) {
            this.container.find(".tabPanel").show()
        } else {
            this.container.find(".tabPanel").hide()
        }
    }
      , O = function O() {
        var aa, ad, ab = this, Z = null , ac = 1, ae = {
            perPage: this.options.datagridOpts.perPage,
            page: ac
        };
        if (this.options.addionalRestParams && P.isPlainObject(this.options.addionalRestParams)) {
            ae = P.extend(ae, this.options.addionalRestParams)
        }
        this.container.find(".tabPanel").remove();
        this.container.removeClass("manual-layer-selection");
        this.container.find(".manual-layer-selection-text").remove();
        if (this.options.addPullTab) {
            P("body").append(this.template.pulltab);
            this.template.pulltab.append(this.template.pullControls);
            this.template.pullControls.append(this.template.pulltabIcons);
            this.container.find(".tabPanel").hide();
            this.container.addClass("datagrid-drawer");
            this.container.on("size.gc-datagrid-drawer", P.proxy(V, this)).on("hide.gc-datagrid-drawer", P.proxy(V, this)).on("show.gc-datagrid-drawer", P.proxy(V, this)).on("size.gc-datagrid-drawer", P.proxy(C, this));
            giscloud.ui.datagridDrawer.init(false, {
                leaveMapAlone: false,
                viewer: this.options.viewer,
                datagridPad: this.container
            })
        }
        if (this.options.activeLayerId !== null  && typeof this.options.activeLayerId === "string" && this.options.activeLayerId.toLowerCase() === giscloud.ui.FeatureDatagrid.activeLayerConstant.MANUAL) {
            q.apply(this, [])
        } else {
            if (this.options.activeLayerId !== null  && !isNaN(Number(this.options.activeLayerId))) {
                aa = this.options.viewer.layerById(this.options.activeLayerId);
                this.trigger(P.Event(this.EVENTS[2] + "." + this.eventNamespace), {
                    layer: aa,
                    page: ac,
                    object: this
                });
                Z = J.apply(ab, [aa.id]);
                if (ab.options.orderBy !== null  && Z !== null ) {
                    ae = P.extend(ae, {
                        order_by: Z
                    })
                }
                giscloud.features.byLayer(this.options.activeLayerId, ae).fail(E).done(P.proxy(function(ag, af) {
                    this.trigger(P.Event(this.EVENTS[3] + "." + this.eventNamespace), {
                        layer: aa,
                        features: ag,
                        page: ac,
                        object: ab
                    });
                    q.apply(this, [ag, aa, af])
                }, this))
            } else {
                if (this.options.activeLayerId.toLowerCase() === giscloud.ui.FeatureDatagrid.activeLayerConstant.ALL || this.options.activeLayerId === null ) {
                    this.container.append(this.template.tabPanel.clone());
                    this.container.find(".tabPanel").append(this.template.ulContainer.clone());
                    this.container.find(".tabPanel").append(this.template.tabContent.clone());
                    this.container.on("click", "a[data-toggle='tab']", P.proxy(v, this));
                    ad = F.apply(this);
                    P.each(ad, function(ag, af) {
                        Z = J.apply(ab, [af.id]);
                        if (ab.options.orderBy !== null  && Z !== null ) {
                            ae = P.extend(ae, {
                                order_by: Z
                            })
                        } else {
                            delete ae.order_by
                        }
                        ab.trigger(P.Event(ab.EVENTS[2] + "." + ab.eventNamespace), {
                            layer: aa,
                            page: ac,
                            object: ab
                        });
                        giscloud.features.byLayer(af.id, ae).fail(E).done(P.proxy(function(ai, ah) {
                            aa = this;
                            ab.trigger(P.Event(ab.EVENTS[3] + "." + ab.eventNamespace), {
                                layer: aa,
                                features: ai,
                                page: ac,
                                object: ab
                            });
                            m.apply(ab, [ai, aa, ah])
                        }, this))
                    })
                } else {
                    throw "giscloud.ui.FeatureDatagrid: activeLayerId property value unsupported."
                }
            }
        }
    }
      , o = function o(ad, ae) {
        var ab = ae.datagrid.dataTableObj.fnSettings().sTableId
          , Z = M.apply(this, [ab])
          , ac = u.apply(this, [ab])
          , aa = null ;
        P.each(ac.currentFeatures, function(af, ag) {
            if (ag.id === ae.data.FID) {
                aa = ag
            }
        });
        if (aa !== null  && Z !== null ) {
            this.options.viewer.bounds(aa.bounds);
            this.viewerSelection.clear();
            this.viewerSelection.add(aa.id, Z.id, null , true);
            this.viewerSelection.highlightSelected()
        }
        this.trigger(P.Event(this.EVENTS[0] + "." + this.eventNamespace), {
            layer: Z,
            feature: aa,
            data: aa.data,
            object: this
        })
    }
      , H = function H(ac, ad) {
        var ab = ad.datagrid.dataTableObj.fnSettings().sTableId
          , aa = M.apply(this, [ab])
          , Z = P.extend({
            layer: aa,
            object: this
        }, ad);
        this.trigger(P.Event(this.EVENTS[4] + "." + this.eventNamespace), Z)
    }
      , F = function F() {
        var Z = P.grep(this.options.viewer.layers, function(aa) {
            return aa.sourceType && aa.sourceType.toUpperCase() !== "TILE"
        });
        return Z
    }
      , M = function M(Z) {
        var aa = null ;
        P.each(this.components, function(ab, ac) {
            if (ac.datagrid.fnSettings.sTableId === Z) {
                aa = ac.layer
            }
        });
        return aa
    }
      , u = function u(Z) {
        var aa = null ;
        P.each(this.components, function(ab, ac) {
            if (ac.datagrid.fnSettings.sTableId === Z) {
                aa = ac
            }
        });
        return aa
    }
      , I = function I(Z) {
        var aa = null ;
        P.each(this.components, function(ab, ac) {
            if (ac.layer.id === Z) {
                aa = ac.datagrid
            }
        });
        return aa
    }
      , B = function B() {
        return new RegExp(/[^a-zA-Z\d]/g)
    }
      , q = function q(ae, ac, ad) {
        var ab = this.template.datagrid.clone()
          , Z = null 
          , aa = giscloud.uuid();
        if (ac !== undefined) {
            Z = ac.name.replace(B(), "-"),
            aa = "gc-dg" + Z + "-" + ac.id;
            ab.attr("id", aa);
            this.container.append(ab);
            a.apply(this, [ae, ac, aa, ad])
        } else {
            this.container.addClass("manual-layer-selection");
            this.container.append(this.template.selectLayer.clone().text(this.options.setActiveLayerText))
        }
    }
      , m = function m(aa, ab, ah) {
        var ag = this.template.liItem.clone()
          , af = this.template.aItem.clone()
          , ae = this.template.tabPane.clone()
          , ad = this.template.datagrid.clone()
          , Z = ab.name.replace(B(), "-")
          , ac = "gc-dg" + Z + "-" + ab.id;
        ag.addClass(Z);
        af.text(ab.name).attr("href", "#" + Z + "-" + ab.id).attr("layerid", ab.id);
        ag.append(af);
        if (this.container.find("ul.gc-featuregrid-tabs li").length === 0) {
            ag.addClass("active");
            ae.addClass("active in active")
        }
        ad.attr("id", ac);
        ae.attr("id", Z + "-" + ab.id).append(ad);
        this.container.find("ul.gc-featuregrid-tabs").append(ag);
        this.container.find(".tab-content").append(ae);
        a.apply(this, [aa, ab, ac, ah])
    }
      , g = function g(Z) {
        var aa = [];
        P.each(Z, function(ab, ac) {
            aa.push(P.extend(ac.data, {
                FID: ac.id
            }))
        });
        return aa
    }
      , C = function C() {
        var Z = this.container.height() - this.container.find(".gc-featuregrid-tabs").outerHeight(true) - this.container.find(".datagrid-pulltab").outerHeight(true);
        this.height(Z);
        return Z
    }
      , T = function T(aa) {
        var Z = [];
        if (aa[0].meta && aa[0].meta.columns) {
            P.each(aa[0].meta.columns, function(ac, ad) {
                var ab = {
                    title: ad.alias || ad.field,
                    data: ad.alias || ad.field,
                    name: ad.field,
                    type: ad.datatype,
                    sDefaultContent: ""
                };
                Z.push(ab)
            })
        } else {
            P.each(aa[0].data, function(ac) {
                var ab = {
                    title: ac,
                    name: ac,
                    data: ac,
                    sDefaultContent: ""
                };
                Z.push(ab)
            });
            Z.push({
                data: "FID",
                title: "FID",
                "class": "hidden",
                name: "FID",
                sDefaultContent: ""
            })
        }
        return Z
    }
      , a = function a(ac, ab, Z, ad) {
        var ae, aa;
        if (ac.length === 0 || !ac[0].data) {
            this.container.find("#" + Z).parent(".tab-pane").addClass("no-data").append(this.template.noData.clone());
            console.info("no features for layer " + ab.name + " [" + ab.id + "]");
            return
        }
        ae = {
            columns: T.apply(this, [ac]),
            data: g.apply(this, [ac]),
            deferLoading: ad,
            height: C.apply(this),
            getDataCallback: P.proxy(p, this)
        };
        ae = P.extend(this.options.datagridOpts, ae);
        aa = new giscloud.ui.Datagrid("#" + Z,ae);
        aa.on("row-select." + aa.eventNamespace, P.proxy(o, this));
        aa.on("header-click." + aa.eventNamespace, P.proxy(H, this));
        this.components.push({
            datagrid: aa,
            currentFeatures: ac,
            layer: ab
        })
    }
      , J = function J(Z) {
        var aa = null 
          , ab = this.options.orderBy;
        if (P.type(ab) === "string") {
            aa = this.options.orderBy
        } else {
            if (P.isArray(this.options.orderBy) === true || P.isPlainObject(this.options.orderBy) === true) {
                if (!P.isArray(this.options.orderBy)) {
                    ab = [ab]
                }
                P.each(ab, function(ac, ad) {
                    if (!ad.orderByLayerId) {
                        throw "specific LayerId for specific orderBy is not defined"
                    }
                    if (ad.orderByLayerId === Z) {
                        if (!ad.orderByExpression) {
                            throw "specific orderByExpression for specific layerid is not defined"
                        }
                        aa = ad.orderByExpression
                    }
                })
            }
        }
        return aa
    }
      , v = function v(ac) {
        var ab = P(ac.target)
          , aa = this.container.find("ul.gc-featuregrid-tabs")
          , Z = ab.attr("href");
        if (ab.parent("li").hasClass("active")) {
            return
        }
        aa.find("li.active").toggleClass("active");
        ab.parent("li").toggleClass("active");
        this.container.find(".tab-pane.active").toggleClass("active");
        this.container.find(Z).toggleClass("active");
        P.each(this.components, function(ad, ae) {
            if (ae.datagrid.container.is(":visible")) {
                ae.datagrid.resetColumnSize()
            }
        });
        C.apply(this)
    }
      , N = function N() {
        if (this.options.useViewerForSelection === true) {
            this.viewerSelection = this.options.viewer.selection
        } else {
            this.viewerSelection = new giscloud.ViewerSelection(this.options.viewer)
        }
    }
      , f = function f() {}
      , R = function R() {
        this.options.infotool = giscloud.ui.defaultTools.info({
            viewer: this.options.viewer
        }).activate()
    }
      , W = function W() {
        this.options.viewer.bind("featureClick", P.proxy(f, this))
    }
    ;
    giscloud.ui.FeatureDatagrid = function(aa, ab) {
        this.components = [];
        this.viewerSelection = null ;
        this.container = null ;
        this.eventNamespace = "gc-feature-datagrid",
        this.EVENTS = ["row-select", "header-click", "reload-before", "reload-after", "header-click"];
        this.template = {
            selectLayer: P("<p>", {
                "class": "manual-layer-selection-text"
            }),
            ulContainer: P("<ulBinds an event handler.>", {
                "class": "nav nav-tabs gc-featuregrid-tabs"
            }),
            liItem: P("<li>", {
                "class": "feat-grid-item"
            }),
            aItem: P("<a>", {
                href: "#",
                "data-toggle": "tab"
            }),
            tabPanel: P("<div>", {
                "class": "tabPanel"
            }),
            tabPane: P("<div>", {
                "class": "tab-pane fade"
            }),
            datagrid: P("<table>"),
            tabContent: P("<div>", {
                "class": "tab-content"
            }),
            pulltab: P("<div>", {
                "class": "datagrid-pulltab hidden-xs non-mobile ui-draggable gc-featuregrid"
            }),
            pullControls: P("<div>", {
                "class": "drawer-controls"
            }),
            pulltabIcons: [P("<i>", {
                "class": "hidden-mobile drag-handle glyphicon glyphicon-th",
                title: "Drag to open/close"
            }), P("<i>", {
                "class": "visible-mobile open-icon  glyphicon glyphicon-arrow-up",
                title: "Open"
            }), P("<i>", {
                "class": "hidden-mobile toggle-icon glyphicon glyphicon-arrow-up",
                title: "Close"
            }), P("<i>", {
                "class": "visible-mobile close-icon glyphicon glyphicon-arrow-down",
                title: "Close"
            })],
            noData: P("<p>", {
                "class": "no-data-text",
                text: "No data found"
            })
        };
        this.initialize = function Z() {
            if (P.isPlainObject(aa)) {
                this.options = P.extend(true, {}, U, aa)
            } else {
                this.options = ab || {};
                this.options.selector = aa;
                this.options = P.extend(true, {}, U, ab)
            }
            if (P.isPlainObject(aa)) {
                this.container = aa
            } else {
                this.container = P(aa)
            }
            if (!this.options.viewer) {
                throw "giscloud.ui.FeatureDatagrid: No giscloud map object is provided."
            }
            this.container.addClass("gc-featuregrid");
            this.options.viewer.loading.done(P.proxy(N, this)).fail(E);
            this.options.viewer.loading.done(P.proxy(W, this)).fail(E);
            this.options.viewer.loading.done(P.proxy(O, this)).fail(E);
            if (!this.options.infotool) {
                this.options.viewer.loading.done(P.proxy(R, this)).fail(E)
            }
        }
        ;
        return this.initialize()
    }
    ;
    giscloud.ui.FeatureDatagrid.prototype = {
        height: function e(Z) {
            if (Z === undefined) {
                return this.container.height()
            } else {
                P.each(this.components, function(aa, ab) {
                    if (ab.datagrid.container.is(":visible")) {
                        ab.datagrid.height(Z, false, true)
                    }
                })
            }
        },
        setHeight: function S(Z) {
            this.height(Z)
        },
        getActiveLayer: function z() {
            return viewer.layerById(this.options.activeLayerId)
        },
        getActiveLayerId: function D() {
            return this.options.activeLayerId
        },
        setActiveLayerId: function Y(Z) {
            var aa;
            if (P.isNumeric(Z) === false && Z !== giscloud.ui.FeatureDatagrid.activeLayerConstant.MANUAL && Z !== giscloud.ui.FeatureDatagrid.activeLayerConstant.ALL) {
                throw "giscloud.ui.FeatureDatagrid: layerid or featuregrid constants is not passed."
            }
            this.options.activeLayerId = Z;
            P.each(this.components, P.proxy(function(ab, ac) {
                aa = ac.datagrid.container;
                ac.datagrid.destroy(true)
            }, this));
            this.components = P.grep(this.components, function(ab) {
                return aa !== ab.datagrid.container
            });
            O.apply(this);
            return this
        },
        redrawComponent: function r() {
            P.each(this.components, P.proxy(function(Z, aa) {
                aa.datagrid.destroy(true)
            }, this));
            this.components = [];
            this.container.find("ul.gc-featuregrid-tabs").empty();
            this.container.find(".tab-content").empty();
            O.apply(this);
            return this
        },
        setActiveLayer: function d(Z) {
            if (Z.id === undefined && Z !== giscloud.ui.FeatureDatagrid.activeLayerConstant.MANUAL && Z !== giscloud.ui.FeatureDatagrid.activeLayerConstant.ALL) {
                throw "giscloud.ui.FeatureDatagrid: layer object or featuregrid constants is not passed."
            }
            return this.setActiveLayerId(Z.id || Z)
        },
        refreshData: function h(Z, aa) {
            var ab;
            if (Z) {
                ab = I.apply(this, [Z]);
                ab.refreshData()
            } else {
                P.each(this.components, P.proxy(function(ac, ad) {
                    ad.datagrid.refreshData(null , aa)
                }, this))
            }
            return this
        },
        getOrderBy: function K(aa) {
            var Z = this.options.orderBy;
            if (aa) {
                Z = J.apply(this, [aa])
            }
            return Z
        },
        setOrderBy: function K(Z, aa) {
            var ac = false, ab = this.options.orderBy, ad;
            if (P.type(Z) === "string") {
                this.options.orderBy = Z
            } else {
                if ((P.isArray(Z) === true || P.isPlainObject(Z) === true) ) {
                    if (!P.isArray(Z)) {
                        Z = [Z]
                    }
                    if (!P.isArray(ab)) {
                        ab = [ab]
                    }
                    P.each(Z, P.proxy(function(ae, af) {
                        ad = af;
                        P.each(ab, function(ag, ah) {
                            if (ah.orderByLayerId === ad.orderByLayerId) {
                                ah.orderByExpression = ad.orderByExpression;
                                ac = true
                            }
                        });
                        if (!ac) {
                            ab.push(ad)
                        }
                    }, this))
                }
            }
            if (aa) {
                this.refreshData()
            }
            return this
        }
    };
    function Q(Z) {
        return Z.container
    }
    G.addEventsInterface(giscloud.ui.FeatureDatagrid.prototype, Q);
    giscloud.ui.FeatureDatagrid.activeLayerConstant = {};
    giscloud.ui.FeatureDatagrid.activeLayerConstant.MANUAL = "manual";
    giscloud.ui.FeatureDatagrid.activeLayerConstant.ALL = "all"
}(giscloud.exposeJQuery(), giscloud.common()));
(function(h, v) {
    var H = {
        container: null ,
        datasources: {
            types: null ,
            options: null 
        },
        actions: [],
        filter: true,
        modal: {
            width: 800,
            overlay: false,
            escClose: true,
            draggable: true,
            privateButtons: true,
            buttons: [{
                "class": "btn btn-default gc-datasourcebrowser-cancel-button",
                html: v.__("Cancel")
            }, {
                "class": "btn btn-primary gc-datasourcebrowser-ok-button",
                html: v.__("OK")
            }]
        },
        datagrid: {
            serverSide: true,
            paging: true,
            perPage: 10,
            orderColumns: false,
            lengthChange: false,
            deferLoading: null ,
            scrollY: 370,
            ordering: false,
            aaSorting: [],
            resizeColumns: false,
            pagingSelectList: false,
            processing: true,
            scrollCollapse: true,
            rowSelectable: true,
            getDataCallback: null ,
            rowSelectableOpts: {
                singleRowSelect: false
            },
            columns: [{
                data: "id",
                title: "ID",
                name: "id"
            }, {
                data: "name",
                title: "Name",
                name: "name"
            }, {
                data: "type",
                title: "Type",
                name: "type"
            }]
        }
    };
    function a(O, N, M) {
        h.each(M.data, function(P, R) {
            var Q = h.grep(R.options || [], O);
            h.each(Q, function(S, T) {
                M.data[P][T.option_name] = T.option_value
            });
            h.each(N, function(S, T) {
                if (M.data[P][T] == null ) {
                    M.data[P][T] = null 
                }
            })
        });
        return M
    }
    function p(M) {
        return ( function N(aa) {
            var W, ab, T, S, U, Q, V, P, Y, Z, R = {
                perPage: aa.options.perPage,
                page: aa.dataTable ? aa.dataTable.page() + 1 : 1
            };
            if (M.options.datasources && M.options.datasources.types) {
                if (!h.isArray(M.options.datasources.types)) {
                    W = [M.options.datasources.types]
                } else {
                    W = M.options.datasources.types
                }
                R.type = W.join(",")
            }
            if (M.options.datasources && M.options.datasources.options && M.options.datasources.options.length) {
                R.expand = "options"
            }
            if (M.filter && M.filter.value) {
                V = M.filter.index;
                P = M.filter.type;
                Y = M.filter.field;
                Z = M.filter.value;
                if (P === "custom") {
                    Q = M.filter.options.columns[V].data;
                    R = h.extend({}, R, Q.call(M, Z))
                } else {
                    if (P === "option") {
                        R.where_option = Y + "=" + Z
                    } else {
                        if (Y === "type") {
                            R.query = giscloud.datasources.typeNameToTypeCode(Z)
                        } else {
                            R.query = Z.replace(/\s+/g, "%")
                        }
                        R.query_on = Y
                    }
                }
            }
            if (M.options.rest) {
                h.each(M.options.rest, function(ac, ad) {
                    if (R[ac] == null ) {
                        R[ac] = ad
                    }
                })
            }
            T = giscloud.datasources.list(R);
            if (R.expand === "options") {
                if (!h.isArray(M.options.datasources.options)) {
                    U = M.options.datasources.options;
                    S = function S(ac) {
                        return ac.option_name === U
                    }
                    ;
                    ab = [M.options.datasources.options]
                } else {
                    if (M.options.datasources.options.length === 1) {
                        U = M.options.datasources.options[0];
                        S = function S(ac) {
                            return ac.option_name === U
                        }
                        ;
                        ab = M.options.datasources.options
                    } else {
                        U = new RegExp("^(" + M.options.datasources.options.join("|") + ")$");
                        S = function S(ac) {
                            return U.test(ac.option_name)
                        }
                        ;
                        ab = M.options.datasources.options
                    }
                }
                T = T.then(h.proxy(a, this, S, ab))
            }
            T = T.then(function O(ac) {
                h.each(ac.data, function(ad, ae) {
                    if ("type" in ae) {
                        ac.data[ad].type = giscloud.datasources.typeCodeToTypeName(ae.type)
                    }
                });
                return ac
            });
            return T
        }
        ) 
    }
    function J(M) {
        var N;
        if (!M.options.datasources || !M.options.datasources.options) {
            return (M.options || H).datagrid.columns
        }
        if (typeof M.options.datasources.options === "string") {
            N = [M.options.datasources.options]
        } else {
            N = M.options.datasources.options
        }
        return (M.options || H).datagrid.columns.concat(h.map(N, function(O) {
            return {
                data: O,
                title: O,
                name: O
            }
        }))
    }
    function m(M, N) {
        var Q = h(N.target).data("action"), O, P;
        N.preventDefault();
        if (!Q || !h.isFunction(Q.action)) {
            return
        }
        O = Q.context || window;
        if (Q.params != null ) {
            if (h.isArray(Q.params)) {
                P = [M].concat(P)
            } else {
                P = [M, P]
            }
        } else {
            P = [M]
        }
        Q.action.apply(O, P)
    }
    function u(M, N) {
        return h("<a/>", {
            href: "#",
            click: h.proxy(m, M, M),
            text: N.title || N.name || "&nbsp;",
            "class": "btn btn-default gc-datasourcebrowser-action-button"
        }).prepend(N.icon && h("<i/>", {
            "class": N.icon
        })).data("action", N)
    }
    function f(O, M, N) {
        if (N.which === 13) {
            g(O, M)
        }
    }
    function r(N, M) {
        if (M.container.data("gc-datasourcebrowser-result")) {
            N.resolve(M.selected())
        } else {
            N.reject()
        }
        M.destroy()
    }
    function g(N, M) {
        M.container.data("gc-datasourcebrowser-result", true);
        if (M.modal) {
            M.modal("hide")
        }
    }
    function o(N, M) {
        if (M.modal) {
            M.modal("hide")
        }
    }
    function q(M) {
        M.datagrid.dataTable.page(0);
        M.refresh()
    }
    function G(M) {
        return M.container
    }
    function K(M) {
        M.stopPropagation();
        h(M.target).change()
    }
    function E(M) {
        M.stopPropagation()
    }
    function D(O, N) {
        var P = N.container.find(".gc-datasourcebrowser-filter-input").val()
          , M = N.container.find(".gc-datasourcebrowser-filter-select").val().split(":")
          , Q = (N.value || "") !== P;
        N.value = P;
        N.type = M[0],
        N.field = M[1];
        N.index = N.container.find(".gc-datasourcebrowser-filter-select option:selected").data("index");
        if (Q || (P && Q)) {
            N.refresh()
        }
    }
    function d(N) {
        return {
            selected: N[0].name,
            columns: h.map(N, function M(O) {
                return {
                    type: O.type || "field",
                    name: O.data || O.name,
                    title: O.title || O.name
                }
            })
        }
    }
    function B(O, P) {
        var Q, N, S, T = this;
        if (!O.options.filter) {
            return null 
        }
        if (!h.isPlainObject(O.options.filter)) {
            this.options = d(O.options.datagrid.columns)
        } else {
            this.options = h.extend(true, {}, O.options.filter)
        }
        if (!P) {
            this.container = h("<div/>", {
                "class": "form-inline gc-datasourcebrowser-filter-container"
            })
        } else {
            this.container = h(P).addClass("gc-datasourcebrowser-filter-container")
        }
        Q = h("<input/>", {
            type: "text",
            placeholder: v.__("Filter"),
            "class": "form-control gc-datasourcebrowser-filter-input",
            change: v.debounce(D, 500, this, this),
            keydown: K,
            keypress: E,
            keyup: E
        }).appendTo(this.container);
        N = h("<select/>", {
            "class": "form-control gc-datasourcebrowser-filter-select",
            change: (function R() {
                var U = Array.prototype.slice.apply(arguments).concat(T);
                D.apply(T, U)
            })
        }).appendTo(this.container);
        N.append(h.map(this.options.columns, function M(U, V) {
            var Y = (U.type || "field") + ":" + U.name
              , W = !!(U.selected || U.name === T.options.selected);
            return h("<option>", {
                value: Y,
                text: U.title || U.name
            }).data("index", V).prop("selected", W)
        }));
        if (N.find("option:selected").length === 0) {
            if (this.options.selected) {
                N.find("option[value$=" + giscloud.escapeSelector(this.options.selected) + "]").prop("selected", true)
            } else {
                N.find("option").first().prop("selected", true)
            }
        }
        if (this.options.defaultValue != null ) {
            Q.val(this.options.defaultValue);
            this.value = this.options.defaultValue;
            S = N.find("option:selected").val();
            S = S.split && S.split(":");
            if (S) {
                this.type = S[0];
                this.field = S[1]
            }
        }
    }
    B.prototype = {
        refresh: function e() {
            var M = h.Event("filterChange.gc-datasourcebrowser", {
                field: this.field,
                type: this.fieldType,
                value: this.value,
                filter: this
            });
            this.trigger(M)
        },
        destroy: function I() {
            if (this.container) {
                this.container.empty();
                this.container = null 
            }
            this.field = null ;
            this.fieldType = null ;
            this.value = null ;
            this.options = null 
        }
    };
    v.addEventsInterface(B.prototype, G);
    giscloud.ui.DatasourceBrowser = function F(N, Q) {
        var P, R, M = H.modal.buttons, O = H.datagrid.columns, T = h.extend(true, {}, H);
        delete T.modal.buttons;
        delete T.datagrid.columns;
        if (!(this instanceof giscloud.ui.DatasourceBrowser)) {
            return new giscloud.ui.DatasourceBrowser(N,Q)
        }
        P = new h.Deferred();
        h.extend(this, P.promise());
        if (h.isPlainObject(Q)) {
            this.options = h.extend(true, {}, T, Q)
        } else {
            if (h.isPlainObject(N)) {
                this.options = h.extend(true, {}, T, N)
            } else {
                this.options = T
            }
        }
        if (!this.options.modal.buttons) {
            this.options.modal.buttons = M
        }
        if (!this.options.datagrid.columns) {
            this.options.datagrid.columns = O
        }
        if (h.isPlainObject(N)) {
            if (this.options.container) {
                this.container = h(this.options.container);
                if (this.container === null  || !this.container.length) {
                    throw "giscloud.ui.DatasourceBrowser: invalid container"
                }
            }
        } else {
            if (N != null ) {
                this.container = h(N);
                if (this.container === null  || !this.container.length) {
                    throw "giscloud.ui.DatasourceBrowser: invalid container"
                }
            }
        }
        if (this.container == null ) {
            this.options.modal.title = this.options.title || v.__("Datasources");
            R = giscloud.ui.modal(this.options.modal);
            this.container = R.find(".modal-body");
            this.modal = h.proxy(R.modal, R);
            R.on("hide.bs.modal", h.proxy(r, window, P, this)).on("keydown", h.proxy(f, window, P, this)).on("click", ".gc-datasourcebrowser-ok-button", h.proxy(g, window, P, this)).on("click", ".gc-datasourcebrowser-cancel-button", h.proxy(o, window, P, this))
        }
        this.container.addClass("gc-datasourcebrowser-container");
        this.datagridContainer = h("<div/>", {
            "class": "gc-datasourcebrowser-datagrid-container"
        });
        this.datagridTable = h("<table/>", {
            "class": "gc-datasourcebrowser-datagrid-table"
        }).appendTo(this.datagridContainer);
        this.datagridContainer.append(this.datagridTable);
        this.container.append(this.datagridContainer);
        this.filterContainer = h("<div/>", {
            "class": "form-inline"
        });
        this.filter = new B(this,this.filterContainer);
        if (this.filter) {
            this.filter.on("filterChange.gc-datasourcebrowser", h.proxy(q, window, this))
        } else {
            this.filterContainer.hide()
        }
        this.options.datagrid.getDataFunction = p(this);
        this.options.datagrid.columns = J(this);
        this.datagrid = new giscloud.ui.Datagrid(this.datagridTable,this.options.datagrid);
        this.datagrid.on("row-dblclick.gc-datagrid", v.debounce(function S(V, Y, W, U) {
            g(W, U)
        }, 300, window, [P, this]));
        this.filterContainer.appendTo(this.datagridContainer.find(".dataTables_wrapper"));
        this.actionsContainer = h("<div/>", {
            "class": "gc-datasourcebrowser-actions-container"
        });
        this.actionsContainer.append(h.map(this.options.actions || [], h.proxy(u, this, this)));
        this.container.prepend(this.actionsContainer);
        return this
    }
    ;
    giscloud.ui.DatasourceBrowser.defaultOptions = H;
    giscloud.ui.DatasourceBrowser.prototype = {
        destroy: function I() {
            if (this.filter) {
                this.filter.destroy();
                this.filter = null 
            }
            if (this.datagrid) {
                this.datagrid.destroy(this.datagridTable[0]);
                this.datagrid = null ;
                this.datagridTable = null ;
                this.datagridContainer = null 
            }
            if (this.container) {
                this.container.removeClass("gc-datasourcebrowser-container").empty();
                this.container = null 
            }
            return this
        },
        close: function z() {
            this.container.on("hide.bs.modal", h.proxy(this.destroy, this));
            this.modal("hide")
        },
        refresh: function e() {
            if (!this.datagrid) {
                throw "Not yet initialized."
            }
            this.datagrid.draw();
            return this
        },
        selected: function C() {
            return this.datagrid.getSelected().data
        }
    };
    v.addEventsInterface(giscloud.ui.DatasourceBrowser.prototype, G)
}(giscloud.exposeJQuery(), giscloud.common()));
(function(g, o) {
    var e = {
        container: null ,
        autoAddLayer: true,
        modal: {
            url: "/filemanager/form_upload",
            overlay: false,
            allowHide: true,
            escClose: true,
            closeButton: true,
            draggable: true
        }
    }, f, d, q, u, m = {}, a = false;
    function r() {
        var v = formManager.get("uploadform") ? formManager.get("uploadform").options.data.uploadDir : "/";
        g("#fileupload").fileupload({
            formData: {
                uploadDir: v
            },
            singleFileUploads: true,
            url: fno.liveSite + "modules_gc/upload/uploadflash.php",
            autoUpload: true
        }).bind("fileuploadstart", function() {
            d = [];
            q = [];
            u = {}
        }).bind("fileuploadstop", function() {
            var B = g.map(q, function z(C) {
                return ( g.isArray(C) ? g.map(C, z) : C) 
            });
            giscloud.ui.upload.trigger("completedAll.gc-ui-upload", [d, B])
        }).bind("fileuploadadd", function() {
            if (m.options.autoAddLayer && gcproject.hasOpenProject()) {
                g("#fileupload").fileupload({
                    formData: {
                        map_id: currentMapID,
                        uploadDir: giscloud.ui.upload.options.uploadDir
                    }
                })
            }
            g(".fileupload-buttonbar .start, .fileupload-buttonbar .cancel").show()
        }).bind("fileuploaddone", function(z, D) {
            var C, B = D.result.files && D.result.files.length ? D.result.files[0] : null ;
            a = false;
            C = u[B.name];
            if (C) {
                return
            }
            u[B.name] = z.timeStamp;
            if (B) {
                B.extension = B.name.substr(B.name.lastIndexOf(".") + 1);
                B.path = v;
                d.push(B);
                if (D.result.layers) {
                    q.push(D.result.layers)
                }
            }
            giscloud.ui.upload.trigger("completed.gc-ui-upload", D.result.files)
        }).bind("fileuploadprogress", function() {
            a = true
        });
        g(".fileupload-buttonbar .start, .fileupload-buttonbar .cancel").hide();
        g(".fileupload-buttonbar .cancel").click(function() {
            g(".fileupload-buttonbar .start, .fileupload-buttonbar .cancel").hide()
        });
        g("#fileupload").fileupload("option", "redirect", window.location.href.replace(/\/[^\/]*$/, "/cors/result.html?%s"))
    }
    function h() {
        g("#fileupload .files").empty();
        g(".fileupload-buttonbar .start, .fileupload-buttonbar .cancel").hide()
    }
    function p() {
        return m.container
    }
    m = giscloud.ui.upload = {
        initialize: function(v) {
            var z;
            if (this.initialized) {
                return giscloud.ui.upload
            }
            if (g.isPlainObject(v)) {
                m.options = g.extend(true, {}, e, v)
            } else {
                m.options = g.extend(true, {}, e)
            }
            m.options.uploadDir = m.options.uploadDir || "/";
            g(".gc-uploadform-container").remove();
            f = new o.uploadOverlay(g("body"));
            if (window.formManager && formManager.open) {
                giscloud.ui.upload.form = formManager.open({
                    overlay: false,
                    closeButton: true,
                    closeButtonCallback: "giscloud.ui.upload.hide();",
                    bootstrap: true,
                    draggable: true,
                    fid: "uploadform",
                    width: "auto",
                    height: "auto",
                    allowHide: true,
                    phoneFullSc: true,
                    title: gclang.js.uploadnewto + " '" + m.options.uploadDir + "'",
                    url: fno.liveSite + "filemanager/form_upload",
                    data: {
                        currentDir: "",
                        uploadDir: m.options.uploadDir
                    },
                    buttons: [{
                        click: "giscloud.ui.upload.hide();",
                        html: o.__("Close")
                    }]
                }).hide();
                z = giscloud.ui.upload.form.container;
                m.container = z;
                m.modal = g.proxy(z.modal, z);
                z.on("loaded", g.proxy(r, m))
            } else {
                console.warn("Not implemented yet")
            }
            m.container.addClass("gc-uploadform-container");
            this.initialized = true;
            return giscloud.ui.upload
        },
        path: function(v) {
            g("#fileupload").fileupload({
                formData: {
                    uploadDir: v
                }
            });
            giscloud.ui.upload.form.setTitle(gclang.js.uploadnewto + " '" + v + "'")
        },
        enabled: function() {
            var v = !fno.gcinit_auth.logged || !(fno.editorSite === fno.liveSite || fno.app_instance_type === "mapeditor");
            return !v
        },
        dragAndDropActive: function() {
            return this.enabled() && f.support()
        },
        accept: function(v) {
            f.accept(v)
        },
        message: function(v) {
            f.setMessage(v)
        },
        isVisible: function() {
            var v = formManager.get("uploadform");
            return v && v.state === "maximized"
        },
        show: function(v) {
            if (!m.container) {
                return
            }
            formManager.show("uploadform");
            if (!a) {
                h()
            }
            if (v && v.uploadDir) {
                giscloud.ui.upload.path(v.uploadDir)
            }
            return giscloud.ui.upload
        },
        hide: function() {
            if (!m.container) {
                return
            }
            if (f) {
                f.hide()
            }
            formManager.hide("uploadform");
            return giscloud.ui.upload
        }
    };
    giscloud.ui.upload.defaultOptions = e;
    o.addEventsInterface(giscloud.ui.upload, p, "gc-upload")
}(giscloud.exposeJQuery(), giscloud.common()));
(function(d, e, a, f) {
    a.uploadOverlay = (function(g) {
        var m = this, o, h = true;
        this.init = function(p) {
            if (!m.support()) {
                return false
            }
            o = ["Drop your files to upload to GIS Cloud"];
            if (e(".gc-drag-n-drop-strip").length == 0) {
                e("<div class='gc-drag-n-drop-strip gc-drag-n-drop-strip-top' ></div>").appendTo(g);
                e("<div class='gc-drag-n-drop-strip gc-drag-n-drop-strip-bottom' ></div>").appendTo(g);
                e("<div class='gc-drag-n-drop-strip gc-drag-n-drop-strip-left' ></div>").appendTo(g);
                e("<div class='gc-drag-n-drop-strip gc-drag-n-drop-strip-right' ></div>").appendTo(g)
            }
            g.bind({
                dragover: function(q) {
                    m.dropZoneEnter(q);
                    return false
                },
                dragleave: function(q) {
                    m.dropZoneLeave(q)
                },
                dragend: function(q) {
                    m.dropZoneLeave(q, true);
                    return false
                },
                drop: function(q) {
                    m.hide()
                }
            })
        }
        ;
        this.setMessage = function(p) {
            o[0] = p
        }
        ;
        this.support = function() {
            var p = !giscloud.ui.upload.enabled() || (user.options.DRAG_AND_DROP !== f && user.options.DRAG_AND_DROP == 0);
            return !p && !!d.FormData && ("upload" in new XMLHttpRequest)
        }
        ;
        this.accept = function(p) {
            h = p
        }
        ;
        this.dragContainsFile = function(q) {
            if (q && q.originalEvent.dataTransfer.types) {
                for (var p = 0; p < q.originalEvent.dataTransfer.types.length; p++) {
                    if (q.originalEvent.dataTransfer.types[p] == "Files") {
                        return true
                    }
                }
            }
            return false
        }
        ;
        this.dropZoneEnter = function(p) {
            if (d.checkIfUserExceedsStorageLimits && d.checkIfUserExceedsStorageLimits()) {
                return e("#showStorageForbiddenMsg").length === 0 ? d.showStorageForbiddenMsg() : null 
            }
            if (!this.dragContainsFile(p) || giscloud.ui.edit.isActive()) {
                return
            }
            g.trigger("dropzoneenter", [p]);
            if (h) {
                m.wasOpen = formManager.isSourceBrowserOpen();
                giscloud.ui.upload.initialize().show();
                this.dropZoneGreen()
            } else {
                this.dropZoneRed()
            }
            this.show();
            giscloud.ui.alert.show(o[0])
        }
        ;
        this.dropZoneLeave = function(u, r, p) {
            if (!r && !m.dragContainsFile(u)) {
                return
            }
            if (r || (u.originalEvent.screenX == 0 && u.originalEvent.screenY == 0)) {
                var q = formManager.isSourceBrowserOpen();
                if ((!q || m.wasOpen) ) {
                    giscloud.ui.upload.hide()
                }
                e(".gc-drag-n-drop-strip").removeClass("hover");
                if (!p) {
                    giscloud.ui.alert.hide()
                }
            }
        }
        ;
        this.dropZoneRed = function(q, p) {
            e(".gc-drag-n-drop-strip").addClass("red");
            giscloud.ui.alert.color("red")
        }
        ;
        this.dropZoneGreen = function(q, p) {
            e(".gc-drag-n-drop-strip").removeClass("red");
            giscloud.ui.alert.color("green")
        }
        ;
        this.show = function(p) {
            e(".gc-drag-n-drop-strip").addClass("hover")
        }
        ;
        this.hide = function() {
            e(".gc-drag-n-drop-strip").removeClass("hover");
            giscloud.ui.alert.hide()
        }
        ;
        this.init()
    }
    )
})(window, window.giscloud.exposeJQuery(), window.giscloud.common());
(function(window, $, common, undefined) {
    giscloud.help = function() {
        if (giscloud.help.def) {
            return showHelp(giscloud.help.def.giscloud)
        }
        return ""
    }
    ;
    giscloud.help.ignore = [];
    giscloud.help.category = [];
    giscloud.help.objects = [];
    giscloud.help.namespaces = {};
    function findCategory(cat) {
        var category = giscloud.help.category;
        for (var i in category) {
            if (!category.hasOwnProperty(i)) {
                continue
            }
            if (i.indexOf("*") > 0) {
                var re = new RegExp(i);
                if (cat.match(re)) {
                    return category[i]
                }
            }
        }
        if (category[cat]) {
            return category[cat]
        }
    }
    var classes = [];
    function listApi(root, parent) {
        var objects = giscloud.help.objects;
        var ignore = giscloud.help.ignore;
        var namespaces = giscloud.help.namespaces;
        var category = giscloud.help.category;
        var output = {};
        output.category = findCategory(root);
        try {
            eval('var desc = giscloud.help.def["' + root + '"].desc');
            output.desc = desc
        } catch (e) {}
        try {
            eval('var fiddle = giscloud.help.def["' + root + '"].fiddle');
            if (fiddle) {
                output.fiddle = fiddle
            }
        } catch (e) {}
        try {
            eval('var disabled = giscloud.help.def["' + root + '"].disabled');
            if (disabled) {
                output.disabled = true
            }
        } catch (e) {}
        if (!output.desc) {
            output.desc = ""
        }
        var s = [];
        var def = [];
        var types = [];
        var property_ref = [];
        var ns;
        try {
            ns = eval(root)
        } catch (e) {
            return ""
        }
        var nextlevel = [];
        var methods = [];
        var methods_map = {};
        var properties = [];
        var properties_map = [];
        var events = {};
        try {
            eval("var _example = giscloud.help.def['" + root + "']._example");
            output._example = _example
        } catch (e) {}
        for (var j = 1; j < 10; j++) {
            try {
                eval("var _example" + j + " = giscloud.help.def['" + root + "']._example" + j);
                eval("output._example" + j + " = _example" + j)
            } catch (e) {}
        }
        try {
            eval("var events = giscloud.help.def['" + root + "']._events");
            if (events) {
                output._events = events
            }
        } catch (e) {
            console.log(e)
        }
        for (var l = 1; l < 20; l++) {
            try {
                eval("var events" + l + " = giscloud.help.def['" + root + "']._events" + l);
                eval("output._events" + l + " = events" + l)
            } catch (e) {
                console.log(e)
            }
        }
        for (var i in ns) {
            if (!ns.hasOwnProperty(i)) {
                continue
            }
            if (typeof ns[i] == "function") {
                if (i[0] === i[0].toUpperCase()) {
                    if (ignore[root + "." + i]) {
                        continue
                    }
                    classes.push({
                        ref: ns[i],
                        name: root + "." + i
                    });
                    s.push(root + "." + i);
                    def[root + "." + i] = [];
                    if (objects[root + "." + i]) {
                        obj = objects[root + "." + i]
                    } else {
                        try {
                            obj = new ns[i]({})
                        } catch (e) {
                            console.log("error ", root + "." + i)
                        }
                    }
                    for (var p in obj) {
                        def[root + "." + i].push(p);
                        types[root + "." + i + "." + p] = {
                            type: typeof obj[p],
                            ref: obj[p]
                        }
                    }
                    def[root + "." + i].sort()
                }
            }
        }
        s.sort();
        for (var i = 0; i < s.length; i++) {
            var name = s[i];
            var name_def = '["' + name.substr(0, name.lastIndexOf(".")) + '"]' + name.substr(name.lastIndexOf("."));
            var cl = {
                "class": name
            };
            var p = def[s[i]];
            try {
                eval("var desc = giscloud.help.def" + name_def + ".desc");
                cl.desc = desc
            } catch (e) {}
            try {
                eval("var fiddle = giscloud.help.def" + name_def + ".fiddle");
                if (fiddle) {
                    cl.fiddle = fiddle
                }
            } catch (e) {}
            try {
                eval("var disabled = giscloud.help.def" + name_def + ".disabled");
                if (disabled) {
                    cl.disabled = true
                }
            } catch (e) {}
            if (!cl.desc) {
                cl.desc = ""
            }
            cl.category = findCategory(name);
            try {
                eval("var _example = giscloud.help.def" + name_def + "._example");
                cl._example = _example
            } catch (e) {}
            for (var j = 1; j < 10; j++) {
                try {
                    eval("var _example" + j + " = giscloud.help.def" + name_def + "._example" + j);
                    eval("cl._example" + j + " = _example" + j)
                } catch (e) {}
            }
            try {
                eval("var events = giscloud.help.def" + name_def + "._events");
                if (events) {
                    cl._events = events
                }
            } catch (e) {
                console.log(e)
            }
            for (var l = 1; l < 20; l++) {
                try {
                    eval("var events" + l + " = giscloud.help.def" + name_def + "._events" + l);
                    eval("cl._events" + l + " = events" + l)
                } catch (e) {
                    console.log(e)
                }
            }
            cl._constructor = {
                params: "",
                usage: "",
                desc: ""
            };
            try {
                eval("var _constructor = giscloud.help.def" + name_def + "._constructor");
                if (_constructor.params) {
                    cl._constructor.params = _constructor.params
                }
                if (_constructor.usage) {
                    cl._constructor.usage = _constructor.usage
                }
                if (_constructor.desc) {
                    cl._constructor.desc = _constructor.desc
                }
                if (_constructor.fiddle) {
                    cl._constructor.fiddle = _constructor.fiddle
                }
                if (_constructor.disabled) {
                    cl._constructor.disabled = _constructor.disabled
                }
            } catch (e) {}
            for (var j = 0; j < p.length; j++) {
                if (types[s[i] + "." + p[j]].type == "function") {
                    if (ignore[s[i] + "." + p[j]]) {
                        continue
                    }
                    var m = {};
                    try {
                        eval("var desc = giscloud.help.def" + name_def + "._methods." + p[j]);
                        m.params = desc.params;
                        m.returns = desc.returns;
                        m.desc = desc.desc;
                        if (desc.fiddle) {
                            m.fiddle = desc.fiddle
                        }
                        if (desc.disabled) {
                            m.disabled = desc.disabled
                        }
                    } catch (e) {
                        m.params = "";
                        m.returns = "";
                        m.desc = ""
                    }
                    if (!cl._methods) {
                        cl._methods = {}
                    }
                    cl._methods[p[j]] = m
                }
            }
            for (var j = 0; j < p.length; j++) {
                if (types[s[i] + "." + p[j]].type != "function") {
                    if (ignore[s[i] + "." + p[j]]) {
                        continue
                    }
                    var type = types[s[i] + "." + p[j]];
                    var property = {
                        ref: type.ref
                    };
                    try {
                        eval("var desc = giscloud.help.def" + name_def + "._properties." + p[j]);
                        property.type = desc.type;
                        property.desc = desc.desc;
                        if (desc.fiddle) {
                            property.fiddle = desc.fiddle
                        }
                        if (desc.disabled) {
                            property.disabled = desc.disabled
                        }
                    } catch (e) {
                        property.type = "";
                        property.desc = ""
                    }
                    if (!cl._properties) {
                        cl._properties = {}
                    }
                    cl._properties[p[j]] = property
                }
            }
            output[name.substr(name.lastIndexOf(".") + 1)] = cl
        }
        for (var i in ns) {
            if (!ns.hasOwnProperty(i)) {
                continue
            }
            if (typeof ns[i] == "function") {
                if (i[0] != i[0].toUpperCase()) {
                    if (ignore[root + "." + i]) {
                        continue
                    }
                    m = {};
                    try {
                        eval('var desc = giscloud.help.def["' + root + '"]._methods.' + i);
                        m.params = desc.params;
                        m.returns = desc.returns;
                        m.desc = desc.desc;
                        if (desc.fiddle) {
                            m.fiddle = desc.fiddle
                        }
                        if (desc.disabled) {
                            m.disabled = desc.disabled
                        }
                    } catch (e) {
                        m.params = "";
                        m.returns = "";
                        m.desc = ""
                    }
                    methods_map[i] = m;
                    methods.push(i)
                }
            } else {
                if (giscloud.help.include_namespace[root + "." + i]) {
                    if (ignore[root + "." + i]) {
                        continue
                    }
                    nextlevel.push(root + "." + i)
                } else {
                    if (ignore[root + "." + i] || ignore[root + "._properties"]) {
                        continue
                    }
                    var property = {};
                    try {
                        eval('var desc = giscloud.help.def["' + root + '"]._properties.' + i);
                        property.type = desc.type;
                        property.desc = desc.desc;
                        if (desc.fiddle) {
                            property.fiddle = desc.fiddle
                        }
                        if (desc.disabled) {
                            property.disabled = desc.disabled
                        }
                    } catch (e) {
                        property.type = "";
                        property.desc = ""
                    }
                    properties_map[i] = property;
                    properties.push(i)
                }
            }
        }
        namespaces[root] = output;
        nextlevel.sort();
        for (var i = 0; i < nextlevel.length; i++) {
            listApi(nextlevel[i], output)
        }
        methods.sort();
        properties.sort();
        if (methods.length > 0) {
            output._methods = {};
            for (var i = 0; i < methods.length; i++) {
                output._methods[methods[i]] = methods_map[methods[i]]
            }
        }
        if (properties.length > 0) {
            output._properties = {};
            for (var i = 0; i < properties.length; i++) {
                output._properties[properties[i]] = properties_map[properties[i]]
            }
        }
    }
    function generateCharSpace(ch, n) {
        var s = "";
        for (var i = 0; i < n; i++) {
            s += ch
        }
        return s
    }
    function makeMultiLine(line, limit, prefix) {
        var multiLine = "";
        var originalLine = line;
        var nextLineMin = 0;
        while (originalLine.length + nextLineMin > limit) {
            while (line.length + nextLineMin > limit) {
                line = line.substr(0, line.lastIndexOf(" "))
            }
            if (multiLine) {
                multiLine += "\n" + generateCharSpace(" ", prefix + 3)
            }
            multiLine += line;
            originalLine = originalLine.substr(line.length);
            line = originalLine;
            nextLineMin = prefix
        }
        if (multiLine) {
            multiLine += "\n" + generateCharSpace(" ", prefix + 3)
        }
        multiLine += originalLine;
        return multiLine
    }
    function formatMethod(name, method, maxMethodLen, maxParamLen) {
        var params = method.params || "";
        var desc = method.desc || "";
        var line = "\t" + name + generateCharSpace(" ", maxMethodLen - name.length) + params + generateCharSpace(" ", maxParamLen - params.length) + desc;
        return makeMultiLine(line, 100, maxMethodLen + maxParamLen) + "\n" + generateCharSpace(" ", 4) + generateCharSpace("-", 100) + "\n"
    }
    function showHelp(ns) {
        var help = "\n";
        if (ns._example) {
            help += "Example:\n\n";
            help += ns._example;
            help += "\n"
        }
        if (ns._methods) {
            help += "Methods:\n\n";
            var maxMethodLen = 0;
            var maxParamLen = 0;
            for (var i in ns._methods) {
                if (i.length > maxMethodLen) {
                    maxMethodLen = i.length
                }
                if (ns._methods[i].params && ns._methods[i].params.length > maxParamLen) {
                    maxParamLen = ns._methods[i].params.length
                }
            }
            maxMethodLen += 3;
            maxParamLen += 3;
            for (var i in ns._methods) {
                help += formatMethod(i, ns._methods[i], maxMethodLen, maxParamLen)
            }
        }
        var classes = "";
        for (var i in ns) {
            if (i[0] != "_" && i[0] === i[0].toUpperCase()) {
                if (!classes) {
                    classes += "Classes:\n\n"
                }
                classes += "\t" + i + "\n"
            }
        }
        help += classes;
        return help
    }
    function findHelpItem(root, ns, n) {
        if (n > 5) {
            return
        }
        for (var i in root) {
            if (!root.hasOwnProperty(i)) {
                continue
            }
            if (i[0] == "_" || i == "category") {
                continue
            }
            if (root[i]._methods && (ns + i) != "giscloud") {
                var obj = "";
                if (root[i]["class"]) {
                    obj = '["' + ns.substr(0, ns.length - 1) + '"].' + i
                } else {
                    obj = '["' + ns + i + '"]'
                }
                try {
                    eval(ns + i + ".help = function() { return showHelp(giscloud.help.def" + obj + "); }")
                } catch (e) {}
            }
            var t = typeof root[i];
            var k = n;
            if (!k) {
                k = 0
            }
            findHelpItem(root[i], ns + i + ".", k + 1)
        }
    }
    function findClassType(property) {
        for (var c = 0; c < classes.length; c++) {
            if (property instanceof classes[c].ref) {
                return classes[c].name
            }
        }
        return null 
    }
    giscloud.help.load = function() {
        giscloud.includeJs("/assets/api/1/help.def.js", function() {
            findHelpItem(giscloud.help.def, "")
        })
    }
    ;
    giscloud.help.write = function() {
        giscloud.includeJs("/assets/api/1/help.def.js", function() {
            giscloud.help.init();
            listApi("giscloud");
            for (var i in giscloud.help.namespaces) {
                var ns = giscloud.help.namespaces[i];
                for (var p in ns._properties) {
                    eval("var property = " + i + "." + p + ";");
                    var type = findClassType(property);
                    if (type) {
                        ns._properties[p].type = type
                    }
                }
                for (var k in ns) {
                    if (!ns[k] || !ns[k]["class"]) {
                        continue
                    }
                    var cl = ns[k];
                    for (var p in cl._properties) {
                        var type = typeof cl._properties[p].ref;
                        if (type != "undefined") {
                            var gc_type = findClassType(cl._properties[p].ref);
                            if (gc_type) {
                                cl._properties[p].type = gc_type
                            } else {
                                type = type[0].toUpperCase() + type.slice(1);
                                cl._properties[p].type = type
                            }
                        }
                        delete cl._properties[p].ref
                    }
                }
            }
            jQuery.ajax({
                type: "POST",
                url: "/modules_gc/utils/write-jsapi-docs.php",
                processData: false,
                contentType: "application/json",
                data: JSON.stringify(giscloud.help.namespaces),
                dataType: "json",
                success: function(r) {
                    if (r && r.msg) {
                        console.log("error!", r.msg)
                    } else {
                        console.log("done!")
                    }
                }
            })
        })
    }
    ;
    giscloud.help.stats = function() {
        giscloud.includeJs("/assets/api/1/help.def.js", function() {
            var totalMethods = 0;
            var definedMethods = 0;
            var totalProperties = 0;
            var definedProperties = 0;
            for (var i in giscloud.help.def) {
                var ns = giscloud.help.def[i];
                if (ns._methods) {
                    for (var m in ns._methods) {
                        var data = ns._methods[m];
                        totalMethods++;
                        if (data.desc) {
                            definedMethods++
                        } else {
                            console.log("method", m)
                        }
                    }
                }
                if (ns._properties) {
                    for (var m in ns._properties) {
                        var data = ns._properties[m];
                        totalProperties++;
                        if (data.desc) {
                            definedProperties++
                        } else {
                            console.log("property", m)
                        }
                    }
                }
                for (var c in ns) {
                    if (!ns[c]["class"]) {
                        continue
                    }
                    for (var m in ns[c]._methods) {
                        var data = ns[c]._methods[m];
                        totalMethods++;
                        if (data.desc) {
                            definedMethods++
                        } else {
                            console.log("method", c, m)
                        }
                    }
                    for (var m in ns[c]._properties) {
                        var data = ns[c]._properties[m];
                        totalProperties++;
                        if (data.desc) {
                            definedProperties++
                        } else {
                            console.log("property", c, m)
                        }
                    }
                }
            }
            console.log("Total methods: " + totalMethods + " (defined " + definedMethods + ", " + Math.round(definedMethods / totalMethods * 100) + "%)");
            console.log("Total properties: " + totalProperties + " (defined " + definedProperties + ", " + Math.round(definedProperties / totalProperties * 100) + "%)")
        })
    }
    ;
    giscloud.help.init = function() {
        var ignore = giscloud.help.ignore = [];
        var category = giscloud.help.category = [];
        var objects = giscloud.help.objects = [];
        var ns = giscloud.help.include_namespace = {};
        giscloud.help.namespaces = {};
        classes = [];
        ns.giscloud = 1;
        ns["giscloud.address"] = 1;
        ns["giscloud.addressmodels"] = 1;
        ns["giscloud.bookmarks"] = 1;
        ns["giscloud.datasources"] = 1;
        ns["giscloud.datasources.wms"] = 1;
        ns["giscloud.date"] = 1;
        ns["giscloud.features"] = 1;
        ns["giscloud.formats"] = 1;
        ns["giscloud.formats.exportFormats"] = 1;
        ns["giscloud.formats.renderFormats"] = 1;
        ns["giscloud.forms"] = 1;
        ns["giscloud.geometry"] = 1;
        ns["giscloud.geoutils"] = 1;
        ns["giscloud.keys"] = 1;
        ns["giscloud.layers"] = 1;
        ns["giscloud.layers.attributeOps"] = 1;
        ns["giscloud.maps"] = 1;
        ns["giscloud.oauth2"] = 1;
        ns["giscloud.options"] = 1;
        ns["giscloud.permissions"] = 1;
        ns["giscloud.proxy"] = 1;
        ns["giscloud.rest"] = 1;
        ns["giscloud.search"] = 1;
        ns["giscloud.spatialrelationship"] = 1;
        ns["giscloud.tables"] = 1;
        ns["giscloud.tables.rows"] = 1;
        ns["giscloud.tasks"] = 1;
        ns["giscloud.ui"] = 1;
        ns["giscloud.ui.alert"] = 1;
        ns["giscloud.ui.columns"] = 1;
        ns["giscloud.ui.dataGrid"] = 1;
        ns["giscloud.ui.edit"] = 1;
        ns["giscloud.ui.layerList"] = 1;
        ns["giscloud.ui.selectExtent"] = 1;
        ns["giscloud.userOptions"] = 1;
        ns["giscloud.ui.defaultTools"] = 1;
        ns["giscloud.ui.customForm"] = 1;
        ns["giscloud.ui.search"] = 1;
        ns["giscloud.users"] = 1;
        ns["giscloud.files"] = 1;
        ignore["giscloud.Html5Map"] = 1;
        ignore["giscloud.Events"] = 1;
        ignore["giscloud.ui.Datagrid"] = 1;
        ignore["giscloud.ui.DatasourceBrowser"] = 1;
        ignore["giscloud.ui.FilterBuilder"] = 1;
        ignore["giscloud.ui.FilterBuilderManager"] = 1;
        ignore["giscloud.ui.LayerFilterForm"] = 1;
        ignore["giscloud.Html5MapSetSelection"] = 1;
        ignore["giscloud.help.write"] = 1;
        ignore["giscloud.wms"] = 1;
        ignore["giscloud.datasources.apollo"] = 1;
        ignore["giscloud.ui.apollo"] = 1;
        ignore["giscloud.html5ResetLoaders"] = 1;
        ignore["giscloud.Html5MapRefreshUrls"] = 1;
        ignore["giscloud.gravatar"] = 1;
        ignore["giscloud.ddupload"] = 1;
        ignore["giscloud.construct"] = 1;
        ignore["giscloud.contextMenu"] = 1;
        ignore["giscloud.log"] = 1;
        ignore["giscloud.logDeferredResults"] = 1;
        ignore["giscloud.md5"] = 1;
        ignore["giscloud.pingRpc"] = 1;
        ignore["giscloud.remoteGetJSON"] = 1;
        ignore["giscloud.Layer.offscale"] = 1;
        ignore["giscloud.Layer.onscale"] = 1;
        ignore["giscloud.Layer.grp"] = 1;
        ignore["giscloud.Layer.raster"] = 1;
        ignore["giscloud.Layer.textfield"] = 1;
        ignore["giscloud.Layer.label"] = 1;
        ignore["giscloud.Layer.label_placement"] = 1;
        ignore["giscloud.Map.mobileacess"] = 1;
        ignore["giscloud.Query.actions"] = 1;
        ignore["giscloud.Query.table"] = 1;
        ignore["giscloud.ViewerLayer.instance"] = 1;
        ignore["giscloud.address"] = 1;
        ignore["giscloud.addressmodels"] = 1;
        ignore["giscloud.oauth2.uriMismatch"] = 1;
        ignore["giscloud.rest"] = 1;
        ignore["giscloud.ui.ProjectionPicker"] = 1;
        ignore["giscloud.ui.ProjectionPicker.init"] = 1;
        ignore["giscloud.ui.ProjectionPicker.options"] = 1;
        ignore["giscloud.ui.customForm.beforeOpen"] = 1;
        ignore["giscloud.ui.Options"] = 1;
        ignore["giscloud.ui.Options.init"] = 1;
        ignore["giscloud.ui.Options.addbt"] = 1;
        ignore["giscloud.ui.Options.inpdiv"] = 1;
        ignore["giscloud.ui.Options.keyinp"] = 1;
        ignore["giscloud.ui.Options.keylabel"] = 1;
        ignore["giscloud.ui.Options.template"] = 1;
        ignore["giscloud.ui.Options.ulcont"] = 1;
        ignore["giscloud.ui.Options.valinp"] = 1;
        ignore["giscloud.ui.Options.vallabel"] = 1;
        ignore["giscloud.ui.Options.restOptions"] = 1;
        ignore["giscloud.ui.Panel"] = 1;
        ignore["giscloud.ui.Window"] = 1;
        ignore["giscloud.ui.Search"] = 1;
        ignore["giscloud.ui.alert"] = 1;
        ignore["giscloud.ui.columns"] = 1;
        ignore["giscloud.ui.customForm"] = 1;
        ignore["giscloud.ui.dataGrid"] = 1;
        ignore["giscloud.ui.edit"] = 1;
        ignore["giscloud.ui.search"] = 1;
        ignore["giscloud.ui.selectExtent"] = 1;
        ignore["giscloud.ui.LayerList"] = 1;
        ignore["giscloud.userOptions"] = 1;
        ignore["giscloud.tasks"] = 1;
        ignore["giscloud.Task"] = 1;
        ignore["giscloud.Color.lab"] = 1;
        ignore["giscloud.__googleMapsApiLoadedGeocoder"] = 1;
        ignore["giscloud.cards"] = 1;
        ignore["giscloud.coupons"] = 1;
        ignore["giscloud.organization"] = 1;
        ignore["giscloud.dashboard"] = 1;
        ignore["giscloud.Color.lab"] = 1;
        ignore["giscloud.options"] = 1;
        ignore["giscloud.User"] = 1;
        ignore["giscloud.Html5SendRequest"] = 1;
        ignore["giscloud._properties"] = 1;
        ignore["giscloud.File"] = 1;
        ignore["giscloud.Post"] = 1;
        ignore["giscloud.Resource"] = 1;
        ignore["giscloud.Stream"] = 1;
        category["giscloud.Graphic.*"] = category["giscloud.Map"] = category["giscloud.Layer"] = category["giscloud.Viewer"] = category["giscloud.ViewerLayer"] = category["giscloud.ViewerSelection"] = category["giscloud.Feature"] = category["giscloud.FlagMarker"] = category["giscloud.Marker"] = "map";
        category["giscloud.Task"] = category["giscloud.tasks"] = category["giscloud.forms"] = category["giscloud.Query"] = category["giscloud.search"] = category["giscloud.tables"] = category["giscloud.tables.rows"] = category["giscloud.maps"] = category["giscloud.layers"] = category["giscloud.features"] = "resources";
        category["giscloud.datasources"] = "datasources";
        category["giscloud.ui.map.*"] = "ui.map";
        category["giscloud.ui.*"] = "ui";
        category["giscloud.spatialrelationship"] = category["giscloud.geoutils"] = category["giscloud.Bounds"] = category["giscloud.LonLat"] = category["giscloud.geometry.*"] = "geometry";
        category["giscloud.datasources.*"] = category["giscloud.wms.*"] = "datasources";
        category["giscloud.keys"] = category["giscloud.oauth2"] = category["giscloud.permissions.*"] = "users";
        objects["giscloud.Graphic"] = new giscloud.Graphic(giscloud.ui.map);
        objects["giscloud.Color"] = new giscloud.Color();
        objects["giscloud.Queue"] = new giscloud.Queue([]);
        objects["giscloud.GraphicFeature"] = new giscloud.GraphicFeature(new giscloud.geometry.Point());
        objects["giscloud.ui.Options"] = new giscloud.ui.Options(document,{},{});
        objects["giscloud.ViewerSelection"] = new giscloud.ViewerSelection(giscloud.ui.map);
        objects["giscloud.Layer"] = new giscloud.Layer({
            alpha: 100,
            bounds: new giscloud.Bounds(),
            created: new Date(),
            encoding: "enc",
            exportable: true,
            label: " ",
            lock: true
        });
        objects["giscloud.LonLat"] = new giscloud.LonLat(0,0);
        var l = new fnLayer();
        l.source = {};
        l.id = "layer0";
        objects["giscloud.ViewerLayer"] = new giscloud.ViewerLayer(l);
        objects["giscloud.Promise"] = new giscloud.Promise();
        objects["giscloud.ui.LayerList"] = new giscloud.ui.LayerList(giscloud.ui.map,"layerlist",true);
        objects["giscloud.ui.Panel"] = new giscloud.ui.Panel({
            id: "info_panel",
            type: "vertical",
            position: "right",
            push: false,
            open: true,
            content: "<div id='infotable' ></div>"
        })
    }
})(window, giscloud.exposeJQuery());
delete giscloud.common;
